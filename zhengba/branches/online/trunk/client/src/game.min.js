;//本文件由BLL中自动生成
var designSize = {'width':640,'height': 1136};
var R=R||{};
//预加载
 R.preload=["img/fnt/sz_phb.fnt","img/fnt/sz_vip.fnt","img/fnt/sz_vipgift.fnt","img/fnt/sz_zd1.fnt","img/fnt/sz_zd2.fnt","img/fnt/sz_zd3.fnt","img/fnt/sz_zd4.fnt","img/fnt/sz_zd5.fnt"];
;;/*
 var emitter = cc.EventEmitter.create();
 emitter.emit('my_event', args);
 emitter.on('my_event', function(args){
 ......
 });

 http://nodejs.org/api/events.html
 */
;(function(global){

    cc.isUndefined = function(arg) {
        return arg === void 0;
    };

    cc.isObject = function(arg) {
        return typeof arg === 'object' && arg !== null;
    };

    cc.isFunction = function(arg) {
        return typeof arg === 'function';
    };

    cc.isTimestamp = function(arg) {
        return cc.isNumber(arg) && new Date(arg*1000).getFullYear() != 1970;
    };

    function EventEmitter(maxListeners) {
        this._events = this._events || {};
        this._maxListeners = maxListeners || undefined;
    }

//  Backwards-compat with node 0.10.x
    EventEmitter.EventEmitter = EventEmitter;

    EventEmitter.prototype._events = undefined;
    EventEmitter.prototype._maxListeners = undefined;

//  By default EventEmitters will print a warning if more than 10 listeners are
//  added to it. This is a useful default which helps finding memory leaks.
    EventEmitter.defaultMaxListeners = 10;


//  Obviously not all Emitters should be limited to 10. This function allows
//  that to be increased. Set to zero for unlimited.
    EventEmitter.prototype.setMaxListeners = function(n) {
        if (isNaN(n) || n < 0 )
            throw TypeError('n must be a positive number');
        this._maxListeners = n;
        return this;
    };

    EventEmitter.prototype.emit = function(type) {
        var er, handler, len, args, i, listeners;
		
        if (!this._events)
            this._events = {};

        // If there is no 'error' event listener then throw.
        if (type === 'error' && !this._events.error) {
            er = arguments[1];
            if (er instanceof Error) {
                throw er; // Unhandled 'error' event
            } else {
                throw Error('Uncaught, unspecified "error" event.');
            }
            return false;
        }

        handler = this._events[type];

        if (cc.isUndefined(handler))
            return false;

        if (cc.isFunction(handler)) {
            var __caller = handler.__caller||this;
            switch (arguments.length) {
                // fast cases
                case 1:
                    handler.call(__caller);
                    break;
                case 2:
                    handler.call(__caller, arguments[1]);
                    break;
                case 3:
                    handler.call(__caller, arguments[1], arguments[2]);
                    break;
                // slower
                default:
                    len = arguments.length;
                    args = new Array(len - 1);
                    for (i = 1; i < len; i++)
                        args[i - 1] = arguments[i];
                    handler.apply(__caller, args);
            }
        } else if (cc.isObject(handler)) {
            len = arguments.length;
            args = new Array(len - 1);
            for (i = 1; i < len; i++)
                args[i - 1] = arguments[i];

            listeners = handler.slice();
            len = listeners.length;
            for (i = 0; i < len; i++){
                var __caller = listeners[i].__caller||this;
                listeners[i].apply(__caller, args);
            }

        }

        return true;
    };

    EventEmitter.prototype.addListener = function(type, listener,caller) {
        var m;

        if (!cc.isFunction(listener))
            throw TypeError('listener must be a function');

        listener.__caller = caller;

        if (!this._events)
            this._events = {};

        // To avoid recursion in the case that type === "newListener"! Before
        // adding it to the listeners, first emit "newListener".
        if (this._events.newListener)
            this.emit('newListener', type,
                cc.isFunction(listener.listener) ?
                    listener.listener : listener);

        if (!this._events[type])
        // Optimize the case of one listener. Don't need the extra array object.
            this._events[type] = listener;
        else if (cc.isObject(this._events[type]))
        // If we've already got an array, just append.
            this._events[type].push(listener);
        else
        // Adding the second element, need to change to array.
            this._events[type] = [this._events[type], listener];

        // Check for listener leak
        if (cc.isObject(this._events[type]) && !this._events[type].warned) {
            var m;
            if (!cc.isUndefined(this._maxListeners)) {
                m = this._maxListeners;
            } else {
                m = EventEmitter.defaultMaxListeners;
            }

            if (m && m > 0 && this._events[type].length > m) {
                this._events[type].warned = true;
                console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
                console.trace();
            }
        }

        return this;
    };

    EventEmitter.prototype.on = EventEmitter.prototype.addListener;

    EventEmitter.prototype.once = function(type, listener,caller) {
        if (!cc.isFunction(listener))
            throw TypeError('listener must be a function');

        var fired = false;
        var that = this;
        function g() {
            that.removeListener(type, g);

            if (!fired) {
                fired = true;
                listener.apply(caller||that, arguments);
            }
        }

        g.listener = listener;
        this.on(type, g , caller);

        return this;
    };

    EventEmitter.prototype.onnp = function(type, listener,key) {
        if (!cc.isFunction(listener))
            throw TypeError('listener must be a function');
        if(!this._noRepeatKey)this._noRepeatKey={};

        var _key = key;
        if(_key==null)_key = type+"_"+listener.toString();

        if(this._noRepeatKey[_key]){
            this.removeListener(type,this._noRepeatKey[_key]);
        }
        this._noRepeatKey[_key] = listener;
        this.on(type, listener);
        return this;
    };

//  emits a 'removeListener' event iff the listener was removed
    EventEmitter.prototype.removeListener = function(type, listener) {
        var list, position, length, i;

        if (!cc.isFunction(listener)){
            throw TypeError('listener must be a function');
            //return this;
        }


        if (!this._events || !this._events[type])
            return this;

        list = this._events[type];
        length = list.length;
        position = -1;

        if (list === listener ||
            (cc.isFunction(list.listener) && list.listener === listener)) {
            delete this._events[type];
            if (this._events.removeListener)
                this.emit('removeListener', type, listener);

        } else if (cc.isObject(list)) {
            for (i = length; i-- > 0;) {
                if (list[i] === listener ||
                    (list[i].listener && list[i].listener === listener)) {
                    position = i;
                    break;
                }
            }

            if (position < 0)
                return this;

            if (list.length === 1) {
                list.length = 0;
                delete this._events[type];
            } else {
                list.splice(position, 1);
            }

            if (this._events.removeListener)
                this.emit('removeListener', type, listener);
        }

        return this;
    };

    EventEmitter.prototype.removeAllListeners = function(type) {
        var key, listeners;

        if (!this._events)
            return this;

        // not listening for removeListener, no need to emit
        if (!this._events.removeListener) {
            if (arguments.length === 0)
                this._events = {};
            else if (this._events[type])
                delete this._events[type];
            return this;
        }

        // emit removeListener for all listeners on all events
        if (arguments.length === 0) {
            for (key in this._events) {
                if (key === 'removeListener') continue;
                this.removeAllListeners(key);
            }
            this.removeAllListeners('removeListener');
            this._events = {};
            return this;
        }

        listeners = this._events[type];

        if (cc.isFunction(listeners)) {
            this.removeListener(type, listeners);
        } else if (Array.isArray(listeners)) {
            // LIFO order
            while (listeners.length)
                this.removeListener(type, listeners[listeners.length - 1]);
        }
        delete this._events[type];
        this._noRepeatKey = {};

        return this;
    };

    EventEmitter.prototype.listeners = function(type) {
        var ret;
        if (!this._events || !this._events[type])
            ret = [];
        else if (cc.isFunction(this._events[type]))
            ret = [this._events[type]];
        else
            ret = this._events[type].slice();
        return ret;
    };

    EventEmitter.listenerCount = function(emitter, type) {
        var ret;
        if (!emitter._events || !emitter._events[type])
            ret = 0;
        else if (cc.isFunction(emitter._events[type]))
            ret = 1;
        else
            ret = emitter._events[type].length;
        return ret;
    };

    cc.EventEmitter = EventEmitter;
    cc.EventEmitter.create = function(maxListeners){
        return new EventEmitter(maxListeners);
    };

})(this);



;(function(global){
    global.C = {};//for cocos
    global.X = {};//for me
    global.window = global.window || {};

    C.ANCHOR = {
        1: cc.p(0,1)
        ,2: cc.p(0.5,1)
        ,3: cc.p(1,1)
        ,4: cc.p(0,0.5)
        ,5: cc.p(0.5,0.5)
        ,6: cc.p(1,0.5)
        ,7: cc.p(0,0)
        ,8: cc.p(0.5,0)
        ,9: cc.p(1,0)
    };
    //兼容调试器
    C.init = function(){};
    C.D = cc.director;

    Object.defineProperty(C, "WS" , {
        get: function () {
            return cc.director.getWinSize();
        }
    });

    if(cc.sys.platform==cc.sys.DESKTOP_BROWSER){
        cc . log = C . log= function(){
            console . log.apply( console, arguments );
        };
    }else if(cc.sys.isNative && cc.sys.os!=cc.sys.OS_WINDOWS){
        cc . log = C . log= function(){
            try {
                if(arguments.length==1 && (typeof(arguments[0])=='string' || typeof(arguments[0])=='number') ){
                    console . log( arguments[0] );
                }else{
                    var s = JSON.stringify(arguments);
                    console . log(s.substr(0,500));
                }
            }catch(e){
                console . log( arguments.toString() );
            }
        };
    }

    //将src对象上的属性copy到des对象上，默认不覆盖des对象原有属性，mixer为function可以选择属性的覆盖方式
    cc.mixin = function(des, src, mixer) {
        mixer = mixer || function(d, s){
                if(typeof d === 'undefined'){
                    return s;
                }
            };

        if(mixer == true){
            mixer = function(d, s){return s};
        }

        for (var i in src) {
            var v = mixer(des[i], src[i], i, des, src);
            if(typeof v !== 'undefined'){
                des[i] = v;
            }
        }

        return des;
    };

    cc.isNode = function(v){
    	if(v==null)return false;
    	return cc.sys.isObjectValid(v);
    };

    //广度优先搜索子节点
    cc.seekWidgetByName = function(root, name) {
        var children = root.getChildren();
        var len = children.length;
        for (var i=0;i<len;i++){
            if(children[i].getName() == name) {
                return children[i];
            }
        }

        for (var i=0;i<len;i++){
            var res = cc.seekWidgetByName(children[i],name);
            if(res)return res;
        }

        return null;
    };

    //timeout相关扩展
    cc.setTimer = function(target,callback,interval,repeat,delay){
        target.schedule(callback,interval/1000,repeat,delay/1000);
        return callback;
    };
    cc.clearTimer = function(target,callfun){
        return target.unschedule(callfun);
    };

    cc.callLater = function(callback){
    	if(!cc.sys.isNative){
			setTimeout(function(){
    			callback && callback();
			},0);
    	}else{
    		cc.director.getRunningScene().scheduleOnce(function(){
	            callback && callback();
	        });
    	}
        
    };

    //控制显影
    cc.Node.prototype.show = function(){
        this.setVisible(true);
        this.onNodeShow && this.onNodeShow();
    };
    cc.Node.prototype.hide = function(){
        this.setVisible(false);
        this.onNodeHide && this.onNodeHide();
    };
    //查找所有子里第一个等于v的node
    cc.Node.prototype.finds = function(v,ifcache){
        return X.findChild(this,v,ifcache);
    };
    cc.Node.prototype.eachChild = function(v,callfun){
        return X.eachChild(this,v,callfun);
    };

    //cocostudio嵌套的动画，默认播放会有bug，需要主动调用一次播放事件
    //跟UI约定，所有animation_****格式的节点，都是嵌套的动画节点
    cc.Node.prototype.playChildrenAnimation = function(){
        //this.eachChild("//animation_[STR]",function(node){
        //    var _action = node.getActionByTag(node.getTag());
        //    if(_action)_action.gotoFrameAndPlay(0,true);
        //});
        X.forEachChild(this,function(node){
            if(node.getName() && node.getName().startsWith('animation_')){
                var _action = node.getActionByTag(node.getTag());
                if(_action)_action.gotoFrameAndPlay(0,true);
            }
        });
    };

    //定时器相关操作 interval & delay都是毫秒单位
    cc.Node.prototype.setTimeout = function (callback, interval,repeat,delay) {
        var me = this;
        return cc.setTimer(this,function(){
            cc.callLater(function(){
                cc.isNode(me) && callback && callback.call(me);
            });
        },interval||0, repeat||0, delay||0);
    };
    cc.Node.prototype.setInterval = function (callback, interval) {
        var me = this;
        return cc.setTimer(this,function(){
            cc.callLater(function(){
                cc.isNode(me) && callback && callback.call(me);
            });
        },interval||0, cc.REPEAT_FOREVER, 0 );
    };
    cc.Node.prototype.clearAllTimers = function(){
        return this.unscheduleAllCallbacks();
    };
    cc.Node.prototype.clearInterval = cc.Node.prototype.clearTimeout = function (callfun) {
        return cc.clearTimer(this, callfun);
    };


    /*
     //从上往下逐一执行，如果是数组，则数组内的动作同时执行
     [
         cc.moveBy(3, cc.p(350, 0)),
         cc.moveBy(3, cc.p(100, 0)).easing(cc.easeInOut(2.0)),
         [
             cc.moveBy(3, cc.p(0, -500)),
             cc.rotateTo(3, 100,100),
             cc.tintTo(3, 255,0,0)
         ]
     ]

     * */
    cc.fmtActions= function(actios){
        if(!cc.isArray(actios)){
            return actios;
        }
        for(var i=0;i<=actios.length;i++){
            if( cc.isArray(actios[i]) ){
                //如果是数组，表示同时执行
                actios[i] = cc.Spawn.create.apply(cc.spawn, actios[i] );
            }
        }
        return cc.Sequence.create.apply(cc.Sequence, actios);
    };
    //执行动作链
    cc.Node.prototype.runActions = function(actions,tag){
        var action = cc.fmtActions(actions);
        if(tag)action.setTag(tag);
        return this.runAction(action);
    };


    //点击事件
    ccui.Widget.TOUCH_NOMOVE = 99;
    ccui.Widget.LONG_TOUCH = 98;
    var _nextClickTime = 0;
    /*
     conf={
     touchDelay = int 点击后锁定屏幕 x ms
     emitLongTouch = int || bool  存在该key，表示触发长按事件，如为int，则表示 int ms后触发长按
     }
     * */
    ccui.Widget.prototype.touch = function(fun,caller,conf){
        var me = this;
        var _startTime,_endTime,_longTouchFun;
        conf = conf || {};

        this._touchFunction = function(sender,type,fromwhere){
            var _now = new Date().getTime();
            if(type == ccui.Widget.TOUCH_ENDED && _now < _nextClickTime && fromwhere!='fromcode'){
                //如果处于锁定状态且不是代码触发的
                cc.log('delay to ',_nextClickTime);
                return;
            }
            fun.call(me._touchCaller,sender,type,fromwhere);
            if (!cc.sys.isObjectValid(sender)) return;

            if (type == ccui.Widget.TOUCH_BEGAN) {

                if(G.tiShenIng){
                    X.tiShenLog(sender,sender.getTouchBeganPosition());
                }

            	if(!cc.sys.isNative || sys.os.toLowerCase()=='windows'){
					cc.log('点击元素名：',this.getName() );
				}
            	
                _startTime = new Date().getTime();
				
                if(conf.emitLongTouch){
                    //如果需要触发长按
                    _longTouchFun = function(){
                        fun.call(me._touchCaller,sender,ccui.Widget.LONG_TOUCH);
                        _longTouchFun = null;
                    };
                    var _longTouchDeleyTime = 700;
                    if(typeof(conf.emitLongTouch)=='number')_longTouchDeleyTime=conf.emitLongTouch*1;

                    me.scheduleOnce(_longTouchFun, _longTouchDeleyTime/1000);
                }
            }else if (type == ccui.Widget.TOUCH_MOVED) {

            }else if (type == ccui.Widget.TOUCH_ENDED){
                if(this._touchDelayTime!=null ){
                    _nextClickTime = _now + this._touchDelayTime;
                }
                G.event.emit("TOUCH_ENDED", me, fromwhere);
                if(_longTouchFun){
                    //释放长按事件定时器
                    me.unschedule(_longTouchFun);
                    _longTouchFun = null;
                }

                var start = sender.getTouchBeganPosition();
                var end = sender.getTouchEndPosition();
                var dis = cc.pDistance(start,end);
                if(dis<10 || fromwhere=='fromcode'){
                    //触发无移动点击事件
                    fun.call(me._touchCaller,sender,ccui.Widget.TOUCH_NOMOVE);
                }
            }else if (type == ccui.Widget.TOUCH_CANCELED) {
                if(_longTouchFun){
                    //释放长按事件定时器
                    me.unschedule(_longTouchFun);
                    _longTouchFun = null;
                }
            }
        };
        this._touchDelayTime = conf.touchDelay;
        this._touchCaller = caller||this;
        this.addTouchEventListener(this._touchFunction,this._touchCaller);
    };
    //触发点击事件
    ccui.Widget.prototype.triggerTouch = function(type){
        if(!this._touchFunction)return;
        this._touchFunction(this,type,"fromcode");
    };
    ccui.Widget.prototype.click = function(fun,touchDelay){
        this.touch(function(sender,type){
            if(type==ccui.Widget.TOUCH_ENDED){
                fun(sender,type);
            }
        },this,{"touchDelay":touchDelay});
    };

    ccui.ScrollView.prototype.setAutoChildrenPos = function(c){
        var w = this.width; //总宽度
        var children = this.getChildren();
        if(children.length==0)return;

        if(c.order)children.sort(c.order);

        var cw = children[0].width,
            ch = children[0].height; //子元素尺寸
        var type = c.type||'fill';
        var maxrow = Math.ceil(children.length/c.rownum);
        var lineheight = c.lineheight || ch;

        var innerHeight = this.height;
        if(innerHeight < maxrow*lineheight) innerHeight = maxrow*lineheight;
        this.innerHeight = innerHeight;

        var _lineidx = 0;
        var _anchor = C.ANCHOR[1];

        for(var i=0;i<children.length;i++){
            children.autoSortIndex = i;
            if(type=='fill'){
                //填充满
                var sw = (w-cw)/(c.rownum-1);
                children[i].x = i%c.rownum*sw;
            }else if(type=='avg'){
                //平均排布
                var margin = w-cw*c.rownum,
                    smargin = margin/(c.rownum+1);
                children[i].x = (i%c.rownum)*cw + smargin* ((i%c.rownum)+1);
            }
            _lineidx = parseInt(i/c.rownum);
            children[i].setAnchorPoint(_anchor);
            children[i].y = innerHeight-_lineidx*lineheight;
        }
        c.callback && c.callback(children);
    };

    C.color = function(hex){
        if (hex.length == 4){
            hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];
        }
        var c = cc.color(0,0,0,255);
        c.r = parseInt('0x'+hex.substr(1,2)) || 0;
        c.g = parseInt('0x'+hex.substr(3,2)) || 0;
        c.b = parseInt('0x'+hex.substr(5,2)) || 0;
        return c;
    };

    cc.baseEvent = cc.EventEmitter.create();
    cc.baseEvent.setMaxListeners(5000);

})(this);

;;(function(){
    X.bRichText = ccui.Layout.extend({
        ctor: function(conf){
            this._super();
            this.conf = conf;
            this._mainLayout = new ccui.Layout();
            this.addChild( this._mainLayout );

            this.offSetX = 0;
            this.offSetY = 0;

            this._line = [];
            this._preLineMaxHeight = 0; //上一行最高的元素的值
            this._lineMaxHeight = 0; //本行最高的元素的值

            this._trueWidth = 0;
        }
        ,initData: function(args){
            this.args = args;
            for(var key in args){
                var fun = key;
                this[fun] && typeof this[fun] == 'function' && this[fun](args[key]);
            }
            return this;
        }
        //获取富文本框的真实尺寸
        ,trueWidth : function(){
            return this._trueWidth;
        }
        ,trueHeight: function(){
            return this._trueHeight;
        }
        ,text: function(c,argumentsNodes){
            //可以是 text('str<font node=1></font>',node1,node2)
            //也可以是 text('str<font node=1></font>',[node1,node2])
            if(typeof(c)=='string'){
                c = this._fmtString(c);
            }
            var nodeUserTimes = {};
            for(var i=0;i<c.length;i++){
                var v = c[i];
                if(typeof(v)=='string'){
                    v = {'size':this.conf.size,'family':this.conf.family || '微软雅黑', 'color': this.conf.color,'content':v};
                }
                if(v.node){
                    if(cc.isArray(argumentsNodes)){
                        var nodeIdx = v.node*1-1;
                        if(nodeUserTimes[nodeIdx]==null)nodeUserTimes[nodeIdx]=0;

                        if(argumentsNodes[nodeIdx]){
                            if(nodeUserTimes[nodeIdx]>0){
                                v.node = argumentsNodes[nodeIdx].clone();
                            }else{
                                v.node = argumentsNodes[nodeIdx];
                            }
                            this._addMsg(v);
                            nodeUserTimes[nodeIdx]++;
                        }
                        
                    }else{
                        var nodeIdx = v.node*1;
                        if(nodeUserTimes[nodeIdx]==null)nodeUserTimes[nodeIdx]=0;

                        if(arguments[nodeIdx]){
                            if(nodeUserTimes[nodeIdx]>0){
                                v.node = arguments[nodeIdx].clone();
                            }else{
                                v.node = arguments[nodeIdx];
                            }
                            this._addMsg(v);
                            nodeUserTimes[nodeIdx]++;
                        }
                    }

                }else{
                    this._addMsg(v);
                }
            }
            this._drawLine();
            return this;
        }
        //格式化字符串
        ,_fmtString : function(str){
            var _arr = str.split(/(<font.*?>)(.*?)<\/font>/g);
            var _res = [],_tmp={},_tmpLock=false;
            for(var i=0;i<_arr.length;i++){
                if(_arr[i].substr(0,5)=='<font'){
                    _arr[i] = _arr[i].replace('>',' >');
                    var _re = /(.*?)=(.*?) /g;
                    while(_re.exec(_arr[i])!=null){
                        _tmpLock = true;
                        _tmp[RegExp.$1.replace('<font ','')] = RegExp.$2;
                    }
                }else{
                    if(_tmpLock){
                        _tmp['content'] = _arr[i];
                        _res.push(_tmp);
                        _tmpLock = false;
                        _tmp={}
                    }else{
                        _res.push(_arr[i]);
                    }
                }
            }

            var __res=[];
            for(var j=0;j<_res.length;j++){
                if(typeof(_res[j])=='string'){
                    var x = _res[j].split('<br>');
                    if(x.length>1){
                        for(var _xx=0;_xx<x.length;_xx++){
                            __res.push(x[_xx]);
                            if(_xx<x.length-1)__res.push("<br>");
                        }
                    }else{
                        __res.push(_res[j]);
                    }
                }else{
                    __res.push(_res[j]);
                }
            }
            return __res;
        }
        ,_addMsg : function(v,drawNow){
            var _size=null;
            this._forTimers = this._forTimers || 1;
            //防止某些未知情况出现死循环
            this._forTimers++;

            var _node;
            if(v.node){
                _node = v.node;
                _node.setAnchorPoint && _node.setAnchorPoint(C.ANCHOR[4]);
                _size = {width:_node.width * (_node.getScaleX?_node.getScaleX():1) ,height:_node.height * (_node.getScaleY?_node.getScaleY():1)};
            }else{
                if(v.content=='<br>'){
                    v.content='';
                    _size = {height:0,width:this.conf.maxWidth-1};
                }
                v.content = v.content.toString();
                var _defaultFamily = (C.isJSB?"":"微软雅黑");
                _node = new ccui.Text(v.content||'', this.conf.family ||_defaultFamily , v.size || this.conf.size);

                _node.setTextColor(cc.color( v.color || this.conf.color));
                _node.setColor(cc.color('#ffffff'));
                _node.setAnchorPoint(C.ANCHOR[4]);
                this.conf.eachText && this.conf.eachText(_node);
                if(_size==null)_size = _node.getContentSize();
            }


            if(v.onclick){
                _node.setTouchEnabled(true);
                _node.touch(function (sender, type) {
                    if (type == ccui.Widget.TOUCH_ENDED){
                        try{
                            eval(v.onclick);
                        }catch(e){}
                    }
                },this);
            }

            if(_size.height > this._lineMaxHeight)this._lineMaxHeight=_size.height;

            if(_size.width + this.offSetX <= this.conf.maxWidth){
                //当前行可以放下
                this._line.push([_node,this.offSetX]);
                this.offSetX += _size.width;
                if(drawNow)this._drawLine();
                return;
            }else{

                if(v.node){
                    //如果是节点，但是本行放不下时，强行插入无视溢出
                    this._line.push([_node,this.offSetX]);
                    this.offSetX += _size.width;
                    this._drawLine();
                    return;
                }

                //放不下时 平均每个字宽
                var _avgWidth = _size.width/v.content.length;
                var _leftStringLen = (this.conf.maxWidth - this.offSetX) / _avgWidth;

                if(_leftStringLen>=1){
                    var _copy = JSON.parse(JSON.stringify(v));
                    _copy.content = _copy.content.substr(0,_leftStringLen);

                    this._addMsg(_copy,true);

                    v.content = v.content.substr(_leftStringLen,v.content.length);
                    this._addMsg(v);
                }else{
                    this._drawLine();
                    this._addMsg(v);
                }
            }
        }
        ,_drawLine : function(){
            if(this._line.length==0)return;
            if(this.offSetX>this._trueWidth)this._trueWidth=this.offSetX;

            var offsetY  = 0;
            if(this._preLineMaxHeight > 0){
                offsetY = parseInt(Math.max.apply(null,[this._preLineMaxHeight*.5 + this._lineMaxHeight*.5 ,this.conf.lineHeight]),10);
            }
            if (this.conf.minimumLineSpace != undefined){
                offsetY += this.conf.minimumLineSpace;
            }

            this.offSetY -= offsetY;
            this.offSetX = 0;

            for(var i=0;i<this._line.length;i++){
                this._line[i][0].setPosition(cc.p( this._line[i][1] , this.offSetY));
                this._mainLayout.addChild(this._line[i][0]);
            }

            this._line = [];
            this._preLineMaxHeight = this._lineMaxHeight;
            this._trueHeight = Math.abs(this.offSetY - this._preLineMaxHeight);

            this._mainLayout.setContentSize(cc.size(this._trueWidth,this._trueHeight));
            this._mainLayout.y = this._trueHeight-this.conf.lineHeight/2
            this.setContentSize(cc.size(this._trueWidth,this._trueHeight));

            this._lineMaxHeight = 0;
        }
    });
})();
;;(function(){
    //AJAX请求
    X.ajax = {
        /*
         o = {
             type : GET|POST,
             url : url,
             data : {k:v}
             callback : function(text){

             },
             error : function(readyState,status){

             }
         }
         */
        request : function(o){
            var xhr = new XMLHttpRequest();

            var _type  = o.type||'POST';
            var _form = [],_formText=null;
            if(o.data){
                for(var k in o.data){
                    _form.push(k + '='+ encodeURIComponent(o.data[k]));
                }
                _formText = _form.join('&');

                if(_type=='GET'){
                    o.url += (o.url.indexOf('?')==-1?'?':'&') + _formText;
                    _formText=null;
                }
            }

            xhr.open(_type, o.url,true);
            xhr.timeout = 10000;
            xhr.ontimeout = function(){
                o.error && o.error('timeout');
            };
            xhr.onerror = function(){
                o.error && o.error('onerror');
            };
            xhr.onreadystatechange = function() {
                if(xhr.readyState==4) {
                    if (xhr.status == 200) {
                        o.callback && o.callback(xhr.responseText);
                    }else{
                        //xhr.__errorcallback && xhr.__errorcallback(xhr.readyState,xhr.status);
                    }
                }
            }
            if(_type=='POST'){
                xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            }
            if(_formText==null){
                xhr.send();
            }else{
                xhr.send(_formText);
            }
        }
        ,get : function(url,data,succCallback,errCallback){
            return this.request({
                type : 'GET',
                url : url,
                data : data,
                callback : function(text){
                    succCallback && succCallback(text);
                },
                error : errCallback
            });
        }
        ,post : function(url,data,succCallback,errCallback){
            return this.request({
                type : 'POST',
                url : url,
                data : data,
                callback : function(text){
                    succCallback && succCallback(text);
                },
                error : errCallback
            });
        },
        getJSON : function(url,succCallback,errCallback){
            return this.request({
                type : 'GET',
                url : url,
                callback : function(text){
                    var json = null;
                    try{
                        json = JSON.parse(text);
                    }catch(e){}
                    succCallback && succCallback(json);
                },
                error : errCallback
            });
        }
    };

})();
;;function _L(str){
    if(LNG[str]){
        return LNG[str];    
    }else{
        return str;
    }
}
function L(str,args){
    if(args==null)return _L(str);
    //将str中 $xx$ 的字符，替换为语言包里的配置，并且执行X.STR 逻辑
    str = str.replace(/\$\d*?\D+?\d*?\$/g,function(word){
        var _word = word.replace(/\$/g,'')
        return _L(_word);
    });

    if (cc.isArray(args)) {
        return X.STR(str, args);
    }else{
        var _arr = [];
        for(var i=1;i<arguments.length;i++){
            _arr.push(arguments[i]);
        }
        return X.STR(str, _arr);
    }
}
;;(function(){
//声音处理类
var audioEngine = cc.audioEngine;

//反馈audioEngine在android上加载音效会卡，换成jsb.AudioEngine后不卡了……

X.audio = {
    _musicPlaying: false,
    _curPlayFile: null,
    _effectsVolume : 1
    //播放音乐
    ,playMusic : function(file,ifLoop){
        if(cc.GLOBALTISHEN)return;
        if(cc.sys.os.toLowerCase()=='windows')return;
        this._musicPlaying = true;
        if (this._curPlayFile != file){
            this.stopMusic(this._curPlayFile);
            this._curPlayFile = file;
            return audioEngine.playMusic(file, ifLoop||false);
        }
    }
    //停止音乐
    ,stopMusic : function(file){
        return audioEngine.stopMusic(file);
    }
    //暂停音乐
    ,pauseMusic : function(){
        this._musicPlaying = false;
        return audioEngine.pauseMusic();
    }
    //继续音乐
    ,resumeMusic : function(){
        this._musicPlaying = true;
        return audioEngine.resumeMusic();
    }
    ,pauseResumeMusic: function(){
        if (this._musicPlaying) this.pauseMusic();
        else this.resumeMusic();
    }
    //回放音乐
    ,rewindMusic : function(){
        return audioEngine.rewindMusic();
    }
    //音乐是否播放中
    ,isMusicPlaying : function(){
        return audioEngine.isMusicPlaying();
    }
    //获取声音音量
    ,getMusicVolume : function(){
        return audioEngine.getMusicVolume();
    }
    //设置声音音量
    ,setMusicVolume : function(value){
        return audioEngine.setMusicVolume(value);
    }
    //===================================
    //播放音效 返回soundId
    ,playEffect : function(file,ifRepeat){
        if(cc.GLOBALTISHEN)return;
        if(cc.sys.isNative && cc.sys.os != cc.sys.OS_IOS){
        	return jsb.AudioEngine.play2d(file, ifRepeat||false, this._effectsVolume!=null?this._effectsVolume:1);
        }else{
        	return audioEngine.playEffect(file,ifRepeat||false);
        }        
    }
    //停止音效
    ,stopEffect : function(soundId){
        if(soundId!=null){
        	if(cc.sys.isNative && cc.sys.os != cc.sys.OS_IOS){
        		jsb.AudioEngine.stop(soundId);
        	}else{
        		audioEngine.stopEffect(soundId);
        	}
        }
    }
    //暂停音效
    ,pauseEffect : function(soundId){
    	if(soundId!=null){
        	if(cc.sys.isNative && cc.sys.os != cc.sys.OS_IOS){
        		jsb.AudioEngine.pause(soundId);
        	}else{
        		audioEngine.pauseEffect(soundId);
        	}
        }
    }
    //继续音效
    ,resumeEffect : function(soundId){
    	if(soundId!=null){
        	if(cc.sys.isNative && cc.sys.os != cc.sys.OS_IOS){
        		jsb.AudioEngine.resume(soundId);
        	}else{
        		audioEngine.resumeEffect(soundId);
        	}
        }
    }
    //暂停所有音效
    ,pauseAllEffects : function(){
        //audioEngine.pauseAllEffects();
    }
    //继续所有音效
    ,resumeAllEffects : function(){
        //audioEngine.resumeAllEffects();
    }
    //停止所有音效
    ,stopAllEffects : function(){
    	if(cc.sys.isNative && cc.sys.os != cc.sys.OS_IOS){
    		jsb.AudioEngine.stopAll();
    	}else{
    		audioEngine.stopAllEffects();
    	}
    }
    //释放音效
    ,unloadEffect : function(file){
        audioEngine.unloadEffect(file);
    }
    //获取音效音量
    ,getEffectsVolume : function(){
    	if(cc.sys.isNative && cc.sys.os != cc.sys.OS_IOS){
    		return this._effectsVolume;
    	}else{
    		return audioEngine.getEffectsVolume();
    	}
    }
    //设置音效音量
    ,setEffectsVolume : function(value){
    	if(cc.sys.isNative && cc.sys.os != cc.sys.OS_IOS){
    		this._effectsVolume = value!=null?value:1;
    	}else{
    		return audioEngine.setEffectsVolume(value*1);
    	}
    	//jsb.AudioEngine.setVolume(self._audioID, self._volume);  JSB里需要 audioID?
    }
};

})();
;;(function(){
    X.editbox = {
        create : function(o){
            if(!cc.sys.isNative)return;
            if(cc.sys.os == cc.sys.OS_WINDOWS)return;

            o.setTouchEnabled(false);
            o.hide();

            if(cc.sys.isObjectValid(o._editBox)){
                //只更新内容
                o._editBox.setString(o.getString());
                return;
            }

            var box = o._editBox = new cc.EditBox(cc.size(o.width, o.height), new cc.Scale9Sprite("img/blank.png"));
            var _name = o.getName();
            box.setName(_name+"_editBox");

            box.x = o.x;
            box.y = o.y;
            box.anchorX = o.anchorX;
            box.anchorY = o.anchorY;
            box.zIndex = o.zIndex;

            box.setFontSize( o.getFontSize() );
            box.setFontColor( cc.color(o.color.r, o.color.g, o.color.b) );
            box.setPlaceholderFontSize( o.getFontSize() );
            box.setPlaceholderFontColor( cc.color(o.color.r, o.color.g, o.color.b) );
            box.setPlaceHolder(o.getPlaceHolder());

            box.setString(o.getString());

            box.setReturnType(cc.KEYBOARD_RETURNTYPE_DONE );
            box.setInputMode(cc.EDITBOX_INPUT_MODE_SINGLELINE);
            box.setInputFlag(cc.EDITBOX_INPUT_FLAG_INITIAL_CAPS_SENTENCE);

            o.editBoxEditingDidBegin = function (editBox) {
                //cc.log('editBoxEditingDidBegin');
            };

            o.editBoxEditingDidEnd = function (editBox) {
                //cc.log('editBoxEditingDidEnd');
            };

            o.editBoxTextChanged = function (editBox, text) {
                //cc.log('editBoxTextChanged');
                this.setString( text );
            };

            o.editBoxReturn = function (editBox) {
                //cc.log('editBoxReturn');
                this.onInput && this.onInput(editBox.getString());
                this.setString( editBox.getString() );
            };
            box.setDelegate(o);
            o.getParent().addChild(box);
        }
    };
})();
;;(function(){
    /*
    var map = M = new X.BigMap({
        width:640,
        height:1136,
        debug:true,
        tileJsonFile:'bigmap/xpetmap.json',
        resLists:[],
        initGraph:true,
        tileOutOfViewer:'remove',
        backgroundColor:cc.color('#333333')
    });
    map.event.on('preloadSuccess',function(){
        //map.showGrid('tile');
        var node = N =  new cc.SpriteAnimation();
        //node.autoRelease = true;
        node.init('animation_nanzhu',function(){
            this.play('ce_run',true);
        });
        node.zIndex = 2;
        map.follow(node);
        map.mapContent.addChild(node);

        map.mapContent.setTouchEnabled(true);
        map.mapContent.touch(function(sender,type){
            cc.log('type',type);
            var pos = sender.getTouchEndPosition();
            pos.x = Math.abs(sender.x) + Math.abs(pos.x);
            pos.y = Math.abs(sender.y) + Math.abs(pos.y);

            N.stopActionByTag(12545652);
            N.runActions([
                cc.moveTo(2, pos ),
                cc.callFunc(function(){

                },N)
            ],12545652);
        });
    });
    map.x = map.y = 0;
    map.preload();
    me.addChild( map );
    */

    X.BigMap = ccui.Layout.extend({
        /*
         * data.tileJsonFile = 瓦片地图json文件，由astarmapeditor生成
         * */
        ctor : function(data){
            this._super();

            this.data = cc.mixin({
                'debug':true,
                'autoRelease' : true, //地图被删除时，是否自动释放资源
                'tileOutOfViewer' : 'hide', //瓦片在屏幕外时，hide还是remove
                'initGraph' : false, //是否初始化障碍物信息
            },data,true);

            this._jsonBaseName = cc.path.basename(data.tileJsonFile).replace('.json','');
            this._grid2Sprite = {};
            this._tileTexture = {};
            this.setClippingEnabled(true);

            if(data.backgroundColor){
                this.setBackGroundColor( data.backgroundColor );
                this.setBackGroundColorType(ccui.Layout.BG_COLOR_SOLID);
            }

            //主地图层，会在proload成功后，修改尺寸为配置尺寸
            var mapContent = this.mapContent = new ccui.Layout();
            mapContent.setAnchorPoint(0,0);
            this.addChild(mapContent);

            this.width = data.width;
            this.height = data.height;
            this.event = cc.EventEmitter.create(1000);
        },
        //初始化astar障碍物信息，diagonal=是否可以斜角寻路
        initGraph:function(diagonal){
            if(diagonal==null)diagonal=true;
            this.graph = new X.Graph(this.tileJson.Z, { diagonal: diagonal });
        },
        preload : function(callback){
            //加载资源
            var me = this;
            if(!me.data.tileJsonFile){
                cc.log('BigMap preload error : tileJsonFile is null');
                return;
            }
            X.loadPlist(me.data.resLists || [] ,function(){
                X.loadJSON(me.data.tileJsonFile,function(err,tileJson){
                    me.tileJson = tileJson;

                    //设置主地图尺寸
                    me.mapContent.width = tileJson.w;
                    me.mapContent.height = tileJson.h;

                    //一屏能显示的最多tile数量
                    me._showMaxTileX = Math.ceil(me.width / tileJson.tilew);
                    me._showMaxTileY = Math.ceil(me.height / tileJson.tileh);

                    //绘制略缩图
                    var _spriteFile = 'bigmap/tile/'+ me._jsonBaseName + '_mini.png';
                    var sprite = new cc.Sprite(_spriteFile);
                    sprite.attr({
                        x:0,
                        y:0,
                        scale:10,
                        anchorX:0,
                        anchorY:0,
                        zIndex : 0,
                    });
                    me.mapContent.addChild(sprite);
                    //记录所有用到的瓦片地图资源
                    me._tileTexture[_spriteFile] = 1;
                    //开始检测绘制情况
                    me.scheduleUpdate();
                    //设置寻路障碍信息
                    if(me.data.initGraph){
                        me.initGraph();
                    }

                    callback && callback.call(me);
                    me.event.emit('preloadSuccess');

                });
            });
        },
        //寻路
        //closest = 指定如果目标不可到达，是否返回最接近的节点的路径，默认true
        findWay : function(fromGrid,toGrid,closest){
            var me = this;
            if(closest==null)closest=true;
            var res = X.astar.search(
                me.graph,
                me.graph.grid[fromGrid.gy][fromGrid.gx],
                me.graph.grid[toGrid.gy][toGrid.gx],
                {closest : closest }
            );
            return res;
        },
        onExit : function(){
            this._super();

            if(this.data.autoRelease){
                //释放瓦片地图资源
                for(var k in this._tileTexture){
                    this.data.debug && cc.log('cc.textureCache.removeTextureForKey',k);
                    cc.textureCache.removeTextureForKey( k );
                    delete this._tileTexture[k];
                }
            }

            this._grid2Sprite = null;
            this._tileTexture = null;
            this.tileJson = null;
            this.event.emit('exit');
            this.event.removeAllListeners();
            this.event = null;

        },
        update : function(){
            var me = this;
            me.event.emit('update');

            if(me.tileJson){
                //当发生了一定的偏移量时，重绘地图
                var _needDrawX = me.tileJson.tilew*0.5,
                    _needDrawY = me.tileJson.tileh*0.5;

                if(me._lastCheckX==null || me._lastCheckY==null ||  Math.abs(me._lastCheckX-me.mapContent.x) > _needDrawX || Math.abs(me._lastCheckY-me.mapContent.y) > _needDrawY ) {
                    me.drawTileMap();
                    me._lastCheckX = me.mapContent.x;
                    me._lastCheckY = me.mapContent.y;
                }
            }
        },
        follow : function(target){
            var me = this;
            me.unfollow();
            me._followAction = me.mapContent.runAction(cc.follow(target, cc.rect(0, 0, me.mapContent.width , me.mapContent.height )));
        },
        unfollow : function(){
            var me = this;
            if(me._followAction){
                me.mapContent.stopAction(me._followAction);
                delete me._followAction;
            }
        },
        //显示网格
        showGrid : function(type){
            var me = this;
            if(type==null)type='grid';
            var draw = cc.DrawNode.create();
            me.mapContent.addChild(draw,5);

            for(var i = 0;i< me.mapContent.width ;i+=me.tileJson[type+'w']){
                draw.drawSegment(cc.p(i, 0), cc.p(i, me.mapContent.height), 1, cc.color(1, 1, 1));
            }
            for(var i = 0;i< me.mapContent.height ;i+=me.tileJson[type+'h']){
                draw.drawSegment(cc.p(0, i), cc.p(me.mapContent.width, i), 2, cc.color(1, 1, 1));
            }
        },
        /*
         cocos坐标转grid坐标
         grid坐标为左上0,0，与cocos不一致，需要转换
         gy,gx
         0,0  0,1  0,2
         1,0  1,1  1,2
         */
        positionToGridOrTile : function(ccp,type){
            var me = this;
            var gridY = (me.mapContent.height - ccp.y);
            var gy = parseInt(gridY/me.tileJson[type+'h']),
                gx = parseInt(ccp.x/me.tileJson[type+'w']);
            return {gx:gx,gy:gy}
        },
        positionToGrid : function(ccp){
            return this.positionToGridOrTile(ccp,'grid');
        },
        positionToTile : function(ccp){
            return this.positionToGridOrTile(ccp,'tile');
        },
        tileToPosition : function(tile){
            var me = this;
            var x = parseInt(tile.gx * me.tileJson.tilew + me.tileJson.tilew*.5, 10);
            var y = parseInt(tile.gy * me.tileJson.tileh + me.tileJson.tileh*.5, 10);
            return cc.p(x,me.mapContent.height-y);
        },
        //重绘可视区域内的瓦片地图
        drawTileMap : function(){
            var me = this;
            me.data.debug && cc.log('drawTileMap...');
            //地图内容最左下点的tile信息
            var blTile = me.positionToTile( cc.p(me.mapContent.x * -1,me.mapContent.y*-1 ) );

            var _needDraw = {};
            for(var gx_s = blTile.gx - 1,gx_i= gx_s ; gx_i <= gx_s+me._showMaxTileX+1 ; gx_i++ ){
                //跳过范围外
                if(gx_i<0)continue;
                if(gx_i>=me.tileJson.tilenumw)continue;

                for(var gy_s=blTile.gy-me._showMaxTileY,gy_i= gy_s ; gy_i <= gy_s + me._showMaxTileY+1 ; gy_i++ ){
                    //跳过范围外
                    if(gy_i<0)continue;
                    if(gy_i>=me.tileJson.tilenumh)continue;

                    var _key = gy_i+'_'+gx_i;
                    if(!me._grid2Sprite[_key]){
                        var sprite = new cc.Sprite();
                        var _pos = me.tileToPosition({gx:gx_i,gy:gy_i});
                        sprite.setPosition(_pos);
                        sprite.zIndex = 1;
                        me.mapContent.addChild(sprite);

                        var _spriteFile = 'bigmap/tile/'+ me._jsonBaseName + '_' + _key +'.png',
                            _texture = cc.textureCache.getTextureForKey(_spriteFile);
                        //记录所有使用到的纹理列表
                        me._tileTexture[_spriteFile] = 1;

                        if(_texture){
                            sprite.initWithTexture(_texture);
                        }else{
                            me.data.debug && cc.log('addImageAsync for map sprite',_spriteFile);
                            cc.textureCache.addImageAsync(_spriteFile, function(texture){
                                if (texture instanceof cc.Texture2D) {
                                    cc.isNode(this) && this.initWithTexture(texture);
                                }
                            }, sprite);
                        }
                        me._grid2Sprite[_key] = sprite;
                    }

                    me._grid2Sprite[_key].show();
                    _needDraw[_key] = 1;
                }
            }

            //去除不需要绘制的资源
            for(var k in me._grid2Sprite){
                if( !_needDraw[k] ){
                    if(me.data.tileOutOfViewer=='hide'){
                        me.data.debug && cc.log('hide map sprite',k);
                        me._grid2Sprite[k].hide();
                    }else if(me.data.tileOutOfViewer=='remove'){
                        me.data.debug && cc.log('remove map sprite',k);
                        me._grid2Sprite[k].removeFromParent();
                        cc.textureCache.removeTextureForKey( k );
                        delete me._grid2Sprite[k];
                        delete me._tileTexture[k];
                    }
                }
            }
            _needDraw = null;
        }
    });

})();
;;(function(){

//场景
X.bScene = cc.Scene.extend({
    ctor: function(){
        this._super();
        this.event = cc.EventEmitter.create();
    }
    //创景切换完成时
    ,onEnterTransitionDidFinish : function(){
        this._super();
        cc.log('bScene DidFinish...');
        //若window中设置了readyCall则回调
        this.onShow && this.onShow.call(this);
    }
    ,onExit : function(){
        this._super();
        this.onClose && this.onClose.call(this);
    }
});

})();
;;(function(){

var customSkeletonAnimation = sp.SkeletonAnimation.extend({
    ctor:function () {
        this._super.apply(this, arguments);
    },
    onEnter : function(){
    	this._super.apply(this, arguments);
    },
    onExit : function(){
    	this.onWillRemove && this.onWillRemove();
    	this._super.apply(this, arguments);
    }
});

X.spineNode = function(json,atlas,callback){
	
	function _call(){
		var node = new customSkeletonAnimation(json, atlas);
		
		node.runAni = function(trackIndex,name,loop){
			if(!cc.sys.isNative){
				node.setDebugBonesEnabled(true);
				cc.log('浏览器中spine runAni动画时部分不兼容，请使用exe调试');
			}
			this.clearTracks();
			node.setAnimation(trackIndex,name,loop);
		};
		node.addAni = function(trackIndex,name,loop,delay){
			node.addAnimation(trackIndex,name,loop,delay);
		};
		node.stopAni = function(trackIndex){
			node.clearTrack(trackIndex);
		};
		node.stopAllAni = function(trackIndex){
			node.setEndListener(null);
			node.clearTracks();
		};
		
		callback && callback(node);
	}

	if(cc.sys.isNative){
		_call();
		return;
	}

	cc.loader.load(atlas,function (count,result,loadedCount) {
		result = result[0];
		if(result!=""){
			var rss = result.split("\n");
			var pngs = [];
			var dirName = cc.path.dirname(json);
			
			for(var i=0;i<rss.length;i++){
				if(rss[i].indexOf('.png')!=-1){
					pngs.push( dirName + '/'+ rss[i] );
				}
			}
			pngs.push(json);
			cc.loader.load(pngs,function(count,result,loadedCount){
				_call();
			});
		}
	});
};

X.spine = {
	_cache : {},
    show: function (conf) {
        //动画缓存
        var me = this;
        conf = conf || {};

		//风暴特有的逻辑，对配置里的那几个逻辑，在特定的版本下，需要重新显示new目录下的
		if(G.gc && G.gc.changeModels && G.gc.ifChangeModels()){
			for(var __i=0;__i<G.gc.changeModels.length;__i++){
				if(conf.json == ('spine/'+ G.gc.changeModels[__i] +'.json') ){
					conf.json = "new"+ conf.json;
					break;
				}
			}
		}

        
        if (conf.autoRemove == null) conf.autoRemove = true;
        if(conf.atlas == null) conf.atlas = cc.path.changeExtname(conf.json,'.atlas');
		
		//只有打包后才走缓存逻辑，web下异常
        if (cc.sys.isNative && me._cache[conf.json] && me._cache[conf.json].length > 0) {
        	var node =  me._cache[conf.json].pop();
        	cc.log('fromcache...');
        	me._created(node, conf);
        	node.release();
        } else {
        	cc.log('fromcreate...');
        	X.spineNode(conf.json,conf.atlas,function(node){
        		me._created(node, conf);
        	});
        }
    },
    _created: function (node, conf) {
    	var me = this;
        var _parentSize;
        node.conf = conf;

		changeAllNodesColor(node);
        
        if (!conf.addTo) {
            conf.addTo = cc.director.getRunningScene();
            _parentSize = cc.director.getWinSize();
        } else {
            _parentSize = conf.addTo.getContentSize();
        }

        node.x = conf.x != null ? conf.x : _parentSize.width / 2;
        node.y = conf.y != null ? conf.y : _parentSize.height / 2;
        node.zIndex = conf.z != null ? conf.z : 100;
		
		if(conf.onend || conf.autoRemove){
			node.setEndListener(function(traceIndex){
				cc.log("spine _created setEndListener.", traceIndex);
				conf.onend && conf.onend(node);
				if(conf.autoRemove){
					cc.callLater(function(){
						 node.removeFromParent();
					});
				}
			});
		}else{
			node.setEndListener(null);
		}
		
//		node.setCompleteListener(function(traceIndex, loopCount){
//			cc.log("spine _created setCompleteListener.", loopCount);
//			conf.onLooped && conf.onLooped(node, traceIndex, loopCount);
//		});
		
		if(conf.onkey){
			node.setEventListener(function(traceIndex, event){
				if(event.data.name.length>0){
					conf.onkey && conf.onkey(node, event.data.name, event);
				}
	            cc.log( traceIndex + " event: %s, %d, %f, %s",event.data.name, event.intValue, event.floatValue, event.stringValue);
	        });
		}else{
			node.setEventListener(null);
		}
		
		
        node.onWillRemove = function(){
        	if(conf.cache && cc.sys.isNative){
        		me._cache[conf.json] = me._cache[conf.json] || [];
        		me._cache[conf.json].push(node);
//      		node.setEndListener(function(){});
//      		node.setCompleteListener(function(){});
//      		node.setEventListener(function(){});
				node.setEndListener(null);
    			node.setCompleteListener(null);
    			node.setEventListener(null);
        			
				node.clearTracks();
        		node.retain();
        	}
        };
        
        node.clearTracks();
        conf.addTo.addChild(node);
        conf.onload && conf.onload(node);
        return node;
    }
};

	
})();
;;(function(){

    /*
     * 通过帧动画描述文件创建帧动画精灵
     * plist文件说明：https://blog.zengrong.net/post/2006.html
     * 本地可通过 cocosAnimation.py脚本操作cocostudio csd文件生成
     *
     *

     var ssss = new Date().getTime();
     for(var i=0;i<=500;i++) {
         var ss = new cc.SpriteAnimation();
         ss.randAct = function(){
             var act = X.arrayRand(['bei_daiji','bei_run','ce_daiji','ce_run','zheng_daji','zheng_run']);
                 this.play(act, false , function(){
                 this.randAct();
             });
         };
         ss.init('animation_nanzhu',ss.randAct);

         ss.x = X.rand(1,640);
         ss.y = X.rand(1,1136);

         ss.runActions([
             cc.moveBy(3, cc.p( X.rand(-300,300), X.rand(-500,500) )),
             cc.moveBy(3, cc.p( X.rand(-300,300), X.rand(-500,500) )).easing(cc.easeInOut(2.0)),
             [
                 cc.moveBy(3, cc.p( X.rand(-300,300), X.rand(-500,500)  )),
                 cc.rotateTo(3, 100,100),
                 cc.tintTo(3, 255,0,0)
             ],
             /!*cc.callFunc(function(){
             //cc.log('over....'); 回调
             }),*!/
             //cc.removeSelf()
         ]);

         me.addChild(ss);
     }
     var ee = new Date().getTime();
     cc.log('needtime %s',ee-ssss);

     */
    cc.SpriteAnimation = cc.Sprite.extend({
        ctor : function(plist,callback){
            this._super();
            if(plist || callback)return this.init(plist,callback);
        },
        init : function(plist,callback){
            var me = this;
            if(plist==null){
                cc.log("SpriteAnimation plist is null where init ");
                return;
            }
            this._animationTag = 9811547315;
            this._animationPlist = plist;

            //分析plist文件
            //loading 表示加载中，array表示plist的内容
            var _plistCache = G.DATA['SpriteAnimation' + plist];

            if(cc.isArray(_plistCache)){
                //已加载过
                callback && callback.call(me);
                return;
            }else if(_plistCache=='loading'){
                //正在预加载中
                G.event.once('SpriteAnimationPlistOnload'+plist,function(){
                    callback && callback.call(me);
                });
                return;
            }

            //开始预加载
            G.DATA['SpriteAnimation' + plist] = 'loading';

            X.load(plist+'.plist',function(err, results){
                if(err){
                    cc.log("SpriteAnimation Failed to load ", plist);
                    return;
                }
                //预加载纹理
                if (results[0] && results[0].properties && results[0].properties.spritesheets ){
                    var spritesheets = results[0].properties.spritesheets;

                    var _preloadRes = [];
                    for(var _i=0;_i<spritesheets.length;_i++){
                        _preloadRes.push( cc.path.changeExtname(spritesheets[_i],'.png') );
                        _preloadRes.push( spritesheets[_i] );
                    }
                    X.loadPlist( _preloadRes ,function(){
                        cc.animationCache.addAnimations(me._animationPlist+'.plist');
                        G.DATA['SpriteAnimation' + plist] = results;
                        G.event.emit('SpriteAnimationPlistOnload'+plist);
                        callback && callback.call(me);
                    });
                }
            });
        },
        onExit : function(){
            this._super();
            if(this.autoRelease){
                //自动释放资源
                var _cache = G.DATA['SpriteAnimation' + this._animationPlist];
                if(cc.isArray(_cache) && _cache[0] && _cache[0].properties && _cache[0].properties.spritesheets){
                    var spritesheets = _cache[0].properties.spritesheets;
                    //遍历plist文件中的spritesheets，释放plist精灵帧，释放同名png纹理
                    for(var _i=0;_i<spritesheets.length;_i++){
                        cc.spriteFrameCache.removeSpriteFramesFromFile(spritesheets[_i]);
                        var _png = cc.path.changeExtname(spritesheets[_i],'.png');
                        cc.textureCache.removeTextureForKey(_png);
                        cc.log('autoReleaseRes',spritesheets[_i],_png);
                    }
                    delete G.DATA['SpriteAnimation' + this._animationPlist];
                }
            }
        },
        getAnimationFromCache : function(name){
            var _allName = this._animationPlist+"_"+name;
            var act = cc.animationCache.getAnimation(_allName);
            if(act)act = cc.animate(act);
            return act;
        },
        play : function(name,repeat,callback){
            var act = this.getAnimationFromCache(name);
            if(!act){
                cc.log('animation has no actionName',this._animationPlist,name);
                return;
            }
            this.stopActionByTag(this._animationTag);
            if(repeat)act=cc.repeatForever(act);
            if(callback){
                if(!repeat){
                    act = cc.sequence(act, cc.callFunc(callback,this));
                }else{
                    cc.log('repeat ani can not callback when play',name,this._animationPlist);
                }
            }
            act.setTag(this._animationTag);
            return this.runAction(act);
        },
        getAnimationAction : function(){
            return this.getActionByTag(this._animationTag);
        }
    });

})();
;;(function(){
    /*
     每个UI会广播以下事件
     open = 即将打开
     aniShow = 如果有进场动画，动画完毕
     willshow = 即将显示
     show = 显示完成
     focus = 获得焦点
     blur = 失去焦点
     willHide = 如果有出场动画，即将开始出场动画
     willClose = 即将关闭
     close = 被关闭

     可通过 ui.on|once('open',function(){
     do someting..

     })
     来绑定监听事件
     */

    X.uiMana = {
        //检测窗口是否处于最上方
        checkOnTopFun : function(){
            var z=0,frameid;

            //获取当前最顶层的frameID
            for(var k in G.openingFrame){
                if(G.openingFrame[k] > z && G.frame[k].listenFocus){
                    z = G.openingFrame[k];
                    frameid = k;
                }
            }

            if(frameid && G.frame[frameid]) {
                X.topFrameID = frameid;
                G.frame[frameid].isTop = true;
                G.frame[frameid].isShow && G.frame[frameid].emit('focus');
            }

            for(var k in G.openingFrame){
                if(frameid != k && G.frame[k] && G.frame[k].listenFocus){
                    G.frame[k].emit('blur');
                    G.frame[k].isTop = false;
                }
            }
        },
        //关闭所有Frame
        closeAllFrame : function(clearEvent, filterFun){
            //按zIndex顺序，把frame从上往下逐一移除
            var arr= this.getOpenFrameOrderByZindex();
            for(var i=0;i<arr.length;i++){
                if(filterFun==null || filterFun(G.frame[  arr[i].frameid  ] )){
                    var k = arr[i].frameid;
                    if(clearEvent){
                        G.frame[k].event && G.frame[k].event.removeAllListeners();
                    }
                    G.frame[k].remove(false);
                }
            }
        },
        //获取所有frame中最大的zindex
        getMaxZOrder : function(){
            var z=[0];
            for(var k in G.openingFrame){
                if(G.frame[k] && G.frame[k].ui){
                    z.push(G.frame[k].ui.logicZindex || G.frame[k].ui.zIndex);
                }
            }
            var maxz = Math.max.apply(null,z);
            return maxz;
        },

        //显示了一个全屏ui
        fullScreenShow : function(frame){
            //获取当前最顶层的frameID

            cc.log('显示了1个全屏UI',frame.ID());

            var frames = this.getOpenFrameOrderByZindex();
            for(var k in G.openingFrame){
                if(k != frames[0].frameid && G.frame[k].fullScreen){
                    cc.log('自动隐藏被遮盖的UI',k);
                    G.frame[k].visibleWithOutEmit(false);
                }
            }
            G.event.emit('fullScreenShow',frame.ID());
            G.event.emit('fullScreenChange',frame.ID());
        },

        //隐藏了一个全屏UI
        fullScreenHide : function(frame){
            var z=0,frameid;
            cc.log('关闭了1个全屏UI',frame.ID());

            //获取当前最顶层的frameID
            for(var k in G.openingFrame){
                if(G.openingFrame[k] > z && G.frame[k].fullScreen){
                    z = G.openingFrame[k];
                    frameid = k;
                }
            }
            if(frameid){
                cc.log('自动显示被遮盖的UI',frameid);
                G.frame[frameid].visibleWithOutEmit(true);
            }
            G.event.emit('fullScreenHide',frameid);
            G.event.emit('fullScreenChange',frameid);
        },

        //by = asc || desc，默认 desc
        getOpenFrameOrderByZindex : function(by){
            var arr=[];
            //按zIndex顺序，把frame从上往下逐一移除
            for(var k in G.openingFrame){
                arr.push({"frameid":k,"zIndex":G.openingFrame[k]});
            }
            arr.sort(function (a, b) {
                if(by=='asc'){
                    return a.zIndex-b.zIndex;
                }else{
                    return b.zIndex-a.zIndex;
                }
            });
            return arr;
        }

    };

    X.bUi = cc.Class.extend({
        ctor: function(json,id, conf){
            var me = this;
            this._json = json;
            this._id = id;
            this._conf = conf || {};
            if(this.listenFocus==null)this.listenFocus = true; //是否参与和监听focus blur逻辑
            if(this.fullScreen==null)this.fullScreen = false; //是否全屏窗体，true时，将会在onshow时，hide掉其他ui
            if(this.singleGroup==null)this.singleGroup = null; //互斥组，同组ui只会存在一个
            this._attr = {}; //frame永久属性，不会因为remove被清理
            //初始属性
            this._defaultAttr = {'_defaultAttr':true};

            G.openingFrame = G.openingFrame || {};

            Object.defineProperty(me, "nodes" , {
                get: function () {
                    if(me.ui){
                        return me.ui.nodes;
                    }else{
                        cc.log('ui不存在时调用了bUi.nodes');
                    }
                }
            });

            this.event = cc.EventEmitter.create();
            this.event.setMaxListeners(200);
        },
        ID : function(){
            return this._id;
        },
        attr : function(k,v){
            if(v==null){
                return this._attr[k];
            }else{
                this._attr[k] = v;
                return this;
            }
        },
        delAttr : function(k){
            delete this._attr[k];
            return this;
        },
        //设置父窗口ID
        parent : function(id){
            this._parent = id;
            return this;
        },
        getParent : function(){
            return this._parent;
        },
        setParentVisible : function(v){
            if(this._parent && G.frame[this._parent]){
                cc.log('设置父UI的显隐状态',this._parent,v);
                G.frame[this._parent].visible(v);
            }
        },
        //可见性，仅设置可见性，不调用onshow onRemove等方法
        visible : function(v){
            this.visibleWithOutEmit(v);
            this.event.emit('visibleChange',v);
        },
        visibleWithOutEmit : function(v){
            cc.sys.isObjectValid(this.ui) && this.ui.setVisible(v);
        },
        //外接数据，会在frame关闭时清空
        data : function(d){
            if(d!=null){
                this._extData = d;
                return this;
            }else{
                return this._extData;
            }
        },
        /*
         this.ajax('xxxx',[],function(str,data){
            //这里的回调会在有UI时才进入
         });

         this.ajax('xxxx',[],{
             data:function(str,data){
                //无论是否有UI，都会先进入
             },
             ui : function(str,data){
                //如果有UI，会其次进入
             }
         });
        * */
        ajax : function(code, args, callbackDict,showLoading,emitData){
            var me = this;
            return G.ajax.ajaxWithNode(code, args, callbackDict,showLoading,emitData,me.ui);
        },
        _uiInited : function(state){
            //state=1 - 新创建的ui  state=2 - 已存在的UI，只是显示出来
            var me = this;
            me.isShow = true;

            //隐藏父窗体
            if(state==1 && me.ui.action && me.ui.action.isAnimationInfoExists('in') ){
                var endIndex = me.ui.action.getAnimationInfo('in').endIndex;
                me.ui.action.setLastFrameCallFunc(function(){
                    if(endIndex == me.ui.action.getCurrentFrame()){
                        me.ui.action.pause();
                        me.ui.setTimeout(function() {
                            me.fullScreen && X.uiMana.fullScreenShow(me);
                            me.onAniShow && me.onAniShow();
                            me.emit('aniShow');
                            me.setParentVisible(false);
                        },0);
                    }
                });
            }else{
                me.ui.setTimeout(function() {
                    me.fullScreen && X.uiMana.fullScreenShow(me);
                    me.onAniShow && me.onAniShow();
                    me.emit('aniShow');
                    me.setParentVisible(false);
                },0);
            }

            me.ui.setVisible(true);
            me.goToTop();

            me.emit('willShow');
            me.onShow && me.onShow();
            me.emit('show');

            if (me.singleGroup && me.singleGroup != "") {
                //如果有唯一组标示（互斥frame)
                X.uiMana.closeAllFrame(true, function (f) {
                    if (f.ID() != me.ID() && f.singleGroup == me.singleGroup) {
                        return true;
                    }
                });
                G.event.emit('showSingleGroup', me.singleGroup);
            }

            X.uiMana.checkOnTopFun();
            G.event.emit('uiChange',{act:"show",frameid:me.ID()});
        },
        _viewCreated : function(view){
            var me = this;
            me.__uiIniting = null;
            delete me.__uiIniting;

            view.event.on('remove',function(){
                me._viewRemove();
            });
            me.ui = view;
            //方便使用统一的me.nodes映射调用
            me.ui.setName('bui_'+me.ID());
            me.action = me.ui.action;

            (me._conf.appendTo || cc.director.getRunningScene()).addChild(me.ui);

            if(me.ui.action){
                //如果有动画的话，播放in入场动画
                me.ui.action.isAnimationInfoExists('in') && me.ui.action.play('in',false);
            }
            for(var k in me){
                me._defaultAttr[k] = true;
            }
            me.fillSize();
            me.onOpen && me.onOpen();
            me.emit('open');

            me._uiInited(1);
        },
        show : function(conf){
            var me = this;
            if(conf==null)conf={};
            cc.mixin(me._conf, conf, true);

            if(me.__uiIniting)return;

            me.beforeShow && me.beforeShow();
            cc.log('即将显示1个UI',this.ID());
            G.openingFrame[me.ID()] = 1;

            // if(me.singleGroup && me.singleGroup!=""){
            //     //如果有唯一组标示（互斥frame)
            //     X.uiMana.closeAllFrame(true, function(f){
            //         if(f.ID() != me.ID() && f.singleGroup == me.singleGroup ){
            //             return true;
            //         }
            //     });
            //     G.event.emit('showSingleGroup',me.singleGroup);
            // }

            if(!me.ui){
                //web下防止多次加载
                me.__uiIniting = true;
                me._conf.autoFillSize = false;
                if(me.preLoadRes) me._conf.preLoadRes = me._conf.preLoadRes || me.preLoadRes;

                if(me._conf.cache){
                    X.viewCache.getView( me._json , function(view){ 
                        me._viewCreated(view);
                    } ,me._conf );
                }else{
                    new X.bView( me._json , function(view){
                        me._viewCreated(view);
                    } ,me._conf );
                }
            }else{
                me._uiInited(2);
            }
        },
        fillSize : function(){
            //外框自适应屏幕尺寸
            this.ui.fillSize(cc.director.getWinSize());
        },
        goToTop : function(){
            //置于顶端
            var maxZ = X.uiMana.getMaxZOrder();
            this.ui.zIndex = maxZ+5;
            this.ui.logicZindex = this.ui.zIndex;
            G.openingFrame[this.ID()] = this.ui.zIndex;
        },

        //监听事件
        on : function(funType,fun){
            this.event && this.event.on(funType,fun);
            return this;
        },
        onnp : function(funType,fun,key){
            this.event && this.event.onnp(funType,fun,key);
            return this;
        },
        once : function(funType,fun){
            this.event && this.event.once(funType,fun);
            return this;
        },
        emit : function(type,args){
            this.event && this.event.emit(type,args);
            return this;
        },

        //删除该frame
        remove : function(showAni){
            var me = this;

            var conf = {showAni:true};
            if(showAni!=null)conf['showAni'] = showAni;
            
            me.setParentVisible(true);

            if(conf['showAni'] && me.ui && me.ui.action && me.ui.action.isAnimationInfoExists('out')){
                if(me._removing)return;

                me._removing = true;
                var endIndex = me.ui.action.getAnimationInfo('out').endIndex;
                me.ui.action.setLastFrameCallFunc(function(){
                    if(endIndex == me.ui.action.getCurrentFrame()){
                        me.ui.setTimeout(function(){
                            me._remove();
                        },10);
                    }
                });
                me.emit('willHide');
                me.ui.action.play('out',false);
            }else{
                me.emit('willHide');
                me._remove();
            }
        },

        _remove : function(){
            //删除
            var me = this;
            delete me._removing;
            if(!me.isShow)return;

            me.emit('willClose');
            cc.log('remove='+me.ID());
            delete G.openingFrame[me.ID()];
            delete this._extData;

            me.isShow = false;
            me.isTop = false;
            me.fullScreen && X.uiMana.fullScreenHide(me);

            me.onRemove && me.onRemove();
            me.onHide && me.onHide();
            cc.isNode(me.ui) && me.ui.removeFromParent();

            //if(cc.isNode(me.ui)){
            //    me.ui.runAction(cc.removeSelf());
            //}

            X.uiMana.checkOnTopFun();

            delete me.ui;
            delete me.action;

            me.afterRemove && me.afterRemove();

            me.emit('close');
            //正常移除时，不清除绑定的事件
            //me.event && me.event.removeAllListeners();

            //删除非初始属性外的其他数据
            for(var k in me){
                if(!me._defaultAttr[k]){
                    me[k] = null;
                    delete me[k];
                }
            }

            G.event.emit('uiChange',{act:"remove",frameid:me.ID()});
        },

        //该frame的主view被删时触发
        _viewRemove : function(){
            var me = this;
            //view被删除了，但是opening里还存在，非正常调用remove关闭的窗口，如：cc.director.getRunningScene().removeAllChildren() 需要清理数据
            if(G.openingFrame[me.ID()]){
                cc.log('视图被非正常销毁',me.ID());
                delete G.openingFrame[me.ID()];
                delete this._extData;
                me.isShow = false;
                me.isTop = false;
                delete me.ui;
                delete me.action;
                me.event && me.event.removeAllListeners();
                //删除非初始属性外的其他数据
                for(var k in me){
                    if(!me._defaultAttr[k]){
                        me[k] = null;
                        delete me[k];
                    }
                }
                G.event.emit('uiChange',{act:"remove",frameid:me.ID()});
            }
        }
    });

})();

;;;(function(){

    X.defaultViewConf = {
        "action": false, //不加载动作
        "releaseRes": true, //自动释放同名的资源
        "pixel": cc.Texture2D.PIXEL_FORMAT_RGBA8888, //RGBA8888
    };

    X.defaultRichTextConf = {
        size: 20,
        lineHeight: 24,
        colorFunc: function () {
            return G.gc.COLOR.n5;
        },
        // color:'#f6ebcd' //常态文本内容颜色 n5
    };

    var _viewCache = {};
	var _viewCount = {};
    X.viewCache = {
        getViewFromCache : function(_id,reuseData){
            //从缓存中获取一个view，没有时候返回null
            if( _viewCache[_id] && _viewCache[_id].length > 0){
                var _view = _viewCache[_id].pop();
                if (_id != 'ani_dianji.json') {
                    cc.log('从缓存中显示视图',_id,_view._json);
                }
                if(_view.getParent())_view.removeFromParent();

                if(_view.action){
                    _view.runAction(_view.action);
                }
                _view.reuse && _view.reuse.apply(_view,reuseData||[]);
                _view.onShow && _view.onShow();
                return _view;
            }
        },
        getView : function(json,callback,conf){
            //获取一个view并缓存，如果不存在，则自动创建
            conf = conf || {};
            if(conf.cache==null)conf.cache = true;
            var _cacheView = this.getViewFromCache(json);
            if(_cacheView){
                callback && callback(_cacheView);
            }else{
                _cacheView = new X.bView(json,function(view){
                    callback && callback(view);
                },conf);
            }
            return _cacheView;
        },
        getViewByClass : function(cls,args,cacheid){
            var _id = 'viewClass' + cls.id;
            if(cacheid!=null){
                _id = cacheid;
            }

            var _cacheView = this.getViewFromCache(_id,args);
            if(_cacheView){
                return _cacheView;
            }else{
                var applyArgs = ([{}]).concat(args || []);

                cls.prototype.reWriteConf = {cache:_id,releaseRes:false};
                var f = Function.prototype.bind.apply(cls, applyArgs);
                var view = new f();
                return view;
            }
        },
        getViewCahceInfo : function(){
            return _viewCache;
        },
        pushView : function(view){
            //viewOnExit时，如果需要被缓存，则会退出回收池
            //cc.log('pushViewFromCache',view._json);
            var _cacheid = view._json;
            if(typeof(view._conf.cache)=='string'){
                _cacheid = view._conf.cache;
            }
            _viewCache[_cacheid] = _viewCache[_cacheid] || [];
            _viewCache[_cacheid].push(view);
        },
        getCacheSize : function(_id){
            if( _viewCache[_id] ){
                return _viewCache[_id].length;
            }else{
                return 0;
            }
        },
        releaseCache : function(target){
            //target=释放哪个target对应的view缓存，不传表示释放所有
            for(var _key in _viewCache){

                var _releaseKey;
                if(target!=null){
                    if(typeof(target)=='string'){
                        _releaseKey = target; //通过key释放
                    }else{
                        _releaseKey = 'viewClass' +target.id; //通过class释放
                    }
                }
                if(target==null || _releaseKey==_key){
                    var _views = _viewCache[_key];
                    cc.log('releaseViewFromCache',_key);
                    for(var i=0;i<_views.length;i++){
                        if(i==0){
                            _views[i].releaseRes = true;
                            _views[i].autoReleaseRes && _views[i].autoReleaseRes();
                        }
                        _views[i].action && _views[i].action.release();
                        _views[i].release();
                    }
                    _viewCache[_key] = [];
                    delete _viewCache[_key];
                }
            }
        }
    };

    cc.baseEvent.on('gameRestart',function(){
        X.viewCache.releaseCache();
    });

    X.bView = ccui.Layout.extend({
        ctor: function (json, callback, conf) {
            var me = this;
            this._super();
            me.setName('bview_'+ cc.path.mainFileName(json));
            me._json = json;
            me._callback = callback;

            //UI设计时，所有以 $ 结尾的控件，会自动以name为key，映射到view层的 nodes 字典中，方便代码中直接绑定代码逻辑
            me._nodes = {};
            Object.defineProperty(this, "nodes" , {
                get: function () {
                    if(!me.__firstAutoInitUI){
                        me.autoInitUI();
                        me.__firstAutoInitUI = true;
                    }
                    return me._nodes;
                }
            });

            me.event = cc.EventEmitter.create();
            //默认配置
            me._conf = cc.mixin({}, X.defaultViewConf, true);
            if (conf)cc.mixin(me._conf, conf, true);

            if(me._conf.autoFillSize==null)me._conf.autoFillSize = true;
            if(me._conf.autoCreate==null)me._conf.autoCreate = true;
            if(me._conf.preLoadRes==null)me._conf.preLoadRes = me.preLoadRes || [];

            if(me.reWriteConf)cc.mixin(me._conf, me.reWriteConf, true);

            if(me._conf.pixel=='4444')me._conf.pixel = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
            if(me._conf.pixel=='8888')me._conf.pixel = cc.Texture2D.PIXEL_FORMAT_RGBA8888;
            if(me._conf.pixel=='565')me._conf.pixel = cc.Texture2D.PIXEL_FORMAT_RGB565;
            if(me._conf.pixel=='5A1')me._conf.pixel = cc.Texture2D.PIXEL_FORMAT_RGB5A1;

            //如果需要缓存，则不释放资源
            if(me._conf.cache){
                me._conf.releaseRes=false;
            }
            if(me._conf.autoCreate)me.create();

			if(!cc.sys.isNative){
            	if(me._conf.cache){
            		_viewCount[ me._json ] = _viewCount[ me._json ] || 1;
            		_viewCount[ me._json ]++;
            		if( _viewCount[ me._json ] > 10 ){
            			cc.warn('警告：累计创建了'+ _viewCount[ me._json ] + '个缓存的view：'+ me._json)
            		}
            	}
            }
        },
        create : function(){
            var me = this;
            me._create(function () {
                me._createSucc();
                me._callback && me._callback(me);
                changeAllNodesColor(me);
            });
        },
        _createSucc : function(){
            var me = this;

            if(me._conf.autoFillSize){
                if(cc.isNode(me.getParent())){
                    //创建成功时，如果已有父，则直接fillsize
                    me.fillSize();
                }else{
                    me.event.once('onEnterTransitionDidFinish',function(){
                        me._createSucc();
                    });
                    return;
                }
            }

            me.onOpen && me.onOpen();
            me.event && me.event.emit('opened');
            me.onShow && me.onShow();
            me.event && me.event.emit('showed');
        },
        getViewJson : function(){
            return this._json;  
        },
        onExit: function () {
            this.onRemove && this.onRemove();
            this.event && this.event.emit('remove');
            this._super();
            if (this._json != 'ani_dianji.json') {
                cc.log('view onExit', this._json);
            }


            this.autoReleaseRes && this.autoReleaseRes();
            this.event && this.event.removeAllListeners();

            this._nodes = {};
            delete this.__firstAutoInitUI;

            //cc.sys.garbageCollect();

            //cache有可能为bool型，此时回收池中会以json的文件名为key缓存
            //有可能为string型，此时会以该值为key缓存
            if(this._conf.cache){
                X.viewCache.pushView(this);
            }
            this.afterRemove && this.afterRemove();
        },
        autoInitUI : function(){
            return X.autoInitUI(this,'_nodes');
        },
        autoReleaseRes: function () {
            //简单释放资源，按照约定，frame用到的资源是 json同名的plist和png，这里只释放这2个资源，其他的需要手动处理
            //如果资源多于一张，则 json2，json3 ... 理论上不会超过3张，so，循环3次
            var me = this;
            if (!me._conf.releaseRes)return;

            var jsonName = this._json;

            for (var i = 0; i < 3; i++) {
                var _index = i == 0 ? "" : i;
                //如果纹理存在
                var oplist = cc.path.changeExtname(jsonName, _index + '.plist');
                var opng = cc.path.changeExtname(jsonName, _index + '.png');

                if (cc.textureCache.getTextureForKey(opng)) {
                    cc.log('自动释放资源=' + oplist);
                    cc.spriteFrameCache.removeSpriteFramesFromFile(oplist);
                    cc.textureCache.removeTextureForKey(opng);
                }
            }

            //cc.sys.isNative && cc.sys.os == cc.sys.OS_WINDOWS && cc.textureCache.getCachedTextureInfo && cc.log(cc.textureCache.getCachedTextureInfo());
        },

        fillSize : function(size){
            //外框自适应父控件
            var _parent = this.getParent();
            if(size){
                this.setContentSize( size );
                this.ui.setContentSize( this.getContentSize() );
            }else if( cc.isNode(_parent) && !(_parent instanceof X.bScene) ){
                this.setContentSize( _parent.getContentSize() );
                this.ui.setContentSize( this.getContentSize() );
            }
            ccui.helper.doLayout( this.ui );
        },

        onEnterTransitionDidFinish : function(){
            var me = this;
            this._super();
            this.event.emit('onEnterTransitionDidFinish');
        },
        ajax : function(code, args, callbackDict,showLoading,emitData){
            var me = this;
            return G.ajax.ajaxWithNode(code, args, callbackDict,showLoading,emitData,me);
        },

        //将data数据，渲染到默认的nodes节点，也可以通过第2个参数，指定其他nodes
        render : function(data,nodes){
            var me = this;
            if(nodes==null)nodes=me.nodes;
            return X.render.call(me,data,nodes);
        },

        _create: function (callback) {
            var me = this;

            if (this._json != 'ani_dianji.json') {
                cc.log('创建视图', this._json);
            }

            X.loadPlist(me._conf.preLoadRes, function () {
                cc.Texture2D.defaultPixelFormat = me._conf.pixel;
                X.ccui(me._json, function (uiLoader) {
                    cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;

                    if(!cc.isNode(me))return;

                    me.ui = uiLoader.node;
                    me.action = uiLoader.action;

                    if (me.action) {
                        me.ui.runAction(me.action);
                        me.action.gotoFrameAndPause(0);
                    }
                    me.addChild(me.ui);

                    //如果需要缓存
                    if(me._conf.cache){
                        me.retain();
                        me.action && me.action.retain();
                    }

                    callback && callback();
                }, me._conf)
            });
        },

        dumpUI: function () {
            return X.dumpUI(this);
        }
    });
})();

;;;(function() {

    /*
     cc.loader.loadJSON不会处理cc.loader.resPath，并且没有优先热更目录，导致热更失效
     */
    X.load = function (file, callback) {

        if (cc.sys.isNative) {
            var resFile = file;
            var storagePath = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "./");
            var hotJson = storagePath + file;
            var _bak = cc.loader.resPath;

            if (jsb.fileUtils.isFileExist(hotJson)) {
                //如果热更目录里有，则优先热更目录
                resFile = hotJson;
                //cc.loader.load方法会自动加上cc.loader.resPath，这里需要去掉
                cc.loader.resPath = "";
            }
            cc.loader.load(resFile, function (err, json) {
                callback && callback(err, json);
            });
            cc.loader.resPath = _bak;
        } else {
            cc.loader.load(file, function (err, json) {
                callback && callback(err, json);
            });
        }
    };
    X.loadJSON = function (file, callback) {
        var resFile = cc.loader.resPath + '/' + file;
        if (cc.sys.isNative) {
            var storagePath = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "./");
            var hotJson = storagePath + file;
            if (jsb.fileUtils.isFileExist(hotJson)) {
                resFile = hotJson;
            }
        }
        cc.loader.loadJson(resFile, function (err, json) {
            callback && callback(err, json);
        });
    };

    //控制防止web下重复加载
    var _preloadState = {};
    var _preloadEvent = cc.EventEmitter.create();
    _preloadEvent.setMaxListeners(5000);

    cc.baseEvent.on('gameRestart',function(){
        _preloadEvent.removeAllListeners();
    });

    //预加载plist&png，并且addSpriteFrames所有plist
    X.loadPlist = function (files, callback) {
        if (!cc.isArray(files)) files = [files];

        function addSprite(fs) {
            for (var i = 0; i < fs.length; i++) {
                var fname = fs[i];
                if (cc.path.extname(fname) != '.plist')continue;
                cc.spriteFrameCache.addSpriteFrames(fname);
            }
        }

        if (files.length == 0) {
            files = null;
            callback && callback();
            return;
        }

        if (cc.sys.isNative) {
            addSprite(files);
            callback && callback();
        } else {
            //如果正在加载中，则不重复处理
            var _eventKey = 'plistLoaded_'+ files.join(',');
            var _state = _preloadState[_eventKey];
            if( _state == 'loading'){
                _preloadEvent.once(_eventKey,callback);
                return;
            }

            _preloadState[_eventKey] = "loading";
            cc.loader.load(files, function (result, count, loadedCount) {
            }, function () {
                delete _preloadState[_eventKey];
                addSprite(files);
                callback && callback();
                _preloadEvent.emit(_eventKey);
            });
        }
    };

    X._preloadJSON = function (json, callback) {
        var _eventKey = 'jsonLoaded_'+json;

        //如果正在加载中，则不重复处理
        var _state = _preloadState[_eventKey];
        if( _state == 'loading'){
            _preloadEvent.once(_eventKey,callback);
            return;
        }

        _preloadState[_eventKey] = "loading";
        cc.loader.load(json, function (res, result, loadedCount) {
            if (
                result && result[0] && result[0].Content && result[0].Content.Content
                && result[0].Content.Content.UsedResources
                && result[0].Content.Content.UsedResources.length > 0
            ) {
                var _resources = result[0].Content.Content.UsedResources;
                //cc.log('UsedResourcesInfo',json,_resources.length);
                X.loadPlist(_resources, function () {
                    delete _preloadState[_eventKey];
                    callback && callback();
                    _preloadEvent.emit(_eventKey);
                })
            } else {
                delete _preloadState[_eventKey];
                callback && callback();
                _preloadEvent.emit(_eventKey);
            }
        });
    }

    //加载CCUI的json配置，并预加载所需的资源
    X.ccui = function (json, callback, conf) {
        if (cc.sys.isNative) {
            var _loader = X.ccsload(json, conf);
            callback && callback(_loader);
            _loader = null;
        } else {
            X._preloadJSON(json, function () {
                //如果是web时，确保callback异步执行，统一逻辑
                cc.director.getRunningScene().setTimeout(function(){
                    var _loader = X.ccsload(json, conf);
                    callback && callback(_loader);
                    _loader = null;
                },0);
            });
        }
    };

    X.ccsload = function (file, conf) {

        var loadConf = {
            "action": true,
        };
        if (conf)cc.mixin(loadConf, conf, true);

        //cc.log('ccsload',file,JSON.stringify(conf));

        if (ccs.CSLoader && cc.sys.isNative && C.USECSB) {
            //如果扩展支持加载csb模式
            var csbfile = file.replace('.json', '.csb');
            var loader = {
                node: ccs.CSLoader.createNode(csbfile)
            };
            if (loadConf.action == true) {
                loader.action = ccs.CSLoader.createTimeline(csbfile);
            }
            loadConf = null;
            return loader;
        } else {
            var loader = ccs.load(file);
            //保持数据结构统一，不需要时删除掉action
            if (!loadConf.action) {
                delete loader.action;
            }
            loadConf = null;
            return loader;
        }
    };

    //设置或读取缓存
    X.cache = function (k, v) {
        if (v == null) {
            var v = cc.sys.localStorage.getItem(k);
            if (v != null)v = decodeURIComponent(cc.sys.localStorage.getItem(k));
            return v;
        } else {
            cc.sys.localStorage.setItem(k, encodeURIComponent(v));
        }
    };
    //清空缓存
    X.delCache = function (k) {
        cc.sys.localStorage.removeItem(k);
    };

    //字符串转json
    X.toJSON = function (str) {
        var _json = null;
        try {
            _json = JSON.parse(str);
        } catch (e) {
            cc.log('to JSON ERROR=' + str);
        }
        return _json;
    };

    function _S4() {
        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
    }

    //生成UUID，s4Len=多少节，每节4位
    X.UUID = function (s4Len) {
        var str = "";
        for (var i = 0; i < s4Len; i++) {
            str += _S4();
        }
        return str;
    };

    /**
     * 随机字符串
     * @param n : Number(字符串长度)
     * @returns {string}
     * @constructor
     */
    X.UID = function (n) {
        var s = [];
        for (var i = 0; i < n; i++) {
            var a = parseInt(X.rand(0, 25)) + (Math.random() > 0.5 ? 65 : 97);
            s[i] = Math.random() > 0.5 ? parseInt(Math.random() * 9) : String.fromCharCode(a);
        }
        return s.join("");
    };

    /**
     * 判断对象类型
     * @param o : *
     * @param type : String(String|Number|Object|Array|...)
     * @returns {boolean}
     */
    X.instanceOf = function (o, type) {
        return toString.apply(o) === ('[object ' + type + ']') || typeof o === type.toLowerCase();
    };

    //生成under~over之间的闭区间整数
    X.rand = function (under, over) {
        switch (arguments.length) {
            case 1:
                return parseInt(Math.random() * under + 1);
            case 2:
                return parseInt(Math.random() * (over - under + 1) + under);
            default:
                return 0;
        }
    };

    //从arr中随机取1个值
    X.arrayRand = function (arr) {
        return arr[X.rand(0, arr.length - 1)];
    };

    //数组洗牌，随机排序
    X.arrayShuffle = function(arr){
        for (var i = arr.length - 1; i > 0; i--) {
            var j = 0|(Math.random() * (i + 1));
            var tmp = arr[i];
            arr[i] = arr[j];
            arr[j] = tmp;
        }
        return arr;
    };

    /**
     * 找到所有key
     * @param object
     * @returns {Array}
     */
    X.clone = function(v, isIn){
        if (!v) return;
        var b;
        if (X.instanceOf(v,'Array')){
            b = [];
            for(var i = 0; i < v.length; i++){
                if(isIn) {
                    b.push(v[i]);
                }else {
                    b.push(X.clone(v[i]));
                }
            }
        }
        else{
            b = v.constructor ? new v.constructor : {};
            for(var k in v){
                var d = v[k];
                b[k] = (X.instanceOf(d,"Object") || X.instanceOf(d,"Array")) && d && !(d instanceof cc.Node) ? X.clone(d) : d;
            }
        }
        return b || v;
    };

    //X.STR('test{1}_xx{2}',['a','b'])  ->  testa_xxb
    X.STR = function () {
        if (arguments.length < 2) return;
        var str = arguments[0];
        if (arguments.length == 2 && cc.isArray(arguments[1])) {
            var args = arguments[1];
            for (var i = 0; i < args.length; i++) {
                var regx = new RegExp('\\{' + (i*1+1) + '\\}', 'g');
                str = str.replace(regx, args[i]);
            }
        } else {
            for (var i = 1; i < arguments.length; i++) {
                var regx = new RegExp('\\{' + i + '\\}', 'g');
                str = str.replace(regx, arguments[i]);
            }
        }
        return str;
    };
    /**
     * 是否在数组中
     * @param array : Array
     * @param item : Object
     * @returns {boolean}
     */
    X.inArray = function (array, item) {
        if (!array) return false;
        var a = ',' + array.join(',') + ',';
        return a.indexOf(',' + item + ',') > -1;
    };
    /**
     * 在数组中找，返回下标，如果没有返回-1
     * @param array : Array
     * @param item : Object
     * @param key : String
     * @returns {number}
     */
    X.arrayFind = function (array, item, key) {
        var idx = -1;
        for (var i = 0; i < array.length; i++) {
            if (array[i] == item || array[i][key] == item) {
                idx = i;
                break;
            }
        }
        return idx;
    };

    //当前时间戳
    X.time = function () {
        return Math.round(new Date().getTime() / 1000);
    };
    //格式化，x时前，或 还有x时 等格式
    //senconds=负数，表示x时前，senconds>=0 表示还有x时
    //fmtStrConf = {d:"{1}天前",h:"{1}小时前",mm:"{1}分钟前",j:"刚刚"}
    X.moment = function(senconds,fmtStrConf){
        fmtStrConf = fmtStrConf || {};
        var t;
        if(senconds<0){
            senconds = Math.abs(senconds);
            if (senconds >= 86400){
                t = Math.floor(senconds/86400);
                if (t > 3) t = 3;
                return X.STR(fmtStrConf.d||"{1}天前",t);
            }else if(senconds >= 3600){
                t = Math.floor(senconds/3600);
                return X.STR(fmtStrConf.h||"{1}小时前",t);
            }else if (senconds >= 60){
                t = Math.floor(senconds/60);
                return X.STR(fmtStrConf.mm||"{1}分钟前",t);
            }else {
                return fmtStrConf.j||"刚刚";
            }
        }else{
            if (senconds >= 86400){
                t = Math.floor(senconds/86400);
                return X.STR(fmtStrConf.d||"还有{1}天",t);
            }else if(senconds >= 3600){
                t = Math.floor(senconds/3600);
                return X.STR(fmtStrConf.h||"还有{1}小时",t);
            }else if (senconds >= 60){
                t = Math.floor(senconds/60);
                return X.STR(fmtStrConf.mm||"还有{1}分钟",t);
            }else{
                return fmtStrConf.j||"1分以内";
            }
        }
    };

    //将一个时间戳转换为文本格式
    X.timetostr = function(time,fmtStr){
        fmtStr = fmtStr || 'y-m-d h:mm:s';
        var t = new Date(time*1000);
        var y = t.getFullYear();
        var m = t.getMonth() + 1;
        var d = t.getDate();
        var h = t.getHours();
        var mm = t.getMinutes();
        var s = t.getSeconds();
        if (mm < 10) mm = '0' + mm;
        if (s < 10) s = '0' + s;

        fmtStr = fmtStr.replace(/y/ig,y);
        fmtStr = fmtStr.replace(/mm/ig,mm);
        fmtStr = fmtStr.replace(/m/ig,m);
        fmtStr = fmtStr.replace(/d/ig,d);
        fmtStr = fmtStr.replace(/h/ig,h);
        fmtStr = fmtStr.replace(/s/ig,s);
        return fmtStr;
    };

    /*
    * node = Label控件
    * toTime = 未来时间戳
    * conf = {"timeLeftStr":"h:mm:s||mm:s","showStr":"倒计时{1}"}
    * */
    X.timeout = function(node,toTime,endcall,stepcall,conf){
        if(!cc.isNode(node))return;
        G.time = G.time || X.time();
        conf = conf || {};
        toTime+=1;

        var setText = function () {
            //cc.log('xxxx',G.time,toTime);
            var _leftSeconds = toTime-G.time;
            var _leftStr = X.timeLeft(_leftSeconds,conf.timeLeftStr);

            if(conf.showStr)_leftStr = X.STR(conf.showStr,_leftStr);
            if(node instanceof ccui.Text || node instanceof ccui.TextBMFont || node instanceof ccui.TextField || node instanceof ccui.TextAtlas
                || node instanceof cc.LabelTTF || node instanceof cc.LabelAtlas  || node instanceof cc.LabelBMFont || node instanceof cc.TextFieldTTF){
                node.setString( _leftStr );
            }

            stepcall && stepcall(_leftStr);

            if(G.time >= toTime ){
                endcall && endcall();
                return;
            }
        };
        setText();

        if(node.__timeoutTimer){
            node.clearTimeout(node.__timeoutTimer);
            delete node.__timeoutTimer;
        }

        var _diffTime = toTime-G.time;
        if(_diffTime>1){
            node.__timeoutTimer = node.setTimeout(function(){
                setText();
            },1000,_diffTime-1);
        }

        return node.__timeoutTimer;
    };

    //将一个>0的秒数转换为h:mm:s 或者 mm:s 格式
    //fmtStr = h:mm:s || mm:s
    X.timeLeft = function(senconds,fmtStr){
        fmtStr = fmtStr || "h:mm:s";
        var h=0,mm=0,s=0;
        if(senconds>0){
            if(fmtStr.indexOf('h')!=-1){
                h = Math.floor(senconds/3600);
                mm = Math.floor((senconds%3600)/60);
                s = (senconds%3600)%60;
            }else{
                mm = Math.floor(senconds/60);
                s = (senconds%60)%60;
            }
        }
        if (s < 10)s = '0' + s;
        if (mm < 10)mm = '0' + mm;
        fmtStr = fmtStr.replace(/mm/ig,mm);
        fmtStr = fmtStr.replace(/h/ig,h);
        fmtStr = fmtStr.replace(/s/ig,s);
        return fmtStr;
    };

    //对一个[{"a":1,"b":1},{"a":2,"b":2}]的数据，通过指定的key+orderBy排序
    X.sortArrayByKey = function(array,key,orderBy){
        if(orderBy==null)orderBy='asc';
        array.sort(function(a,b){
            if(orderBy=='asc'){
                return a[key] - b[key];
            }else if(orderBy=='desc'){
                return b[key] - a[key];
            }
        });
        return array;
    };

    //数组[1,2,3]或[{"a":1},{"a":2}]中最大值
    X.maxOf = function (array,key)   {
        array.sort(function (a, b) {
            if (key){
                return b[key] - a[key];
            }
            return b - a;
        });
        return array[0];
    };

    //数组中最小值
    X.minOf = function (array,key)   {
        array.sort(function (a, b) {
            if (key){
                return a[key] - b[key];
            }
            return a - b;
        });
        return array[0];
    };

    //将 2015-8-12 15:00:00 这样的字符串，转为DATA型
    X.str2Date = function(str){
        return new Date(Date.parse(str.replace(/-/g,"/")));
    };

    /*
     链式异步执行
     X.async([function(callback){
        a(1,callback)
     },function(callback){
        b(2,callback)
     },function(callback){
        c(3,callback)
     }],function(){
        alert('over');
     });
     */
    X.async = function(funArray,endCall,delay){
        ~function next(){
            if(funArray.length==0){
                endCall && endCall();
                return;
            }
            if(delay && delay>0){
                var scene = cc.director.getRunningScene();
                scene && scene.setTimeout(function(){
                    var fn = funArray.shift();
                    fn && fn(next);
                },delay)
            }else{
                var fn = funArray.shift();
                fn && fn(next);
            }
        }();
    };

    /*
     在某个节点下通过name查找节点
     ifcache查找到后是否缓存，若缓存，可以提高二次查找时的速度，默认为false
     从fromNode开始查找
     a.b.c.d 的模式，表示按节点父子关系，逐一查找
     xx 的模式，表示递归查找到第一个符合的node为止
     */
    X.findChild = function(fromNode,v,ifcache){
        var node = fromNode;

        if(ifcache){
            fromNode._findCache = fromNode._findCache || {};
            if(fromNode._findCache[v]){
                cc.log('fromCache',v);
                return fromNode._findCache[v];
            }
        }

        var res = null;
        if(v.indexOf('.')!=-1){
            var child , segments = v.split('.');
            for (var i = 0; i < segments.length; i++) {
                var item = segments[i];
                child = node.getChildByName(item);

                /*var names=[],childs=node.getChildren();
                childs.forEach(function(_c){
                    names.push( _c.getName() );
                });
                cc.log('finds',item,node,child,names.join(','));*/

                if (child) {
                    node = child
                } else {
                    node = null;
                    break;
                }
            }
            res = node;
        }else{
            res = cc.seekWidgetByName(node,v);
        }

        if(ifcache){
            fromNode._findCache[v] = res;
        }

        return res;
    };

    /*
     使用举例：
     //MyName     : 递归访问fromNode的所有子节点。查找匹配name为 "MyName" 的子节点
     [STR] : 匹配[a-zA-z0-9]中的任意字符串
     [NUM] : 匹配任意数字
     Abby/Normal  在fromNode的孙子节点中查找 节点为"Normal"，且父节点为"Abby"的节点
     //Abby/Normal  递归访问fromNode的所有子节点，查找 节点为"Normal"，且父节点为"Abby"的节点

     对找到的节点，逐一执行callback，如果callback返回true，则会终止迭代
    */
    X.eachChild = function(fromNode,v,callback){
        if(v==null || v=="" || !callback || !cc.isNode(fromNode)){
            return;
        }
        if(!cc.sys.isNative){
            v = v.replace(/\[STR\]/g,'[a-zA-Z0-9]+');
            v = v.replace(/\[NUM\]/g,'[0-9]+');
        }else{
            v = v.replace(/\[STR\]/g,'[[:alnum:]]+');
            v = v.replace(/\[NUM\]/g,'[[:digit:]]+');
        }
        fromNode.enumerateChildren(v,function(child){
            return callback(child);
        });
    };

    //将一组btn设置为单选
    // X.radio = function(btns,onFocus,conf){
    //     var colorFocus,colorBlur;
    //     var outlineColor = null;
    //     conf = conf || {};

    //     if (conf.color) {
    //         colorFocus = conf.color[0];
    //         colorBlur = conf.color[1];
    //         if(typeof(colorFocus)=='string')colorFocus = cc.color(colorFocus);
    //         if(typeof(colorBlur)=='string')colorBlur = cc.color(colorBlur);
    //     }else{
    //         colorFocus = cc.color('#ffba35');
    //         colorBlur = cc.color('#b1b1b1');
    //     }

    //     if (conf.outline instanceof cc.color ) {
    //         outlineColor = conf.outline;
    //     }else if(conf.outline){
    //         outlineColor = cc.color('#553e1e');
    //     }

    //     for(var i=0;i<btns.length;i++){
    //         btns[i].touch(function(sender,type,fromwhere){
    //             if(type==ccui.Widget.TOUCH_ENDED){
    //                 if (fromwhere!='fromcode' && !sender.isBright()){
    //                     return;
    //                 }
    //                 for(var j = 0;j<btns.length;j++){
    //                     if(sender==btns[j]){
    //                         if (!sender.disable) {
    //                             sender.setBright(false);
    //                             sender.setTitleColor && sender.setTitleColor(colorFocus);
    //                             /*if (outlineColor != null && cc.isNode(btns[j].finds('wz'))) {
    //                              X.enableOutline(btns[j].finds('wz'),outlineColor);
    //                              }*/
    //                         }
    //                         sender.setTimeout(function(){
    //                             onFocus && onFocus(sender);
    //                             sender.onFocus && sender.onFocus();
    //                         },1);
    //                     }else{
    //                         if (!sender.disable) {
    //                             btns[j].setTitleColor && btns[j].setTitleColor(colorBlur);
    //                             btns[j].setBright(true);
    //                             sender.onBlur && sender.onBlur();

    //                             /*if (outlineColor != null && cc.isNode(btns[j].finds('wz'))) {
    //                              X.disableOutline(btns[j].finds('wz'));
    //                              }*/
    //                         }
    //                     }
    //                 }
    //             }
    //         });
    //     }
    // };

    var _radioData = {},
        _radioIndex = 0;
    X.radio = function(btns,onChange,obj,onTouch){
        var color1,color2;
        _radioIndex++;

        obj = obj || {};
        var color = obj.color;
        var cb1 = obj.callback1;
        var cb2 = obj.callback2;
        var onTxtColor = obj.noTextColor;

        if (color) {
            color1 = color[0];
            color2 = color[1];
        } else {
            color1 = '#e8fdff';
            color2 = '#9d8d8a';
        }
        for(var i=0;i<btns.length;i++){
            btns[i]._radioIndex = _radioIndex;

            if (btns[i].disableTouch){
                continue;
            }

            btns[i].touch(function(sender,type,fromwhere){
                if (type == ccui.Widget.TOUCH_BEGAN){
                      var txt = getText(sender);
                    !onTxtColor && txt && txt.setTextColor && txt.setTextColor(C.color(color1));
                    onTouch && onTouch(sender);
                }

                if ((type == ccui.Widget.TOUCH_CANCELED || type == ccui.Widget.TOUCH_MOVED) && sender.isBright()){
                    var txt = getText(sender);
                    !onTxtColor && txt && txt.setTextColor && txt.setTextColor(C.color(color2));
                    sender.setCurrent && sender.setCurrent(false);
                }
                if(type==ccui.Widget.TOUCH_ENDED){

                    if (fromwhere!='fromcode' && !sender.isBright()){
                        return;
                    }
                    if(obj && obj.cd!=null && obj.cd>0 && sender._radioIndex && fromwhere!='fromcode'){
                        var _myRadioIndex = sender._radioIndex;
                        var _lastTouchEnd = _radioData['r'+_myRadioIndex];
                        if(!_lastTouchEnd)_lastTouchEnd=0;

                        _radioData['r'+_myRadioIndex] = new Date().getTime();
                        if(new Date().getTime() - _lastTouchEnd < obj.cd){
                            cc.log('click fast...');
                            return;
                        }
                    }

                    if(sender.checkLv) {
                        G.tip_NB.show(sender.show);
                        return;
                    }

                    for(var j = 0;j<btns.length;j++){

                        var txt = getText(btns[j]);
                        if (!onTxtColor && txt) {
                            X.enableShadow(txt,cc.color('#34221d'));
                        }

                        if(sender == btns[j]){
                            if(!onTxtColor && txt && !obj.no_enableOutline){
                                X.enableOutline(txt,cc.color('#0A1021'),2);
                            }
                            if (!sender.disable) {
                                sender.setBright && sender.setBright(false);
                                sender.setTitleColor && sender.setTitleColor(C.color(color1));
                            }

                            if (!onTxtColor && txt) {
                                // txt.setColor && txt.setColor(C.color(color1));
                                txt.setTextColor && txt.setTextColor(C.color(color1));
                            }
                            sender.setCurrent && sender.setCurrent(true);
                            //sender.setTimeout(function(){
                                onChange && onChange(sender);
                            //},1);

                            cb1 && cb1(btns[j]);
                        }else{
                            if(!onTxtColor && txt && !obj.no_enableOutline){
                                X.enableOutline(txt,cc.color('#44281d'),2);
                            }
                            if (!btns[j].disable) {
                                btns[j].setTitleColor && btns[j].setTitleColor(C.color(color2));
                                btns[j].setBright && btns[j].setBright(true);
                            }

                            if (!onTxtColor && txt) {
                                // txt.setColor && txt.setColor(C.color(color2));
                                txt.setTextColor && txt.setTextColor(C.color(color2));
                            }
                            btns[j].setCurrent && btns[j].setCurrent(false);

                            cb2 && cb2(btns[j]);
                        }
                    }
                }
            });

            function getText(btn) {
                var children = btn.getChildren();
                var txt = null;
                for (var j = 0; j < children.length; j++) {
                    var child = children[j];
                    if (child instanceof ccui.Text) {
                        txt = child;
                        break;
                    }
                }
                return txt;
            }
        }
    };

    X.dumpUI = function (root, db, dumpIndex,ifRoot) {

        dumpIndex = dumpIndex || 1;
        db = db || {};
        ifRoot = ifRoot==null?true:false;

        if(!cc.isNode(root)){
            cc.log('X.dumpUI error,root is null');
            return;
        }
        var children = root.getChildren(),
            length = children.length;
        for (var i = 0; i < length; i++) {
            var child = children[i];

            var _key,
                _name = (child.getName ? child.getName() : null),
                _tag = (child.getTag ? child.getTag() : null),
                _index = dumpIndex;

            dumpIndex++;

            if (_name) {
                _key = '#idx# [' + _name + '] #widgetName#@@@' + _index;
            } else if (_tag) {
                _key = '#idx# [' + _tag + '] #widgetName#@@@' + _index;
            } else {
                _key = '#idx# [unkonw' + _index + '] #widgetName#@@@' + _index;
            }

            var _widgetName = "";
            for (var _n in ccui) {
                if (typeof(ccui[_n]) != 'function')continue;
                if (child instanceof ccui[_n]) {
                    _widgetName = _n;
                }
            }
            _key = _key.replace('#widgetName#', _widgetName);

            db[_key] = {};
            if (child.getChildrenCount() > 0) {
                X.dumpUI(child, db[_key],null,false);
            }
        }

        if (ifRoot) {
            function dump(arr, level) {
                var dumped_text = "";
                if (!level) level = 0;
                var level_padding = "";
                for (var j = 0; j < level + 1; j++) level_padding += "|   ";

                if (typeof(arr) == 'object') {
                    for (var item in arr) {
                        var value = arr[item];

                        var showItem = item.split('@@@')[0];
                        showItem = showItem.replace('#idx#', level);
                        if (typeof(value) == 'object') {
                            dumped_text += level_padding + showItem + "\n";
                            dumped_text += dump(value, level + 1);
                        }
                    }
                }
                return dumped_text;
            }

            console . log(dump(db));
            delete db;
            delete dumpIndex;
        }
    };
    //遍历所有节点
    X.forEachChild = function(root,callback){
        var children = root.getChildren();
        var len = children.length;
        for (var i=0;i<len;i++){
            callback && callback( children[i] );
        }
        for (var i=0;i<len;i++){
            X.forEachChild( children[i] , callback );
        }
    };

    //UI设计时，所有以 $ 结尾的控件，会自动以name为key，映射到view层的 saveTo 字典中，方便代码中直接绑定代码逻辑
    X.autoInitUI  = function(root,saveTo){
        if(!cc.isNode(root)){
            cc.log('root is null when X.autoInitUI');
            return;
        }
        if(saveTo==null)saveTo='nodes';
        root[saveTo] = {};

        X.forEachChild(root,function(node){
            if(node.name && (node.name.toString()).substr(-1)=='$') {
                var _key = node.name.substr(0, node.name.length-1);
                // if(root[saveTo][_key])cc.log("警告：view中出现同名的动态控件", _key);
                root[saveTo][ _key ] = node;
            }
        });
    };

    //将data数据，渲染到nodes集合中
    X.render = function(data,nodes){
        for(var name in data){
            var _node = nodes[name],
                _val = data[name];

            if(!cc.isNode(_node) ){
                cc.log('node is null when render','【===' + name + '===】',this._json||"");
                continue;
            }
            if(_val==null){
                cc.log('val is null when render',name,this._json||"");
                continue;
            }

            if (typeof(_val) == 'object' && !Array.isArray(_val)) {
                _node.attr( _val );
                continue;
            }

            //传入的是方法时
            if (typeof _val == 'function') {
                _val && _val(_node);
                continue;
            }

            if(_node instanceof ccui.Text || _node instanceof ccui.TextBMFont || _node instanceof ccui.TextField || _node instanceof ccui.TextAtlas
                || _node instanceof cc.LabelTTF || _node instanceof cc.LabelAtlas  || _node instanceof cc.LabelBMFont || _node instanceof cc.TextFieldTTF
            ){
                //文本
                _node.setString( _val + '');
            }else if(_node instanceof ccui.Slider || _node instanceof ccui.LoadingBar){
                //进度条
                _node.setPercent( _val );
            }else if(_node instanceof ccui.ImageView){
                //图片
                if( _val.substr(0,1) == '#' ){
                    _node.loadTexture(_val.substr(1,_val.length) , ccui.Widget.PLIST_TEXTURE);
                }else{
                    _node.loadTexture(_val , ccui.Widget.LOCAL_TEXTURE);
                }
            }else if(_node instanceof cc.Sprite){
                //精灵
                _node.setSpriteFrame( _val );
            }else if(_node instanceof ccui.Layout && (typeof(_val)=='string' || Array.isArray(_val))){
                //如果节点是layout且值是文本，则当做富文本处理，默认定位于node左上角
                var _richTextConf = cc.mixin(X.defaultRichTextConf,{
                    "maxWidth":_node.width
                }, true);

                //将颜色方法替换成键值对
                _richTextConf.color = _richTextConf.colorFunc();

                var rt = new X.bRichText(_richTextConf);
                rt.text.apply(rt, [].concat(_val));
                rt.setAnchorPoint(0, 1);
                rt.setPosition(cc.p(0,_node.height));
                _node.removeAllChildren();
                _node.addChild(rt);
            }else{
                cc.log('unkonwn node type when render',name,this._json||"");
            }
        }
    };


    X.releaseRes = function(res){
        //手动释放资源
        cc.each(res,function(v){
            var extName = cc.path.extname(v);
            if(extName=='.png'){
                cc.textureCache.removeTextureForKey(v);
            }else if(extName=='.plist'){
                cc.spriteFrameCache.removeSpriteFramesFromFile(v);
            }
        });
        cc.sys.isNative && cc.sys.os== cc.sys.OS_WINDOWS && cc.textureCache.getCachedTextureInfo && console . log(cc.textureCache.getCachedTextureInfo());
    },

    X.toFixed = function (v,n) {
        if ((v + '').indexOf('.') > 0)
            return X.removeInvalidZeroFromNum(v.toFixed(n));
        else
            return X.removeInvalidZeroFromNum(v);
    };

    X.clipString = function (str, len) {
        if (str.length > len){
            var s = str.substr(0,len) + '...';
            return s;
        }else{
            return str;
        }
    };

    X.keysOfObject = function(object){
        if(Object.keys){
            return object==null?[]:Object.keys(object);
        }else{
            var keys = [];
            if (object){
                for(var key in object){
                    keys.push(key);
                }
            }
            return keys;
        }
    };
})();

;;(function(){
    jsbHelper = {
        event : cc.EventEmitter.create()
    };
    jsbHelper.event.setMaxListeners(200);

    jsbHelper.callNative  = X.callNative = function(className,functionName,parms){
        //调用原生方法
        var v = parms;
        if(typeof(parms)!="string")v = JSON.stringify(parms);
        cc.log('callNative='+v);
        if(cc.sys.os == cc.sys.OS_IOS ){
            var ret = jsb.reflection.callStaticMethod(
                className||"RootViewController",
                functionName || "jsbHelper:",
                v
            );
            return ret;
        }else if( cc.sys.os == cc.sys.OS_ANDROID ){
            var _class = className;
            _class = _class||"AppActivity";

            if(_class.indexOf('/')==-1){
                _class = 'org/cocos2dx/javascript/'+_class;
            }

            var ret = jsb.reflection.callStaticMethod(
                _class,
                functionName || "jsbHelper",
                "(Ljava/lang/String;)Ljava/lang/String;",
                v
            );
            return ret;
        }
    };

})();

;;C.DEBUG = cc.DEBUG = true;
C.USECSB = true;
cc.loader.resPath = "res";

//游戏全局命名
var G = {
    DATA:{},
    win : {},
    frame : {},
    view:{},
    DAO: {}, //(Data Access Object) 数据访问对象
    hotUpdateUrl : "http://v3.legu.cc/hommupdate/?app=hotupdate",
    serverListUrl : "http://v3.legu.cc/hommdata/?app=serverlist",
    gonggaoUrl:'http://gamemana.legu.cc/index.php?g=admin&m=data&a=out_notice&game=zhengba',
    // gonggaoUrl:'http://10.0.0.20/gm/index.php?g=admin&m=data&a=out_notice&game=heros&owner=cz',
    //VERSION : "0.0.1",
    //吴雨寒
    //_API:"http://10.0.0.69:6288/",
    //_SOCKET:"10.0.0.69:6287",
    //唐凯
    //_API:"http://10.0.0.36:7288",
    //_SOCKET:"10.0.0.36:7287",
    //外网
    //_API:"http://v3.legu.cc:11111",
    //_SOCKET:"v3.legu.cc:11110",
    //
    //_API:"http://10.0.0.34:6288",
    //_SOCKET:"10.0.0.34:6287",
    // check_card_url: 'http://legugm.legu.cc/?app=api.chkcard&gameid=heros&uid={1}&uname={2}&cnum={3}',
    check_card_url: 'http://gamemana.legu.cc/index.php?g=admin&m=data&a=card_active&game=36xN78ZyxspPdYR&uid={1}&uname={2}&cnum={3}&owner={4}',
    event : cc.EventEmitter.create(),
    guidevent : cc.EventEmitter.create(),
    defaultFNT:'img/fnt/fzcyj.ttf'
};
G.class={};
G.event.setMaxListeners(50000);
G.guidevent.setMaxListeners(5000);
;;/**
 * Created by wfq on 2015/7/21...
 */
var LNG = {
    UI_TITLE_YXXX: '英雄信息',
    UI_TITLE_DENGLU:'登  录',
    UI_TITLE_XUANZE: '请选择材料英雄',
    UI_TITLE_JINJIE: '进阶',
    UI_TITLE_YINGXIONG: '英雄',
    UI_TITLE_ZBXZ:'选择装备',
    UI_TITLE_DWXZ: "雕文选择",
    UI_TITLE_HDWP:'获得物品',
    UI_TITLE_SDJL: "扫荡奖励",
    UI_TITLE_ZBSJ:'升级',
    UI_TITLE_ZBTS:'请放入想要被吞噬的饰品',
    UI_TITLE_BEIBAO:'背包',
    UI_TITLE_TJP:'铁匠铺',
    UI_TITLE_XSRW:'悬赏任务',
    UI_TITLE_ZBQZ:'争霸强者',
    UI_TITLE_XZSP:'选择饰品',
    UI_TITLE_WYBQ: "成长指引",
    UI_TITLE_shipin_shengji:'请放入材料饰品',
    UI_TITLE_tanxian_kstx:'快速探险',
    UI_TITLE_tanxian_gjprize:'探险奖励',
    UI_TITLE_yingxiong_fenjie:'英雄分解',
    UI_TITLE_yingxiong_fight:'英雄出战',
    UI_TITLE_jingjichang_gjfight:'英雄出战',
    UI_TITLE_jingjichang_gjfight_defend:'防守阵容',
    UI_TITLE_jingjichang_fightreport:'战斗记录',
    UI_TITLE_jingjichang_gj_fightreport:'战斗记录',
    BTN_NAME_jingjichang_guanjunshilian:'冠军试炼',
    championtrial_defend_erro:'每支队伍需至少上阵一名英雄',
    UI_TITLE_damijing_setDef: "英雄备战",
    FIGHT:'开战',
    KLQ: "可领取",
    QUEDIN:'确定',
    TIAOZHAN:'挑战',
    TIRED: '您已累计在线2小时，请合理安排游戏时间。',
    XILA_SHUZI: ['', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X'],
    QSRDHM: "请输入礼品码",
    GZXJC: "(贵族{1}加成)",

    ERROR_VERSION: '当前的客户端不是最新版本\n即将开始更新版本...',
    ajaxMaxError: '糟糕！您的网络状况似乎不是很好，请检查一下吧 ( >﹏<。)～<br><br>点击确定后将退出游戏重新登录',
    nexp: '经验',
    'NEXP': '经验',
    paynexp: '贵族经验',
    lv: '等级',
    'ji': '级',
    "WHGG_NAME": "维护公告",
    "WHGG": "亲爱的勇者大大们,当前服务器正在维护更新中,请稍作等待。",
    "JRQQ": "<br>详情请加入玩家群:<font color=#2bdf02>{1}</font>",
    'NOTRUNNING': '{1}正在维护中',
    "HDNEEDVIP": "贵族{1}及以上才可购买",
    "GETPRIZE": "领奖",
    QITA: '其他',
    BINGQIE:'并且',
    AND: '及',
    OR: '或',
    w:'万',
    zhongzu_1:'亡灵',
    zhongzu_2:'奥术',
    zhongzu_3:'邪能',
    zhongzu_4:'自然',
    zhongzu_5:'黑暗',
    zhongzu_6:'神圣',
    zhiye_1:'战士',
    zhiye_2:'法师',
    zhiye_3:'辅助',
    zhiye_4:'刺客',
    zhiye_5:'游侠',
    GHZX: "更换阵型",

    ZHONGZU_NEED:'属性激活限定：{1}',

    // 未开启相关
    OPEN_cclv : '需指挥中心达到{1}级',
    OPEN_lv : '{1}级开启当前功能',
    OPEN_vip:'需提升贵族到{1}级',
    'JZ_OPENLV': '玩家{1}级开放',
    'GN_OPENLV': '玩家{1}级开放{2}',
    WKQ_ZHUZHAN: '{1}级开启助战功能',
    WKQ_JIESUO: '<br><font color=#c80000>{1}阶解锁</font>',
    'reseted':'本轮活动已重置',
    network_api:'接口信息',
    network_noapi:'接口不能为空！',
    api:'接口',
    ERROR:'报错',
    args:'参数',
    ZHIHUAN:'置换',
    YGM: "已购买",
    YGMXJ: "已购买{1}件",
    SJ: "售价：<font node=1></font><font color=#30ff01>{1}</font>",
    JRKGMXC: "今日可购买<font color=#30ff01>{1}</font>次",
    YUAN: "元",
    DJDDXJ: "等级达到{1}级",
    LQ: "领取",
    YLQ: "已领取",
    YTH: "已弹劾",
    CYTH: "参与弹劾",
    DK: "打开",
    CKLQXQ: "查看领取详情",
    QXGMJJLB: "请先购买基金礼包",
    DJWDDYQ: "等级未达到要求",
    WDDLQTJ: "未达到领取条件",
    XGX: "剩余: {1}",
    YJ: "永久",
    HCZ: "后结束",
    LEIJI: "累积: {1}/{2}天",
    DQCZ: "当前充值{1}/{2}",
    LJCZ: "任意累计充值达到<font color=#ffb47d>{1}元</font>即可激活",
    XYKSY: "超值月卡剩余：<font color=#ffb47d>{1}天</font>",
    DYKSY: "至尊月卡剩余：<font color=#ffb47d>{1}天</font>",
    XYKSSY: "超值月卡剩余：",
    DYKSSY: "至尊月卡剩余：",
    CHOU: "抽",
    GXNSDXJ: "恭喜您升到<font color=#ff903f> {1} </font>级",
    SFGM: "确定购买当前商品?",
    QDGM: "确定购买？",
    SELLOVER: "商品已售空",
    HQYX: "获取英雄",
    HCCLBZ: "合成材料不足",
    DLJL: "{1}星英雄(整卡掉率{2}%，碎片掉率{3}%)",
    TXNDBG:"通关上一难度所有区域后解锁",
    DQSPYGM: "当前商品已购买",
    JHLB: "恭喜你激活了{1}星英雄养成礼包，是否前往购买？",
    xysd: "转盘商店",
    yxsd: "英雄商店",
    ghsd: "公会商店",
    yzsd: "远征商店",
    jjsd: "竞技商店",
    ywsd: "外域商店",
    sjssd: "召唤商店",
    ZH: "召唤",
    ZCTZ: "再次挑战",
    XZXTWXYX: "请选择相同的5星英雄",

    zonghe: '综合',
    xitong: '系统',
    'win': '胜利',
    'lose': '失败',
    siliao: '私聊',
    guoqi: '过期',
    NULL: '无',
    tian: '天',
    buzu: '不足',
    leijidenglu: '累计登录',
    mianfeilq: '免费领取',
    yuekalq: '特权领取',
    tq:'特权',
    jingri: '今日',
    mingri: '明日',
    shi: '时',
    'ci':'次',
    'pleasewait':'领主请{1}秒后再操作...',

    'loadingSvrlist': '正在读取区服列表 请稍候...',
    'choosesvrfirst': '请先选择服务器',
    'serverState1': '新服',
    'serverState2': '爆满',
    'serverState3': '维护',

    'COMING_SOON': '即将开放，敬请期待',
    'EXITGAME': '点击确定后将退出游戏进入挂机状态<br><br>小提示：挂机状态不耗流量不耗电',
    'RECONNSVR': '正在重新连接服务器...',

    1: '一',
    2: '二',
    3: '三',
    4: '四',
    5: '五',
    6: '六',
    7: '七',
    8: '八',
    9: '九',
    10: '十',
    'ri': '日',
    RANK: '第{1}名',
    a: '甲',
    b: '乙',
    c: '丙',
    d: '丁',
    zhu: '组',
    D_X_PAGE:'第{1}章',
    D_X_YE:'第{1}页',
    GONGHUI_NAME:'公会名称',
    RENSHU:'人数',
    'BTN_OK': '确  定',
    'BTN_CANCEL': '取 消',
    'BTN_SY': '使 用',
    'BTN_HQ': '获 取',
    BTN_GM: '购 买',
    BTN_YGM: '已购买',
    BTN_LQ: '领 取',
    BTN_BKLQ: '不可领取',
    BTN_KLQ: '可领取',
    BTN_LQJL: '领取奖励',
    BTN_LQFJ: '领取附件',
    BTN_YLQ: '已领取',
    BTN_WTG: '未通关',
    BTN_CZ: '充 值',
    BTN_TZ:'挑  战',
    BTN_HF:'回  放',
    BTN_QW:'前  往',
    BTN_YSQ:'已售罄',
    WSB: "未上榜",
    ZWSP:'暂无商品',
    LIUCHANG:"流畅",
    TUIJIAN:"推荐",
    TISHI: '提示',
    QSRYXYHM: '请输入有效的用户名',
    NEED: '消耗{1}：',
    'XIAOHAO': '消耗',
    'GONGNENG': '功能',
    SDCG0: '解除锁定保护',
    SDCG1: '锁定保护成功',
    LQCG : '领取成功',
    'JIANGLI':'奖励',
    YULAN:'预览',
    TZCSBZ: "挑战次数不足",
    YDSZSL: "已达最大上阵数量",
    XYBBZ: "转盘币不足",
    GJXYBBZ: "超级转盘币不足",
    GMCG: "购买成功",
    RWZYZ: "存在未接取的紫色以上悬赏任务,确定刷新?",
    TSJSGH:'是否解散公会？',
    QBLQ: '全部领取',
    XYJ: '写邮件',
    SRSJRMC: '请输入收件人名称',
    SRYJNR: '请输入邮件内容',
    SRLTNR: '请输入聊天内容',
    SRFRIEND:'请输入玩家ID',
    SRSLWJM: '未选择私聊对象，无法发送',
    YJNRGC: '邮件内容过长',
    FSCG: '发送成功',
    fasong: '发送',
    QRSCHY: '确认删除好友吗?',
    NOHY: '对方并非你的好友,无法删除',
    FACE_ALERT: '最多只能输入20个表情',
    TEXT_ALERT: '最多只能输入40个字符',
    'YSZ': '已上阵',
    'SZ': '上阵',
    'CD': '穿戴',
    PVPING: '玩家对战中',
    ZW:'暂无',
    HY: "好友",
    KQXYC: "高级转盘需要45级或贵族等级3开启",
    Ci: "次",
    YYC: "(挑战{1}次)",
    WCJRRW: "完成今日日常任务后领取",
    RCRW: "日常任务",
    CJRW: "成就任务",
    GHJX: "公会捐献",
    GHFB: "公会副本",
    GHKJ: "公会技能",
    GHDT: "公会大厅",
    TGJL: "通关奖励",
    SCJL: "胜场奖励",
    YOUJIAN: "邮件",
    SXDBS: "搜寻到一个企图入侵公会的BOSS",



    'load': '初始化中',
    'loadingbase': '基础资源{1}%',
    'loadConfig': '，此过程不消耗流量',
    'loadBeiBao': '，此过程不消耗流量',
    'loadBaowu': '，此过程不消耗流量',
    'loadZhuangBei': '，此过程不消耗流量',
    'loadShipin':'，此过程不消耗流量',
    'loadGlyph': "此过程不消耗流量",
    'loadBuiDui': '，此过程不消耗流量',
    'loadXiaobing': '，此过程不消耗流量',
    'loadQiji': '，此过程不消耗流量',
    'loadModule': '，此过程不消耗流量',
    'loadingRes': '，请稍后',
    'loadArmyList':'，此过程不消耗流量',

    'loadYingXiong': '，此过程不消耗流量',

    'loading': '等待',
    'liaotian': '聊天',
    'youjian': '邮件',
    "chakan": "查看",
    // 'zhuangbei':'军备',
    // 'shichang':'交易行',
    'jingjichang':'竞技场',
    // 'beibao':'背包',
    // 'huishou':'回收',
    // 'meiriqiandao':'每日签到',
    "showPrizeTxt": "查看奖励",

    'TS': '提示',
    'SY': '使 用',
    'FJ': '分解',
    '1C': '1次',
    '10C': '10次',
    '5C': '5次',
    'HC': '合成',
    'HS': '回收',
    'QB': '全部',
    'CS': '出售',
    'JD': '鉴定',
    'CKCC': '查看产出',
    'BAI': '百',
    'WAN': '万',
    'YI': '亿',
    'ZUIER': '罪恶',
    'ZUAN': '黄金',
    BTN_CHUSHOU:'出 售',
    BTN_SHIYONG:'使 用',
    BTN_HECHENG:'合 成',
    BTN_XIANGQING:'详 情',
    SHIYONG:'使用',
    CHUSHOU:'出售',
    HSXC: "还剩{1}次",
    GHTB: "公会探宝",

    'JINBI': '金币',
    'jinbi': '金币',
    // 'ZUANSHI': '黄金',
    // 'zuanshi': '黄金',
    'RMBMONEY': '黄金',
    'rmbmoney': '黄金',
    'SHUIJING': '水晶',
    'shuijing': '水晶',
    'DIANNENG': '电能',
    'dianneng': '电能',
    'GANGTIE': '钢铁',
    'gangtie': '钢铁',
    'SHIYOU': '石油',
    'shiyou': '石油',

    'GONGXIAN': '贡献',
    'JINGLIAN':'配饰精华',
    SHUAXIN:'刷新',

    'XUEXI': '学习',
    'SHENGJI': '强 化',
    'PEIYANG': '培养',
    Max: '最高',
    'JIARU': '加入',
    'SUCCESS': '成功',
    SHEZHI:'设置',
    DELETE: '删除',
    ZSBZQWCZ: "您的钻石不足，是否前往充值",
    'DIUQI': '丢弃',
    'NAME_TIP': '请取一个霸气的名字吧',
    'WANJIA_NAME': '玩家名字:{1}',
    'NAME_MAX': '名字超出最大长度（最大{1}个字），请重新输入',
    'NAME_REG': '该角色名非法',
    'ZHANLI': '战力',
    'XXXX': '详细信息',
    'TOMAXLV': '已达到最高等级',
    'HUODE': '获得',
    'NUM': '数量',
    'UPDATE_ERROR': '更新失败',
    'JIHUO': '激活',
    'KAIQI':'开启',
    "DQYX": "当前英雄",
    DI_X_PAGE:'第{1}/{2}页',
    HECHENG:'合成',
    WUFAHECHENG:'无法合成',
    YXLBYM: "英雄列表已满，可通过提升贵族等级或购买增加英雄携带数量，是否前往购买？",
    'CURDJ': '当前等级：{1}',
    'NEXTDJ': '下一等级：{1}',
    'GONGHUI_NUM_RENSHU':'军团人数上限：{1}',
    'GONGHUI_NUM_ZJ':'专精上限：{1}',
    'XUNZHAO': '寻找',
    'LUEDUO': '争夺',
    'MUCHANG': '木场',
    'JINKUANG': '金矿',
    'SHIKUANG': '石矿',
    'SHOUHUO': '收获',
    'SHURU':'输入',
    'BOSSSW':'BOSS已被击杀',
    'GH_KQTJ' : '击败前一个BOSS后开启',
    SWSZZR: "尚未设置竞技场防守阵容无法参战，是否前往设置？",

    "BUYBOSSNUM_2":"购买一次挑战次数消耗：<font node=1></font>{1}<br><br>当前为：贵族{2}<br>剩余购买挑战次数：{3}次<br><br><font size=19>*提高贵族等级可获得更多购买次数</font>",
    ZWJL:'暂无奖励',
    'YWZB_PK_ME':'不能挑战自己哦！',
    JLSDLQBX: "巨龙神殿第{1}领取宝箱",
    BXJL: "宝箱奖励",

    'YWZB_TALK1':[
        '我比你厉害1',
        '我比你厉害2',
        '我比你厉害3',
        '我比你厉害4',
        '我比你厉害5'
    ],

    'YWZB_TALK2':[
        '你比我厉害1',
        '你比我厉害2',
        '你比我厉害3',
        '你比我厉害4',
        '你比我厉害5'
    ],

    'YWZB_TALK_WIN':[
        '你真菜1',
        '你真菜2',
        '你真菜3',
        '你真菜4',
        '你真菜5'
    ],

    'YWZB_TALK_LOST':[
        '你厉害1',
        '你厉害2',
        '你厉害3',
        '你厉害4',
        '你厉害5'
    ],


    'ITEM_ATTR_hp': '生命',
    'ITEM_ATTR_atk': '攻击',
    'ITEM_ATTR_def': '防御',
    'ITEM_ATTR_jingzhunpro': '命中率',
    'ITEM_ATTR_gedangpro': '格挡率',
    'ITEM_ATTR_speed': '速度',
    'ITEM_ATTR_undpspro': '伤害减免',
    'ITEM_ATTR_dpspro': '伤害加成',
    'ITEM_ATTR_skilldpspro': '技能伤害增加',
    'ITEM_ATTR_baojipro': '暴击率',
    'ITEM_ATTR_baoshangpro': '暴击伤害增加',
    'ITEM_ATTR_miankongpro': '免控率',
    'ITEM_ATTR_pojiapro': '破防率',
    'ITEM_ATTR_pvpdpspro': "pvp伤害增加",
    'ITEM_ATTR_pvpundpspro': "pvp伤害减免",


    'ITEM_ATTR_1_dpspro': '伤害',
    'ITEM_ATTR_1_dpsdrop': '减伤',
    'ITEM_ATTR_mhppro': '生命加成',
    'ITEM_ATTR_atkpro': '攻击加成',
    'ITEM_ATTR_defpro': '防御加成',
    'ITEM_ATTR_speedpro': '速度加成',
    'ITEM_ATTR_speeddrop': '降低速度',
    'ITEM_ATTR_baoshang': '暴伤',
    'ITEM_ATTR_baoshangdrop': '降低暴伤',
    'ITEM_ATTR_dpsdrop': '伤害减免',
    'ITEM_ATTR_backhp': '生命恢复',

    'ITEM_ATTR_atkdrop': '降低攻击',
    'ITEM_ATTR_dps': '伤害',
    // 'ITEM_ATTR_mhp': '生命',
    'ITEM_ATTR_mhpdrop': '降低生命',
    'ITEM_ATTR_mindps': '最小伤害',
    'ITEM_ATTR_maxdps': '最大伤害',
    'ITEM_ATTR_miss': '闪避',
    'ITEM_ATTR_misspro': '闪避率',
    'ITEM_ATTR_missdrop': '降低闪避',
    'ITEM_ATTR_mingzhong': '命中',
    'ITEM_ATTR_mingzhongpro': '命中率',
    'ITEM_ATTR_mingzhongdrop': '降低命中',
    'ITEM_ATTR_xixue': '窃取生命',
    'ITEM_ATTR_xixuedrop': '降低吸血',
    'ITEM_ATTR_backdps': '反伤',
    'ITEM_ATTR_defdrop': '降低防御',
    'ITEM_ATTR_power': '力量',
    'ITEM_ATTR_knowledge': '知识',
    'ITEM_ATTR_maxmp': '魔法值',
    'ITEM_ATTR_lucky': '暴击',
    'ITEM_ATTR_luckypro': '暴击加成',
    'ITEM_ATTR_luckydrop': '降低暴击',
    'ITEM_ATTR_mor': '追击',
    "ITEM_ATTR_backmp": "每回合回复魔法",
    'ITEM_ATTR_longdpspro': '麾下士兵远程伤害提升',
    'ITEM_ATTR_neardpspro': '麾下士兵近战伤害提升',
    'ITEM_ATTR_phydpspro': '麾下士兵物理伤害提升',
    'ITEM_ATTR_magdpspro': '麾下士兵魔法伤害提升',
    'ITEM_ATTR_earthdpspro': '英雄地系魔法攻击伤害提升',
    'ITEM_ATTR_firedpspro': '英雄火系魔法攻击伤害提升',
    'ITEM_ATTR_waterdpspro': '英雄水系魔法攻击伤害提升',
    'ITEM_ATTR_winddpspro': '英雄风系魔法攻击伤害提升',
    'ITEM_ATTR_jinbipro': '现金产量提升',
    'ITEM_ATTR_mucaipro': '电能产量提升',
    'ITEM_ATTR_kuangshipro': '钢铁产量提升',
    'ITEM_ATTR_exppro': '经验获得提升',
    'ITEM_ATTR_tips_atk': '[敌人0防御时，提升所有兵种{1}%的伤害]',
    'ITEM_ATTR_tips_def': '[受到{1}级敌人攻击时，所有兵种伤害降低{2}%]',
    'ITEM_ATTR_tips_power': '[敌人0知识时，提升英雄魔法{1}%的伤害]',
    'ITEM_ATTR_tips_knowledge': '[知识越高，兵种被英雄攻击时受到的伤害越低]',
    'ITEM_ATTR_tips_lucky': '[兵种幸运值越高，兵种幸运伤害触发几率越大]',
    'ITEM_ATTR_tips_mor': '[兵种士气值越高，多次行动几率越高]',

    'ITEM_ATTR_MHP': '生命加成',

    'ITEM_ATTR_firedpsdrop': 0,
    'ITEM_ATTR_neardpsdrop': 0,
    'ITEM_ATTR_winddpsdrop': 0,
    'ITEM_ATTR_waterdpsdrop': 0,
    'ITEM_ATTR_magdpsdrop': 0,
    'ITEM_ATTR_earthdpsdrop': 0,
    'ITEM_ATTR_longdpsdrop': 0,
    'ITEM_ATTR_gedang': 0,
    'ITEM_ATTR_ducontrol': 0,
    'ITEM_ATTR_phydpsdrop': 0,
    'ITEM_ATTR_dikangli': 0,

    HCCG: '合成成功',
    QHCG: '强化成功',
    SJCG: '升级成功',
    QHDJ: '强化等级',
    JJCG: '进阶成功',
    SXCG: '升星成功',
    XLCG: "洗练成功",
    CZCG: "重铸成功",
    TSCG: "吞噬成功",
    CZHSPZ: "当前精炼雕文存在红色品质雕文，确定精炼？",

    GHCG: '更换成功',
    JIE: "赛季",

    MFCS: '免费次数',
    BCMF: '本次免费',
    BCMFQWCG: "本次翻牌免费，请勿错过！",
    MF: '免费',
    MFSX: '免费刷新',
    EWSX: '额外刷新',
    BCBJ: '本次半价',
    BJCS: '剩余半价次数：',
    ZBCLBZ: "装备材料不足",
    SLBZ: "数量不足",
    'JIHUOLE':'激活了',
    'ZUHE':'组合',
    BTN_SX:'刷新',
    HJXX: "     {1}    <font color=#edbb82>获得</font>   <font color={2}>{3}</font>   <font color=#f6ebcd>{4}</font>",
    SETTING_INPUT:'请写上您的建议或者意见',
    FIGHT_NO_ZF:'未激活种族光环',

    SYSJ: '剩余时间：',
    SL: '数量：{1}/{2}',
    YJH:'已激活',
    WJH:'未激活',

    SX: '刷新',
    PM: '排名：{1}',
    HDEXP: '获得经验',
    SJEXP: '升级所需',
    YDC: '已达成',
    'YMJ':'已满级',
    'MJ':'满级',

    // 属性名相关
    dengji: '等级',
    ZBY: '装备于',
    X_LV_JS:'{1}级解锁',

    DW_1: "攻击型",
    DW_2: "生命型",
    DW_3: "平衡型",
    DIAOWEN: "雕文",
    sj: "升级",
    xl: "洗练",
    cz: "重铸",
    ts: "吞噬",
    DWCZNEED: "只有红色品质雕文才能重铸",
    DQDWMJ: "当前雕文已满级",
    DW_DJ: "等级：{1}",
    DW_DJJ: "等级：<font color=#1c9700>{1}</font>",
    DW_SX: "雕文属性加成：{1}%",
    DW_SXJ: "雕文属性加成：<font color=#1c9700>{1}%</font>",
    DWTIP: "存在未锁定的红色品质附加属性，是否确定继续洗练？",
    QFRZSYGDW: "请放入最少一个雕文",
    XIANGQIAN: "镶嵌",
    QD: "确定",
    QFRTSDDW: "请放入吞噬的雕文",
    QXZTSSX: "请选择吞噬属性",

    YXXX_DJSX:'等级上限提升：<font color=#1c9700>{1}</font>',
    YXXX_SXTS:'属性提升：<font color=#1c9700>{1}%</font>',
    YXXX_DWCC: "雕文插槽：<font color=#1c9700>{1}</font>",
    YXXX_DQSX: "当前属性提升：{1}%",
    YXXX_DQDJ: "当前等级上限：{1}",
    YXXX_DQDW: "雕文插槽：{1}",
    TY: "统御 ",
    ZWDW: "暂无段位",
    DQYXWJH: "当前英雄未激活",
    SZXJ: "升至{1}级可获得:",
    SJTJ: "升级条件：英雄最高星级达到{1}星",
    TMD: "天命点",
    QU: "区",
    WDQF: "我的区服",
    QTGJ: "全体攻击",
    QTSM: "全体生命",
    HDZSTX: "获得专属头像：",
    YXRH_MAN_ATK:"攻击融魂已达当前上限",
    YXRH_MAN_HP:"生命融魂已达当前上限",
    YXRH_TP1:'该英雄达到融魂上限<br><font color=#ff6400>六星</font>英雄可突破获得更高融魂上限',
    YXRH_TP2:'当前融魂进度已达到上限<br>突破需求英雄等级达到<font color=#46af08>{1}</font>',
    YXRH_TP3:'当前融魂进度已达到上限<br>突破需求英等级达到<font color=#ff6400>{1}</font><br>前往{2}提高等级上限',
    YXRH_TP4:'该英雄达到融魂上限<br><font color=#ff6400>十星</font>英雄可突破获得更高融魂上限',
    YXRH_TP5:'该英雄已达到融魂最高上限',
    YXRH_XQ1:"融魂等阶{1}阶激活({2}级可升阶)",
    YXRH_XQ2:"攻击上限：{1}",
    YXRH_XQ3:"生命上限：{1}",
    YXRH_XQ4:"额外属性加成：{1}+{2}",
    YXXX_YXSX:'英雄升星',
    TANXIAN_KSTX_1:'快速探险可获得120分钟的探险收益',
    TANXIAN_KSTX_2:'今日剩余免费次数：<font color=#1c9700>{1}</font>',
    TANXIAN_KSTX_3:'今日剩余购买次数：{1}<br>本次购买需要钻石：{2} <font color=#be5e30>(拥有{3}钻石)</font>',
    TANXIAN_KSTX_4:'激活"探险者特权"每日可免费3次，最多购买{1}次快速探险',
    TQZTWJH: "<font color=#63584a>特权状态: 未激活</font>",
    TQYJH: "特权状态: 已激活(剩余{1}天)",
    GMTXTQ: "购买探险者礼包可获得额外快速探险次数,是否前往购买?",
    ZWKFJYX: "暂无可分解英雄",
    ZWKFJSXYX: "暂无可分解四星以下英雄",
    SYXT: "剩余：<font color=#2bdf02>{1}天</font>",
    SYXS: "剩余：<font node=1></font>",
    YX: "英雄",
    JY: "经验",
    JB: "金币",
    CAILIAO: "材料",
    FENGSHOU: "丰收",
    WUWEI: "无畏",
    SILIAN: "试炼",
    HDZWKQ: "活动暂未开启",
    XDJL: "下档奖励: ",
    jingzhun:"精准率",
    GG: "公告",
    ZWNR: "暂无内容",
    GHBK: "公会宝库",

    'ZUIER_intr': '',
    'SHUIJING_intr':'使用水晶可到商城中抽取各种稀有兵种，还可购买部分指定礼包哟。',
    'MUCAI_intr': '升级建筑的必需品之一，可通过贵族礼包、基地电能建筑及任务获取。',
    'KUANGSHI_intr': '升级建筑的必需品之一，可通过贵族礼包、基地钢铁建筑及任务获取。',
    'SHIYOU_intr': '升级建筑的必需品之一，可通过贵族礼包、基地石油建筑及任务获取。',
    'RONGYU_intr': '在竞技场中每天都能获得大量荣誉，用它荣誉商店中可换到顶级军备及兵种。',
    'MOHUN_intr': '可到钨金商店中换取想要的兵种碎片，回收兵种可大量获取。',
    'JINGTI_intr': '回收军备的产物，可在军备商店中重新制作为全新的军备或强化石。',
    'FANRONGDU_intr': '军团发展的基础资源，可通过玩家各种日常行为增加。',
    'FWJINGHUA_intr': '锻造符文中产生的符文精华，可在符文商店中购买指定的任意符文。',
    'BWJINGHUA_intr': '精炼配饰中产生的配饰精华，可在配饰商店中购买指定的极品配饰。',
    JUNGONG_intr:'跨服争霸中奋勇杀敌获得的功勋，强者的证明。',
    JIFEN_intr:'跨服积分赛积分，用于评价本次跨服积分赛排名',
    XINGCHENJIFEN_intr:'军团战星辰积分，用于评价本次跨服军团战的个人与军团排名。',
    payexp_intr:'硬通货，这个东西的作用就不言而喻了......',
    shenyin_intr:'在神殿争夺战中居功至伟的证明，可在神印商店中兑换珍奇道具！',
    ghmoney_intr:'军团资源之一，用于军团升级，可在军团建设与军团任务中获得。',
    ghgongxian_intr:'军图资源之一，用于军团科技和军团商店，可在军团副本、军团建设与军团任务中获得。',
    ghboom_intr:'军团资源之一，用于军团升级，可在军团副本、军团建设、军团任务和竞技场等玩法中获得。',
    CSH: "初始化中，请稍候",

    KFZ_ZB_tip:'战前准备阶段，快去提升自己一下吧！',
    KFZ_ZB:'争霸赛',
    KFZ_JF:'积分赛',
    KFZ_tip_1:'距离{1}开始：',
    KFZ_tip_2:'距离{1}结束：',
    KFZ_JF_refreshEnemy:'是否花费<font color=#00ff0c>20</font>钻石刷新挑战对手？',
    KFGHZ_refreshEnemy:'是否花费<font color=#00ff0c>30</font>钻石刷新挑战对手？',
    BEGAN_TIME:'开始时间：',
    END_TIME:'结束时间',
    YJS:'已结束',
    JJC_JF_SC_tip:'挑战达到{1}次<font color={3}>{2}</font>',
    KFZ_JF_SC_tip:'胜场达到{1}次({2})',
    KFZ_ZB_RZ_1:'{1}被{2}挑战，<font color=#eb3a3a>战斗失败了</font>，排名下降至<font color=#eb3a3a>{3}</font>名。',
    KFZ_ZB_RZ_1_1:'{1}被{2}挑战，<font color=#eb3a3a>战斗失败了</font>，排名不变。',
    KFZ_ZB_RZ_2:'{1}被{2}挑战，<font color=#30ff01>战斗胜利了</font>，排名不变。',
    KFZ_ZB_RZ_3:'{1}向{2}发起了挑战，<font color=#eb3a3a>战斗失败了</font>，排名不变。',
    KFZ_ZB_RZ_4:'{1}向{2}发起了挑战，<font color=#30ff01>战斗胜利了</font>，排名上升至<font color=#30ff01>{3}</font>名。',
    KFZ_ADD_TIP:'积分赛已结束，不可购买次数',
    KFGHZ_TZ10_TIP:'剩余挑战次数不足10次',
    KFGHZ_TZ10_TIP2:'花费{1}钻石随机挑战{2}名对手（胜率100%），获得{3}星辰积分',
    KFGHZ_SJCW:'数据错误',
    KFZ_ZB_REF_TIP:'刷新次数已用完',
    KFZ_JF_SL:'已战胜当前对手',
    KFZ_JF_SB:'已被当前对手击败',
    KFZ_RANK_jifen:'每周五 23:00后可领取奖励！',
    KFZ_RANK_zhengba:'每周日 22:00后可领取奖励！',
    KFZ_PMJL:'积分排名',
    KFZ_SJJL:'奖励预览',
    KFZ_ZB_PHB:'奖励预览',

    HUODONG_HD_OVER:'该活动已结束',
    HUODONG_CZJJ_YUEKA:'至尊月卡用户才可购买超级基金，你尚未购买，是否前去购买？',
    HUODONG_CZJJ_ZHIZUNKA:'至尊月卡用户才可购买超级基金，你尚未购买，是否前去购买？',
    HUODONG_CZJJ_JLYLQ:'活动奖励已领完',
    HUODONG_YJJ_LJ:'当前累计：{1}天',
    HUODONG_YJJ_LQSJ:'领取时间：{1}\n(每天登录累计1天, 最大30天)',

    TX_NEED_JS:'请通关上一关卡',
    NEED_X_LV:'需要等级达到{1}级',
    BTN_KSTX:'快速探险',
    SHOP_ITEM_OVER:'该商品已售罄',
    SHOP_NEED_BUY:'确定要购买该商品么？',
    HBBZ: "货币不足",
    YC:"一次",
    SC:"十次",
    JLYL: "奖励预览",
    JLYL_INFO: "活动最后一天23:55分结算排行奖励",
    JLCK:'奖励查看',
    QTGSYGQ: "请通关上一关卡",
    SZYXBZ: "上阵英雄不足",
    YINGXIONG_BUG_CELL:'花费{1}钻石购买{2}个英雄携带数量上限？',
    GMSLCS: "本次购买将花费 <font node=1></font><font color=#78ff2f>{1}</font>,是否购买？<br>今日剩余购买次数：<font node=2></font>",
    CHUANSHANG:'穿上',
    XIEXIA:'卸下',
    YH: "以后",
    HUOBI1: "灵魂石",
    HUOBI3: "远征军声望",
    HUOBI2: "转盘积分",
    HUOBI5: "公会贡献",
    HUOBI4: "荣誉点",
    BZ: "帮助",
    FSJJ: "巨龙结晶",
    BUZU: "不足",
    CSBZ: "次数不足",
    TSVIP: "提升贵族等级可以获得更多购买次数",
    FXQJCNLQ: "返现期间才能领取",
    JZDQGFX: "截止当前共返现{1}钻石！",
    DJBZKQ: "等级不足,{1}级开启",
    SDJKQ: "{1}{2}级开启",
    SJDL: "随机掉落{1}",
    ZHUANGBEI_TYPE:'类型: ',
    ZHUANGBEI_TYPE_1:'武器',
    ZHUANGBEI_TYPE_2:'戒指',
    ZHUANGBEI_TYPE_3:'头盔',
    ZHUANGBEI_TYPE_4:'胸甲',
    ZHUANGBEI_TYPE_5:'饰品',
    ZHUANGBEI_TYPE_6:'宝石',
    ZWKZHYX: "暂无可置换4-5星英雄",
    BTN_TUOXIA:'卸 装',
    BTN_TIHUAN:'更 换',
    TIHUAN:'替换',
    BTN_CHUANSHANG:'穿 上',
    BTN_ZHUANHUAN:'转 换',
    BTN_SHENGJI:'强 化',
    KJS:'可解锁',
    BAOSHI:'宝石',
    ZHUANHUAN:'转 换',
    SHIPIN:'饰品',
    DAOJU_TYPE_item:'道具',
    DAOJU_TYPE_equip:'装备',
    DAOJU_TYPE_shipin:'饰品',
    DAOJU_TYPE_baoshi:'宝石',
    DAOJU_TYPE_attr:'货币',
    DAOJU_TYPE_hero:'英雄',
    BTN_ADD1:'加入1个',
    BTN_ADD10:'加入10个',
    YINGXIONG_SHIPIN_SX_BUZU:'升星所需的材料不足',
    YINGXIONG_UP_MAX:'恭喜你将{1}升满',
    UI_TITLE_yingxiong_jianjie:'英雄信息',
    GOUMAI:'购买',
    YX_FENJIE_TIP_2:'分解英雄中包含{1}星英雄，确定分解？',
    YX_FENJIE_TIP_1:'请放入需要分解的英雄',
    FENJIE:'分解',
    YX_FENJIE_TIP3:'英雄分解会返还所有培养材料',
    YX_FENJIE_TIP4: "请放入需要分解的英雄",
    TANXIAN_TG_NAME:'通关第{1}关卡',
    TANXIAN_TG_CENG:'通关第{1}层',
    DDCENG: "本轮手动挑战{1}层关卡 ({2}/{3})",
    FST_TADQ_CENG:'巨龙神殿第{1}层领取宝箱',
    TANXIAN_TADQ_CENG:'通关第{1}层 ({2}/{3})',
    TANXIAN_TXDQ_CENG:'通关第{1}关卡 ({2}/{3})',
    TANXIAN_CENG:'第{1}层',
    ZJ: "赞：{1}",
    QXTGDQZJ: "请先通关当前章节",
    PLCG: "评论成功",
    VANDDJ: "VIP2或60级以上才能评论",
    GUAJI:'挂机',
    BAOCUN:'保存',
    QFRXYBZDYX: "请放入需要备战的英雄",
    YX_FIGHT_TIP_1:'请放入需要出战的英雄',
    YX_FIGHT_TIP_2:'每队至少上阵一个英雄',
    WORLDTREE_TIP_1:'你还有置换的英雄未保存，确定要离开么？',
    YINGXIONG_ZHENFA_TIP_1:'上阵英雄均享受以下光环属性',
    X_ROUND:'第<font color=#fff71d>{1}</font>回合',
    JFCGSX: "当前已有{1}/{2}悬赏积分，领取后超出上限部分将损失，确定领取？",
    JFCGSX_liuzhecankaoyong: "当前已有{1}/{2}悬赏积分,领取{3}悬赏积分后,超出上限部分将损失，是否确定领取?",
    XTGLY: "系统管理员",
    GHHZ: "公会会长",
    YPB: "已拉黑",
    PHB: "排行榜",
    GHPHB: '公会排行',
    QSRZQDSZ: "请输入正确的数值",
    JSGH: "解散后所有公会成员将做退会处理，是否确定解散？",

    GONGHUI_ONLY_HZ:'仅公会会长可以操作',
    LIEBAO:'列表',
    CHUANGJIAN:'创建',
    SHENQING:'申请',
    GONGHUI_MAX_APPLY_NUM:'申请公会数量已满',
    UI_TITLE_gonghui_selectflag:'选择公会旗帜',
    UI_TITLE_gonghui_paihangbang:'公会排行',
    GONGHUI_POWER_0:'会长',
    GONGHUI_POWER_1:'官员',
    GONGHUI_POWER_2:'成员',
    GONGHUI_POWER_3:'成员',
    ZAIXIAN:'在线',
    TUICHU:'退出',
    JBSL: "击败前一层首领，并领取宝箱奖励解锁",
    GONGHUI_TIP_1:'会长不可以退出公会',
    UI_TITLE_gonghui_dating_applylist:'申请列表',
    GONGHUI_TIP_2:'您是否确定退出该公会？',
    CAOZUO:'操作',
    ZHAOMU:'招募',
    GONGGAO: "公告",
    XGGG: "修改公告",
    TJCG: "添加成功",
    SCCG: "删除成功",
    QSRNR: "请输入内容",
    ZHAOMU_INFO:'请输入招募信息',
    ZHAOMU_CONTENT:'欢迎加入公会，大家积极捐献，一起打公会副本，公会宝库还可领取宝箱哦！',
    GHMRNR: "欢迎加入公会，大家积极捐献，一起打公会副本，公会宝库还可领取宝箱哦！",
    NEED_GH_INTR:'请输入公会简介',
    FASONG:'发送',
    XIUGAI:'修改',
    MINGZI:'名字',
    FXJSSJ: "返现结束时间",
    WDFXSJ: "未到返现时间",
    HDLJSJ: "距离活动领奖",
    LJJSSJ: "领奖结束时间",
    FXYLQ: "返现已领取",
    GONGHUI_NAME_INFO:'请输入公会名字',
    GONGHUI_NAME_TIP:'新的公会名',
    RENMING:'任命',
    GONGHUI_RENMING_X:'您确定将{1}任命为{2}吗？',
    GONGHUI_QINGLI_X:'您确定将{1}请离公会吗？',
    GONGHUI_FUBEN_TIP1:'请先通关前置关卡',
    GONGHUI_TANHE:'你确认发起会长弹劾吗？发起后24小时内，公会内所有玩家均可争夺会长之位。',
    UI_TITLE_SHPH:'伤害排行',
    SDSW: "神殿守卫 {1}",
    FBSL: "副本首领",
    BTN_ZD:'战斗',
    BTN_FH:'复活',
    GONGHUI_FUBEN_FIGHT_MAX:'已达最大挑战次数，请明天再试',
    CHONGZHI:'结束',
    ZHCG: "置换成功",
    HDYJS: "活动已结束",
    JIESU: "重置",
    NI:"你",
    CUR_LV:'当前等级',
    MAX_LV:'已达最高',
    ZENGJIA:'增加',
    UI_TITLE_player_changhead:'头像列表',
    PLAYER_NAME_INFO:'请输入你想修改的名字',
    PLAYER_NAME_TIP:'2-6个汉字',
    YXRY: "活动期间{1}达到{2}星可领取",

    ZHENXING: '阵型',
    WZRY_ZZS: '钻石赛',
    WZRY_WZS: '王者赛',
    WZRY_ZZS_FZ: '你入围了钻石赛{1}组，请进入查看自己的比赛详情',
    WZRY_ZZS_WFZ: '你没有入围钻石赛，但你可以观看钻石赛的比赛',
    WZRY_JSWKQ: '决赛将在分组赛结束后开启',
    WZRY_JSKQ: '决赛开启',
    WZRY_LOG3: '钻石赛战斗日志',
    WZRY_LOG5: '王者赛战斗日志',
    WZRY_GUESS: '贵族等级不足，无法进行本档竞猜',
    WZRY_GUESS_SUCC: '竞猜成功',
    WZRY_MAIN_tip_1: '{1}级以上玩家可参与本周大乱斗活动，若报名人数大于256人，则活动将在周二0点开启，报名后立刻获得<font color=#fff00>雕文精华</font>500个',
    BAOMING: '报名',
    ITEM_FENJIE_TIP_1: '确定要分解全部的宝物箱吗？',
    BKSDSYSXXL: "不可锁定所有属性进行洗练",
    WBM: '未报名',
    YBM: "已报名",
    LKBM: '立刻报名',
    WZRY_MAIN_HD_NOOPEN: '活动暂未开启',
    WZRY_MAIN_DLD_NOBM: '未报名无法参与，请周三后观看钻石赛',
    X_rank: '{1}名以后',
    WZRY_BM_TIP_1:'等级不足{1}级无法自动报名',
    WZRY_BM_TIP_2:'贵族等级不足',
    WZRY_RYJL_1: '大乱斗积分达到奖励需求将自动通过邮件发送奖励',
    WZRY_RYJL_2: '奖励将在钻石赛结束通过邮件发放',
    WZRY_RYJL_3: '奖励将在王者赛结束通过邮件发放',
    WZRY_DLD_refresh: '正在刷新对手，请稍等。。。',
    WZRY_RYZD_tip_1: '荣耀之巅的史册 等着您来开启',
    WZRY_RYZD_X_RANK: '第{1}期荣耀王者',
    WZRY_GHZX: '你可以将当前阵型保存为参与钻石赛或王者赛的专属阵型，每次保存阵型需要间隔10分钟。（每轮晋级赛开启时间的上下30分钟不可保存阵型）',
    WZRY_ZSS_ZU: '钻石赛{1}组',
    WZRY_DJC:'第{1}轮',
    BZTZSJ: "当前不在挑战时间内",
    WZRY_HUODONG_NOOPEN: '报名人数不足，活动未开启',
    WZRY_HUODONG_BAOMING: '等待各路英雄报名中，将在明日正式开赛',
    WZRY_DLD_JIFEN: '乱斗积分+{1}',
    WZRY_DLD_PH_JIFEN: '乱斗积分：{1}',
    WZRY_MAIN_ZX: '战斗期间不可更换阵型',
    WZRY_DDJS:'请耐心等待前置晋级赛结束',
    wangzherongyao_dld_ph: "乱斗排行",
    wangzherongyao_jcwz:"竞猜王者",
    GUIZU:"贵族{1}",
    DWCC: "雕文插槽：",
    ZWJS: "暂未开放",

    JOB_1:'战士',
    JOB_2:'法师',
    JOB_3:'辅助',
    JOB_4:'刺客',
    JOB_5:'游侠',
    GONGHUI_KEJI_OPEN:'需要上个技能达到10级',
    MIANFEI:'免费',
    GONGHUI_KEJI_TIP1:'重置公会技能将返还培养消耗的全部材料！',
    UI_TITLE_gonghui_fuben_prize:'战斗奖励',
    JISHA:'击杀',
    PER_FIGHT:'每次战斗',
    QTGQZGQ: "请通关前置关卡",
    OKCOLOR: "当前饰品为{1}品质,确定将其作为培养材料？",
    CCOLOR: "橙色",
    HCOLOR: "红色",
    BLSJYJS: "本轮赛季已结束",
    HD_ZCJB: "活动期间，每日消耗钻石的{1}%存入返利宝箱中，活动结束后根据VIP等级可领取<font color=#ffaf5a>钻石宝箱</font>(活动持续7天，第8天领奖)",

    TFRYXSL:'已放入英雄数量',
    VIPFL: "vip{1}可领取{2}%返利，总计<font node=1></font> x{3}",
    MBJL: "目标奖励",
    YX_SX_XZ_TIP_1:'选择材料英雄数量不足',
    YX_LOCKING:'该英雄已锁定',
    YX_YBXZ: "该英雄已被选择",
    YX_X_LOACKING:'该英雄处于{1}防守阵容中',
    YX_SX_XZ_FULL:'每次最多放入10个英雄',
    YX_FIGHT_XZ_FULL:'当前选择英雄已满',
    YX_YZW: "英雄已阵亡",
    CLFH:'材料返还',
    GL: "概率: {1}%",
    nuqi: "怒气",
    XSYDY: "新手引导员无阵容设置",
    DMJ_BJ: "当前补给暂无，有几率通关获得",
    dmj_syyj: "是否使用<font color=#fff71d>{1}</font>补给",
    JSDJS: "结束倒计时: ",
    JXTG: "极限通关",
    ALL_HERO_DEAD: "本轮活动已结束",
    TANXIAN_MAP_TIP_1:'当前区域尚未解锁，请通过前置关卡',
    TANXIAN_MAP_TIP2:'你确定要前往该区域进行战斗？',
    TANXIAN_MAP_TIP3: "已处在当前区域",
    NLTANDVIP: "能量条满且贵族3玩家方可召唤",
    ZSBZ: "钻石不足",
    YJBZ: "印记不足",
    TS1: "一、祭祀规则：<br>1.召唤祭祀可以召唤1-5星英雄，幸运祭祀可以召唤2-5星英雄，先祖祭祀可以召唤3-5星英雄，传说祭祀必得5星星英雄。<br>2.每次召唤祭祀可得1个传说英雄碎片，幸运祭祀可得2个传说英雄碎片，先祖祭祀可得20个传说英雄碎片。<br>3.贵族3以上玩家可以解锁传说祭祀，每次传说祭祀需要消耗999个传说英雄碎片。<br>二、祭祀概率：<br>召唤祭祀：1星53%、2星36%、3星9.4%、4星1.5%、5星0.1%<br>幸运祭祀：2星35.5%、3星50%、4星13.5%、5星1%<br>先祖祭祀：3星78.5%、4星18%、5星3.5%<br>传说祭祀：5星100%",
    TS2: "每日试炼：<br>1.击败试炼守卫者可以获得大量英雄培养材料，每日不要错过哦！<br>2.贵族等级越高的玩家可以购买更多的挑战次数。<br>3.挑战试炼成功有概率获得多倍奖励。",
    TS3: "1.通过刷新可以刷出高品质的悬赏任务，任务品质越高奖励越丰厚！<br>2.英雄达成任务派遣条件，消耗一定数量悬赏积分即可接取任务。<br>3.每个任务需要进行一段时间，期间已派遣的英雄无法执行其他任务。<br>4.每天有2次免费刷新任务机会，也可以消耗悬赏刷新券或钻石刷新。",
    TS4: "一、魔法转盘：<br>1.消耗转盘币可以在普通转盘抽奖，消耗高级转盘币可以在高级转盘抽奖。<br>2.贵族2以上玩家消耗12个普通转盘币即可在普通转盘进行十五连抽。<br>3.每次在转盘抽奖都能获得转盘能量，转盘能量满后可以获得1次免费的幸运转盘抽奖。<br>4.普通转盘幸运转盘可以获得大量经验、金币；高级转盘幸运抽奖能获得稀有传说英雄。<br>5.每次在普通转盘抽奖都将获得转盘积分，转盘积分可以在转盘商店购买商品。<br>6.转盘商品每天0点时会自动刷新。",
    TS5: "一、召唤之书：<br>1.每张召唤卷可以从对应种族的召唤之书中召唤1次英雄<br>2.召唤将概率获得传说或史诗英雄的整卡和碎片<br>3.每次召唤必定获得1个张召唤卷残页和若干置换精华，一定数量的召唤卷残页可以用来兑换指定传说英雄。<br>二、英雄转换：<br>1.通过置换精华，可以将除开神圣和黑暗以外种族的4、5星英雄进行随机转换。<br>2.英雄转换后，新生的英雄将继承原有英雄的所有属性。",
    TS6: "1.毁灭巨龙的爪牙遍布了巨龙神殿，但同时他们也守护着丰厚的奖励<br>2.击败守卫可以获得勇气徽章，每挑战10层还能获得怪物守护的宝箱。",
    TS7: "1.远征每日0点刷新。<br>2.40级以上的英雄才能参加远征，战斗后敌我双方英雄的血量不恢复。<br>3.战斗获取的远征军声望可以在远征商店兑换强大的物品。<br>4.远征过程中可以获得宝箱奖励，宝箱中存放着补给品。<br>5.使用补给品可以恢复英雄生命、怒气甚至复活已经阵亡的英雄。",
    TS8: "TS8",
    TS9: "自由竞技场<br>1.自由竞技场每周1开启，周日结束，期间每天21点结算排名奖励，周日22点结算赛季奖励。<br>2.每次挑战竞技场可以获得翻牌奖励。<br>3.竞技场按照玩家积分排名，积分相同玩家按照战力排名。<br>冠军竞技场<br>1.冠军竞技场每周五开启，周日结算，周日22点结算赛季奖励，通过邮件发放。<br>2.每次挑战竞技场可以获得翻牌奖励。<br>3.竞技场按照玩家积分排名，积分相同玩家按照战力排名。<br>4.冠军竞技场需要玩家设置3队英雄，与敌人布置的3队英雄依次战斗！",
    TS10: "1.公会成员每天可通过公会捐献来增加公会经验，提升公会的等级。<br>2.公会每升级2级，成员上限增加1个，公会最多容纳40人。<br>3.玩家退出公会后会扣除最近3天为公会增加的公会经验。<br>4.会长超过3天未上线，则可对会长发起弹劾。弹劾期为1天，弹劾期会长上线会自动取消弹劾。<br>5.消耗公会贡献可以提升公会科技等级，升级对应职业的公会科技对所有等级2级及以上的当前职业英雄有效。",
    TS11: "1.公会副本一共12个章节，每个章节5个守关首领，击败后进入下一章。<br>2.每次挑战首领都能获得奖励，首领被击杀后，根据伤害排名发放排名奖励。<br>3.相同的首领同个玩家只有首杀时能获得奖励（更换公会重复击杀无效）",
    TS12: "1.每日登录即可领取奖励。<br>2.领取完30次后奖励内容刷新，重新开始领取。",
    TS13: "公会探宝<br>1、公会所有成员都可以探宝搜寻奖励，并有一定概率搜寻到怪物。<br>2、怪物守卫着大量钻石，击败怪物可以获得奖励。<br>3、好友或公会成员可以相互帮助击杀怪物。<br>4、挑战怪物可以获得贡献积分，击杀者还能获得额外钻石奖励。<br>5、每周根据贡献积分，会结算一次贡献排名奖励。",
    TS14: "英雄分解<br>1、游戏初期赠送的大部分英雄都可以用于融合祭坛合成第一个5星寒冰女巫，请勿随意分解。<br>2、英雄进行分解可以得到一定的灵魂石和其他培养材料。<br>3、英雄分解将返还全部将返还培养消耗的所有升级材料、进阶材料、宝石材料。",
    TS15: "融合祭坛<br>1、融合祭坛可以将同名低星英雄合成高星英雄。<br>2、合成成功后的英雄将继承主英雄的等级和进阶等级。<br>3、合成成功后，作为辅助材料的英雄将返还培养消耗的所有升级材料、进阶材料、宝石材料、饰品和装备。<br>4、5星英雄 = 同名4星主英雄*1 + 同名4星辅英雄*2 + 同种族任意4星英雄*5 + 同种族任意3星英雄4个。<br>5、6星英雄 = 同名5星主英雄*1 + 同名5星辅英雄*1 + 同种族任意5星英雄*3 + 同种族指定5星英雄*1。",
    TS16: '<font color=#00FF0c>积分赛赛程介绍</font><br>1、比赛阶段<br><font color=#00FF0c>每周一00:00至周五23:00</font>是积分赛挑战时间，战胜不同的对手会获得<font color=#00FF0c>不同的</font>积分和军功奖励。<font color=#00FF0c>每日胜利场次达到目标也有军功奖励</font>。<br>休战阶段<br><font color=#00FF0c>每周五23:00至周日23:59</font>为积分赛休战阶段，在此期间可进入积分赛内<font color=#00FF0c>领取积分排名奖励</font>。<br>2、挑战规则<br>每天有<font color=#00FF0c>15次免费刷新次数</font>和<font color=#00FF0c>15次免费挑战次数</font>，免费刷新次数用完后<font color=#00FF0c>可使用钻石刷新对手</font>。<br>挑战对手次数也可用钻石购买，每日24点将重置挑战次数（提升贵族等级，可增加每日购买次数）。<br>3、积分赛<font color=#00FF0c>战胜对手</font>最高可获得积分*35，军功*18，最低可获得积分*30，军功*15，挑战失败则获得<font color=#00FF0c>一半</font>的积分和军功。<br>4、晋级规则<br>积分赛结束后，排行前300名的玩家获得参加当届争霸赛资格，同时<font color=#00FF0c>周五23:00每个区服竞技场前10名（等级达到50级或以上）或总积分达到4500分以上</font>也可获得参加当届争霸赛的资格。<br> <br><font color=#00FF0c>争霸赛赛程介绍</font><br>1、筹备阶段<br><font color=#00FF0c>每周五23:00至周六10:00</font>为争霸赛筹备阶段，此阶段争霸赛无法进入。每周五23:00积分赛排名前300的玩家和各区竞技场排名前10的玩家（等级达到50级或以上）将进入争霸赛。<br>分组阶段<br>争霸赛会将区服开区时间相近100名玩家分到同一组比赛。（最后不足100人的玩家将合并到前一组）<br>争霸阶段<br><font color=#00FF0c>每周六10:00至周日22:00</font>为争霸阶段，此阶段玩家可在<font color=#00FF0c>争霸赛挑战区</font>击败对手获得更高的名次，也可在<font color=#00FF0c>强者区</font>观摩大神的风采。<br>休战阶段<br><font color=#00FF0c>每周日22:00至下周五23:00</font>为争霸赛休战阶段，在此期间可进入争霸赛内<font color=#00FF0c>领取排名奖励</font>。<br>2、挑战规则<br>每天有<font color=#00FF0c>15次免费挑战次数</font>，挑战次数用完后可用钻石购买（贵族等级越高，每日可购买次数越多）。<br>3、奖励规则<br>争霸赛中战斗胜利可以获得50军功，失败可获得10军功。争霸赛结束后可根据争霸赛排名领取排行奖励。<br>4、争霸强者<br>争霸赛中前20名排名发生变化的战斗，将会以录像的形式储存在争霸强者中供大家参考学习，想一览大神的风采不要忘记来看看哟。',
    TS17: "1、公会所有成员可购买公会宝箱，每天购买上限为10次。<br>2.购买宝箱的成员可立即获得宝箱专属奖励。<br>3.成功购买宝箱会在公会宝库中出现一个公共宝箱，宝箱内有10分礼物供10名公会成员领取。<br>4、公共宝箱只会保存24小时，保存期限内未领取则过期。",
    TS18: "一、秘境规则：<br>1.守望者秘境是周期性活动，每两天1个周期，每期活动，玩家需要选择6名英雄挑战秘境。<br>2.秘境一共有600层，每次击败守层怪物可进入下一层秘境。<br>3.每层战斗结束后己方英雄和敌方怪物的血量及能量都会保存，已阵亡的英雄无法再参与战斗。<br>4.每期活动重新开启时，玩家将自动快速挑战到历史最大层数减30层的关卡。<br>5.每期活动当己方所有英雄全部阵亡，本轮秘境挑战结束。<br>二、秘境奖励：<br>1.“目标奖励”每期活动手动挑战的关卡到到30层将获得大量融魂材料目标奖励。<br>2.“合剂”击败守关怪物后，获得随机合剂效果，全体出战英雄在本次活动中属性获得提升。<br>3.“掉落奖励”击败守关怪物后随机掉落1份道具奖励。<br>4.“地精商品”击败守关怪物后，出现地精商人，商人随机出售一件商品。<br>5.“补给品”击败守关怪物后，出现随机补给品，可以恢复英雄属性、召唤稀有商人甚至直接毒杀BOSS。<br>6.“翻牌奖励”击败守关怪物后，出现翻牌事件，抽取大量奖励！",
    TS21: "一、统御<br>1.所有可升至6星的英雄均能进行统御培养。<br>2.提升英雄的统御等级需消耗指定类型的英雄和金币。<br>3.每次培养任意英雄统御等级都能获得天命值。<br>4.当天命值累计到一定程度后可触发对应天命称号的属性加成。<br>5.天命称号达到一定等级可激活专属头像。<br>6.每天可领取对应天命称号的日常英雄经验奖励。",
    TS19: "一、统御<br>1.所有可升至6星的英雄均能进行统御培养。<br>2.提升英雄的统御等级需消耗指定类型的英雄和金币。<br>3.每次培养任意英雄统御等级都能获得天命值。<br>4.当天命值累计到一定程度后可触发对应天命称号的属性加成。<br>5.天命称号达到一定等级可激活专属头像。<br>6.每天可领取对应天命称号的日常英雄经验奖励。",
    TS20: "一、统御<br>1.所有可升至6星的英雄均能进行统御培养。<br>2.提升英雄的统御等级需消耗指定类型的英雄和金币。<br>3.每次培养任意英雄统御等级都能获得天命值。<br>4.当天命值累计到一定程度后可触发对应天命称号的属性加成。<br>5.天命称号达到一定等级可激活专属头像。<br>6.每天可领取对应天命称号的日常英雄经验奖励。",
    TS23: "跨服公会争锋赛程介绍<br>一、休赛期流程<br>1、每<font color=#00FF0c>周日00:00-24:00</font>为跨服争锋休赛期，此时可以<font color=#00FF0c>报名下个赛季比赛</font>。<br>2、报名需要公会中有10名以上玩家达到30级；报名成功后公会中30级及以上的玩家均可参与公会争锋玩法。<br>3、直到本赛季最后一天比赛期前，报名公会<font color=#00FF0c>大于50个公会</font>，则本轮跨服争锋<font color=#00FF0c>开启</font>。<br>二、比赛期流程<br>1、每周一至周六为比赛期，比赛期每天进行一轮比赛。<br>2、<font color=#00FF0c>周一至周五均可以报名</font>公会争锋，报名成功会<font color=#00FF0c>加入下一轮比赛</font>的匹配。（0点之后报名，次日才能参赛）<br>3、每天00:00-06:00点会计算公会30级以上玩家数量，人数不足的公会本轮比赛休战；反之，全体大于30级玩家将参与本轮公会战。<br>4、<font color=#00FF0c>每天00:00-22:00为比赛期</font>，符合条件的同段位公会将<font color=#00FF0c>10个公会一个小组两两匹配对战</font>。（最后一个不足10公会的分组会和前一个分组合并）<br>5、轮空的公会将直接获胜晋级，并在当天结算期后获得本轮比赛可得上限的积分。<br>三、比赛规则<br>1、挑战战胜敌方公会玩家，可获得比赛积分，每轮比赛初始比赛积分为0。<br>2、比赛结束后根据比赛积分，判断双方胜负，<font color=#00FF0c>胜利的公会会加上额外比赛积分</font>。<br>a、青铜组胜方额外积分：1500<br>b、白银组胜方额外积分：3000<br>c、铂金组胜方额外积分：4500<br>d、王者组胜方额外积分：7500<br>3、根据22:00的比赛积分，会确定小组排名。<br>a、青铜组：1-6晋级，其余保级。<br>b、白银组：1-5晋级，6-9保级，其余降级。<br>c、铂金组：1-4晋级，5-8保级，其余降级。<br>d、王者组：进入王者组后，不会再降级。<br>4、<font color=#00FF0c>赛季累计积分</font>：赛季开始后每轮比赛获得的积分将累计，作为最后王者组排名依据。<br>四、挑战规则<br>1、每名玩家每天可以有3次出手机会，每个对手有3次防守次数。<br>2、每次挑战无论胜负，均可以获得1次翻牌奖励。<br>五、奖励设定<br>1、公会在<font color=#00FF0c>本赛季每提升一个段位均可以开启对应段位的宝箱</font>，段位宝箱数量为当前公会晋级时的公会人数上限。<br>2、相同段位的宝箱每人每赛季最多领取1次，更换公会无法重复获取。<br>3、每个赛季<font color=#00FF0c>周六23:00发放赛季排名奖励</font>，此时处于对应公会的玩家均可获得奖励。",
    TS22: "魔镜转换规则介绍<br>1、魔镜转换可以将10星英雄转换为同种族其他英雄。<br>2、选择10星后放入一定数量相同5星英雄，并消耗1000永恒置换精华，即可将对应10星英雄置换为目标英雄。<br>3、作为材料的5星英雄，会返还所有培养材料。（融魂培养材料除英雄经验外全部返还）<br>4、作为结果的10星英雄会继承原来英雄除开融魂的所有属性。（融魂培养材料除英雄经验外全部返还）",
    TS24: "一、基础说明：<br>1、英雄11星可以激活1个雕文插槽，通过参加巅峰王者可以获得雕文。<br>2、雕文分为绿、蓝、紫、橙、红5个品质，每个品质又分为攻击型、生命型和平衡型。<br>3、同个英雄不可穿戴相同类型的雕文。<br>二、雕文基础属性：<br>1、雕文根据其品质会在生成的时候，在一定区间随机基础属性，越高品质的雕文基础属性越高。<br>2、攻击型和生命型雕文分别偏向攻击属性和生命属性的加成，平衡性则两者均有。<br>3、通过升级可以百分比提升雕文基础属性加成，所有升级带来的百分比相同。<br>4、雕文被精炼、吞噬后会返还所有雕文升级消耗的雕文精华。<br>三、雕文附加属性：<br>1、雕文生成时会随机生成附加属性，越高品质的雕文附加属性条目越多。<br>2、通过洗练可以重新随机更换雕文的附加属性。<br>3、通过锁定功能可以锁定属性后进行洗练。<br>四、雕文附加技能：<br>1、红色品质雕文在生成时会随机生成一条附加技能。<br>2、红色品质雕文通过重铸可以重新随机附加技能。<br>3、同个英雄穿戴多个拥有不同雕文技能的雕文时，每个技能均生效；但是穿戴相同技能的雕文时，相同技能只会生效1条。<br>五、雕文精炼：<br>1、通过锻造坊的精炼功能可以将低品质雕文精炼为高品质雕文，红色品质雕文若精炼成功，则会生成1个新的随机红色品质雕文。<br>2、绿、蓝、紫、橙、红色品质雕文精炼成功率分别为40%、30%、20%、10%、10%，精炼失败分别返还100、125、150、175、200雕文精华。<br>3、每次精炼雕文无论成功失败均增加1点精炼值，消耗100点精炼值可以兑换一个永恒雕文宝箱。<br>六、雕文吞噬：<br>1、雕文可以吞噬同品质同类型其他雕文的基础属性、附加属性或附加技能。<br>2、吞噬成功后，被吞噬的雕文会销毁并返还其升级消耗的所有雕文精华。",
    TS25: "雕文精炼：<br>1、通过精炼功能可以将低品质雕文精炼为高品质雕文，红色品质可精炼为红色品质雕文。<br>2、绿、蓝、紫、橙、红色品质雕文精炼成功率分别为40%、30%、20%、10%、10%，精炼失败分别返还100、125、150、175、200雕文精华。<br>3、每次精炼雕文无论成功失败均增加1点能量，能量到100点必定额外生成1个红色品质雕文。",
    TS26: "一.活动简介<br>1.巅峰王者是一个跨服的高级玩家3队挑战竞技玩法，开服一周后开启功能。<br>2.开启后75级以上玩家可参与玩法，全体玩家均可以参与竞猜王者活动。<br>3.玩法主要流程分为<font color=#00FF0c>报名阶段、大乱斗阶段、钻石赛阶段、竞猜王者阶段</font>和<font color=#00FF0c>王者赛阶段</font>；<br>二.报名规则<br>1.每周一00:00-22:00为巅峰王者的报名阶段，届时所有<font color=#00FF0c>等级达到75级及以上</font>的玩家均可报名参与；<br>2.报名成功后可立即获得雕文精华*500；<br>3.若报名期间<font color=#00FF0c>人数大于256名</font>玩家，则本届巅峰王者活动将在周二00:00正式开启；<font color=#00FF0c>人数不足</font>则本期活动无法开启。<br>三.大乱斗介绍<br>1.每周二00:00-22:00为巅峰王者大乱斗比赛期，所有报名的玩家可以参与活动；<br>2.大乱斗一共可以<font color=#00FF0c>进行15场</font>战斗，每场战斗胜利可得10分，失败得2分，如若连胜（1胜除外）可额外获得对应连胜次数的分数；<br>3.大乱斗中积分达到指定条件即可通过邮件<font color=#00FF0c>依次领取乱斗分数包含在内的所有档次奖励</font>；<br>4.大乱斗结束后<font color=#00FF0c>分数排名前256的玩家将晋级钻石赛</font>，积分相同按历史最高战力排序<font color=#00FF0c>（该战力为本期活动挑战大乱斗时最强战力）</font>；<br>5.每周二22:05分所有晋级钻石赛的玩家将陆续收到晋级奖励邮件；<br>四.钻石赛介绍<br>1.晋级钻石赛的256名玩家将随机分配到16个钻石赛小组中，每个小组16名玩家两两随机匹配进行淘汰赛；<br>2.每周三12:00将进行钻石赛分组赛（16进8）的比赛，比赛将进行三轮，<font color=#00FF0c>每隔5分钟一轮战斗，三轮两胜制</font>；<br>3.每周三20:00、周四12:00、周四20:00将进行8进4、半决赛和决赛，并在每周四20:10决出16个钻石组的冠军；<br>4.每周四20:10分将会陆续发放钻石赛奖励（<font color=#00FF0c>钻石赛奖励只能领取达到最高名次奖励</font>），并且各小组的冠军将会入选王者赛；<br>五.竞猜王者介绍<br>1.每周四20:10-周五23:59所有贵族1以上并且等级达到30级以上的玩家都可以到对应界面选择一名钻石赛冠军玩家进行竞猜；<br>2.竞猜分为三挡<br>  ※贵族1以上玩家可购买100钻幸运之星礼包；<br>  ※贵族5以上玩家可购买200钻加油助威礼包；<br>  ※贵族7以上玩家可购买300钻天命王者礼包；<br>  ※购买礼包的同时会进行对应钻石档位的竞猜；<br>3.所有<font color=#00FF0c>购买礼包的金额将累积到竞猜王者奖池中</font><br>  ※竞猜中冠军则享受冠军奖池。（总奖池40%）<br>  ※竞猜中亚军则享受亚军奖池。（总奖池30%）<br>  ※竞猜中四强则享受四强奖池。（总奖池30%）<br>4.若竞猜的目标成为了冠军、亚军、四强，则所有竞猜对的玩家将根据档位平分奖池的奖励。<br>  ※100钻：竞猜正确玩家平分奖池20%<br>  ※200钻：竞猜正确玩家平分奖池30%<br>  ※300钻：竞猜正确玩家平分奖池50%<br>5.王者赛结束后将逐步发放竞猜奖励，若竞猜成功将获得对应平分奖励的钻石<font color=#00FF0c>（最高不超过礼包金额的10倍）</font>，若竞猜失败将获得10000金币；<br>六.王者赛介绍<br>1.周六00:00竞猜结束后，钻石赛各小组的第1名共16人将会随机两两配对，进行<font color=#00FF0c>五轮三胜制</font>的淘汰赛；<br>2.周六12:00、周六20:00、周日12:00、周日20:00将分别进行16进8、8进4、半决赛和决赛；<br>3.周日20:20将会决出最强王者并逐步发放王者赛相关的排名奖励以及竞猜奖励。<br>七.其他功能介绍<br>1.更换阵型：<br>  ※晋级钻石赛的玩家可以进行更换阵型，将当前的阵型保存为后续比赛的阵型。<br>  ※<font color=#00FF0c>（每轮晋级赛开启时间的上下30分钟不可保存阵型）</font><br>2.王者之巅：<br>  ※每期巅峰王者周日20:25更新王者之巅，用于记录巅峰王者历史所有四强玩家。<br>3.自动报名：<br>  ※贵族2以上且等级达到75级以上玩家可以勾选自动报名。<br>  ※勾选后未来每期巅峰王者活动开启报名时（每周一00:00）将自动为你报名活动，并通过邮件发送报名的雕文精华奖励。",
    lvmax: "等级上限",
    atk: "攻击",
    def: "防御",
    hp: "生命",
    yjh: "已激活",
    SQ: "神器",
    speed: "速度",
    atkpro: "攻击",
    defpro: "防御",
    hppro: "生命",
    speedpro: "速度",
    jingzhunpro: "命中率",
    gedangpro: "格挡率",
    BKXXQTDWSQ: "不可卸下其它队伍神器",
    baojipro: "暴击率",
    baoshangpro: "暴击伤害",
    skilldpspro: "技能伤害",
    staratkpro: "攻击百分比",
    starhppro: "生命百分比",
    pojiapro: "破防率",
    miankongpro: "免控率",
    undpspro: "伤害减免",
    dpspro: "伤害加成",
    pvpdpspro: "pvp伤害增加",
    pvpundpspro: "pvp伤害减免",
    OPEN_TO_STAR:'距离开始',
    OPEN_TO_END:'距离结束',
    JJC_FREE_NOWORK:'自由竞技场休息时间，请24点之后再来',
    JJC_GUANJUN_NOWORK:'冠军试炼未开启',
    JIANDAN: "简单",
    PUTONG: "普通",
    KUNNAN: "困难",
    DIYU: "地狱",
    EMENG: "噩梦",
    JUEWANG: "绝望",
    JF: "积分",
    SH: "伤害",
    DJG: "第 {1} 关",
    GUANQIA:'关卡',
    WCGS: "完成个数",
    JLJS: "距离结束:",
    CENGSHU: "层数",
    DJCS: "点金次数",
    YZTG: "远征通关",
    XSCS: "悬赏次数",
    KSTX: "探险次数",
    WDCS: "我的次数",
    WDSC: "我的胜场",
    SZTJBZ: "任务开启条件未满足",
    SZSLBZ: "上阵英雄数量不足",
    WKSCYJ: "无可删除邮件",
    CGSCSYWJLYJ: "成功删除所有无奖励邮件",
    WKLQJLYJ: "无可领取奖励邮件",
    BBKJ: "邮件数量: {1}/50",
    SJR: "收件人:",
    QTGHCY: "公会成员",
    DJBJ: "请输入文字",
    GH: "<font color=#9a4cc6>(公会)</font>",
    WJ: "<font color=#32a2c7>(玩家)</font>",
    HZ: "<font color=#9a4cc6>(会长)</font>",
    GHTZ: "公会通知",
    HUIZHANG: "会长：",
    GENGHUAN: "更换",
    SJWZZWDS: "赛季荣耀王者暂未诞生",
    GHBXSY: "宝箱剩余：<font color=#30ff01>{1}个</font>",
    SLYJ: "私聊邮件",
    BTZDBZ: "标题最多输入8字",
    BTBNWK: "标题不能为空",
    NRBNWK: "内容不能为空",
    DJT:"第{1}天免费领",
    LJJT: "累计<font color=#22b529>{1}</font>天",
    BXW: "宝箱位",
    BXYGQ: "宝箱已过期",
    YQW: "已抢完",
    YCY: "已充：{1}元",
    PMJL:'排名奖励',
    SJJL:'赛季奖励',
    MY_RANK:'我的排名：',
    DXT: "第<font color=#ff8400> {1} </font>天",
    MTJL: "每天21点发放排名奖励",
    SJJL_RANK_INFO:'每周日，根据结算时排名发放奖励',
    JJC_FIGHT_OVER:'新赛季暂未开启',
    JJC_FSBD_TIP:'请设置防守部队',
    JJC_FSBD_GJ_TIP:'每只队伍至少一位英雄',
    PLEASE_OPEN_CARD:'请选择一张卡牌',
    XS: "小时",
    QR: "确认",
    SQLBWK: "申请列表为空",
    DJBZ: "等级不足",
    GZXKGM: "贵族{1}玩家可购买",
    DQGNXJKQ: "当前功能{1}级开启",
    XYLVKQ: "需要{1}级开启",
    SWZMJ: "守望者秘境",
    MRSL: "每日试炼",
    WYZB: "外域争霸",
    SZJYZ: "十字军远征",
    JJC: "竞技场",
    SJS: "召唤之书",
    XYC: "魔法转盘",
    FST: "巨龙神殿",
    XSRW: "悬赏任务",
    GM: "购买",
    WC: "完成",
    SYCG: "使用成功",
    XJKQ: "{1}级开启",
    WCTUZL: "完成屠龙之路激活神器",
    FXZ: "发现者：",
    GYXCYFSZR: "该英雄处于防守阵容中",
    GYXBSD: "该英雄被锁定",
    QXZXYFZDYX: "请先选择需要置换的10星英雄",
    TGGQ: "通关{1}/{2}关",
    XYWJCRDL: "次日登录赠送",
    JHZZYK: "激活至尊月卡",
    JLCYM: "精炼槽已满",
    ZWKFRDW: "暂无可放入雕文",
    YJFRCG: "一键放入成功",
    SLYDSX: "数量已达上限",
    CACKDWXQ: "长按查看雕文详情",
    DJSX: "等级上限：",
    XUELIANG: "血       量：",
    GONGJI: "攻       击：",
    ZANLI: "战       力：",

    ZJSL: "你太强了，敌人落荒而逃！",
    CJXJKQ: "成就任务{1}级开启",
    JSSJ: "结束时间",
    KSSJ: "开始时间",
    SQCD: "神器穿戴",
    JH: "激活",
    XX: "卸下",
    JJC_FSBD_GJ_TIP:'请放入需要出战的英雄',
    GMCSBZ: "购买次数不足",
    MXTQ: "<font color=#8d1099>【冒险特权】</font><br>每天首次钻石、刷新券刷新必出紫色任务<br>",
    YXTQ: "<font color=#e85911>【英雄特权】</font><br>每天第3次钻石、刷新券刷新必出橙色任务<br>",
    YJH_1: "<font color=#fdd464>(已激活)</font>",
    WJHMX: "<font color=#63584a>(未激活: 购买冒险礼包激活)</font>",
    WJHYX: "<font color=#63584a>(未激活: 购买英雄礼包激活)</font>",
    YZH:'已转换',
    DUIHUAN:'兑换',
    WU:'暂无',
    QW: "前往",
    BTN_GOUMAI:'购买',
    LBGQ:'礼包已过期，无法购买',
    NEED_NUM:'请输出数量',
    FIGHT_JS_TIP:'贵族{1}或者等级达到{2}级方可开启{3}倍速',
    FIGHT_TG: "{1}级或贵族{2}可跳过战斗",
    world_opiton:'屏蔽世界聊天',
    guild_opiton:'屏蔽公会聊天',
    recruit_opiton:'屏蔽招募信息',
    hide_vip: "隐藏贵族徽章",
    kuafu: "屏蔽跨服信息",
    LZWY: "当前玩家来自外域，无法查看",
    HSXF: "还剩{1}份",
    GHJXYC: "每天只能捐献一次，是否确定捐献本档？",
    FS: "发送",
    YYSL: "拥有数量：{1}",
    XZFXPD:'选择你要分享的频道',
    LT_SHOW_ITEM:'{1} <font color=#804326>LV:{2}</font><font node=1></font><font color=#c80000>{3}</font>',
    SXXH: "<font node=1></font> <font color={1}>{2}</font>",
    XG: "限购{1}",
    systemXX:'[系统消息]',
    NOTID:'此ID不存在',
    applyChengong:'申请成功',
    shieldsuccess:'移除成功',
    sendsuccess:'赠送成功',
    SDCG: "锁定成功",
    JSCG: "取消锁定成功",
    jifen:'得分：',
    dps:'伤害：',
    gitf:'领取成功',
    JIFENPHB:'积分排行',
    DPSPHB:'伤害排行',
    DIREN:'敌人',
    DAOJU:'道具',
    jifenphb:'积分',
    gonghuipindao:'20级以上方可发送',
    jifenjiangli:'积分奖励',
    HDZS:'可获得{1}',
    CHONGZHI_ZCZ:'<font color=#ececd3>再充值</font><font size=24>{1}</font><font color=#ececd3>元即可成为</font>',
    price:'<font node=1></font>{1}',
    sale:'折',
    baoji: "暴击",
    XJWFFJ: "当前英雄星级过高，无法分解",
    gedang: "格挡",


    PHB_GQ: "关卡",
    PHB_JF: "积分",
    PHB_ZL: "战力",
    PHB_CS: "层数",
    PHB_DJ: "等级",
    PHB_TJ: "激活",
    PHB_CJ: "成就",

    WDDDW: "公会未达到对应段位",
    GHZ_SJ: "S{1}赛季",
    GHZ_YBM1: "已报名",
    GHZ_WBM: "未报名",
    GHZ_YBM: "第{1}轮{2}赛匹配中",
    GHZ_BMGH: "报名公会：{1}",
    GHZ_TJ: "等待会长、官员报名中",
    GHZ_BMCG: "报名S{1}赛季成功",
    GHZ_BMSB: "只有会长、官员可报名公会争锋",
    GHZ_BMSJ: "报名S{1}赛季",
    GHZ_DW1: "青铜",
    GHZ_DW2: "白银",
    GHZ_DW3: "铂金",
    GHZ_DW4: "王者",
    GHZ_SC: "第{1}/{2}轮 {3}赛",
    GHZ_PPSB: "匹配失败，本轮匹配时公会30级玩家少于10人",
    GHZ_XZ: "休战：本轮匹配人数不足",
    GHZ_DDXZ: "第{1}轮{2}赛休战中",
    GHZ_SQJSZ: "比赛结算中.....",
    GHZ_SLSQPM: "上轮赛区排名",
    ZU: "组",
    GHZ_SLJS: "第{1}轮{2}赛结束",
    GHZ_JSQ: "结算期",
    GHZ_DDPP: "第{1}轮{2}赛匹配中",
    GHZ_BLJF: "本轮积分+",
    GHZ_LKJF: "轮空积分+",
    GHZ_WZRANK: "王者{1}名",
    GHZ_CRBM: "次日可报名下轮比赛",
    GHZ_LK: "本轮轮空",
    GHZ_GXLK: "恭喜轮空直接晋级{1}组",
    GHZ_PPZ: "第{1}/{2}轮{3}赛匹配中",
    GHZ_SJJS: "赛季结束",
    SJJG: "S{1} 赛季结果",
    GHZ_ZWZDXX: "暂无战斗信息",
    XLDJS: "下轮比赛: ",


    ZBSLBZ: "装备数量不足",
    DJM: "第{1}名",
    ERR_NO: "本轮比赛匹配时未达成参与条件",
    ERR_LV: "30级以上玩家方可参与",
    ERR_NUM: "本轮比赛挑战次数不足",
    ERR_HEALTH: "当前玩家脸都被打肿了，换个挑战吧！",
    GHSJDWJL: "公会赛季段位奖励",
    mygh: "公会成员<font color=#30ff01>{1}</font>挑战了敌方公会成员<font color=#c80000>{2}</font>，对其造成<font color=#30ff01>{3}</font>点伤害。",
    rival: "敌方公会成员<font color=#c80000>{1}</font>挑战了我方公会成员<font color=#30ff01>{2}</font>，对其造成<font color=#c80000>{3}</font>点伤害。",
    mygh_win: "并成功获取{1}积分",
    rival_win: "我方成员惜败！",
    GHZ_PMJL: "组{1}名公会成员奖励",
    GHZ_YH: "组{1}公会成员奖励",
    GHZ_QB: "组{1}名以后公会成员奖励",
    DI: "第",
    WRWZ: "未入王者",
    JJ_1: "晋级区",
    JJ_0: "保级区",
    "JJ_-1": "降级区",
    ZPM: "组排名",

    WCRWGS: "完成任务个数： ",


    GZJSCSJS: "贵族3解锁传说祭祀",
    todaycs:'今日剩余{1}次',
    HD_timeDown:'剩余:{1}',
    SHENGYU:'剩余:',
    GZZS:'贵族{1}专属',
    GZXGM:'贵族{1}以上玩家方可购买',
    MRSG_PAYNUM:'每日限购{1}次',
    MRXG: "福利礼包",
    GONGHUI:'公会',
    BIANHAO:'编号',
    UI_TITLE_WJXX:'玩家信息',
    NEXT_treasure:'下次搜寻时间:{1}',
    WANJIA: "主角",
    XuanXing:'功能',
    BangZhu:'公告',
    FanKui:'反馈',
    UUID:'<font color=#804326>ID:</font>{1}',
    ToDaySx:'已达今日购买上限',
    czlb_djs:'{1}天',
    czlb_djs1: "{1}小时",
    czlb_djs2: "{1}分钟",
    heartError_00 :'领取并赠送成功！',
    heartError_01 :'当前领取已达上限！',
    heartError_02 :'赠送成功，当前没有友情印记可以领取！',
    heartError_10 :'赠送已经达到上限，领取友情印记成功！',
    heartError_11 :'领取和赠送友情印记都已经达到上限！',
    heartError_12 :'赠送已经达到上限，当前没有可以领取！',
    heartError_13 :'没有可以赠送的好友',
    heartError_20 : '没有可以赠送的好友，领取友情印记成功！',
    heartError_21 : '当前领取已达上限！',
    heartError_22: '没有可以赠送的好友，没有可以领取！',
    tanxian_gj_error:'没有可领取的挂机奖励',
    gonghui_juanxian:'<font node=1></font>x{1}',
    gonghui_gm:'《{1}》公会诚邀你的加入',
    COLOR0: '白色',
    COLOR1: '绿色',
    COLOR2: '蓝色',
    COLOR3: '紫色',
    COLOR4: '橙色',
    COLOR5: '红色',
    ZSZZ: "属性激活限定: ",
    ZZ1: "亡灵",
    ZZ2: "奥术",
    ZZ3: "邪能",
    ZZ4: "自然",
    ZZ5: "神圣",
    ZZ6: "黑暗",
    QXZSYYX: "请选择使用英雄",
    DQZWSFGM: "当前暂无{1}，是否花费{2}钻石购买",
    SHENQI_XXJ:'属性{1}级',
    SHENQI_bt: "{1}({2}级)",
    SHENQI_JCSX: '<font color=#fbc647>基础属性</font>',
    SHENQI_JBJC:'基础属性',
    SHENQI_ZSJC:'特殊属性 <font color=#be5e30>(专属加成需要装备神器方可生效)</font>',
    SHENQI_JCJC:'<font color=#fbc647>基础属性 （升级属性强化效果）</font>',
    SHENQI_JNJC:'<font color=#fbc647>特殊属性 （升级技能激活效果）</font>',
    SHENQI_atk:'全队攻击+{1}',
    SHENQI_hp:'全队血量+{1}',
    SHENQI_KILLBUFF: '全队{1}+{2}',
    SHENQI_JNDJ: '（技能等级{1}级）',
    SHENQI_KILLBUFF_H: '<font color=#6c6c6c>全队{1}+{2}</font>',
    SHENQI_JNDJ_H: '<font color=#6c6c6c>（技能等级{1}级）</font>',
    SHENQI_JNJC_NAME: '技能加成',
    SHENQI_JNDJ1: '<font color=#22b529>技能{1}：{2}+{3}</font>',
    SHENQI_JNDJ1_H: '<font color=#B2B2B2>技能{1}：{2}+{3}</font>',
    DQGJSY: "当前挂机收益",
    DQGJSC: "挂机时长 {1}",
    SQ_QXWC: "请先完成前一章节所有任务",
    SHENQICHONGZHU:'重铸后神器将回到<font color=#fbc647>初始状态</font>，并返还除开金币外所有资源，是否重铸？',
    SMR: '神秘人',
    SJQM: '随机取名按钮',
    KUAFULTL:'跨服聊天30级开启',
    YWZB_QF:'区服:{1}',
    PHB_MAIN_HZ:'会长:{1}',
    PHB_MAIN_GH:'公会:{1}',
    PHB_MAIN_HZ_1:'会长: {1}',
    PHB_MAIN_GH_1:'公会: {1}',
    PHB_MAIN_JRGH:'未加入公会',
    CZ: "重置",
    FK: "亲爱的勇者大大们:\n" +
        "       为了让你有更好的游戏体验，期望你能将你在游戏中体验到的问题反馈给我们，请通过游戏公告的联系方式联系我们，谢谢！\n" +
        "" +
        "" +
        ""
};

var _FIRSTNAME = ["豁达","风度","柔韧","兴奋","激奋","惧怕","怒吼","悲伤","俊美","扁平","朴素","庄重","和谐","坦然","豁达","风度","柔韧","温柔","苗条","可人","内向","青春","伤心","美丽","呆滞","潇洒","高雅","洋气","快乐","激昂","恐惧","震怒","悲痛","恬静","小巧","大方","端庄","友爱","踊跃","潇洒","高雅","洋气","可爱","秀气","妖冶","外向","冷漠","痛苦","帅气","心烦","不凡","情调","海涵","喜悦","激情","胆怯","气愤","悲惨","慈祥","笔直","整洁","安闲","认真","端庄","不凡","情调","海涵","善良","娇美","妖媚","丑陋","冷魅","悲伤","清秀","伤感","雍容","淡泊","儒雅","愉快","敬佩","畏缩","担忧","悲凉","苍白","端庄","时髦","安详","美丽","妩媚","雍容","淡泊","儒雅","无邪","娇媚","妩媚","绝美","邪魅","悲泣","活泼","黯然","轩昂","迷人","淡定","畅快","佩服","发慌","发愁","哀伤","白皙","秀气","摩登","恬静","结实","坚强","轩昂","迷人","淡定","率性","娇艳","冰冷","素雅","甜美","忧伤","温柔","惆怅","爽朗","安然","欢畅","崇拜","心慌","犯愁","哀怨","清秀","秀美","讲究","文雅","爽朗","安然","漂亮","艳丽","忧郁","淡雅","倾城","悲痛","娇小","开心","悠然","宁静","欢喜","钦仰","恐慌","忧伤","忧伤","光滑","巧嘴","笔挺","镇静","悠然","宁静","美丽","清纯","清秀","高贵","倾国","沮丧","高大","从容","随和","欢腾","惊恐","激怒","忧愁","伤感","英俊","朱唇","邋遢","沉着","从容","随和","文雅","单纯","靓丽","优雅","倾世","气馁","狡猾","坦荡","随性","欢快","惊慌","恼火","忧心","瘦削","红润","苍白","俗气","诚挚","坦荡","随性","文静","活泼","害羞","高雅","美女","郁闷","阴险","大方","傲骨","欣喜","惊吓","怒斥","愁闷","憔悴","挺直","红润","憨厚","大方","傲骨","烦躁","胆小","幸运","宽容","大气","恳切","宽容","大气","低沉","勇敢","嬉笑","厚道","王者","潇洒","厚道","王者","消沉","乐观","狂笑","妩媚","羞涩","腼腆","严厉","冷酷","坚毅","傲慢","疲惫","沮丧","失神","诧异","发愣","尴尬","踌躇","悲观","消极","酸涩","落魄","绝望","喜悦","狂喜","尽情","快乐","愉悦","畅快","欣喜","幸福","得意","痛快","满足","欢乐","快活","甜美","微笑","兴奋","自豪","欣慰","高兴","满意","安静","孤僻","外向","羞涩","坚强","守信","陶醉","逸乐","快慰","欢喜","荣幸","尽情","舒畅","愉快","喜哈","愉快"];
var _MIDNAME = ['·'];
var _LASTNAME = ["海柔尔","塞莉亚","温柔","红人","姗姗","浪子","奥斯汀","赫瑟尔","夏洛特","灵魂","小珊","空空","奥斯汀","赫达","绮莉","无情","笑傲","天使","卡卡","白壁德","海伦","克洛怡","潇洒","神圣","咪咪","清景","巴比","海洛伊","克莱儿","无忧","大爱","蜜蜜","晓林","巴比特","胡尔达","克莱拉","繁华","天使","小蜜","庆","巴赫","埃达","克莱曼","柔情","温柔","小秘","阿信","培根","艾尔玛","康斯坦","绝版","灵魂","莫莫","波特","鲍德温","伊莎尔","科拉","寂寞","无情","沫沫","草雉","巴纳德","杰奎琳","卡洛儿","幻想","潇洒","么么","巴神","巴尼","乔","妮莉雅","旋律","无忧","猫猫","笨笨","巴雷特","琼","黛西","优雅","繁华","美子","飞飞","巴雷特","希伯来","黛儿","精彩","柔情","雯雯","浮云","巴里","乔伊","黛娜","辉煌","绝版","小雯","仙人","巴特","乔伊斯","黛芙妮","荣耀","寂寞","晓雯","东东","巴塞洛","朱恩","达莲娜","梦之","幻想","乐乐","天宇","巴利特","卡玛","潼恩","寻梦","旋律","小仙","灰狼","巴顿","凯伦","黛碧","精英","优雅","仙儿","光光","拜耳","凯伊","迪得莉","精彩","格格","阳阳","鲍尔","金百莉","迪丽雅","记忆","辉煌","小倩","冷风","蒲福","吉蒂","丹尼丝","伤心","荣耀","倩倩","竹子","比尔德","克里斯","黛安娜","迷糊","梦之","小茜","牙牙","博福特","罗瑞尔","黛娜","善良","寻梦","小倩","小神","比彻","罗伦","唐娜","安","精英","公主","泡泡","贝克","李","多拉","比利","小诺","战神","贝基","盖尔","多琳","琼斯","记忆","小","使者","比尔博","林赛","多莉丝","卡尔","伤心","多多","小龙","贝尔","洛兰","桃乐斯","查理","迷糊","汐","胖胖","贝拉米","璐易丝","尔莎","嘉利","善良","羊羊","闹闹","贝尔","莉迪亚","伊甸","丘奇","安","鬼鬼","毛毛","贝洛克","玛佩尔","伊迪丝","丹","比利","小鬼","大飞","本","玛德琳","艾德文娜","杜威","琼斯","雪舞","皇帝","迪克特","穆得","艾琳","迪克","卡尔","琪琪","春哥","本杰明","塞尔特","艾琳诺","道尔","查理","温柔","酷酷","贝内特","麦格","伊丽莎","盖伊","嘉利","小姐","圈圈","本森","梅根","埃拉","娜","丘奇","雪舞","麦兜","本瑟姆","玛希","艾尔玛","休","丹","心儿","熊熊","伯克利","玛莉提","爱尔莎","伊凡","杜威","欣儿","夜夜","边沁","纳塔利","艾西","乔","迪克","馨儿","麒麟","贝克莱","诺玛","艾娃","梅","道尔","小静","苍穹","伯纳尔","诺维雅","埃米莉","永恒","盖伊","虹虹","阿萨","伯纳德","奥蒂特","埃玛","娜","傲雪","贝齐","伯纳德","欧尔佳","艾丽卡","休","扶子","贝蒂","伯特","普鲁斯","艾丝特","伊凡","素素","布莱兹","伯莎","普莉斯","尤多拉","乔","雨滴","布鲁克","伯蒂","波比","尤妮斯","梅","夏洛特","伯特伦","罗伯塔","伊捷琳","永恒","诺拉","谢里尔","贝色麦","罗克珊","伊芙","克莱拉","贝丝","鲁思","伊夫林","小夏","德博拉","贝西墨","丝柏凌","梵妮","小嫣","多拉","贝西","斯泰西","费怡","语嫣","伊甸","比顿","丝特勒","弗罗拉","天涯","伊迪丝","白求恩","托比","弗伦丝","阿欣","艾伦","贝齐","厄休拉","弗莉达","青青","费滋","贝蒂","维隆卡","菲蕾卡","大白","弗莉达","比尔","维多利","嘉比拉","小白","盖尔","比利","维基","姬玛","白白","乔治亚","比勒尔","维文","珍妮芙","樱花","吉榭尔","布莱克","雷德姬","梧桐","汉纳","布莱克","桑席","格拉迪","月影","赫达","布卢默","耶达","葛瑞丝","小花","海伦","菲尔德","依耶芙特","谢尔达","小兔","埃达","菲尔","丝塔芙","蘑菇","艾尔玛","布卢尔","关德琳","小丫","希伯来","布劳","汉纳","晨曦","乔伊","布卢姆","哈莉特","如梦","乔伊斯","鲍勃","赫瑟尔","囡囡","朱恩","博比","赫蒂","海棠","卡玛","博斯韦","海伦","婷婷","吉蒂","鲍恩","嘟嘟","罗瑞尔","波义耳","希尔达","兔兔","罗伦","鲍曼","希拉莉","糖糖","盖尔","波伊尔","汉妮","三月","林赛","布拉德","埃达","风铃","洛兰","布雷","艾娜","落落","穆得","英格丽","薇薇安","塞尔特","布里奇","艾琳","罂粟","麦格","布赖特","爱莉丝","妮子","梅根","布罗德","艾尔玛","丹丹","欧尔佳","白朗蒂","伊莎蓓","波比","勃朗特","艾薇","糖果","罗伯塔","布鲁克","杰奎琳","菲菲","鲁思","布朗","婕咪","羽毛","丝柏凌","布朗","珍","萝莉","丝特勒","布朗宁","珍妮特","落雪","托比","勃朗宁","珍尼丝","花飞","厄休拉","布鲁斯","琴","暗香","维隆卡","布鲁诺","姬儿","夏天","维基"];

//注意：这个逻辑后端other.json中也有配置，send_chat中也有判断一次
var CHAT_BLOCK_WORD = "礼|充|值|储|返|利|Q|群|裙|福利|折|6|7|8|9|0|零|一|二|四|五|六|七|八|九|十|壹|贰|叁|伍|陆|柒|捌|玖|①|②|③|④|⑤|⑥|⑦|⑧|⑨|⑴|⑵|⑶|⑷|⑸|⑹|⑺|⑻|⑼|⒈|⒉|⒊|⒋|⒌|⒍|⒎|⒏|⒐|㈠|㈡|㈢|㈣|㈤|㈥|㈦|㈧|㈨";

;;G.gc={};
//以下模型id需要替换为new
G.gc.changeModels = "41065,41066,4106a,45045,45046,4504a,41013,21034,21035,21036,43034,43035,33024,33025,33026,33014,33015,32044,32045,32046,31044,31045,34025,34026,3402a,61025,61026,6102a,43054,43055,43056,52034,52035,13023,15024,15025,22012,25033,25023,21024,21025,21045,21046,2104a,32011,31012,35023,31023,35045,35046,3504a,32055,32056,3205a,31085,31086,3108a,31075,31076,3107a,43023,45013,42015,42016,4201a,61014,61015,52013".split(',');
G.gc.ifChangeModels = function(){
    if(G.owner == 'blyinghe'){
        return true;
    }
    return false;
};
//格式化物品icon
G.class.fmtItemICON = function(pngName){
    pngName = pngName.toString();
    var _noExt = pngName.replace('.png','');
    if(G.gc.ifChangeModels() && X.inArray(G.gc.changeModels,_noExt)){
        return 'new'+pngName;
    }
    return pngName;
};

G.gc.COLOR = {
    0: "#ffffff",
    // 1: "#98f673", // 绿 n6
    // 2: "#7bbfff", // 蓝 n7
    // 3: "#d97eff", // 紫 n8
    // 4:'#ff7a3f', // 橙 n9
    // 5:'#ff3d23', // 红 n10

    1:'#25891c',  //绿色物品名称
    2:'#0d93df',  //蓝色物品名称
    3:'#aa05ba',  //紫色物品名称
    4:'#e85911',  //橙色物品名称
    5:'#c80000',  //红色物品名称
    10: "#7F7F7F",

    n1:'#ffffff', // 弹框标题, 字号 24
    n1_1:'#3c53a9', //弹框描边
    n2:'#edbb82', // 切页标签（未选中） 24
    n3:'#804326', // 切页标签（选中） 24
    n4:'#804326', // 浅色底文本内容 22
    n5:'#f6ebcd', // 深色底文本内容    描边 #F6EBCD
    n6:'#fff71d', //战斗力 20
    n7:'#1c9700', //增长数值
    n8:'#ffffff', //进度条文字       描边 #66370e
    n9:'#fdd464', //装备套装名称
    n10:'#63584a', //灰色色值
    n11:'#E6D3B6', //输入框占位文字
    n12:'#7b531a',   //黄色按钮内的文字
    n13:'#2f5719',   //绿色按钮内的文字
    n14:'#712d13',   //红色按钮内的文字

    n15:'#6c6c6c',  //灰态按钮内的文字

    n16:'#ff4e4e',   //材料不足红色文字      描边 #680000
    n24:'#ffffff',  //背包英雄小头像等级，物品数量    字号16    描边 #2a1c0f

    n34:'#30ff01',   //深色底板区分色...
    n36:'#eb3a3a',   //浅色底板区分色
    n101:'#7b531a', //黄色按钮文字 24
    n102:'#2f5719', //绿色按钮文字 24
    n103:'#712d13', //红色按钮文字 24
    n104: "#be5e30",

    'white':'#ffffff',//白色
    'hui':'#999999'
};

G.gc.zIndex = {
    mainmenu:1,
    toper:2,
    tipsmanager:100,
};

//动态按钮配置
G.gc.btnsConf = {
    shouchong:{
        name:'首充',
        img:'img/mainmenu/btn_schl.png',
        parent:'lefttop',
        order:1,
        ani: "ani_xiaotubiao_shouchonghaoli",
        callback: function (node) {
            node.touch(function (sender, type) {
                G.frame.shouchong.show();
            });
        }
    },
    kaifukuanghuan:{
        name:'开服狂欢',
        img:'img/mainmenu/btn_kfkh.png',
        parent:'lefttop',
        order:2,
        callback: function (node) {
            node.click(function (sender, type) {
                G.frame.kaifukuanghuan.show();
            });
        }
    },
    xianshilibao:{
        name: "限时礼包",
        img: "img/mainmenu/btn_xslb.png",
        parent: "lefttop",
        order: 0,
        ani: "ani_xiaotubiao_xianshilibao",
        callback: function (node) {
            node.click(function (sender, type) {
                G.frame.xianshilibao.data(G.DATA.asyncBtnsData.xianshilibao).show();
            })
        }
    },
    yuejijin: {
        name: "月基金",
        img: "img/mainmenu/btn_czjj.png",
        parent: "lefttop",
        order: 0,
        callback: function (node) {
            node.click(function (sender, type) {
                G.frame.xianshilibao.data(G.DATA.asyncBtnsData.yuejijin).show();
            })
        }
    },
    meirishouchong: {
        name: "每日首充",
        img: "img/mainmenu/btn_mrsc.png",
        parent: "lefttop",
        order: 0,
        ani: "ani_xiaotubiao_meirishouchong",
        callback: function (node) {
            node.click(function (sender, type) {
                G.frame.meirishouchong.show();
            })
        }
    }
};
;;/**
 * Created by panda on 16/3/30.
 */
(function () {
    //建筑箭头动画
    //
    // G.event.on('buildDataOver',function(d){
    //     G.handleArrow();
    // });
    // G.handleArrow = function () {
    //     var myJb = P.gud.jinbi;
    //     var myMc = P.gud.dianneng;
    //     var myKs = P.gud.gangtie;
    //     var myLv = P.gud.lv;
    //     var jzData = G.DATA.buildData;
    //
    //     //奇迹
    //     var con = null;
    //     if (myLv >= G.gc.jz.qiji) {
    //         if ( myLv >= (jzData.qiji*2) + 10) {
    //             con = G.class.getConf("qiji")[jzData.qiji];
    //             var needMap = {};
    //             for (var i in con.need){
    //                 needMap[con.need[i]['t']] = con.need[i]['n'];
    //             }
    //             if (needMap.jinbi <= myJb && needMap.dianneng <= myMc && needMap.kuangshi <= myKs) {
    //                 if (jzData.qiji < G.gc.jz.qjMaxLv ) {
    //                     G.event.emit('arrowChange',{tag:'qiji',type:1});
    //                 }
    //             } else {
    //                 G.event.emit('arrowChange',{tag:'qiji',type:0});
    //             }
    //         } else {
    //             G.event.emit('arrowChange',{tag:'qiji',type:0});
    //         }
    //     }
    //
    //     //魔法学院
    //     if (myLv >= G.gc.jz.mofacollege) {
    //         if (jzData.qiji > jzData.mofaxueyuan) {
    //             var jinbi = G.class.formula.compute(G.class.getConf('mfxy_base.upneed.jinbi'), {blv: jzData.mofaxueyuan});
    //             var dianneng = G.class.formula.compute(G.class.getConf('mfxy_base.upneed.dianneng'), {blv: jzData.mofaxueyuan});
    //             var kuangshi = G.class.formula.compute(G.class.getConf('mfxy_base.upneed.kuangshi'), {blv: jzData.mofaxueyuan});
    //             if (jinbi <= myJb && dianneng <= myMc && kuangshi <= myKs) {
    //                 G.event.emit('arrowChange',{tag:'mofaxueyuan',type:1});
    //             } else {
    //                 G.event.emit('arrowChange',{tag:'mofaxueyuan',type:0});
    //             }
    //         } else {
    //             G.event.emit('arrowChange',{tag:'mofaxueyuan',type:0});
    //         }
    //     }
    //
    //     //城堡
    //     if (myLv >= G.gc.jz.chengbao) {
    //         if (jzData.qiji > jzData.chengbao) {
    //             var curLvConf = G.class.chengbao.getById(jzData.chengbao);
    //             var need = curLvConf.need;
    //             var obj = {};
    //             for (var j = 0; j < need.length; j++) {
    //                 obj[need[j].t] = need[j].n;
    //             }
    //             if (obj.jinbi <= myJb && obj.mucai <= myMc && obj.kuangshi <= myKs) {
    //                 G.event.emit('arrowChange',{tag:'chengbao',type:1});
    //             } else {
    //                 G.event.emit('arrowChange',{tag:'chengbao',type:0});
    //             }
    //         } else {
    //             G.event.emit('arrowChange',{tag:'chengbao',type:0});
    //         }
    //     }
    //
    //     //铁匠铺
    //     if (myLv >= G.gc.jz.tiejiangpu) {
    //         if (jzData.qiji > jzData.tiejiangpu) {
    //             var curLvConf = G.class.tiejiangpu.getById(jzData.tiejiangpu);
    //             var need = curLvConf.need;
    //             var obj = {};
    //             for (var j = 0; j < need.length; j++) {
    //                 obj[need[j].t] = need[j].n;
    //             }
    //             if (obj.jinbi <= myJb && obj.mucai <= myMc && obj.kuangshi <= myKs) {
    //                 G.event.emit('arrowChange',{tag:'tiejiangpu',type:1});
    //             } else {
    //                 G.event.emit('arrowChange',{tag:'tiejiangpu',type:0});
    //             }
    //         } else {
    //             G.event.emit('arrowChange',{tag:'tiejiangpu',type:0});
    //         }
    //     }
    // };
    G.event.on('arrowChange', function (d) {

        if (d && d.tag) {
            if (d.type == 1) {
                switch(d.tag) {
                    case 'qiji':
                        G.setNewArrow(G.frame.main.city.ui.finds('wz_qj'),0,getJZPos('wz_qj'));
                        break;
                    case 'mofaxueyuan':
                        G.setNewArrow(G.frame.main.city.ui.finds('wz_mfxy'),0,getJZPos('wz_mfxy'));
                        break;
                    case 'chengbao':
                        G.setNewArrow(G.frame.main.city.ui.finds('wz_cb'),0,getJZPos('wz_cb'));
                        break;
                    case 'tiejiangpu':
                        G.setNewArrow(G.frame.main.city.ui.finds('wz_tjp'),0,getJZPos('wz_tjp'));
                        break;
                    default :
                        break;
                }
            } else {
                switch(d.tag) {
                    case 'qiji':
                        G.removeNewArrow(G.frame.main.city.ui.finds('wz_qj'));
                        break;
                    case 'mofaxueyuan':
                        G.removeNewArrow(G.frame.main.city.ui.finds('wz_mfxy'));
                        break;
                    case 'chengbao':
                        G.removeNewArrow(G.frame.main.city.ui.finds('wz_cb'));
                        break;
                    case 'tiejiangpu':
                        G.removeNewArrow(G.frame.main.city.ui.finds('wz_tjp'));
                        break;
                    default :
                        break;
                }
            }
        }
    });
    function getJZPos(name) {
        var name2pos = {
            wz_tjp:cc.p(0,25),
            wz_mfxy:cc.p(0,25),
            wz_jyh:cc.p(0,0),
            wz_kd:cc.p(0,0),
            wz_cb:cc.p(0,25),
            wz_qj:cc.p(0,25)
        };
        return name2pos[name];
    }
})();
;;/**
 * Created by wfq on 2015/12/9.
 */
(function () {
    //创建角色
    var ID = 'create';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id);
        },
        setContents: function(){
            var me = this;
            var view = me._view;

            X.arrayRand(me._flags).triggerTouch( ccui.Widget.TOUCH_ENDED );
            view.nodes.txt_srk.setString(me.createRandomName());
        },
        setInfo:function() {
            var me = this;
            var view = me._view;

            // var wid = G.class.shero({zzid:me.curJsType,ico:0});
            // wid.lv.hide();
            // wid.kuang.hide();
            // wid.setPosition(cc.p(me.crLayIco1.getContentSize().width / 2,me.crLayIco1.getContentSize().height / 2 - 2));
            // view.panel_rw.removeAllChildren();
            // view.panel_rw.addChild(wid);

            // var avatar = {
            //     1:'tx_dxc0.png',
            //     2:'tx_dxc1.png',
            //     3:'tx_rz0.png',
            //     4:'tx_rz1.png',
            //     5:'tx_wl0.png',
            //     6:'tx_wl1.png',
            // };
            // view.nodes.panel_rw.setBackGroundImage('avatar/' + avatar[me.curJsType], 0);

            // me.ui_panel_text.show();
            // me.ui_panel_text.setBackGroundImage('img/cjjs/' + ['wz_renzu.png','wz_wangling.png','wz_dixiacheng.png'][me.curJsType - 1],ccui.Widget.PLIST_TEXTURE);
        },
        //创建随机角色名
        createRandomName: function () {
            var firstName = _FIRSTNAME;
            var midName = _MIDNAME;
            var lastName = _LASTNAME;
            var name = X.arrayRand(firstName) + X.arrayRand(lastName);
            //var name = X.arrayRand(firstName) + X.arrayRand(midName) + X.arrayRand(lastName);

            return name;
        },
        bindUI: function () {
            var me = this;
            var view = me._view;
            me.nodes.ui_top_fh.hide();
            me.nodes.ui_top_wh.hide();
            me.nodes.ui_top_whbg.hide();
            me.ui.finds('ui_top_whbg1').hide();
            me.ui.finds('ui_top_bg').hide();
            // me.ui.nodes.ui_top_fh.click(function(){
            //     me.remove();
            // })

            me._flags = [view.nodes.btn_bb, view.nodes.btn_tk, view.nodes.btn_zsj];
            for (var i = 0; i < me._flags.length; i++){
                var flag = me._flags[i];
                flag.type = i+1;
                flag.click(function (sender, type) {
                    me.curJsType = sender.type;
                    sender.setBright(true);
                    for (var j = 0; j < me._flags.length; j++){
                        if (sender.type != j+1){
                            me._flags[j].setBright(false);
                        }
                    }
                    me.setInfo();
                });
            }

            //筛子随机角色名
            view.nodes.btn_sj.click(function (sender, type) {
                view.nodes.txt_srk.setString(me.createRandomName());
                // X.editbox.create( me.crWidName );
                X.LOG.add("随机取名按钮",{click:1});
            });

            view.nodes.btn_cjrw.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    var curJsName = view.nodes.txt_srk.getString();
                    if (me.curJsType == undefined){ // 当前阵营
                        G.tip_NB.show(L('JS_TIP'));
                        return;
                    }

                    curJsName = X.getValidName(curJsName);
                    if (curJsName != null) {
                        // curJsName 名字
                        // curJsType 阵营
                        // curIcoId 性别
                        var _sendData = [curJsName,me.curJsType,1001];
                        var extra = {};
                        if(G.CHANNEL && G.CHANNEL!="")extra['ext_channel'] = G.CHANNEL;
                        if(G.loginData && G.loginData['myu']!="")extra['ext_mybinduid'] = G.loginData['myu'];
                        if(G.channelId && G.channelId!="")extra['ext_channelId'] = G.channelId;
                        if(G.owner && G.owner!="")extra['ext_owner'] = G.owner;
                        if(G._SERVERNAME && G._SERVERNAME!="")extra['ext_servername'] = G._SERVERNAME;
                        _sendData.push(extra);

                        G.ajax.send('user_register',_sendData,function(data) {
                            if (!data || !me.isShow) return;
                            var data = X.toJSON(data);

                            if (data.s === 1) {
                                var login = me.DATA;
                                G.OPENTIME = data.d.opentime;
                                me.remove();
                                G.class.loginfun.toMain(login.u,login.t,login.k,data.d,login.callback);
                                G.event.emit('dologin',{});
                                G.event.emit('createrole',{});
                                G.push.regInit();

                                G.loginAllData = data.d;
                            }
                        },true);
                    }
                }
            });
        },
        onOpen: function () {
            var me = this;
        },
        onAniShow:function() {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.DATA = me.data();

            new X.bView('chuangjianrenwu.json', function (view) {
                me._view = view;
                me.ui.nodes.panel_nr.addChild(view);
                me.bindUI();
                me.setContents();
            });
        },
        onRemove: function () {
            var me = this;
            // me.releaseRes(['cjjs1.plist','cjjs1.png']);
        }
    });

    G.frame[ID] = new fun('ui_tymb_7.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/26.
 */
(function () {
    //编辑通用界面
    var ID = 'edit';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f6";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.DATA = me.data();
            // me.DATA = {
            //     type:1,
            //     title:'ww',
            //     info:'aaa',
            //     placeholder:'eeee',
            //     callback:''
            // };
            setPanelTitle(me.nodes.txt_title,me.DATA.title);
            new X.bView('gonghui_tk.json', function (view) {
                me._view = view;

                me.nodes.panel_nr.removeAllChildren();
                me.nodes.panel_nr.addChild(view);

                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me['setPanel' + me.DATA.type]();
        },
        showPanel: function (type) {
            var me = this;

            var panel = me._view;
            var txtNameArr = ['panel_input2','panel_input'];
            var btnArr = ['btn_confirm2','btn_confirm'];
            for (var i = 0; i < txtNameArr.length; i++) {
                var txtName = txtNameArr[i];
                var btn = btnArr[i];
                if (type == i) {
                    panel.nodes[txtName].show();
                    panel.nodes[btn].show();
                } else {
                    panel.nodes[txtName].hide();
                    panel.nodes[btn].hide();
                }
            }
        },
        //公会改名类似的
        setPanel0: function () {
            var me = this;

            var panel = me._view;
            me.showPanel(me.DATA.type);
            X.render({
                txt_title: function (node) {
                    node.setString(me.DATA.info);
                },
                panel_input2: function (node) {
                    var txtInput = node.finds('txt_input$');

                    txtInput.setPlaceHolder(me.DATA.placeholder);
                    // txtInput.setPlaceHolderColor(cc.color(G.gc.COLOR.n11));
                    txtInput.addEventListener(function (sender, type) {
                        switch (type) {
                            case ccui.TextField.EVENT_INSERT_TEXT:
                                var str = sender.getString();
                                if(str.length > 6) {
                                    sender.setString(str.substring(0, 6));
                                }
                                break;
                        }
                    })
                },
                btn_confirm2: function (node) {
                    node.finds('txt_sl$').hide();
                    node.finds('token_zs').hide();
                    node.finds('txt_confirm2').hide();

                    var need = [].concat(me.DATA.need);
                    if (need) {
                        node.finds('txt_sl$').show();
                        node.finds('token_zs').show();
                        node.finds('txt_confirm2').show();
                        setTextWithColor(node.finds('txt_sl$'),need[0].n,G.gc.COLOR[G.class.getOwnNum(need[0].t,need[0].a) >= need[0].n ? 'n1' : 5]);
                    } else {
                        node.setTitleText(L('BTN_OK'));
                    }
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            var txt = panel.nodes.panel_input2.finds('txt_input$').getString().trim();
                            var callback = me.DATA.callback;
                            callback && callback(txt);
                        }
                    });
                }
            },panel.nodes);
        },
        //公会招募相关的
        setPanel1: function () {
            var me = this;

            var panel = me._view;
            me.showPanel(me.DATA.type);
            X.render({
                txt_title: function (node) {
                    node.setString(me.DATA.info);
                },
                panel_input: function (node) {
                    var txtInput = node.finds('txt_input$');
                    var str = me.DATA.placeholder || X.STR(L('gonghui_gm'),P.gud.ghname);
                    txtInput.setPlaceHolder(str);
                    txtInput.setPlaceHolderColor(cc.color(G.gc.COLOR.n11));
                    txtInput.setMaxLength(30);
                    txtInput.setMaxLengthEnabled(true);
                    txtInput.addEventListener(me.textFieldEvent, this);
                },
                txt_input: function (node){

                },
                btn_confirm: function (node) {
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            var txt = panel.nodes.panel_input.finds('txt_input$').getString().trim();
                            if (txt == '') {
                                txt = panel.nodes.panel_input.finds('txt_input$').getPlaceHolder();
                            }
                            var callback = me.DATA.callback;
                            callback && callback(txt);
                        }
                    });
                }
            },panel.nodes);
        },
        textFieldEvent : function (sender, type) {
            switch (type)
            {
                case ccui.TextField.EVENT_ATTACH_WITH_IME:
                    sender.setPlaceHolder("");
                    cc.log("EVENT_ATTACH_WITH_IME");
                    break;
                case ccui.TextField.EVENT_DETACH_WITH_IME:
                    cc.log("EVENT_DETACH_WITH_IME");
                    break;
                case ccui.TextField.EVENT_INSERT_TEXT:
                    changdu(sender);
                    cc.log("EVENT_INSERT_TEXT");
                    break;
                case ccui.TextField.EVENT_DELETE_BACKWARD:
                    cc.log("EVENT_DELETE_BACKWARD");
                    break;
                default:
                    cc.log("default");
                    break;
            }
            function changdu(sen) {
                var len = getRealLen(sen.getString());
                if(len > 60){
                    var send = sen.substr(0, sen.length - 1);
                    changdu(send);
                }else{
                    return sen;
                }
            }
        },

});

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/23.
 */
(function () {
    //翻牌
    var ID = 'fanpai';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f6";
            me._super(json, id);
        },
        initUi: function () {
            var me = this;

            me.ui.zIndex = 1000;
        },
        bindBtn: function () {
            var me = this;

            // me.nodes.btn_qr2.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         me.remove();
            //     }
            // });

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (!me.isCard) {
                        // G.tip_NB.show(L('PLEASE_OPEN_CARD'));
                    } else {
                        me.remove();
                    }
                }
            });

        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            // me.nodes.btn_qr2.hide();
            me.DATA = me.data();

            // me.DATA = {
            //     prize:[{a:'item',t:25075,n:1}],
            //     show:[{a:'item',t:25075,n:1},{a:'item',t:25075,n:1}],
            // };
            // me.DATA.show.push(me.DATA.prize[0]);

            me.setContents();
        },
        onHide: function () {
            var me = this;
        },

        setContents: function () {
            var me = this;

            var item = me.ui.finds('panel_fanpai');

            me.cards = [];
            me.act_node = [];

            var panel = me.ui;
            for (var i = 0; i < 3; i++) {
                var lay = panel.nodes['panel_' + (i + 1)];
                lay.removeAllChildren();

                var itemClone = item.clone();
                itemClone.setPosition(cc.p(lay.width / 2,lay.height / 2));
                itemClone.idx = i;
                me.setItem(itemClone);
                lay.addChild(itemClone);
                itemClone.show();
                me.cards.push(itemClone);
            }
        },
        setItem: function (ui,data) {
            var me = this;

            X.autoInitUI(ui);
            var imgWh = ui.nodes.img_wh;
            // var imgfp = ui.finds('bg_fp');
            var lay = ui.nodes.panel_item;
            imgWh.hide();
            // imgfp.hide();
            lay.removeAllChildren();
            lay.show();
            G.class.ani.show({
                json: "ani_fanpaidonghua",
                addTo: ui,
                x: ui.width/2 - 5,
                y: ui.height/2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    me.act_node.push(action);
                    action.playWithCallback("animation0", false, function () {
                        action.play("in", true);
                        imgWh.show();
                        // imgfp.show();
                    })
                }
            });


            ui.setTouchEnabled(true);
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    // me.nodes.btn_qr2.show();
                    if(me.isAni) return;
                    me.isAni = true;
                    X.audio.playEffect("sound/fanpaijiangli.mp3");
                    if (!sender.isOpen) {
                        sender.isOpen = true;
                        // me.fan(sender,me.DATA.show[sender.idx], sender.idx);
                        me.fan(sender, me.DATA.prize[0], sender.idx);
                        me.isCard = true;
                        me.act_node[sender.idx].playWithCallback('out',false, function(){
                            for (var i = 0; i < me.cards.length; i++) {
                                var card = me.cards[i];
                                card.isOpen = true;
                                if (card.idx != sender.idx) {
                                    (function (c,idx) {
                                            if (!cc.sys.isObjectValid(c)) return;
                                            me.act_node[c.idx].opacity = 0;
                                            var num = idx;
                                            if(idx > sender.idx){
                                                num = idx - 1;
                                            }
                                            me.fan(c,me.DATA.show[num]);
                                            me.cards[idx].finds('img_mcbg$').show();
                                            me.cards[idx].finds('img_mcbg$').zIndex = 10;
                                            me.cards[idx].finds('img_mcbg$').setScale(0.72);
                                            me.ui.setTimeout(function () {
                                            me.act_node[c.idx].playWithCallback("out", false, function () {
                                            })
                                        },0.2);
                                    })(card,i);
                                }
                            }
                        });
                    }
                }
            });
        },
        fan: function (card,d) {
            var me = this;

            var action1 = cc.scaleTo(.1,1.5,1);
            var action2 = cc.fadeOut(0.5);


            var imgWh = card.nodes.img_wh;
            imgWh.runActions([
                action1,
                cc.callFunc(function () {
                    var lay = card.nodes.panel_item;
                    var wid = G.class.sitem(d);
                    wid.setPosition(cc.p(lay.width / 2,lay.height / 2));
                    lay.addChild(wid);
                    G.frame.iteminfo.showItemInfo(wid);
                }),
                action2,
                cc.callFunc(function () {
                    imgWh.hide();
                    me.isAni = false
                })
            ]);
        },
    });

    G.frame[ID] = new fun('ui_zdjl.json', ID);
})();

;;/**
 * Created by wfq on 2018/6/15.
 */
(function () {
    //游戏中的全局监听事件

    //日期更迭时刷新主界面UI
    G.event.on('dayChange', function (d) {
        if (!d) return;

        // G.mainMenu.ui.setTimeout(function () {
        //     G.mainMenu.getBtnsListFromSer();
        // },1000);
        if(!G.view.mainView) return;
        cc.director.getRunningScene().setTimeout(function () {
            G.view.mainView.getAysncBtnsData(function(){
                G.view.mainView.allBtns["lefttop"] = [];
                G.view.mainView.setSvrBtns();
            }, false)
        }, 5000);
        X.cacheByUid("dmj_bj", 0);
        X.cacheByUid("dmj_jumpFight", 0);
        X.cacheByUid("ghtanhe",0);
        X.cacheByUid("todayTipRed", 0);
        G.hongdian.getHongdian(1);
    });

    //特定小时时更新主界面ui
    G.event.on('hourChange', function (d) {
        if (!d) return;

        var newDay = d.n,
            needFreshHours;
        needFreshHours = [12,13,18,19];
        if (X.inArray(needFreshHours,newDay.getHours())) {
            // G.mainMenu.ui.setTimeout(function () {
            //     G.mainMenu.getBtnsListFromSer();
            //     // if(newDay.getHours() == 12 && G.frame.map.isShow){
            //     //     if (G.frame.taishou.isShow) G.frame.taishou.refreshUI();
            //     //     G.frame.map.loadCityData(function () {
            //     //         if (G.frame.map.isShow) G.frame.map.setTaishou();
            //     //     });
            //     // }
            // },1000);
        }

    });
    //特定分钟时更新主界面ui
    G.event.on('minuteChange', function (d) {
        if (!d) return;
        // var newDay = d.n;
        if(G.view.mainView){
            G.hongdian.getData("guajitime", 1, function () {
                G.hongdian.getData("tanxian", 1, function () {
                    G.hongdian.checkTX();
                });
                if(G.frame.tanxian.isShow){
                    if(G.DATA.hongdian.guajitime > 0){
                        G.setNewIcoImg(G.frame.tanxian.nodes.btn1_on, .8);
                    }
                    G.removeNewIco(G.view.mainMenu.nodes.btn_tanxian);
                }
            })
        }
    });

    //登录完成后的事件处理
    G.event.on('loginOver', function () {
        // G.event.emit('needRefleshAttr');

        //重置新手引导的变量
        // G.DATA.guide_val = 0;
        // G.event.emit('need_get_hongdian',true);
        
        G.view.mainView.getAysncBtnsData(function () {
            G.view.mainView.setSvrBtns();
            G.view.mainView.nodes.panel_kfkh.hide();
            G.view.mainView.nodes.panel_sc.hide();

            // var kfkh = G.view.mainView.nodes.panel_ui.finds('kaifukuanghuan');
            // var shouchong = G.view.mainView.nodes.panel_ui.finds('shouchong');
            // var up = G.view.mainView.nodes.panel_ui.finds('ui_up');
            // if(kfkh){
            //     var pos = G.view.mainView.nodes.panel_ui.convertToWorldSpaceAR(kfkh.getPosition());
            // }
            // if(shouchong){
            //     var pos3 = G.view.mainView.nodes.panel_ui.convertToWorldSpaceAR(shouchong.getPosition());
            // }
            // var pos1 = G.view.mainView.nodes.panel_ui.convertToWorldSpaceAR(up.getPosition());
            // if(pos){
            //     var y = pos.y - pos1.y;
            //     var h = up.height * up.getAnchorPoint().y;
            //     up.setPosition(cc.p(up.x,up.y + y - h));
            // }
        });
    });
})();
;;(function () {
    var ID ='guide';

    //新手引导中的用到的方法
    G.class.guideFun = {
    	"open_set_player_name" : function(conf){
    		//打开改名界面
    		G.guide.remove();
    		G.frame.login_zc.show();
    	},
    	"scrollToBuild" : function(conf){
    		//滚动到指定建筑
    		G.view.mainView.scrollToBuild( conf.stype );
    	},
    	"openframe" : function(conf){
    		//通用打开指定窗口
    		if(G.frame[ conf.stype ]){
    			G.frame[ conf.stype ].show();
    		}else{
    			cc.log('openframe时找不到frame',conf.stype);
    		}
    	},
    	"pauseFight" : function(conf){
    		//暂停战斗
    		if(G.frame.fight.DATA)G.frame.fight.DATA.isPause = true;
    		cc.callLater(function(){
    			G.guidevent.emit('pauseFightOver');
    		});

    	},
    	"resumeFight" : function(){
    		//继续战斗
    		if(G.frame.fight.DATA)G.frame.fight.DATA.isPause = false;
    		G.frame.fight.tranRound && G.frame.fight.tranRound();

    		cc.callLater(function(){
    			G.guidevent.emit('resumeFightOver');
    		});
    	},
    	"closeFightWithWin" : function(){
    		//关闭战斗
    		G.frame.fight_win.remove();
    		G.frame.fight.remove();
    		cc.callLater(function(){
    			G.guidevent.emit('closeFightOver');
    		},50);
    	},
        "resumeshenqi": function () {
    	    //神器动画引导
    	    G.frame.tanxian.showSqAni();
        },
    	"moveHeroPos" : function(conf){
    		//交换英雄位置
    		var fingerAni = G.guide.view.fingerAni;
         var qianpai = G.frame.yingxiong_fight.ui.finds('panel_qp');

         var pos = qianpai.convertToWorldSpace();
         pos.x += 230;
         pos.y += 50;

         var aniNode;
         G.class.ani.show({
            json:'ani_xinshou_zhiyin',
            x:pos.x,
            y:pos.y,
            repeat:true,
            autoRemove:false,
            onload : function(node,action){
               aniNode = node;
               action.playWithCallback('in',false,function(){
                  action.play('wait',true);
              });
           }
       });

//			fingerAni.setPosition(pos);
//			
//			var action = cc.fmtActions([
//				cc.callFunc(function(){
//					fingerAni.show();
//					fingerAni.setPosition(pos);
//				}),
//				cc.moveBy(0.7,cc.p(-200,0)),
//				cc.delayTime(0.2),
//				cc.callFunc(function(){
//					fingerAni.hide();
//				}),
//				cc.delayTime(0.3)
//			]);
//			action = action.repeatForever();
//			action.setTag(41254488);
//			fingerAni.runAction(action);

G.guide.view.setTimeout(function(){
    G.guide.view.lockClick = function(sender,type){
       G.frame.yingxiong_fight.top.changeItem(
          G.frame.yingxiong_fight.ui.finds('ico_qianpai_yx$').finds('0'),
          G.frame.yingxiong_fight.ui.finds('ico_houpai_yx$').finds('2')
          );
       cc.isNode(aniNode) && aniNode.removeFromParent();
					//fingerAni.stopActionByTag(41254488);
					G.guidevent.emit('moveHeroPosOver');
				};
			},1000);
}
}


G.view.GuideView = X.bView.extend({
    ctor: function () {
        var me = this;
        me._super('xinshouyindao.json',null,{action:true});
    },
    onOpen: function () {
        var me = this;
            //me.ui.finds('bg').setTouchEnabled(false);
        },
        onShow: function () {
            var me = this;
            me.ui.finds('skip').hide();
            me.nodes.mask.setContentSize(cc.director.getWinSize().width, cc.director.getWinSize().height);
            me.nodes.lock.setContentSize(cc.director.getWinSize().width, cc.director.getWinSize().height);
            ccui.helper.doLayout(me.nodes.mask);
            ccui.helper.doLayout(me.nodes.lock);
            me.nodes.lock.show();
            me.nodes.lock.click(function(sender,type){
            	me.lockClick && me.lockClick(sender,type);
            });
        },
        onRemove: function () {
            var me = this;
            G.guide.view = null;
        },

        _hideAllType : function(){
        	var me = this;
        	me.nodes.duibai.hide();
        	me.nodes.qipao_zuo.hide();
        	me.nodes.qipao_you.hide();
        	me.nodes.mask.hide();
        	me.finds('ui').setTouchEnabled(false);
        	me.lockClick = function(){cc.log('lockClick...');};
        	if(cc.isNode(me.fingerAni)){
        		me.fingerAni.hide();
        	}
        	cc.log('_hideAllType');
        },

        parseSingleGuideConf : function(conf){
        	//预解析单条配置
        	var me = this;
        	if(!me.ui){
        		//兼容web逻辑
        		me.setTimeout(function(){
        			me.parseSingleGuideConf(conf);
        		},100);
        		return;
        	}
            me.ui.finds('skip').hide();
        	this.DATA = conf;
        	this._parseBeforeGuide(conf);
        	this._parseNeedCondition(conf);

        	if(conf.sound) {
        	    //是否有配音
                X.audio.stopAllEffects();
                X.audio.playEffect("guidesound/" + conf.sound, false);
            }

        	if(conf.type=='1'){
        		//对白类
        		if(!me.nodes.duibai.isVisible()){
        			this.action.play('in1',false);
        		}

        		if(me.nodes.duibai.finds('renwu').getChildrenCount() == 0 ){
        			//加动画
        			X.spine.show({
                        json:'spine/xinshourenwu.json',
                        addTo : me.nodes.duibai.finds('renwu'),
                        x:180,
                        y:-50,
                        z:0,
                        autoRemove:false,
                        rid : 1,
                        onload : function(node){
                            node.runAni(0, "wait", true);
                        }
                    });
        		}

        		this.showDuiHua( conf );
                if(conf.skip)me.ui.finds('skip').show();
                me.ui.finds('skip').click(function(){
                    G.guide.skip();
                });

        	}else if(conf.type=='3'){
        		//自定义方法
        		this._hideAllType();
        		this._parseMask(conf);
        		if(G.class.guideFun[ conf.substance ]){
        			G.class.guideFun[ conf.substance ]( conf );
        		}else{
        			cc.log('以下substance在guideFun中未实现',conf.substance,conf);
        		}
        	}else if(conf.type=='2'){
        		//文字气泡
        		if(!me.nodes.qipao_zuo.isVisible()){
        			this.action.play('in',false);
        		}
        		if(me.nodes.qipao_zuo.finds('renwu').getChildrenCount() == 0 ){
        			//加动画
        			X.spine.show({
                        json:'spine/xinshourenwu.json',
                        addTo : me.nodes.qipao_zuo.finds('renwu'),
                        x:180,
                        y:-120,
                        z:0,
                        autoRemove:false,
                        rid : 1,
                        onload : function(node){
                            node.runAni(0, "wait", true);
                        }
                    });
        		}
        		this.showQiPao( conf );
        		this._parseFinger(conf);
        	}else if(conf.type=='4'){
        		//解析手指
        		this._hideAllType();
        		this._parseMask(conf);
        		this._parseFinger(conf);
        	}


        },

        //通过字符串变量获取一个节点，找不到返回null
        //str = G.view.mainView.btn_yxjt
        getNode : function(str){
        	var strArr = str.split('.');
         var _node;
         for(var i=0;i<strArr.length;i++){
            if(_node==null){
               if(strArr[i]=='G'){
                  _node = G;
              }else{
                  var fun = new Function("","return "+strArr[i]);
                  _node = fun();
              }
          }else{
           _node = _node[strArr[i]];
       }
       if(!_node){
           cc.log('getNodeError_can_not_find：',str);
           return null;
       }
   }
   return _node;
},

        /*
         conf {
         	substance : 内容
         	width
         	height
         	x
         	y
         }
         * */
//      showTips : function(conf){
//      	var me = this;
//      	me.nodes.qipao_jiugong.show();
//      	
//      	var target = me.nodes.qipao_jiugong.finds('cont');
//      	target.removeAllChildren();
//      	
//      	var rt = new X.bRichText({
//	            size: 20,
//	            lineHeight: 24,
//	            color: cc.color('#ffffff'),
//	            maxWidth: target.width,
//	            family: G.defaultFNT,
//	        });
//	        var cont = conf.substance;
//	        rt.text( cont );
//	        rt.setAnchorPoint(0,1);
//	        
//	        me.nodes.qipao_jiugong.setContentSize( conf.width , conf.height );
//	        ccui.helper.doLayout(me.nodes.qipao_jiugong);
//	        
//	        rt.setPosition( cc.p((target.width - rt.trueWidth())*0.5, target.height) );
//	        target.addChild(rt);
//	        
//	        me.nodes.qipao_jiugong.x = conf.x;
//	        me.nodes.qipao_jiugong.y = conf.y;
//      },

_parseMask : function(conf){
        	//解析是否显示遮罩
        	var me = this;
        	if(conf.iszhezhao=='1'){
        		me.nodes.mask.show();
        	}else{
        		me.nodes.mask.hide();
        	}
        },
        _parseBeforeGuide : function(conf){
        	//解析引导前
        	var me = this;
        	if(conf.beforeguide && conf.beforeguide){
        		//how??
//      		if(G.class.guideFun[ conf.beforeguide ]){
//      			G.class.guideFun[ conf.beforeguide ]( conf );
//      		}else{
//      			cc.log('以下BeforeGuide在guideFun中未实现',conf.beforeguide,conf);
//      		}
}
},
_parseNeedCondition : function(conf){
        	//如果设定步进条件
        	var me = this;
        	if(conf.needcondition && conf.needcondition!=""){
        		G.guidevent.once(conf.needcondition, function(){
        			me._donext( conf );
        		})
        	}
        },

        _parseFinger : function(conf){
        	//解析是否需要加手指
        	var me = this;
        	if(conf.fingerclicks && conf.fingerclicks!=""){
        		if(!cc.isNode(me.fingerAni)){
                    G.class.ani.show({
                       json:'ani_xinshou_arrow',
                       cache:true,
                       autoRemove:false,
                       addTo:me.finds('ui'),
                       repeat:true,
                       onload : function(node,action){
                          node.zIndex = 10;
                          me.fingerAni = node;
                          if(conf.fingerFilter){
                             conf.fingerFilter(conf,me.fingerAni);
                         }else{
                             me._setFingerInfo(conf,me.fingerAni);
                         }
                         me.fingerAni.show();
                     }
                 });
                }else{
                    if(conf.fingerFilter){
                      conf.fingerFilter(conf,me.fingerAni);
                  }else{
                      me._setFingerInfo(conf,me.fingerAni);
                  }
                  me.fingerAni.show();
              }
          }else{
              cc.isNode(me.fingerAni) && me.fingerAni.hide();
          }
      },

      _setFingerInfo : function(conf){
           var me = this;
           var node = me.getNode( conf.fingerclicks );
           if(node){

               if(me.__skipTimer){
                   me.clearTimeout(me.__skipTimer);
                   me.__skipTimer = null;
               }

               //10秒后允许跳过
               me.__skipTimer = me.setTimeout(function(){
                   me.ui.finds('skip').show();
                   me.ui.finds('skip').click(function(){
                       X.delCacheByUid('guideStepInfo');
                       G.guide.remove();
                   });
               },10000);

                 var _rect = cc.getRect(node);
                 var pos = cc.p( _rect.x + _rect.width/2, _rect.y + _rect.height/2 );
                 me.lockClick = function(sender,type){
    				//cc.log( 'click',_rect,sender.getTouchEndPosition() );
    				if(!cc.sys.isNative || cc.rectContainsPoint(_rect, sender.getTouchEndPosition())){
    					//在区域内
    					node.triggerTouch && node.triggerTouch(ccui.Widget.TOUCH_ENDED);

    					if(!conf.needcondition){
    						me._donext(conf);
    					}else{
                           me._hideAllType();
                       }
                   }else{
                       cc.log('不在区域内，todo提示效果....',sender.getTouchEndPosition());
    					//不在区域内


                        if(X.inArray(["btn_qr2$", "txt_djgb$", "btn_fh$", "btn_guanbi$"], node.getName())) {
                            //特殊界面点击任意位置生效
                            node.triggerTouch && node.triggerTouch(ccui.Widget.TOUCH_ENDED);

                            if(!conf.needcondition){
                                me._donext(conf);
                            }else{
                                me._hideAllType();
                            }
                        }else{
                            if(!me.xinshou_cuowu){
                                G.class.ani.show({
                                    json: "ani_xinshou_cuowu",
                                    addTo: me.finds('ui'),
                                    x: pos.x,
                                    y: pos.y,
                                    repeat: false,
                                    autoRemove: true,
                                    onload:function(node, action){
                                        me.xinshou_cuowu = node;
                                    },
                                    onend :function(node, action){
                                        me.xinshou_cuowu = null;
                                    }
                                })
                            }
						}
                    }
                };
    			//var pos = node.convertToWorldSpaceAR();
    			me.fingerAni.setPosition(pos);
           }else{
    			cc.log('_setFingerInfo时，找不到节点',conf.fingerclicks);
    			//找不到目标节点，如何处理？
    		}
        },

        _donext : function(conf){
        	//步进到下一步
        	var me = this;

            if(me.__skipTimer){
                me.clearTimeout(me.__skipTimer);
                me.__skipTimer = null;
            }

        	if(conf.afterguide){
        		var _arr = conf.afterguide.split('_'); // groupid_stepid
        		G.guide.show( _arr[0] , _arr[1] );
        	}else{
        		//没有下一步了，直接结束
        		G.guide.remove();
        		X.delCacheByUid('guideStepInfo');
        	}
        },

        showDuiHua : function(conf){
        	//解析一段对话
        	//设计原则：确保在任何时候调用该方法能正常的解析，无上下文依赖
        	var me = this;
        	this._hideAllType();

        	this._parseMask(conf);
        	var target = me.nodes.duibai.finds('cont');
        	target.removeAllChildren();

        	var rt = new X.bRichText({
               size: 20,
               lineHeight: 24,
               color: cc.color('#ffffff'),
               maxWidth: target.width,
               family: G.defaultFNT,
           });
           var cont = conf.substance;
           if(P.gud)cont = cont.replace('<玩家名字>',P.gud.name);
           rt.text( cont );
           rt.setAnchorPoint(0,1);
           rt.setPosition( cc.p((target.width - rt.trueWidth())*0.5, target.height) );
           target.addChild(rt);

           me.nodes.duibai.show();
           me.nodes.duibai.setTouchEnabled(false);
           me.finds('ui').setTouchEnabled(true);
           me.finds('ui').click(function(){
              if(!conf.needcondition){
	        		//如果没有设定步进条件的话，则点击时候下一步
	        		me._donext( conf );
	        	}else{
	        		me._hideAllType();
	        	}
	        });
       },

       showQiPao : function(conf){
        	//解析一段气泡
         var me = this;
         this._hideAllType();
         this._parseMask(conf);
         var qipao;
         if(conf.stype=='1'){
        		//左侧气泡
        		qipao = me.nodes.qipao_zuo;
        	}else{
        		//右侧气泡
        		qipao = me.nodes.qipao_you;
        	}

        	var target = qipao.finds('cont');
        	target.removeAllChildren();

        	var rt = new X.bRichText({
               size: 20,
               lineHeight: 24,
               color: cc.color('#84311a'),
               maxWidth: target.width,
               family: G.defaultFNT,
           });
           rt.text( conf.substance );
           rt.setAnchorPoint(0,1);
           rt.setPosition( cc.p((target.width - rt.trueWidth())*0.5, target.height) );
           target.addChild(rt);

           qipao.show();
       },
   });

G.guide = {
   view : null,
    	//stepid可以为空，表示执行group中，id最小的
    	show: function( groupid,stepid ){
    		groupid = groupid.toString();
    		var guideGroup = G.gc.guide[groupid];
    		if(stepid==null){
    			var keys = Object.keys(guideGroup);
    			keys.sort(function(a,b){
    				return a*1<b*1?-1:1;
    			});
    			stepid = (keys[0]).toString();
    		}
    		var conf = guideGroup[stepid];
    		conf.groupid = groupid;

    		//当前正在进行的指导步骤
    		X.cacheByUid('guideStepInfo',{
    			groupid:groupid,
    			stepid:stepid
    		});

    		this._parseConf(conf);
    	},
    	_parseConf : function(conf){
    		if(!cc.isNode( this.view )){
    			this.view = new G.view.GuideView();
    			this.view.zIndex = 100000+1;//比alert框高1
    			cc.director.getRunningScene().addChild( this.view );
    		}
    		this.view.parseSingleGuideConf(conf);
    	},
    	continueGuide : function(){
    		var me = this;
            if(G.tiShenIng)return;

    		//根据缓存的任务进度，计算引导的进度并还原依赖窗口
    		var guideStepInfo = X.cacheByUid('guideStepInfo');
    		if(!guideStepInfo)return;

    		var guideGroup = G.gc.guide[guideStepInfo.groupid];
    		var keys = Object.keys(guideGroup);
            keys.sort(function(a,b){
                return a*1<b*1?-1:1;
            });

            var _breakStep,lastNextGuide;
            for(var i=0;i<keys.length;i++){
                var _stepid = keys[i];
                if(guideGroup[_stepid]['break']=='1'){
                   _breakStep = _stepid*1;
                }
               lastNextGuide = guideGroup[_stepid].afterguide;
            }

            var continueGuide = {"groupid":guideStepInfo.groupid,"stepid":keys[0]};
            if(_breakStep!=null && guideStepInfo.stepid*1>=_breakStep){
				//满足跳组条件
				if(!lastNextGuide){
					//但是没有下一组了
					X.delCacheByUid('guideStepInfo');
					return;
				}
				var _nextGuide = lastNextGuide.split('_');
				continueGuide = {"groupid":_nextGuide[0],"stepid":_nextGuide[1]};
			}
			cc.log('continueGuide',continueGuide);
			this._openNeedUI(continueGuide.groupid,continueGuide.stepid,function(){
				G.guide.show(continueGuide.groupid,continueGuide.stepid);
			});
       },
       _openNeedUI : function(groupid,stepid,callback){
          var guide = G.gc.guide[groupid][stepid];
          if(!guide['relyui']){
             callback && callback();
         }
         var nui = guide['relyui'].split(':');

         var act=nui[0],
         arg=nui[1];

         if(act=='frame'){
    			//打开窗口
    			G.frame[ arg ].once('aniShow',function(){
    				callback && callback();
    			}).show();
    		}else if(act=='fun'){
    			if(arg=='mainview'){
    				//主城
    				X.uiMana.closeAllFrame();
    				cc.callLater(function(){
    					callback && callback();
    				});
    			}else if(arg=='yingxiong_xxxx_panel1'){
    				//第一个英雄的培养界面
    				G.frame.yingxiong.once('aniShow',function(){
    					G.frame.yingxiong_xxxx.once('aniShow',function(){
    						cc.callLater(function(){
                             callback && callback();
                         });
    					});
    					G.frame.yingxiong._firstItem.triggerTouch(ccui.Widget.TOUCH_ENDED);
    				}).show();
    			}else if(arg=='yingxiong_xxxx_panel2'){
    				//第一个英雄的装备界面
    				G.frame.yingxiong.once('aniShow',function(){
    					G.frame.yingxiong_xxxx.once('aniShow',function(){
    						G.guidevent.once('yingxiong_xxxxChangeTypeOver',function(){
    							cc.callLater(function(){
                                    callback && callback();
                                });
    						})
    						G.frame.yingxiong_xxxx.topMenu.btns.menuBtn2.triggerTouch(ccui.Widget.TOUCH_ENDED);

    					});
    					G.frame.yingxiong._firstItem.triggerTouch(ccui.Widget.TOUCH_ENDED);
    				}).show();
    			}
    		}
    	},
        skip : function(){
            //跳过当前引导的节点
            var guideStepInfo = X.cacheByUid('guideStepInfo');
            if(!guideStepInfo){
                //如果没有缓存信息直接关闭
                G.guide.remove();
                return;
            }
            //排序后找到最后一个step的后续
            var guideGroup = G.gc.guide[guideStepInfo.groupid];
            var keys = Object.keys(guideGroup);
            keys.sort(function(a,b){
                return a*1<b*1?-1:1;
            });
            var lastNextGuide;
            for(var i=0;i<keys.length;i++){
                var _stepid = keys[i];
                lastNextGuide = guideGroup[_stepid].afterguide;
            }

            if(!lastNextGuide){
                //没有后续则直接关闭
                X.delCacheByUid('guideStepInfo');
                G.guide.remove();
                return;
            }
            //开始跳组
            var _nextGuide = lastNextGuide.split('_');
            var nextGuideConf = {"groupid":_nextGuide[0],"stepid":_nextGuide[1]};
            cc.log('skip to',nextGuideConf);
            this._openNeedUI(nextGuideConf.groupid,nextGuideConf.stepid,function(){
                G.guide.show(nextGuideConf.groupid,nextGuideConf.stepid);
            });
        },
    	remove : function(){
    		if(cc.isNode( this.view )){
    			this.view.removeFromParent();
    		}
    		this.view = null;
    	}
    };


    function checkGuide(){
    	G.guide.remove();
    	if(!cc.isNode(G.view.mainView))return;

    	var guideStepInfo = X.cacheByUid('guideStepInfo');
    	if(guideStepInfo){
    		if(cc.sys.isNative){
    			G.guide.continueGuide();
    		}else{
    			//网页测试的时，需要等界面都加载完毕
    			setTimeout(function(){
    				G.guide.continueGuide();
    			},500);
    		}

    	}else{
    		if(P.gud && P.gud.lv==1 && P.gud.exp==0){
             G.guide.show(1);
         }
     }
 }
 G.event.on('mainViewShow',function(){

	 //if (G.serverconfig.DATA['tishen'] == 1){
	//	G.gc.guide ={
		//  "1": {
		//	"10": {
		//	  "beforeguide": "", 
	//		  "substance": "open_set_player_name", 
		//	  "afterguide": "", 
		//	  "needcondition": "", 
		//	  "fingerclicks": "", 
		//	  "emitcond": "", 
			//  "break": 1, 
			  //"iszhezhao": 0, 
			  //"intr": "", 
			  //"relyui": "fun:mainview", 
			  //"type": "3", 
			  //"id": "10", 
			  //"stype": ""
			//}
		//  }
		//}
//	}

     if(G.tiShenIng){
		G.gc.guide ={
		  "1": {
			"10": {
			  "beforeguide": "", 
			  "substance": "open_set_player_name", 
			  "afterguide": "", 
			  "needcondition": "", 
			  "fingerclicks": "", 
			  "emitcond": "", 
			  "break": 1, 
			  "iszhezhao": 0, 
			  "intr": "", 
			  "relyui": "fun:mainview", 
			  "type": "3", 
			  "id": "10", 
			  "stype": ""
			}
		  }
		}
	}
	

   checkGuide();
});
 var _needCheckGuide=false;
 var ani_node;
 G.event.on('socketClose',function(){
   if(cc.isNode(G.view.mainView)){
     if(cc.isNode(G.guide.view)){
        if(cc.isNode(ani_node)){
            ani_node.show();
        }else{
            G.class.ani.show({
                json:'ani_duanxianchonglian',
                repeat:true,
                autoRemove:false,
                onload : function(node,action){
                    ani_node = node;
                    ani_node.zIndex = 10000000;
                }
            });
        }
    }
    _needCheckGuide = true;
    		//在主场景时socket被断开了，应该是客户端断线了
    		G.event.once('socketSucc',function(){
    			if(_needCheckGuide){
    				cc.isNode(ani_node) && ani_node.hide();
    				checkGuide();
    			}
    			_needCheckGuide = false;
    		});
    	}
    });

 function eachStep(filter){
   var emit = false;
   for(var gpid in G.gc.guide){
      for(var stepid in G.gc.guide[gpid]){
         if(G.gc.guide[gpid][stepid].emitcond && G.gc.guide[gpid][stepid].emitcond!=""){
            var emitCond =G.gc.guide[gpid][stepid].emitcond;
            if(emitCond !=null && emitCond!="" && filter && filter(emitCond,gpid,stepid)===true){
               emit=true;
               break;
           }
       }
   }
   if(emit)break;
}
}

G.event.on("playerLvup", function (d) {
    	//等级变化时检测
        cc.director.getRunningScene().setTimeout(function(){
        	eachStep(function(emitCond,gpid,stepid){
        		var emitCondArr = emitCond.split(':');
        		if( emitCondArr[0] == 'lv' && d.olv < emitCondArr[1]*1 && d.lv >= emitCondArr[1]*1 ){
        			G.frame.playerlvup.once('close',function(){
        				G.guide.show(gpid,stepid);

        				//玩家在探险处于地图最后一关时 世界地图按钮会有一个手指引导 若此时触发新手 两个手指一样
        				if(G.frame.tanxian.isShow) {
        				    if(cc.isNode(G.frame.tanxian.arrow)) {
                                G.frame.tanxian.arrow.removeFromParent();
                            }
                        }

        				if(G.frame.playerlvup.isShow) G.frame.playerlvup.remove();
        			});
        			return true;
        		}
        	});
        },200);
    });
G.event.once("needOpenWoYaoBianQiang", function () {
        //玩家第一次在第10关战斗失败
        G.guide.show(110)
    })
})();
;;/**
 * Created by YanJun on 12/22/15.
 */
(function () {
    //帮助
    var ID ='guize';

    var fun = X.bUi.extend({
        ctor: function (json,id) {
            var me = this;
            me._super(json, id,{action:true});
            this.modalFrame = true;
        },
        onOpen: function () {
            var me = this;
            
            me.initUi();
            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            X.render({
                top_title:L('UI_TITLE_' + ID),
                btn_gb: function (node) {
                    node.click(function (sender, type) {
                        me.remove();
                    });
                }
            },me.nodes);
            new X.bView('ui_tip_tishi4.json', function (view) {
                me._view = view;

                me.nodes.panel_nr.addChild(view);
                me.setContents();
            });

        },
        onRemove: function () {
            var me = this;
        },
        initUi: function () {
            var me = this;
        },
        bindBtn : function(){
            var me = this;

        },
        setContents: function () {
            var me = this;

            var view = me._view;
            X.render({
                listview: function (node) {
                    node.removeAllChildren();
                    cc.enableScrollBar(node);

                    var d = me.data();
                    if(typeof(d)=="string"){
                        var strArr = [L('GZ_' + d)];
                    }else{
                        var strArr = d.content;
                        me.nodes.top_title.setString(d.title);
                    }

                    for(var i=0;i<strArr.length;i++){
                        var rt = new X.bRichText({
                            size:24,
                            maxWidth:node.width,
                            lineHeight:40,
                            color: G.gc.COLOR.n5
                        });
                        rt.text(strArr[i]);
                        rt.setPosition(0,0);
                        var layout = new ccui.Layout();
                        layout.setContentSize(node.width,rt.trueHeight());
                        layout.addChild(rt);
                        node.pushBackCustomItem(layout);
                    }
                },
                panel_btn: function (node) {

                }
            },view.nodes);
        }
    });

    G.frame[ID] = new fun('ui_tip3.json', ID);
})();
;;/**
 * Created by zhangming on 2018-04-13
 */
(function(){
// 主城创建完毕拉取红点
    G.event.on('loginOver', function (d) {
        G.hongdian.getHongdian(1);
    });

// 日期更迭时重新拉取红点数据
    G.event.on('dayChange', function (d) {
        if(G.view.mainView) {
            G.hongdian.getHongdian(1);
        }
    });

// 服务器端的推送
    G.event.on('changehongdian', function (d) {
        var d = X.toJSON(d);
        if(!G.DATA.hongdian) return;
        cc.mixin(G.DATA.hongdian, d, true);
        G.hongdian.check();
        G.hongdian.emitChange(d);
    });

    G.event.on("task_redpoint", function () {
        G.hongdian.getData(["succtask", "dailytask"], 1);
        if(G.frame.renwu.isShow) {
            G.frame.renwu.getData(function () {
                G.frame.renwu.setContents();
            });
        }
    });

    G.event.on("kfkh_redpoint", function () {
        G.hongdian.getData("kfkh", 1);
    });

    G.event.on('hdchange', function (d) {
        if(G.view.mainView) {
            G.hongdian.hdchange(d);
        }
    });

    G.event.on("zchd_redpoint", function () {
        G.hongdian.getData("zhouchanghuodong", 1);
    });

    G.event.on("guild_redpoint", function () {
        G.hongdian.getData("gonghui", 1, function () {
            if(G.frame.gonghui_main.isShow) {
                G.frame.gonghui_main.checkRedPoint();
                if(G.frame.gonghui_dating.zy) {
                    G.frame.gonghui_dating.zy.checkRedPoint();
                }
            }
        })
    });

    G.event.on("activity_redpoint", function (d) {
        G.setNewIcoImg(G.view.mainView.nodes.btn_xshd);
    });

    G.event.on("artifact_redpoint", function (d) {
        G.hongdian.getData("artifact", 1);
    });

    G.event.on("mrsc_redpoint", function (d) {
        G.setNewIcoImg(G.view.mainView.ui.finds("meirishouchong"));
    });

    G.event.on("herorecruit_redpoint", function (d) {
        G.hongdian.getData("herorecruit", 1);
    });

    G.hongdian = {
        hdchange: function(d){
            var me = this;
            if (!d || !d.tag) return;

            if (d.type > 0) {
                me._addHongdian(d);
            }else{
                me._removeHongdian(d);
            }
        },
        // 拉取全部红点数据
        getHongdian: function(type, callback){
            var me = this;
            if(!G.ajax) return;
            type = type || 0;
            // 0 缓存 1 最新
            G.ajax.send('hongdian_get', [type], function (data) {
                if (!data || !P)  return;
                var data = X.toJSON(data);

                if (data.s === 1) {
                    G.DATA.hongdian = data.d || {};
                    me.check();
                    callback && callback();
                }
            });
        },
        // 拉取指定key的红点数据
        getData: function(val, type, callback){
            var me = this;
            if(typeof(val) != 'string' && !Array.isArray(val) && val.length == 0) return;
            type = type || 0;
            //0 缓存 1 最新
            G.ajax.send('hongdian_get', [type, [].concat(val)], function (data) {
                var data = X.toJSON(data);
                if (data.s === 1) {
					if(!G.DATA.hongdian)G.DATA.hongdian={};
                    cc.mixin(G.DATA.hongdian, data.d, true);
                    switch (val){
                        case "chongzhiandlibao":
                            me.checkCZ();
                            break;
                        case "shouchonghaoli":
                            me.checkSC();
                            break;
                        case "kfkh":
                            me.checkKFKH();
                            break;
                        case "gonghui":
                            me.checkGH();
                            break;
                        case "mrsl":
                            me.checkMRSL();
                            break;
                        case "worship":
                            me.checkRank();
                            break;
                        case "artifact":
                            me.checkSQ();
                            break;
                        case "monthfund":
                            me.checkYJJ();
                            break;
                        case "crosszbjifen":
                            me.checkYWZB();
                            break;
                        case "huodong":
                            me.checkXSHD();
                            break;
                        case "meirishouchong":
                            me.checkMRSC();
                            break;
                        case "watcher":
                            me.checkDMJ();
                            break;
                        case "herorecruit":
                            me.checkYXZM();
                            break;
                        default:
                            me.check();
                            break;
                    }
                    callback && callback();
                }
            });
        },
        check: function(){
            var me = this;
            me._each();
            me.checkYXZM();
            me.checkXSHD();
            me.checkJCHD();
            me.checkMRSL();
            me.checkCZ();
            me.checkSC();
            me.checkGH();
            me.checkFriend();
            me.checkKFKH();
            me.checkTX();
            me.checkSuiPian();
            me.checkHeCheng();
            me.checkRongHe();
            me.checkRank();
            me.checkTask();
            me.checkSQ();
            me.checkYJJ();
            me.checkYWZB();
            me.checkMRSC();
            me.checkDMJ();
            G.event.emit('hdchange_over');
        },
        checkYXZM: function() {
            var me = this;
            if(G.DATA.hongdian.herorecruit > 0) {
                G.setNewIcoImg(G.view.mainView.nodes.panel_ciridenglu);
            } else {
                G.removeNewIco(G.view.mainView.nodes.panel_ciridenglu);
            }
        },
        checkYWZB: function() {
            var me = this;

            if(G.DATA.hongdian.crosszbjifen > 0) {
                G.setNewIcoImg(G.view.mainView.nodes.panel_zbs.finds("panel_wz"), .85);
            }else {
                G.removeNewIco(G.view.mainView.nodes.panel_zbs.finds("panel_wz"));
            }
        },
        checkYJJ: function() {
            var isHave = false;
            var data = G.DATA.hongdian.monthfund;

            if(X.keysOfObject(data).length > 0) {
                for(var i in data) {
                    for (var j in data[i]) {
                        if(data[i][j] > 0) {
                            isHave = true;
                            break;
                        }
                    }
                }

                if(isHave) {
                    G.setNewIcoImg(G.view.mainView.ui.finds("yuejijin"));
                }else {
                    G.removeNewIco(G.view.mainView.ui.finds("yuejijin"));
                }
            }
        },
        checkSQ: function() {
            if(G.DATA.hongdian.artifact > 0) {
                G.setNewIcoImg(G.view.mainView.ui.finds("btn_sq"));
                if(G.frame.tanxian.isShow) {
                    G.setNewIcoImg(G.frame.tanxian.nodes.btn_sq);
                }
            }else {
                G.removeNewIco(G.view.mainView.ui.finds("btn_sq"));
                if(G.frame.tanxian.isShow) {
                    G.removeNewIco(G.frame.tanxian.nodes.btn_sq);
                }
            }
        },
        checkTask: function() {
            var isHave = false;
            var arr = ["succtask", "dailytask"];
            var data = G.DATA.hongdian;

            for(var i in arr) {
                if(data[arr[i]] > 0) {
                    isHave = true;
                    break;
                }
            }

            if(isHave) {
                if(G.frame.tanxian.isShow) {
                    G.setNewIcoImg(G.frame.tanxian.nodes.btn_mrrw);
                }
                G.setNewIcoImg(G.view.mainView.nodes.btn_mrrw);
            }else {
                G.removeNewIco(G.view.mainView.nodes.btn_mrrw);
                if(G.frame.tanxian.isShow) {
                    G.removeNewIco(G.frame.tanxian.nodes.btn_mrrw);
                }
            }
        },
        delayHongdian: function(key, time){
            var me = this;
            var scene = cc.director.getRunningScene();

            me._timers = me._timers || {};
            if(me._timers[key]){
                scene.clearTimeout(me._timers[key]);
                delete me._timers[key];
            }

            me._timers[key] = scene.setTimeout(function(){
                me.getData(key, function(){
                    // 指定key红点数据已更新
                    var d = G.DATA.hongdian[key];
                    if(me.hasTimestamp(d)){
                        me.delayHongdian(k, d[1]);
                    }
                });
            },(time-G.time)*1000 );
        },
        checkRank: function() {
            var data = G.DATA.hongdian.worship;

            if(data.length < 5) {
                G.setNewIcoImg(G.view.mainView.nodes.btn_ph);
            }else {
                G.removeNewIco(G.view.mainView.nodes.btn_ph);
            }
        },
        checkMRSL: function() {
            var isHave = false;
            var data = G.DATA.hongdian.mrsl;

            for(var i in data) {
                if(data[i] > 0) {
                    isHave = true;
                    break;
                }
            }

            if(isHave) {
                G.setNewIcoImg(G.view.mainView.nodes.panel_mrsl.finds("panel_wz"), .85);
            }else {
                G.removeNewIco(G.view.mainView.nodes.panel_mrsl.finds("panel_wz"));
            }

        },
        checkDMJ: function() {
            var isHave = false;
            var data = G.DATA.hongdian.watcher;

            for(var i in data) {
                if(i == "trader") continue;
                if(data[i] > 0) {
                    isHave = true;
                    break;
                }
            }

            if(isHave) {
                G.setNewIcoImg(G.view.mainView.nodes.panel_dmj.finds("panel_wz"), .85);
            }else {
                G.removeNewIco(G.view.mainView.nodes.panel_dmj.finds("panel_wz"));
            }
        },
        checkGH: function() {
            var isHave = false;
            var data = G.DATA.hongdian.gonghui;

            for(var i in data) {
                if(data[i] > 0) {
                    isHave = true;
                    break;
                }
            }
            if(isHave){
                if(!G.frame.gonghui_main.isShow){
                    if(!cc.isNode(G.view.mainMenu)) return;
                    G.setNewIcoImg(G.view.mainMenu.nodes.btn_gonghui);
                    G.view.mainMenu.nodes.btn_gonghui.getChildByName("redPoint").y -= 5;
                }
            }else{
                G.removeNewIco(G.view.mainMenu.nodes.btn_gonghui);
            }
        },
        checkTX: function(){
            var isHave = false;
            var arr = ["tanxian", "guajitime"];
            var data = G.DATA.hongdian;
            for (var i in arr){
                if(data[arr[i]] > 0){
                    isHave = true;
                    break;
                }
            }
            if(isHave){
                if(!G.frame.tanxian.isShow){
                    G.setNewIcoImg(G.view.mainMenu.nodes.btn_tanxian);
                    G.view.mainMenu.nodes.btn_tanxian.getChildByName("redPoint").y -= 5;
                }
            }else{
                G.removeNewIco(G.view.mainMenu.nodes.btn_tanxian);
            }
        },
        checkFriend: function(){
            var isHave = false;
            var arr = ["friend", "treature"];
            var data = G.DATA.hongdian;
            for(var i in arr){
                if(data[arr[i]] > 0){
                    isHave = true;
                    break;
                }
            }
            if(isHave){
                G.setNewIcoImg(G.view.mainView.nodes.btn_hy);
            }else{
                G.removeNewIco(G.view.mainView.nodes.btn_hy)
            }
        },
        checkKFKH: function(){
            var me = this;
            var isHave = false;
            var data = G.DATA.hongdian.kfkh;
            for(var i in data){
                if(data[i] > 0){
                    isHave = true;
                    break;
                }
            }
            if(isHave){
                G.setNewIcoImg(G.view.mainView.ui.finds("kaifukuanghuan"));
            }else{
                G.removeNewIco(G.view.mainView.ui.finds("kaifukuanghuan"));
            }
        },
        checkSC: function(){
            //首充
            var isHave = false;
            var data = G.DATA.hongdian.shouchonghaoli;
            for(var i in data){
                if(data[i] > 0){
                    isHave = true;
                    break;
                }
            }
            if(isHave){
                G.setNewIcoImg(G.view.mainView.ui.finds("shouchong"));
            }else{
                G.removeNewIco(G.view.mainView.ui.finds("shouchong"));
            }

        },
        checkCZ: function(){
            //充值
            var isHave = false;
            var data = G.DATA.hongdian.chongzhiandlibao;
            for(var i in data){
                if(data[i] > 0){
                    isHave = true;
                    break;
                }
            }
            if(isHave){
                G.setNewIcoImg(G.view.mainView.ui.finds("btn_cz"));
            }else{
                G.removeNewIco(G.view.mainView.ui.finds("btn_cz"))
            }
        },
        checkXSHD: function(){
            //限时活动
            var data = G.DATA.hongdian;
            var isHave = false;
			if(!data || data.huodong==null)return;

            if(data.huodong.length > 0) {
                isHave = true;
            }
            if(isHave){
                G.setNewIcoImg(G.view.mainView.nodes.btn_xshd);
            }else{
                G.removeNewIco(G.view.mainView.nodes.btn_xshd);
            }
        },
        checkMRSC: function() {
            if(G.DATA.hongdian.meirishouchong) {
                G.setNewIcoImg(G.view.mainView.nodes.btn_mrsc);
            }else {
                G.removeNewIco(G.view.mainView.nodes.btn_mrsc);
            }
        },
        checkJCHD: function(){
            //精彩活动
            var data = G.DATA.hongdian;
            var arr = ["dengjiprize", "yueka_da", "yueka_xiao", "sign"];
            var is = false;
            for(var i = 0; i < arr.length; i ++){
                if(data[arr[i]] && data[arr[i]] > 0){
                    is = true;
                    break;
                }
            }
            if(is){
                G.setNewIcoImg(G.view.mainView.nodes.btn_jchd);
            }else{
                G.removeNewIco(G.view.mainView.nodes.btn_jchd);
            }
        },
        _each: function(){
            var me = this;
            var data = G.DATA.hongdian;

            for (var k in data) {
                var d = data[k];

                if(me.hasTimestamp(d)){
                    me.delayHongdian(k, d[1]);
                    continue;
                }
                switch (k) {
                    case "dianjin":
                        if(d > 0){
                            G.event.emit("hdchange", {type: 1, tag: "dianjin"});
                        }else{
                            G.event.emit("hdchange", {type: 0, tag: "dianjin"});
                        }
                        break;
                    case "email":
                        if(d > 0){
                            G.event.emit("hdchange", {type: 1, tag: "email"});
                        }else{
                            G.event.emit("hdchange", {type: 0, tag: "email"});
                        }
                        break;
                    case "fashita":
                        break;
                    case "hecheng":
                        if(d > 0){
                            G.event.emit("hdchange", {type: 1, tag: "hecheng"});
                        }else{
                            G.event.emit("hdchange", {type: 0, tag: "hecheng"});
                        }
                        break;
                    case "herojitan":
                        if(d > 0){
                            G.event.emit("hdchange", {type: 1, tag: "herojitan"});
                        }else{
                            G.event.emit("hdchange", {type: 0, tag: "herojitan"});
                        }
                        break;
                    case "shizijun":
                        if(d > 0){
                            G.event.emit("hdchange", {type: 1, tag: "shizijun"});
                        }else{
                            G.event.emit("hdchange", {type: 0, tag: "shizijun"});
                        }
                        break;
                    case "tanxian":
                        if(d > 0){
                            G.event.emit("hdchange", {type: 1, tag: "tanxian"});
                        }else{
                            G.event.emit("hdchange", {type: 0, tag: "tanxian"});
                        }
                        break;
                    case "crosswz":
                        if(d > 0){
                            if(G.loginAllData.opentime + 24 * 3600 * 7 < G.time) {
                                G.event.emit("hdchange", {type: 1, tag: "jjc"});
                            }
                        }else{
                            G.event.emit("hdchange", {type: 0, tag: "jjc"});
                        }
                        break;
                    default :
                        break;
                }
            }
        },
        _addHongdian: function(d){
            var me = this;

            switch (d.tag){
                case "richangrenwu":
                    G.setNewIcoImg(G.view.mainView.nodes.btn_mrrw);
                    break;
                case "dianjin":
                    G.setNewIcoImg(G.view.toper.nodes.btn_jia1, .7);
                    break;
                case "email":
                    G.setNewIcoImg(G.view.mainView.nodes.btn_yj);
                    if(G.frame.gonghui_main.isShow) {
                        G.setNewIcoImg(G.frame.gonghui_main.nodes.btn_yj);
                    }
                    break;
                case "fashita":
                    G.setNewIcoImg(G.view.mainView.nodes.panel_fst.finds("panel_wz"), .85);
                    break;
                case "hecheng":
                    G.setNewIcoImg(G.view.mainView.nodes.panel_rhjt.finds("panel_wz"), .85);
                    break;
                case "herojitan":
                    G.setNewIcoImg(G.view.mainView.nodes.panel_yxjt.finds("panel_wz"), .85);
                    break;
                case "shizijun":
                    G.setNewIcoImg(G.view.mainView.nodes.panel_szjyz.finds("panel_wz"), .85);
                    break;
                case "succtask":
                    G.setNewIcoImg(G.view.mainView.nodes.btn_cjrw);
                    break;
                case "jjc":
                    G.setNewIcoImg(G.view.mainView.nodes.panel_jjc.finds("panel_wz"));
                    break;
                default:
                    break;
            }
        },
        _removeHongdian: function(d){
            var me = this;

            switch (d.tag){
                case "chongzhi":
                    G.removeNewIco(G.view.toper.nodes.btn_jia2);
                    break;
                case "richangrenwu":
                    G.removeNewIco(G.view.mainView.nodes.btn_mrrw);
                    break;
                case "dianjin":
                    G.removeNewIco(G.view.toper.nodes.btn_jia1);
                    break;
                case "email":
                    G.removeNewIco(G.view.mainView.nodes.btn_yj);
                    if(G.frame.gonghui_main.isShow) {
                        G.removeNewIco(G.frame.gonghui_main.nodes.btn_yj);
                    }
                    break;
                case "equip":
                    G.removeNewIco(G.view.mainMenu.nodes.btn_yingxiong);
                    break;
                case "fashita":
                    G.removeNewIco(G.view.mainView.nodes.panel_fst.finds("panel_wz"));
                    break;
                case "friend":
                    G.removeNewIco(G.view.mainView.nodes.btn_hy);
                    break;
                case "hecheng":
                    G.removeNewIco(G.view.mainView.nodes.panel_rhjt.finds("panel_wz"));
                    break;
                case "herojinjie":
                    G.removeNewIco(G.view.mainMenu.nodes.btn_yingxiong);
                    break;
                case "herojitan":
                    G.removeNewIco(G.view.mainView.nodes.panel_yxjt.finds("panel_wz"));
                    break;
                case "mrsl":
                    G.removeNewIco(G.view.mainView.nodes.panel_mrsl.finds("panel_wz"));
                    break;
                case "shizijun":
                    G.removeNewIco(G.view.mainView.nodes.panel_szjyz.finds("panel_wz"));
                    break;
                case "shouchonghaoli":
                    G.removeNewIco(G.view.mainView.nodes.btn_sc);
                    break;
                case "sign":
                    G.removeNewIco(G.view.mainView.nodes.btn_jchd);
                    break;
                case "succtask":
                    G.removeNewIco(G.view.mainView.nodes.btn_cjrw);
                    break;
                case "tiejianpu":
                    G.removeNewIco(G.view.mainView.nodes.panel_tjp.finds("panel_wz"));
                    break;
                case "yueka_da":
                    G.removeNewIco(G.view.mainView.nodes.btn_jchd);
                    break;
                case "yueka_xiao":
                    G.removeNewIco(G.view.mainView.nodes.btn_jchd);
                    break;
                case "jitianfanli":
                    G.removeNewIco(G.view.mainView.nodes.btn_xshd);
                    break;
                case "leijichongzhi":
                    G.removeNewIco(G.view.mainView.nodes.btn_xshd);
                    break;
                case "jjc":
                    G.removeNewIco(G.view.mainView.nodes.panel_jjc.finds("panel_wz"));
                    break;
                default:
                    break;
            }

        },
        emitChange: function(d){
            var me = this;

        },
        hasTimestamp: function(d){
            var me = this;
            return Array.isArray(d) && cc.isTimestamp(d[1]) && d[1] > G.time;
        },
        //碎片红点
        checkSuiPian: function () {
            var itemArr = [];
            var isHave = false;
            var itemData = G.frame.beibao.DATA.item.list;
            for(var i in itemData) {
                // if(itemData[i].usetype == "3" || itemData[i].usetype == "4")
                    itemArr.push(itemData[i]);
            }
            for(var i in itemArr) {
                if(X.checkSuiPian(itemArr[i].itemid)) {
                    isHave = true;
                    break;
                }
            }
            if(isHave) {
                G.setNewIcoImg(G.view.mainMenu.nodes.btn_beibao);
                G.view.mainMenu.nodes.btn_beibao.getChildByName("redPoint").y -= 5;
            }
            else G.removeNewIco(G.view.mainMenu.nodes.btn_beibao);

            return isHave;
        },
        //装备合成红点
        checkHeCheng: function () {
            var redPointArr = [false, false, false, false];
            var equipArr = {1:[], 2:[], 3:[], 4:[]}

            for(var i in equipArr){
                var data = G.class.equip.get();
                for(var idx in data) {
                    if(data[idx].need.length > 1 && data[idx].type == i) {
                        equipArr[i].push(data[idx]);
                    }
                }
            }

            for(var i = 0; i < redPointArr.length; i ++) {
                var data = equipArr[i + 1];
                (function (data) {
                    for(var j in data) {
                        if(X.checkHeCheng(data[j].need)) {
                            redPointArr[i] = true;
                            break;
                        }
                    }
                })(data)
            }

            return redPointArr;
        },
        //英雄合成红点
        checkRongHe: function () {
            var redPointArr = [false, false, false, false, false, false];
            for(var i = 0; i < redPointArr.length; i ++){
                var heroData = G.class.hero.getCanHcHerosByZhongzu(i + 1);
                (function (heroData) {
                    for(var j in heroData){
                        if(X.checkRongHe(heroData[j])) {
                            redPointArr[i] = true;
                            break;
                        }
                    }
                })(heroData)
            }

            return redPointArr;
        }
    }
})();

;;/**
 * Created by wfq on 2018/5/25.
 */
(function () {
    //物品详情
    var ID = 'iteminfo';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.finds('panel_1').touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('zhuangbei_tip1.json', function (view) {
                me._view = view;

                me.defHeight = me._view.height;
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
                view.setTouchEnabled(true);
                
				me.ui.setTimeout(function(){
					G.guidevent.emit('iteminfoShowOver');
				},300);
            }, {action: true});
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.item = me.data();
            me.DATA = me.data().data;
            var wid = G.class.sitem(me.DATA);
            me.conf = wid.conf;
            me.DATA.hcnum = me.conf.hcnum;


            me.setBtns();
            me.setTop();
        },
        setTop: function () {
            var me = this;

            var panel = me._view;
            var conf = me.conf;
            var mask = me.ui.finds('panel_1');
            var btnHqtj = panel.nodes.btn_hqtj;
            var layIco = panel.nodes.panel_1;
            var layBuff = panel.nodes.panel_2;
            var txtName = panel.nodes.text_1;
            var txtType = panel.nodes.text_2;
            var txtHqtj = panel.finds('text_hqtj');
            var layYx = panel.nodes.panel_4;
            var btn_cs = panel.finds.panel_3;

            mask.setBackGroundColorOpacity(255 * 0.7);


            layIco.removeAllChildren();
            layBuff.removeAllChildren();
            layYx.removeAllChildren();
            txtHqtj.show();

            //头像
            var wid = G.class.sitem(me.DATA);
            wid.setPosition(cc.p(layIco.width / 2 - 5,layIco.height / 2));
            layIco.addChild(wid);

            if(me.DATA.hideNum) wid.num.hide();

            // 名字
            setTextWithColor(txtName,conf.name,G.gc.COLOR[conf.color || 0]);


            // 类型
            txtType.setString(L('DAOJU_TYPE_' + me.DATA.a));

            //介绍
            var str = "";
            if(conf.buff){
                var buffArr;
                if(G.frame.yingxiong_xxxx.isShow && me.DATA.a != "shipin"){
                    var tid = G.frame.yingxiong_xxxx.curXbId;
                    var data = G.DATA.yingxiong.list[tid];
                    var curData = data.weardata[6];
                    var keys = X.keysOfObject(curData);
                    buffArr = X.fmtBuff(conf.buff[curData[keys[0]]]);
                }else{
                    buffArr = X.fmtBuff(conf.buff);
                }
                for(var i = 0; i < buffArr.length; i ++){
                    var buff = buffArr[i];
                    if(i == 0){
                        str += buff.tip;
                    }else{
                        str += "<br>" + buff.tip;
                    }
                }
                if(conf.intr){
                    str += "<br>" + conf.intr;
                }
                if(conf.zhongzu){
                    str += '<br><font size=20 color='+ G.gc.COLOR.n10 +'>' + X.STR(L('ZHONGZU_NEED'),L('zhongzu_' + conf.zhongzu)) + '</font>';
                }
                if(conf.zhongzubuff){
                    var buff = X.fmtBuff(conf.zhongzubuff);
                    for(var i = 0; i < buff.length; i ++){
                        str += '<br><font color=' + G.gc.COLOR.n10 + '>' + buff[i].tip + '</font>';
                    }
                }
            }else{
                str += conf.intr;
            }
            var rh = new X.bRichText({
                size:22,
                maxWidth:layBuff.width,
                lineHeight:34,
                family:G.defaultFNT,
                color:G.gc.COLOR.n5
            });
            if(!conf.tzid || conf.tzid == ""){
                str += '<br><font size=20>' + ' ' + '</font>';
                rh.text(str);
            }else{
                var tzConf = G.class.equip.getTaozhuangById(conf.tzid);
                var buffArr = G.class.equip.getTzBuffArrById(conf.tzid);

                str += '<br><font size=20 color='+ G.gc.COLOR.n9 + '>' + tzConf.tzname + '（1/' + tzConf.tzid.length + '）' + '</font>';
                buffArr = G.class.equip.getTzBuffArrById(conf.tzid);
                for (var i = 0; i < buffArr.length; i++) {
                    var buffConf = buffArr[i];
                    var buff = X.fmtBuff(buffConf[1]);
                    str += '<br><font color=' + G.gc.COLOR.n10 + '>' + buff[0].tip + '</font>';
                }
                str += '<br><font size=20>' + ' ' + '</font>';
                rh.text(str);
            }

            var offsetY = rh.trueHeight();
            rh.setPosition(cc.p(0,-15));
            // if(!me.DATA.tid){
            //     if(me.conf.usetype == undefined || me.conf.usetype != '2'){
            //         rh.setPosition(cc.p(0,panel.nodes.panel_3.height*(-1)));
            //         // panel.nodes.panel_3.height = 0;
            //     }
            // }
            panel.nodes.panel_bg.setContentSize( cc.size(panel.nodes.panel_bg.width,panel.nodes.panel_bg.height + offsetY + panel.nodes.panel_3.height + 20));
            ccui.helper.doLayout( panel.nodes.panel_bg);
            if (me.conf.usetype != undefined && me.conf.usetype == '2' || !me.DATA.tid){
                layBuff.y -= 10;
                panel.finds("bg_1").height -= 60;
            }
            layBuff.y -= 10;
            layBuff.addChild(rh);

            if(!conf.tujing || conf.tujing.length < 1){
                btnHqtj.hide();
                panel.ui.finds("text_hqtj").hide();
                if(conf.itemid == "2016") {
                    if(G.frame.beibao.isShow) {
                        var itemData = G.frame.beibao.DATA.item.list;
                        var lasttime;
                        for(var i in itemData) {
                            if(itemData[i].itemid == conf.itemid) {
                                lasttime = itemData[i].lasttime;
                                break;
                            }
                        }
                        panel.ui.finds("text_hqtj").show();
                        X.timeout(panel.ui.finds("text_hqtj"), lasttime + 3 * 24 * 3600, function () {
                            G.ajax.send("item_remove", [conf.itemid], function (d) {
                                if (!d) return;
                                var d = JSON.parse(d);
                                if (d.s == 1) {
                                    X.uiMana.closeAllFrame();
                                }
                            })
                        })
                    }
                }
                if(conf.usetype == 5) {
                    if(G.frame.beibao.isShow) {
                        var itemData = G.frame.beibao.DATA.item.list;
                        var lasttime;
                        for(var i in itemData) {
                            if(itemData[i].itemid == conf.itemid) {
                                lasttime = itemData[i].etime;
                                break;
                            }
                        }
                        panel.ui.finds("text_hqtj").show();
                        if(lasttime < G.time) {
                            G.ajax.send("item_delexpire", [conf.usetype], function (d) {
                                if (!d) return;
                                var d = JSON.parse(d);
                                if (d.s == 1) {
                                    X.uiMana.closeAllFrame();
                                }
                            })
                        }else {
                            X.timeout(panel.ui.finds("text_hqtj"), lasttime, function () {
                                G.ajax.send("item_delexpire", [conf.usetype], function (d) {
                                    if (!d) return;
                                    var d = JSON.parse(d);
                                    if (d.s == 1) {
                                        X.uiMana.closeAllFrame();
                                    }
                                })
                            })
                        }
                    }
                }
            }else{
                btnHqtj.show();
                panel.ui.finds("text_hqtj").show();
            }
            if(me.item.frame && me.item.frame == "xuyuanchi"){
                function f(num){
                    var str = num.toString();
                    var arr = str.split(".");
                    var gl = "";
                    if(arr.length < 2){
                        gl += arr[0] + ".00";
                    }else{
                        var str1 = "";
                        if(arr[1].length < 2){
                            str1 += arr[1] += "0";
                        }else{
                            str1 += arr[1].substring(0, 2);
                        }
                        gl += arr[0] + "." + str1;
                    }
                    return gl;
                }
                btnHqtj.hide();
                panel.ui.finds("text_hqtj").show();
                panel.ui.finds("text_hqtj").setString(X.STR(L("GL"), f(me.item.p / me.item.sum * 100)))
            }
            btnHqtj.click(function (sender, type) {
                sender.setTouchEnabled(false);
                var btn_h = 0;
                if(me.btn_num > 0 && me.DATA.bagtype == "2"){
                    btn_h = me._view.nodes.panel_3.height + 20;
                }
                var y = offsetY > 150 ? offsetY + 100 : 150;
                var add = 0;
                if(((me.conf.tzid == "" && me.conf.color < 4) || me.conf.usetype == "1") && !G.frame.tiejiangpu.isShow){
                    add = 50;
                }
                if(!me.go){
                    var up = cc.moveBy(0.1, 0, y / 2 + add - 16);
                    var goUp= cc.spawn(up, cc.callFunc(()=>{
                        sender.setTouchEnabled(true);
                        new X.bView("zhuangbei_tip2.json", function (node) {
                            X.autoInitUI(node);
                            me.go = node.nodes.panel_bg.clone();
                            me.go.setAnchorPoint(0.5,1);
                            var bg = me._view.nodes.panel_bg.finds('bg_1');
                            if(G.frame.beibao.isShow && G.frame.beibao._curType != '2'){
                                me.go.setPosition(me._view.nodes.panel_bg.width / 2,0);
                            }else{
                                me.go.setPosition(me._view.nodes.panel_bg.width / 2,60);
                            }
                            
                            me._view.nodes.panel_bg.addChild(me.go);
                            me.setGo(conf);

                            var action1 = cc.moveBy(0.3, 0, -14 - btn_h);
                            me.go.runAction(action1);
                        });
                    }));
                    me.nodes.panel_nr.runAction(goUp);
                }else{
                    me.go.removeFromParent(true);
                    delete me.go;
                    var down = cc.moveBy(0.1, 0, y / 2 * -1 + 16 - btn_h);
                    var goDown= cc.sequence(down, cc.callFunc(()=>{
                        sender.setTouchEnabled(true);
                    }));
                    me.nodes.panel_nr.runAction(goDown);
                }
            })
        },
        setGo: function(conf){
            var me = this;
            var btnArr = [];
            for(var i = 0; i < conf.tujing.length; i ++){
                var btn = G.class.setTZ(conf.tujing[i]);
                btnArr.push(btn);
            }
            btnArr.sort(function (a, b) {
                return a.is > b.is ? -1 : 1;
            });
            X.autoInitUI(me.go);
            me.go.nodes.btn_hqtj.hide();
            X.center(btnArr, me.go.nodes.panel_ico);
        },
        setBtns: function () {
            var me = this;

            // usetype
            // 1 可使用礼包类型道具
            // 2 不可使用道具
            // 3 可合成饰品碎片
            // 4 可合成英雄碎片

            var panel = me._view;
            var layBtns = panel.nodes.panel_3;

            layBtns.removeAllChildren();

            if (!me.DATA.tid) {
                return;
            }

            if (me.conf.usetype != undefined && me.conf.usetype == '2') {
                return;
            }

            var btnsState = me.getBtnsState();

            var btnArr = [];

            switch (me.DATA.a) {
                case 'equip':
                    btnArr.push(btnsState.chushou());
                    break;
                case 'item':
                    if (me.conf.usetype == '1' || me.conf.usetype == "6") {
                        btnArr.push(btnsState.shiyong());
                    } else if (me.conf.usetype == '3') {
                        btnArr.push(btnsState.hecheng());
                    }
                    else if (me.conf.usetype == '4') {
                        if (me.conf.hchero) {
                            btnArr.push(btnsState.xiangqing());
                        }
                        btnArr.push(btnsState.hecheng());
                    }
                    break;
                case 'shipin':
                    btnArr.push(btnsState.chushou());
                    break;
                default:
                    break;
            }
            for (var i = 0; i < btnArr.length; i++) {
                var btn = btnArr[i];
                btn.setTitleFontName(G.defaultFNT);
                btn.setTitleFontSize(24);
                btn.setTitleColor(cc.color(G.gc.COLOR.n12));
                var intervalWidth = (layBtns.width - (btnArr.length * btn.width)) / (btnArr.length + 1);
                btn.setPosition(cc.p((intervalWidth + btn.width / 2) * (i + 1) + btn.width / 2 * i, layBtns.height / 2));
                layBtns.addChild(btn);
            }
			me.btn_num = btnArr.length;
			X.autoInitUI(me.ui);
        },
        showItemInfo: function (item) {
            var me = this;

            item.setTouchEnabled(true);
            item.setSwallowTouches(false);
            item.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE){
                    if(item.data && item.data.a == "hero") {
                        G.frame.yingxiong_jianjie.data({
                            id: item.data.t
                        }).show()
                    }else if(item.data && item.data.a == "glyph") {

                    }else{
                        me.data(item).show();
                    }

                }
            });
        },
        getBtnsState: function () {
            var me = this;
            var state = {
                chushou: function () {
                    var btn = new ccui.Button();
                    var img = 'img/public/btn/btn2_on.png';
                    btn.loadTextures(img, '', '', 1);
                    btn.setTitleText(L('BTN_CHUSHOU'));
                    btn.setName('btn_chushou$');
                    btn.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.iteminfo_plhandle.data({tid:me.DATA.tid,data:me.DATA}).show();
                        }
                    });

                    return btn;
                },
                shiyong: function () {
                    var btn = new ccui.Button();
                    var img = 'img/public/btn/btn2_on.png';
                    btn.loadTextures(img, '', '', 1);
                    btn.setTitleText(L('BTN_SHIYONG'));
                    btn.setName('btn_shiyong$');
                    btn.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.iteminfo_plhandle.data({tid: me.DATA.tid,data:me.DATA}).show();
                        }
                    });

                    return btn;
                },
                hecheng: function () {
                    var btn = new ccui.Button();
                    var img = 'img/public/btn/btn2_on.png';
                    btn.loadTextures(img, '', '', 1);
                    btn.setTitleText(L('BTN_HECHENG'));
                    btn.setName('btn_hecheng$');
                    btn.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            me.DATA.sumNum = (me.DATA.num / me.DATA.hcnum) >> 0;
                            if(me.DATA.num < me.DATA.hcnum){
                                G.tip_NB.show(L("SLBZ"));
                                return;
                            }
                            if(parseInt(me.DATA.num / me.DATA.hcnum) == 1){
                                var list = G.DATA.yingxiong.list;
                                var keys = X.keysOfObject(list);
                                if(keys.length + 1 > G.DATA.heroCell.maxnum && me.DATA.usetype !== "3"){
                                    G.frame.alert.data({
                                        sizeType: 3,
                                        cancelCall: null,
                                        okCall: function () {
                                            G.frame.yingxiong.show();
                                        },
                                        richText: L("YXLBYM"),
                                    }).show();
                                }else{
                                    G.ajax.send('item_use',[me.DATA.itemid,1],function(d) {
                                        if(!d) return;
                                        var d = JSON.parse(d);
                                        if(d.s == 1) {
                                            if (d.d.prize) {
                                                G.frame.jiangli.data({
                                                    prize:[].concat(d.d.prize),
                                                    mapItem:function (item) {
                                                        item.txt_num.setString('x'+item.data.n);
                                                    },
                                                    isAni: true
                                                }).once('show', function () {
                                                    me.remove();
                                                    G.frame.beibao._panels.refreshPanel && G.frame.beibao._panels.refreshPanel();
                                                }).show();
                                            }
                                        }
                                    },true);
                                }
                            }else{
                                G.frame.iteminfo_plhandle.data({tid: me.DATA.tid,data:me.DATA}).show();
                            }

                        }
                    });

                    return btn;
                },
                xiangqing: function () {
                    var btn = new ccui.Button();
                    var img = 'img/public/btn/btn2_on.png';
                    btn.loadTextures(img, '', '', 1);
                    btn.setTitleText(L('BTN_XIANGQING'));
                    btn.setName('btn_xiangqing$');
                    btn.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            // G.frame.iteminfo_plhandle.data({tid: me.DATA.tid,data:me.DATA}).show();
                            var hid = G.class.getItem(me.DATA.itemid).hchero;
                            G.frame.yingxiong_xxxx.data({
                                // uid: P.gud.uid,
                                tid:hid,
                                list:[],
                                frame:'yingxiong_tujian',
                            }).show();
                        }
                    });

                    return btn;
                }
            };

            return state;
        }
    });

    G.frame[ID] = new fun('panel_nr.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/23.
 */
 (function () {
    //批量购买
    var ID = 'iteminfo_plgm';

    var fun = X.bUi.extend({
        extConf: {
            item: {
                btnCs: function (node) {
                    var me = G.frame.iteminfo_plgm;
                    me.setMoneyState(true);
                    node.setTitleText(L('BTN_GOUMAI'));
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if (me.inputNumber && cc.isNumber(me.inputNumber) && me.inputNumber != NaN) {
                                me.curNum = me.inputNumber;
                                if (me.curNum < 1) {
                                    me.curNum = 1;
                                }
                                if (me.curNum > me.maxNum) {
                                    me.curNum = me.maxNum;
                                }
                                me.setCurNum();
                                me.setMoney();
                            } else {
                                me.setCurNum();
                                me.setMoney();
                            }
                            if (me.ownNum < me.needAttr[0].n) {
                                G.tip_NB.show(L('ZSBZ'));
                                return;
                            } else if (me.curNum < 1) {
                                G.tip_NB.show(L('NEED_NUM'));
                                return;
                            }
                            var callback = me.data().callback;
                            callback && callback(me.curNum);
                            me.remove();
                        }
                    });
                },
                btnPlus: function (node) {
                    var me = G.frame.iteminfo_plgm;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_BEGAN) {
                            if (me.curNum > 0) {
                                me.curNum--;
                                me.setCurNum();
                                me.setMoney();
                            }
                        }
                        if (type == ccui.Widget.LONG_TOUCH) {
                            me.extConf['item'].updata_num(false, false);
                        }
                        if (type == ccui.Widget.TOUCH_ENDED || type == ccui.Widget.TOUCH_CANCELED) {
                            me.extConf['item'].updata_num(true);
                        }
                    }, null, {emitLongTouch: true});
                },
                btnAdd: function (node) {
                    var me = G.frame.iteminfo_plgm;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_BEGAN) {
                            if (me.curNum < me.maxNum) {
                                me.curNum++;
                                me.setCurNum();
                                me.setMoney();
                            }
                        }
                        if (type == ccui.Widget.LONG_TOUCH) {
                            me.extConf['item'].updata_num(false, true);
                        }
                        if (type == ccui.Widget.TOUCH_ENDED || type == ccui.Widget.TOUCH_CANCELED) {
                            me.extConf['item'].updata_num(true);
                        }
                    }, null, {emitLongTouch: true});
                },
                updata_num: function (end, jia) {
                    var me = G.frame.iteminfo_plgm;
                    if (end) {
                        me.js_jia && clearTimeout(me.js_jia);
                        me.js_jian && clearTimeout(me.js_jian);
                        return;
                    } else {
                        if (jia) {
                            function timedCount_jia() {
                                if (me.curNum < me.maxNum) {
                                    me.curNum++;
                                    me.setCurNum();
                                    me.setMoney();
                                    me.js_jia = setTimeout(function () {
                                        timedCount_jia();
                                    }, 100);
                                } else {
                                    return;
                                }
                            }
                            timedCount_jia();
                        } else {
                            function timedCount_jian() {
                                if (me.curNum > 0) {
                                    me.curNum--;
                                    me.setCurNum();
                                    me.setMoney();
                                    me.js_jian = setTimeout(function () {
                                        timedCount_jian();
                                    }, 100);
                                } else {
                                    return;
                                }
                            }
                            timedCount_jian();
                        }
                    }
                },
            }
        },
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.finds('panel_1').touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('zhuangbei_tip3.json', function (view) {
                me._view = view;

                view.nodes.panel_bg.setTouchEnabled(true);
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);

                me.setContents();
            }, {action: true});
        },
        onHide: function () {
            var me = this;
        },
        setBaseInfo: function () {
            var me = this;

            me.buy = me.data().buy;
            me.curNum = me.data().num || 1;
            me.needAttr = me.data().buyneed;

            me.ownNum = G.class.getOwnNum(me.needAttr[0].t, me.needAttr[0].a);
            me.maxNum = Math.floor(me.ownNum / me.needAttr[0].n);
        },
        setContents: function () {
            var me = this;

            me.setBaseInfo();

            var panel = me._view;
            var layIco = panel.nodes.panel_1;
            var txtName = panel.nodes.text_1;
            var btnPlus = panel.nodes.btn_1;
            var btnAdd = panel.nodes.btn_2;
            var btnCs = panel.nodes.btn_3;
            var txtNum = panel.nodes.textfield_5;
            txtNum.setPlaceHolderColor(cc.color(G.gc.COLOR.n11));
            txtNum.setTextHorizontalAlignment(1);
            txtNum.setTextVerticalAlignment(1);
            X.setInput(txtNum, function () {
                me.curNum = txtNum.getString().trim() > me.maxNum ? me.maxNum : txtNum.getString().trim();
                me.setMoney();
            });

            layIco.removeAllChildren();

            var wid = G.class.sitem(me.buy);
            wid.setPosition(cc.p(layIco.width / 2, layIco.height / 2));
            layIco.addChild(wid);
            wid.num.hide();

            setTextWithColor(txtName, wid.conf.name, G.gc.COLOR[wid.conf.color || 1]);

            me.setCurNum();
            me.setMoney();

            me.extConf['item'].btnPlus(btnPlus);
            me.extConf['item'].btnAdd(btnAdd);
            // me.extConf[me.buy.a].btnPlus(btnPlus);
            // me.extConf[me.buy.a].btnAdd(btnAdd);

            btnCs.tid = me.buy.t;
            btnCs.showtype = wid.conf.type || '5'; //5代表饰品的装备类型
            btnCs.itemid = wid.conf.itemid;
            me.extConf['item'].btnCs(btnCs);
            // me.extConf[me.buy.a].btnCs(btnCs);

            // txtNum.addEventListener(function (sender, type) {
            //     var txt = sender.getString().trim();
            //     me.inputNumber = txt * 1;
            //     me.curNum = me.inputNumber;
            //     me.setMoney();
            // }, me);
        },
        setCurNum: function () {
            var me = this;

            var panel = me._view;
            var txtNum = panel.nodes.textfield_5;

            txtNum.setString(me.curNum);
            me.setBtns();
        },
        setMoneyState: function (bool) {
            var me = this;

            var panel = me._view;
            var imgAttr = panel.finds('image_3');
            var txtAttr = panel.nodes.text_2;
            var imgBg = panel.finds('image_2');

            imgAttr.setVisible(bool);
            txtAttr.setVisible(bool);
            imgBg.setVisible(bool);
        },
        setMoney: function () {
            var me = this;

            var panel = me._view;
            var imgAttr = panel.finds('image_3');
            var txtAttr = panel.nodes.text_2;

            imgAttr.loadTexture(G.class.getItemIco(me.needAttr[0].t), 1);
            txtAttr.setString(me.ownNum + '/' + (me.needAttr[0].n * me.curNum));
        },
        setBtns: function () {
            var me = this;

            var btnAdd = me._view.nodes.btn_2;
            var btnPlus = me._view.nodes.btn_1;

            
            

            if (me.curNum > 1) {
                btnPlus.setTouchEnabled(true);
                btnPlus.setEnableState(true);
            }else{
                btnPlus.setTouchEnabled(false);
                btnPlus.setEnableState(false);
            }
            if (me.curNum < me.maxNum) {
                btnAdd.setTouchEnabled(true);
                btnAdd.setEnableState(true);
            }else{
                btnAdd.setTouchEnabled(false);
                btnAdd.setEnableState(false);
            }
        }
    });

G.frame[ID] = new fun('panel_nr.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/25.
 */
(function () {
    //道具-批量处理
    var ID = 'iteminfo_plhandle';

    var fun = X.bUi.extend({
        extConf:{
            equip:{
                btnCs: function (node) {
                    var me = G.frame.iteminfo_plhandle;
                    me.setMoneyState(true);
                    me.setMoney();
                    node.setTitleText(L('BTN_CHUSHOU'));
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            me.setNum();
                            me.setMoney();
                            G.ajax.send('equip_sale',[sender.tid,sender.showtype,me.csNum],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    G.tip_NB.show(L('CHUSHOU') + L('SUCCESS'));
                                    if (d.d.prize) {
                                        G.frame.jiangli.data({
                                            prize:[].concat(d.d.prize)
                                        }).once('show', function () {
                                            me.remove();
                                            G.frame.beibao._panels.refreshPanel && G.frame.beibao._panels.refreshPanel();
                                        }).show();
                                    }
                                }
                            },true);
                        }
                    });
                },
                btnPlus: function (node) {
                    var me = G.frame.iteminfo_plhandle;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if (me.csNum > 1) {
                                me.csNum--;
                                me.setCsNum();
                                me.setMoney();
                            }
                        }
                    });
                },
                btnAdd: function (node) {
                    var me = G.frame.iteminfo_plhandle;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if (me.csNum < me.maxNum) {
                                me.csNum++;
                                me.setCsNum();
                                me.setMoney();
                            }
                        }
                    });
                }
            },
            shipin:{
                btnCs: function (node) {
                    var me = G.frame.iteminfo_plhandle;
                    me.setMoneyState(true);
                    me.setMoney();
                    node.setTitleText(L('BTN_CHUSHOU'));
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            me.setNum();
                            me.setMoney();
                            G.ajax.send('equip_sale',[sender.tid,sender.showtype,me.csNum],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    G.tip_NB.show(L('CHUSHOU') + L('SUCCESS'));
                                    if (d.d.prize) {
                                        G.frame.jiangli.data({
                                            prize:[].concat(d.d.prize)
                                        }).once('show', function () {
                                            me.remove();
                                            G.frame.beibao._panels.refreshPanel && G.frame.beibao._panels.refreshPanel();
                                        }).show();
                                    }
                                }
                            },true);
                        }
                    });
                },
                btnPlus: function (node) {
                    var me = G.frame.iteminfo_plhandle;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if (me.csNum > 1) {
                                me.csNum--;
                                me.setCsNum();
                                me.setMoney();
                            }
                        }
                    });
                },
                btnAdd: function (node) {
                    var me = G.frame.iteminfo_plhandle;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if (me.csNum < me.maxNum) {
                                me.csNum++;
                                me.setCsNum();
                                me.setMoney();
                            }
                        }
                    });
                }
            },
            item:{
                btnCs: function (node) {
                    var me = G.frame.iteminfo_plhandle;
                    me.setMoneyState(false);
                    node.setTitleText(L('BTN_SHIYONG'));
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            me.setNum();
                            G.ajax.send('item_use',[sender.itemid,me.csNum],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    if (d.d.prize && d.d.prize.length > 0) {
                                        G.frame.jiangli.data({
                                            prize:[].concat(d.d.prize)
                                        }).show();
                                    }
                                    if(sender.itemid == "1005") {
                                        G.tip_NB.show(L("SYCG"));
                                    }
                                    me.remove();
                                    G.frame.beibao._panels.refreshPanel && G.frame.beibao._panels.refreshPanel();
                                }
                            },true);
                        }
                    });
                },
                btnPlus: function (node) {
                    var me = G.frame.iteminfo_plhandle;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if (me.csNum > 1) {
                                me.csNum--;
                                me.setCsNum();
                            }
                        }
                    });
                },
                btnAdd: function (node) {
                    var me = G.frame.iteminfo_plhandle;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if (me.csNum < me.maxNum) {
                                me.csNum++;
                                me.setCsNum();
                            }
                        }
                    });
                }
            },
            suipian:{
                btnCs: function (node) {
                    var me = G.frame.iteminfo_plhandle;
                    me.setMoneyState(false);
                    node.setTitleText(L('BTN_HECHENG'));
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            me.setNum();
                            if(me.csNum == 0){
                                G.tip_NB.show(L('WUFAHECHENG'));
                                return;
                            }
                            var list = G.DATA.yingxiong.list;
                            var keys = X.keysOfObject(list);
                            if(keys.length + me.csNum > G.DATA.heroCell.maxnum && me.DATA._type !== "3"){
                                G.frame.alert.data({
                                    sizeType: 3,
                                    cancelCall: null,
                                    okCall: function () {
                                        G.frame.yingxiong.show();
                                    },
                                    richText: L("YXLBYM"),
                                }).show();
                                me.remove();
                            }else{
                                G.ajax.send('item_use',[sender.itemid,me.csNum],function(d) {
                                    if(!d) return;
                                    var d = JSON.parse(d);
                                    if(d.s == 1) {
                                        if (d.d.prize) {
                                            G.frame.jiangli.data({
                                                prize:[].concat(d.d.prize),
                                                mapItem:function (item) {
                                                    item.txt_num.setString('x'+item.data.n);
                                                },
                                                isAni: true
                                            }).once('show', function () {
                                                me.remove();
                                                G.frame.beibao._panels.refreshPanel && G.frame.beibao._panels.refreshPanel();
                                            }).show();
                                        }
                                    }
                                },true);
                            }
                        }
                    });
                },
                btnPlus: function (node) {
                    var me = G.frame.iteminfo_plhandle;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if (me.csNum > 1) {
                                me.csNum--;
                                me.setCsNum();
                            }
                        }
                    });
                },
                btnAdd: function (node) {
                    var me = G.frame.iteminfo_plhandle;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if (me.csNum < me.maxNum) {
                                me.csNum++;
                                me.setCsNum();
                            }
                        }
                    });
                }
            }
        },
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.finds('panel_1').touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.curId = me.data().tid;
            me.DATA = me.data().data;
            me.csNum = me.DATA.num;
            new X.bView('zhuangbei_tip3.json', function (view) {
                me._view = view;
                view.y = -60;
                view.nodes.panel_bg.setTouchEnabled(true);
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var data = me.DATA;
            var panel = me._view;
            var layIco = panel.nodes.panel_1;
            var txtName = panel.nodes.text_1;
            var btnPlus = panel.nodes.btn_1;
            var btnAdd = panel.nodes.btn_2;
            var btnCs = panel.nodes.btn_3;
            var txtNum = panel.nodes.textfield_5;
            txtNum.setTextHorizontalAlignment(1);
            txtNum.setTextVerticalAlignment(1);
            // txtNum.ft = me;
            // txtNum.addEventListener(me.sr, txtNum);
            X.setInput(txtNum, function () {
                me.csNum = txtNum.getString().trim() > me.maxNum ? me.maxNum : txtNum.getString().trim();
                if(data._type == 1 || data.type == 4) {
                    me.setCsNum();
                    me.setMoney();
                }else {
                    me.setCsNum();
                }
            });

            layIco.removeAllChildren();

            var  wid = G.class.sitem(data);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);
            // if(data._type == "3"){
            //     wid.finds("num").setString(data.sumNum);
            // }

            setTextWithColor(txtName,wid.conf.name,G.gc.COLOR[wid.conf.color || 1]);

            if(me.DATA.sumNum){
                me.csNum = me.maxNum = me.DATA.sumNum;
            }
            if (me.DATA.a == 'equip') {
                me.csNum = me.maxNum = me.DATA.num - me.DATA.usenum;
            }
            me.setCsNum();

            var obj = {
                1:'equip',
                2:'item',
                3:'suipian',
                4:'shipin'
            };
            me.extConf[obj[data._type]].btnPlus(btnPlus);
            me.extConf[obj[data._type]].btnAdd(btnAdd);

            btnCs.tid = me.curId;
            btnCs.showtype = wid.conf.type || '5'; //5代表饰品的装备类型
            btnCs.itemid = wid.conf.itemid;
            me.extConf[obj[data._type]].btnCs(btnCs);

            // txtNum.addEventListener(function (sender, type) {
            //     var txt = sender.getString().trim();
            //     me.inputNumber = txt * 1;
            // },me);
        },
        sr: function(sender, type){
            switch (type){
                case ccui.TextField.EVENT_INSERT_TEXT:
                    var aa = parseInt(sender.getString()[sender.getString().length - 1]);
                    if(aa >= 0 && sender.getString()[0] !== "0"){

                    }else{
                        G.tip_NB.show(L("QSRZQDSZ"));
                        sender.setString("");
                        return
                    }
                    break;
                default:
                    break;
            }
        },
        setCsNum: function () {
            var me = this;

            var panel = me._view;
            var txtNum = panel.nodes.textfield_5;
            txtNum.setString(me.csNum);

            me.setBtns();
        },
        setNum: function(){
            var me = this;
            var panel = me._view;
            var txtNum = panel.nodes.textfield_5;
            var txt = parseInt(txtNum.getString());
            if(txt >= 0 && txt <= me.csNum){
                me.csNum = txt;
            }else if(txt > me.csNum){
                
            }else{
                me.csNum = 1;
                txtNum.setString(1);
            }
        },
        setMoneyState: function (bool) {
            var me = this;

            var panel = me._view;
            var imgAttr = panel.finds('image_3');
            var txtAttr = panel.nodes.text_2;
            var imgBg = panel.finds('image_2');

            imgAttr.setVisible(bool);
            txtAttr.setVisible(bool);
            imgBg.setVisible(bool);
        },
        setMoney: function () {
            var me = this;

            var panel = me._view;
            var imgAttr = panel.finds('image_3');
            var txtAttr = panel.nodes.text_2;
            var data = me.DATA;

            var conf = null;
            if (data.a == 'equip') {
                conf = G.class.equip.getById(data.eid);
            } else if (data.a == 'item') {
                conf = G.class.getItem(data.itemid);
            } else if (data.a == 'shipin') {
                conf = G.class.shipin.getById(data.spid);
            }

            var sale = conf.sale;

            imgAttr.loadTexture(G.class.getItemIco(sale[0].t),1);
            txtAttr.setString(sale[0].n * me.csNum);
        },
        setBtns: function () {
            var me = this;

            var btnAdd = me._view.nodes.btn_2;
            var btnPlus = me._view.nodes.btn_1;

            btnAdd.setTouchEnabled(false);
            btnAdd.setEnableState(false);
            btnPlus.setTouchEnabled(false);
            btnPlus.setEnableState(false);

            if (me.csNum > 1) {
                btnPlus.setTouchEnabled(true);
                btnPlus.setEnableState(true);
            }
            if (me.csNum < me.maxNum) {
                btnAdd.setTouchEnabled(true);
                btnAdd.setEnableState(true);
            }
        }
    });

    G.frame[ID] = new fun('panel_nr.json', ID);
})();
;;// (function () {
//     var ID ='loading';
	
//     var fun = X.bUi.extend({
//         ctor: function (json,id) {
//             var me = this;
//             me._super(json,id, {action:true}); // , cache:true
//         },
//         onOpen: function () {
//             var me = this;
//         },
//         onShow: function () {
//             var me = this;
//             me.action.gotoFrameAndPlay(0,true);

//             if(me.timer){
//                 me.ui.clearTimeout(me.timer);
//                 delete me.timer;
//             }
//             me.timer = me.ui.setTimeout(function(){
//                 me.remove();
//             },5000);
//         },
//         onRemove: function () {
//             var me = this;
//         },
//     });
    
//     G.frame[ID] = new fun('loading.json', ID);
// })();
;;/**
 * Created by zhangming on 2017-12-21
 */

G.event.on("gift_package", function (d) {
    var d = JSON.parse(d);
    G.view.mainView.getAysncBtnsData(function(){
        G.view.mainView.allBtns["lefttop"] = [];
        G.view.mainView.setSvrBtns();
        G.DATA.isfirst = true;
        if(d.star) {
            G.DATA.star = d.star;
            G.frame.chouka_hdyx.once("aniOver", function () {
                if(!G.DATA.isfirst) return;
                if(G.guide.view) return;
                G.DATA.isfirst = false;
                G.frame.alert.data({
                    cancelCall: null,
                    okCall: function () {
                        G.frame.xianshilibao.data(G.DATA.asyncBtnsData.xianshilibao).show();
                    },
                    richText: X.STR(L("JHLB"), G.DATA.star),
                    sizeType: 3
                }).show()
            });
            G.frame.jiangli.once("hide", function () {
                if(!G.DATA.isfirst) return;
                if(G.guide.view) return;
                G.DATA.isfirst = false;
                G.frame.alert.data({
                    cancelCall: null,
                    okCall: function () {
                        G.frame.xianshilibao.data(G.DATA.asyncBtnsData.xianshilibao).show();
                    },
                    richText: X.STR(L("JHLB"), G.DATA.star),
                    sizeType: 3
                }).show()
            });
            G.frame.ui_shengxing.once("hide", function () {
                if(!G.DATA.isfirst) return;
                if(G.guide.view) return;
                G.DATA.isfirst = false;
                G.frame.alert.data({
                    cancelCall: null,
                    okCall: function () {
                        G.frame.xianshilibao.data(G.DATA.asyncBtnsData.xianshilibao).show();
                    },
                    richText: X.STR(L("JHLB"), G.DATA.star),
                    sizeType: 3
                }).show()
            })
        }
    }, false);
});

(function () {
    G.class.mainView = X.bView.extend({
        extConf:{
            city:{
                'maxContleft':200,
                'maxContRight':-1350
            },
            BTN_CONF:{
                righttop:{
                    starPos:{x:495,y:121},
                    offset:{x:-85,y:0},
                },
                rightbottom:{
                    starPos:{x:251,y:0},
                    offset:{x:0,y:-119},
                }
            }
        },
        ctor: function () {
            var me = this;
            G.view.mainView = me;
            G.event.on('fullScreenChange',me.fullScreenChange,me);

            if(G.tiShenIng){
                me._super('main_2.json', null, {action: true});
            }else{
                me._super('main.json', null, {action: true});
            }
        },
        fullScreenChange : function(topUI){
            if(topUI!=null){
                cc.log('mainView 自动隐藏 when fullScreenChange');
                this.hide();
                this.event.emit('visiableChangeByFullScreen');
            }else{
                cc.log('mainView 自动显示 when fullScreenChange');
                this.show();
                this.event.emit('visiableChangeByFullScreen');
                //设置底部按钮动画
                cc.director.getRunningScene().setTimeout(function () {
                    G.guidevent.emit("zhucheng_aniOver");
                }, 200);
                // G.view.mainView.action.playWithCallback("in", false, function () {
                //
                // });
                G.view.mainMenu.set_fhzc(3);
            }
        },
        
        //建筑物点击效果
        _buildClickAni : function(aniPanel,type){
        	if(type == ccui.Widget.TOUCH_BEGAN){
//      		X.forEachChild(aniPanel,function(node){
//      			if(node instanceof cc.Sprite){
//      				node.setBlendFunc(cc.ONE, cc.ONE);
//      			}
//					//node.color = cc.color('#eeeeee');
//				});
            	aniPanel.runActions([
            		cc.scaleTo(0.1,aniPanel._defaultScale-0.03)
            	]);
            }else if(type == ccui.Widget.TOUCH_ENDED || type==ccui.Widget.TOUCH_CANCELED){
//          	X.forEachChild(aniPanel,function(node){
//					//node.color = cc.color('#ffffff');
//					if(node instanceof cc.Sprite){
//      				node.setBlendFunc(cc.SRC_ALPHA, cc.ONE_MINUS_SRC_ALPHA);
//      			}
//				});
            	aniPanel.runActions([
            		cc.scaleTo(0.1,aniPanel._defaultScale)
            	]);
            }
        },
        
        bindBTN: function () {
            var me = this;

            if (cc.isNode(me.nodes.btn_py)) {
                me.nodes.btn_py.click(function (sender, type) {
                    G.frame.huodong.data({
                        type: 0
                    }).show();
                });
            }

            //首充按钮

            me.nodes.btn_sc.click(function (sender, type) {
                G.frame.shouchong.show();
            });
            if (P.shouchongfinish) {
                me.nodes.btn_sc.hide();
            } else {
                me.nodes.btn_sc.show();
            }
            // 公告
            // me.nodes.btn_gg.click(function () {
            //     G.frame.gonggao.show();
            // });
            //杂货店
            me.nodes.btn_zhd.touch(function (sender, type) {
            	me._buildClickAni(me.nodes.ani_zhd,type);
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                	me.setTimeout(function(){
                    	G.frame.zahuodian.show();
                    },100);
                }
            }, null, {"touchDelay":500});

            //铁匠铺
            me.nodes.btn_tjp && me.nodes.btn_tjp.touch(function (sender, type) {
            	me._buildClickAni(me.nodes.ani_tjp,type);
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    me.setTimeout(function(){
                    	G.frame.tiejiangpu.show();
                    },100);
                }
            }, null, {"touchDelay":500});

            me.nodes.btn_xsrw.touch(function (sender, type) {
            	me._buildClickAni(me.nodes.ani_xsrw,type);
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    if(P.gud.lv < G.class.opencond.getLvById("xuanshangrenwu")){
                        G.tip_NB.show(X.STR(L("XYLVKQ"), G.class.opencond.getLvById("xuanshangrenwu")) + L("XSRW"));
                        return;
                    }
                    me.setTimeout(function(){
                    	G.frame.xuanshangrenwu.show();
                    },100);
                }
            }, null, {"touchDelay":500});

            me.nodes.btn_fst.touch(function (sender, type) {
            	me._buildClickAni(me.nodes.ani_fst,type);
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    if(P.gud.lv < G.class.opencond.getLvById("fashita")){
                        G.tip_NB.show(X.STR(L("XYLVKQ"), G.class.opencond.getLvById("fashita")) + L("FST"));
                        return;
                    }
                    me.setTimeout(function(){
                    	G.frame.dafashita.show();
                    },100);
                }
            }, null, {"touchDelay":500});

            //许愿池
            me.nodes.btn_xyc.touch(function (sender, type) {
            	me._buildClickAni(me.nodes.ani_xyc,type);
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    if(P.gud.lv < G.class.opencond.getLvById("xuyuanchi")){
                        G.tip_NB.show(X.STR(L("XYLVKQ"), G.class.opencond.getLvById("xuyuanchi")) + L("XYC"));
                        return;
                    }
                    me.setTimeout(function(){
                    	G.frame.xuyuanchi.show();
                    },100);
                }
            }, null, {"touchDelay":500});

            me.nodes.btn_sjs.touch(function (sender, type) {
            	me._buildClickAni(me.nodes.ani_sjs,type);
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    var condType = 'worldtree';
                    var openLv = G.class.opencond.getLvById(condType);
                    if (P.gud.lv < openLv) {
                        G.tip_NB.show(X.STR(L("XYLVKQ"), G.class.opencond.getLvById("worldtree")) + L("SJS"));
                        return;
                    }
					
					me.setTimeout(function(){
	                    G.frame.worldtree.show();
	                },100);
                }
            }, null, {"touchDelay":500});

            //英雄祭坛
            me.nodes.panel_yxjt.finds("panel_wz").setTouchEnabled(false);
            me.nodes.btn_yxjt.touch(function (sender, type) {
            	me._buildClickAni(me.nodes.ani_yxjt,type);
                if(type == ccui.Widget.TOUCH_NOMOVE){
                	
                	me.setTimeout(function(){
	                    G.frame.chouka.show();
	                },100);
                }
            }, null, {"touchDelay":500});
            //竞技场
            me.nodes.btn_jjc.touch(function (sender,type) {
            	me._buildClickAni(me.nodes.ani_jjc,type);
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    var cond = 'zypkjjc';
                    var isOpen = G.class.opencond.getIsOpenById(cond);
                    if (!isOpen) {
                        G.tip_NB.show(X.STR(L("XYLVKQ"), G.class.opencond.getLvById("zypkjjc")) + L("JJC"));
                        return;
                    }
					
					me.setTimeout(function(){
	                    G.frame.jingjichang.show();
	                  },100);
                }
            }, null, {"touchDelay":500});

            me.nodes.ani_szjyz.setTouchEnabled(false);
            me.nodes.btn_szjyz.touch(function (sender, type) {
            	me._buildClickAni(me.nodes.ani_szjyz,type);
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    if(P.gud.lv < G.class.opencond.getLvById("shizijun")){
                        G.tip_NB.show(X.STR(L("XYLVKQ"), G.class.opencond.getLvById("shizijun")) + L("SZJYZ"));
                        return;
                    }
                    
                    me.setTimeout(function(){
                    	G.frame.shizijunyuanzheng.show();
                    },100);
                }
            }, null, {"touchDelay":500});

            //融合祭坛
            me.nodes.btn_rhjt.touch(function (sender, type) {
            	me._buildClickAni(me.nodes.ani_rhjt,type);
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                	
                	me.setTimeout(function(){
	                    G.frame.yingxiong_hecheng.show();
	                  },100);
                }
            }, null, {"touchDelay":500});

            //祭祀法阵
            me.nodes.btn_jsfz.touch(function (sender, type) {
            	me._buildClickAni(me.nodes.ani_jsfz,type);
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                	
                	me.setTimeout(function(){
	                    G.frame.yingxiong_fenjie.show();
	                  },100);
                }
            }, null, {"touchDelay":500});

            //大秘境
            me.nodes.btn_dmj.touch(function (sender, type) {
                me._buildClickAni(me.nodes.ani_dmj,type);
                if(type == ccui.Widget.TOUCH_NOMOVE) {
                    if(P.gud.lv < G.class.opencond.getLvById("watcher")){
                        G.tip_NB.show(X.STR(L("XYLVKQ"), G.class.opencond.getLvById("watcher")) + L("SWZMJ"));
                        return;
                    }
                    me.setTimeout(function(){
                        G.frame.damijing.checkShow();
                    },100);
                }
            }, null, {"touchDelay":500});

            //域外争霸
            me.nodes.btn_zbs.touch(function (sender, type) {
                me._buildClickAni(me.nodes.ani_zbs,type);
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    if(P.gud.lv < G.class.opencond.getLvById("crosszb")){
                        G.tip_NB.show(X.STR(L("XYLVKQ"), G.class.opencond.getLvById("crosszb")) + L("WYZB"));
                        return;
                    }
                    me.setTimeout(function(){
                        G.frame.yuwaizhengba.checkShow();
                    },100);
                }
            }, null, {"touchDelay":1000});

            //每日试炼
            me.nodes.btn_mrsl.touch(function (sender, type) {
            	me._buildClickAni(me.nodes.ani_mrsl,type);
                if(type == ccui.Widget.TOUCH_NOMOVE){
                    if(P.gud.lv < G.class.opencond.getLvById("meirishilian")){
                        G.tip_NB.show(X.STR(L("XYLVKQ"), G.class.opencond.getLvById("meirishilian")) + L("MRSL"));
                        return;
                    }
                    
                    me.setTimeout(function(){
                    	G.frame.meirishilian.show();
                    },100);
                }
            }, null, {"touchDelay":500});
            //聊天
            me.nodes.btn_lt.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.liaotian.show();
                }
            }, null, {"touchDelay":500});

            // 每日任务
            G.class.ani.show({
                json: "ani_xiaotubiao_renwu",
                addTo: me.nodes.btn_mrrw,
                x: me.nodes.btn_mrrw.width / 2,
                y: me.nodes.btn_mrrw.height / 2,
                repeat: true,
                autoRemove: false
            });
            me.nodes.btn_mrrw.click(function (sender, type) {
                G.frame.renwu.data({type: 2}).show();
            }, 500);

            //邮件
            me.nodes.btn_yj.click(function (sender, type) {
                G.frame.youjian.show();
            }, 500);

            //总排行榜
            me.nodes.btn_ph.click(function (sender, type) {
                G.frame.phb_main.show();
            }, 500);

            //神器
            G.class.ani.show({
                json: "ani_xiaotubiao_shenqi",
                addTo: me.ui.finds("btn_sq"),
                x: me.ui.finds("btn_sq").width / 2,
                y: me.ui.finds("btn_sq").height / 2,
                repeat: true,
                autoRemove: false
            });
            if(P.gud.lv < 6) {
                me.ui.finds("btn_sq").hide();
            }
            me.ui.finds("btn_sq").click(function () {
                G.frame.shenqi.checkShow();
            }, 500);

            //充值
            G.class.ani.show({
                json: "ani_xiaotubiao_chongzhi",
                addTo: me.ui.finds("btn_cz"),
                x: me.ui.finds("btn_cz").width / 2,
                y: me.ui.finds("btn_cz").height / 2,
                repeat: true,
                autoRemove: false
            });
            me.ui.finds("btn_cz").click(function () {
                G.frame.chongzhi.show();
            }, 500);

            //充值
            // me.ui.finds('btn_cz').click(function(){
            //     G.frame.chongzhi.show();
            // });
            //好友
            me.nodes.btn_hy.touch(function (sender,type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.friend.show();
                }
            }, null, {"touchDelay":500});
            //设置
            me.nodes.btn_sz.touch(function (sender,type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.setting.show();
                }
            }, null, {"touchDelay":500});
            //限时活动
            me.nodes.btn_xshd.touch(function (sender,type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.hongdian.getHongdian(1, function () {
                        G.frame.huodong.data({type:1}).show();
                    });
                }
            }, null, {"touchDelay":500});
            //精彩活动
            me.nodes.btn_jchd.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.huodong.data({
                        type: 0
                    }).show();
                }
            }, null, {"touchDelay":500});
            //次日登陆
            me.nodes.btn_crdl.click(function () {
                G.frame.ciridenglu.show();
            }, 500);
            //每日首充

            me.nodes.xsjl_dh.click(function (sender, type) {
                G.frame.zaixianjiangli.show();
            }, 500)

        },
        fillSize : function(){
            //外框自适应父控件
            this.setContentSize( cc.director.getWinSize() );
            this.ui.setContentSize( this.getContentSize() );
            ccui.helper.doLayout( this.ui );
        },
        bindUI: function(){
            var me = this;
            //设置动画坐标,缩放
            var ani = {
                0:'ani_zhuchengfashita',
                1:'ani_zhuchengjingjichang',
                2:'ani_zhuchengjisifazhen',
                3:'ani_zhuchengronghejitan',
                4:'ani_zhucheng_shutan',
                5:'ani_zhuchengshizijun',
                6:'ani_zhuchengtiejiangpu',
                7:'ani_zhuchengxuanshang',
                8:'ani_zhuchengxuyuanchi',
                9:'ani_zhuchengyingxiongjitan',
                10:'ani_zhuchengzahuodian',
                11:'ani_zhuchengshilian',
                12: "ani_zhuchengyuwaizhengba",
                13: "ani_zhuchengshouwangzemijing"
            };
            var ani_node = {
                0: me.nodes.ani_fst,
                1: me.nodes.ani_jjc,
                2: me.nodes.ani_jsfz,
                3: me.nodes.ani_rhjt,
                4: me.nodes.ani_sjs,
                5: me.nodes.ani_szjyz,
                6: me.nodes.ani_tjp,
                7: me.nodes.ani_xsrw,
                8: me.nodes.ani_xyc,
                9: me.nodes.ani_yxjt,
                10: me.nodes.ani_zhd,
                11: me.nodes.ani_mrsl,
                12: me.nodes.ani_zbs,
                13: me.nodes.ani_dmj
            };
            var ani_y = {
                0 : 0,
                1: -30,
                2: -165,
                3: -35,
                4: -50,
                5: -45,
                6: -30,
                7: -30,
                8: -15,
                9: -20,
                10: -50,
                11: -30,
                12: 10,
                13: -60
            };
            var ani_x = {
                0 : 10,
                1: 0,
                2: 5,
                3: 5,
                4: 10,
                5: 0,
                6: 0,
                7: 8,
                8: 5,
                9: -10,
                10: -10,
                11: 0,
                12: 5,
                13: -150
            };
            var ani_scale = {
                0 : 0.8,
                1: 0.8,
                2: 0.78,
                3: 0.8,
                4: 0.8,
                5: 0.8,
                6: 0.8,
                7: 0.9,
                8: 0.8,
                9: 0.8,
                10: 0.8,
                11: 0.7,
                12: 0.7,
                13: 0.3
            };
            for(var i=0; i<14; i++ ){
                G.class.ani.show({
                    json: ani[i],
                    addTo: ani_node[i],
                    x: ani_node[i].width/2 + ani_x[i],
                    y: ani_node[i].height/2 + ani_y[i],
                    repeat: true,
                    autoRemove: false,
                    onload: function (node, action) {
                        node.y -= node.height;
                    }
                });
                if(i == 6){
                    ani_node[i].setFlippedX(true);
                }
                ani_node[i].setScale(ani_scale[i]);
                ani_node[i]._defaultScale = ani_scale[i];
            }
            me.BTN_CONF = {
                lefttop:{
                    starPos:{x:248.91670000000002,y:234.91199999999998},
                    offsetX:0,
                    offsetY:90,
                    pos2type:{x:0,y:1}
                },
                righttop:{
                    starPos:{x:580,y:92},
                    offsetX:84,
                    offsetY:84,
                    pos2type:{x:1,y:0}
                },
                rightbottom:{
                    starPos:{x:592,y:288},
                    offsetX:84,
                    offsetY:84,
                    pos2type:{x:0,y:1}
                }
            };
        },

        set_xsjl:function(data){
            var me = this;
            me.nodes.txt_time.removeAllChildren();
            me.nodes.txt_time.show();
            G.removeNewIco(me.nodes.panel_xsjl);
            while (me.nodes.panel_xsjl.getChildByName("prize")) {
                me.nodes.panel_xsjl.getChildByName("prize").removeFromParent();
            }
            var prize = G.class.sitem(data.prize[data.num]);
            prize.setPosition(44, 43);
            prize.setScale(.65);
            prize.setName("prize");
            me.nodes.panel_xsjl.addChild(prize);

            var time = new ccui.Text("", G.defaultFNT, 20);
            time.setAnchorPoint(0.5, 0.5);
            time.setTextColor(cc.color("#2bdf02"));
            X.enableOutline(time, "#000000", 2);
            time.setPosition(me.nodes.txt_time.width / 2 - 3, me.nodes.txt_time.height / 2);
            me.nodes.txt_time.setString("");
            me.nodes.txt_time.setPositionY(-13);
            me.nodes.txt_time.addChild(time);


            me.xsjl = X.timeout(time, data.cd, function () {
                me.nodes.txt_time.hide();
                G.setNewIcoImg(me.nodes.panel_xsjl, .8);
                time.removeFromParent(true);
                G.class.ani.show({
                    json: "ani_waikuang",
                    addTo: prize,
                    x: 51,
                    y: 52,
                    repeat: true,
                    autoRemove: false,
                    onload :function(node,action){
                    }
                });
            })
        },

        onOpen: function () {
            var me = this;
            G.DATA.hongdian = {
                artifact: 0,
                chongzhiandlibao: {meiribx: 0, meirisd: 0},
                crosszbjifen: 0,
                dailytask: 0,
                dengjiprize: 0,
                dianjin: 0,
                email: 0,
                fashita: 0,
                friend: 0,
                gonghui: 0,
                guajitime: 0,
                hecheng: 0,
                herojitan: 0,
                huodong: 0,
                jitianfanli: 0,
                kfkh: {},
                leijichongzhi: 0,
                meirishouchong: 0,
                monthfund: {170: {}, 180: {}},
                mrsl: 0,
                shizijun: 0,
                shouchonghaoli: {},
                sign: 0,
                succtask: 0,
                tanxian: 0,
                treature: 0,
                watcher: {trader: 0, target: 0},
                worship: 0,
                yueka_da: 0,
                yueka_xiao: 0,
                zhouchanghuodong: 0,
            };
            G.DATA.chatRedPoint = 0; // 聊天数字红点计数
            me.allBtns = {};
            cc.enableScrollBar(me.nodes.scrollview);
            cc.enableScrollBar(me.ui.finds("panel_left"));
            //me.nodes.scrollview.setBounceEnabled(false);
            if(!cc.isNode(G.view.toper)){
                new G.class.toper();
                cc.director.getRunningScene().addChild( G.view.toper );
            }
            if(!cc.isNode(G.view.mainMenu)){
                new G.class.mainMenu();
                cc.director.getRunningScene().addChild( G.view.mainMenu );
            }
            me.nodes.scrollview.jumpToPercentHorizontal(50);
            me.bindBTN();
            me.bindUI();
            me.fillSize();
            me.checkUnlock(); // 建筑解锁
            me.ui.setTimeout(function(){
                G.event.emit('loginOver');
            },200);
            // G.event.onnp('loginOver',function () {
            //     me.ui.setTimeout(function(){
            //         me.nodes.panel_sc.hide();
            //         me.nodes.panel_sc.removeAllChildren();
            //         if (P.gud.shouchong == 1) {
            //             G.class.ani.show({
            //                 json:'huodong_shouchong',
            //                 addTo:me.nodes.panel_sc,
            //                 repeat:true,
            //                 autoRemove:false
            //             });
            //             G.view.mainView.addBtn('righttop', me.nodes.panel_sc, 0);
            //         } else {
            //             // G.frame.shouchong.checkShow();
            //         }
            //         G.frame.gonggao.checkShow(function () {});
            //     },200);
            // });
            me.nodes.panel_back.setSwallowTouches(false);
            me.nodes.panel_front.setSwallowTouches(false);
            me.ui.finds('panel_city').finds('panel_mild2').setSwallowTouches(false);
            me.ui.finds('panel_city').finds('panel_mild').setSwallowTouches(false);
            me.bindMove();
        },
        checkUnlock: function(){
            var me = this;
            var functionName = ["xyc", "jjc", "mrsl", "fst", "sjs", "xsrw", "szjyz", "zbs", "dmj"];
            var openLv = ["xuyuanchi", "zypkjjc", "meirishilian", "fashita", "worldtree", "xuanshangrenwu", "shizijun", "crosszb", "watcher"];
            for(var i = 0; i < openLv.length; i ++){
                var target = me.nodes["panel_" + functionName[i]] || me.ui.finds("panel_" + functionName[i]);
                var open = G.class.opencond.getLvById(openLv[i]);
                if(P.gud.lv < open){
                    if(G.tiShenIng){
                        target.finds("bg_wz").loadTexture("img/main2/bg_gonghui_bq.png");
                        target.hide();
                    }else{
                        target.finds("bg_wz").loadTexture("img/mainmenu/bg_gonghui_bqhui.png", 1);
                    }
                    target.finds("img_wz").hide();
                    var text = new ccui.Text(X.STR(L("XJKQ"), open), G.defaultFNT, 21);
                    text.setTextColor(cc.color("#979797"));
                    X.enableOutline(text, "#3b3831", 1);
                    text.setName("JKQ");
                    text.setAnchorPoint(0.5, 0.5);
                    text.setPosition(target.finds("img_wz").getPosition());
                    target.finds("panel_wz").addChild(text);
                }else{
                    while (target.finds("panel_wz").getChildByName("JKQ")) {
                        target.finds("panel_wz").getChildByName("JKQ").removeFromParent();
                    }
                    target.finds("img_wz").show();

                    if(G.tiShenIng){
                        target.finds("bg_wz").loadTexture("img/main2/bg_gonghui_bq.png");
                        target.show();
                    }else{
                        target.finds("bg_wz").loadTexture("img/mainmenu/bg_gonghui_bq.png", 1);
                    }
                }
            }
        },
        //处理login时的按钮数据
        doLoginBtnData: function () {
            var me = this;

            // var data = G.loginAllData;
        },
        //设置服务器传输的按钮数据
        setSvrBtns: function () {
            var me = this;

            var data = G.DATA.asyncBtnsData;
            var panel = me.ui.finds("panel_event");
            var btnsConf = G.gc.btnsConf;
            while (panel.getChildByName("shouchong")) {
                panel.getChildByName("shouchong").removeFromParent();
            }
            while (panel.getChildByName("kaifukuanghuan")) {
                panel.getChildByName("kaifukuanghuan").removeFromParent();
            }
            while (panel.getChildByName("xianshilibao")) {
                panel.getChildByName("xianshilibao").removeFromParent();
            }
            while (panel.getChildByName("yuejijin")) {
                panel.getChildByName("yuejijin").removeFromParent();
            }
            while (panel.getChildByName("meirishouchong")) {
                panel.getChildByName("meirishouchong").removeFromParent();
            }
            var keys = X.keysOfObject(data);
            keys.sort(function (a, b) {
                return a.substr(0, 1) < b.substr(0, 1) ? -1 : 1;
            });


            for (var i in keys) {
                var key = keys[i];
                var btnData = data[key];
                var btnCnf = btnsConf[key];
                if (!btnCnf) {
                    cc.log('不存在该配置======', key);
                    continue;
                }
                if(btnData < 1 || btnData.act < 1 || btnData.length < 1){
                    if(key == "meirishouchong") {

                    }else {
                        continue;
                    }
                }

                if(key == "meirishouchong") {
                    if(btnData[0] && btnData[0].receive) continue;
                }

                var obj = {};
                cc.mixin(obj,btnCnf,true);
                cc.mixin(obj,btnData,true);

                // var btn = me.nodes.btn_mrrw.clone();
                obj.btnname = key;
                var istime = true;
                if (key == 'yuejijin'){
                    if (btnData[0] && !btnData[0].showtime && btnData[1] && !btnData[1].showtime){
                        istime = false;
                    }
                }
                if(X.inArray(["meirishouchong"], key)) istime = false;
                cc.log('obj======', obj);
                //需要等ui将list设计好
                var btn = G.class.shdbtn(obj, null, null, null, istime ? btnData:1);
                btn.setAnchorPoint(0.5, 0.5);
                panel.addChild(btn);
                me.addBtn(btnCnf.parent,btn,1);
                var cb = btnCnf.callback;
                cb && cb(btn.finds("btn"));
            }
        },
        // hideUI : function(){
        //     //隐藏UI 用于新手指引时
        //     var me = this;
        //     cc.each(me._uiBtns||[],function(name){
        //         var node = me.ui.finds(name);
        //         if(cc.sys.isObjectValid(node) && node.__oldvisible==null){
        //             if (node.getName() == 'Button_shouchong') node.visible = true;
        //             node.__oldvisible = node.visible;
        //             node.hide();
        //         }
        //     });
        // },
        // resetUI : function(){
        //     var me = this;
        //     cc.each(me._uiBtns || [],function(name){
        //         var node = me.ui.finds(name);
        //         if(cc.sys.isObjectValid(node) && node.__oldvisible!=null){
        //             node.visible = node.__oldvisible;
        //             delete node.__oldvisible;
        //         }
        //     });
        // },
        //更新按钮位置
        updateBtnsPos: function (posType,isNoShow) {
            var me = this;

            me.allBtns[posType] = me.allBtns[posType] || [];

            var winsHeight = me.nodes;

            var arr = me.allBtns[posType];
            for (var i = 0; i < arr.length; i++) {
                var btn = arr[i];
                var hei = 0;
                var x = me.BTN_CONF[posType].starPos.x - (i + 1) * me.BTN_CONF[posType].offsetX * me.BTN_CONF[posType].pos2type.x + 3;
                var y = me.BTN_CONF[posType].starPos.y - i * me.BTN_CONF[posType].offsetY;
                btn.setPosition(cc.p(x - 40,y - 30));
                if (!isNoShow) {
                    btn.show();
                }
            }



        },
        //添加按钮
        addBtn: function (posType,btn, idx,isNoShow) {
            var me = this;

            me.allBtns[posType] = me.allBtns[posType] || [];
            if (X.arrayFind(me.allBtns[posType], btn.name, 'name') != -1) return;


            if (idx == 0) {
                me.allBtns[posType].unshift(btn);
            } else {
                me.allBtns[posType].push(btn);
            }

            me.updateBtnsPos(posType,isNoShow);
        },
        //某按钮是否正在显示
        isBtnShow: function (posType,btn) {
            var me = this;

            var isShow = false;
            if (X.arrayFind(me.allBtns[posType], btn.name, 'name')  > -1) {
                isShow = true;
            }

            return isShow;
        },
        //移除按钮
        removeBtn: function (posType,btn,isReload) {
            var me = this;

            me.allBtns[posType] = me.allBtns[posType] || [];

            var idx = X.arrayFind(me.allBtns[posType],btn.name,'name');
            if (idx != -1) {
                btn.hide();
                me.allBtns[posType].splice(idx, 1);
            }

            if (isReload) {
                me.updateBtnsPos(posType);
            }
        },
        onShow: function(){
            var me = this;
            X.audio.playMusic("sound/city.mp3", true);
            me.doLoginBtnData();
            me.action.play("in", false);
            me.action.play("wait", true);

            me.ui.hide();
            me.setTimeout(function(){
                me.ui.show();
                G.event.emit('mainViewShow');

                if(G.tiShenIng){
                    //如果是特殊提审服的话，直接随机打开一个界面
                    var __randVal = X.rand(1,4);
                    if(__randVal==1){
                        G.frame.shenqi.checkShow();
                    }else if(__randVal==2){
                        G.frame.tanxian.show();
                    }else if(__randVal==3){
                        G.frame.chongzhi.show();
                    }else if(__randVal==4){
                        G.frame.chouka.show();
                    }
                }
            },10);

            if(G.tiShenIng){
                me.finds('panel_left').hide();
                me.nodes.btn_yxjt.show();
                me.nodes.btn_rhjt.show();
                me.nodes.btn_zhd.show();

                me.ui.finds('bg_zhucheng_1').hide();
                me.ui.finds('panel_back2').hide();
                me.ui.finds('panel_back$').hide();
                me.ui.finds('panel_mild2').hide();
                me.ui.finds('panel_mild').hide();
                me.ui.finds('panel_front$').hide();

            }
        },
        onRemove: function () {
            var me = this;
            delete G.view.mainView;
            G.event.removeListener('fullScreenChange',me.fullScreenChange);
        },
        bindMove : function(){
            if(G.tiShenIng)return;

            var me = this;
            var scrollview = me.nodes.scrollview,
                innerContent = scrollview.getInnerContainer();

            scrollview.setSwallowTouches(false);
            scrollview.setBounceEnabled(true);
            scrollview.innerWidth -= 450;

//          scrollview.addCCSEventListener(function(sender,type) {
//              if (type === ccui.ScrollView.EVENT_SCROLLING) {
//                  me.setMax();
//              }
//          });

            var img0_1 = me.ui.finds('bg_zhucheng'),
                img0_2 = me.ui.finds('bg_zhucheng_1'),
                img0_3 = me.ui.finds('panel_back2'),
                img1 = me.nodes.panel_back,
                img1_0 = me.ui.finds('panel_mild2'),

                img2 = me.nodes.panel_city,

                // img2_0 = me.ui.finds('cloud'),
                // img2_1 = me.ui.finds('cloud5'),
                

                img3 = me.nodes.panel_front,
                img4 = me.ui.finds('img_city_you');
            // var img2_0_x = img2_0.x - this.x,
            //     img2_1_x = img2_1.x - this.x;


            //img2.x = -me.extConf.city.maxContleft;
			
            innerContent.update = function(dt){
                // [0,-1350]
                me.setMax();
				var myx = this.x-200;
				img0_1.x = myx*0.58;
				img0_2.x = myx*0.9;
				img0_3.x = myx*0.7;
				img1.x = myx*0.90;
				img1_0.x = myx*0.9;

                // img2_0.x = (this.x + img2_0_x);
                // img2_1.x = (this.x + img2_1_x);
				img3.x = myx*1.6;
				img4 = myx*1.4;
            };
            innerContent.scheduleUpdate();
        },
        setMax: function () {
            var me = this;
            var scrollview = me.nodes.scrollview,
                innerContent = scrollview.getInnerContainer();
            if(innerContent.x> me.extConf.city.maxContleft ){
                innerContent.x = me.extConf.city.maxContleft;
            }else if(innerContent.x < me.extConf.city.maxContRight){
                innerContent.x = me.extConf.city.maxContRight;
            }
        },
        scrollToBuild: function (name) {
            var me = this;
            //if(me.tishen())return;

            var build = me.nodes[name];
            var scrollview = me.nodes.scrollview,
                innerContent = scrollview.getInnerContainer();
            
            var x = build.getParent().x+build.getParent().width*0.5;
            if(name=='btn_yxjt'){
            	//英雄祭坛
            	//x+=400; //多层级关系，这里需要适量修正
            }
            if(name == "btn_xsrw") {
                x += 300; //按钮会被活动按钮遮住
            }
            var p = ( x - scrollview.width) / (innerContent.width - scrollview.width) * 100;
           
            cc.sys.isNative && scrollview.scrollToPercentHorizontal(p,0,true);
            me.ui.setTimeout(function () {
                me.setMax();
                me.ui.setTimeout(function () {
                	G.guidevent.emit('scrollToBuildOver');
                },200);
            },1);

        },
        //获得异步按钮数据
        getAysncBtnsData: function (callback, is, key) {
            var me = this;
            var val = key || 1;
            if(G.tiShenIng){
                me.nodes.panel_ciridenglu.hide();
                me.nodes.panel_jchd.hide();
                me.nodes.panel_xshd.hide();
                me.ui.finds('panel_mrsc').hide();
                return;
            }

            G.ajax.send('getayncbtn',[val],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    if(val != 1) {
                        for(var i in d.d) {
                            G.DATA.asyncBtnsData[i] = d.d[i];
                        }
                    }else {
                        G.DATA.asyncBtnsData = d.d;
                    }
                    if(G.DATA.asyncBtnsData.onlineprize == 1){
                        me.nodes.panel_xsjl.show();
                        me.nodes.xsjl_dh.show();
                        if(is == false){

                        }else{
                            G.class.ani.show({
                                json:'ani_xinshoulingqu',
                                addTo:me.nodes.xsjl_dh,
                                y:0,
                                repeat:false,
                                autoRemove:false,
                                onload : function (node, action) {
                                    action.play("changtai", true);
                                    node.hide();
                                    me.lingqu_node = node;
                                    me.lingqu_act = action;
                                    G.ajax.send("onlineprize_open", [], function (data) {
                                        if (!data) return;
                                        var data = JSON.parse(data);
                                        if (data.s == 1) {
                                            me.set_xsjl(data.d);
                                        }
                                    })

                                }
                            });
                        }

                    }else{
                        me.nodes.panel_xsjl.hide();
                        me.nodes.xsjl_dh.hide();
                    }

                    if(G.DATA.asyncBtnsData.ciridenglu && G.DATA.asyncBtnsData.ciridenglu.time > G.time && G.DATA.asyncBtnsData.ciridenglu.gotarr && G.DATA.asyncBtnsData.ciridenglu.gotarr.length < 4) {
                        me.nodes.panel_ciridenglu.show();
                        me.setCRDL(G.DATA.asyncBtnsData.ciridenglu);
                    }else {
                        me.nodes.panel_ciridenglu.hide();
                    }

					/*
                    if(d.d.xianshihuodong.length == 0){
                        me.nodes.panel_xshd.hide();
                    }else{
                        me.nodes.panel_xshd.show();
                    }
					*/
					//正常外网运营的区，极低可能性没有活动，如果都没有活动了，玩家打开一个空界面也没啥影响
					me.nodes.panel_xshd.show();

                    callback && callback();
                }
            });
        },
        setCRDL: function (data) {
            var me = this;
            me.nodes.panel_ciridenglu.finds("wz_djs").show();
            X.timeout(me.nodes.panel_ciridenglu.finds("wz_djs"), data.time, function () {
                me.getAysncBtnsData()
            })
        }
    });

    //start
})();
;;(function () {

    //日期更迭时刷新主界面UI
    // G.event.on('dayChange', function (d) {
    //     if (!d) return;

    //     if (cc.sys.isObjectValid(G.frame.world.ui)) {
    //         G.frame.world.map.getOtherPlayers();
    //     }

    //     if (cc.sys.isObjectValid(G.frame.world_lmjs_tk.ui)) {
    //         G.frame.world_lmjs_tk.refreshData();
    //     }
    // });

    G.class.mainMenu = X.bView.extend({
        ctor: function () {
            var me = this;

            me.showWithHistory = [];
            me._super('mainmenu.json');
            G.view.mainMenu = me;
            G.event.on('uiChange', me.uiChange, me);

            //跳转时，有几率出现被异常隐藏的情况，先暂时去掉
            G.view.mainView.event.on('visiableChangeByFullScreen', me.checkAutoVisiable, me);
        },
        checkAutoVisiable: function () {
            //跟随mainView的显隐状态
            //cc.log('mainMenu checkAutoVisiable', this._bind2Frameid, G.view.mainView.isVisible());
            if (this.frameID == 'main' && cc.isNode(G.view.mainView) && G.view.mainView.isVisible() == false) {
                this.hide();
            } else {
                this.show();
            }
        },
        uiChange: function (data) {
            if (data.frameid == 'loading') return;
            //按zindex排序后，找到第一个有needshowMainMenu属性的bui
            var openedFrames = X.uiMana.getOpenFrameOrderByZindex();
            var _bind2;
            for (var i = 0; i < openedFrames.length; i++) {
                var _fid = openedFrames[i].frameid;
                if (G.frame[_fid] && G.frame[_fid].needshowMainMenu) {
                    _bind2 = openedFrames[i];
                    break;
                }
            }

            //如果找到，则放置于该bui上一层，否则重置回默认值
            var _bind2id;
            if (_bind2) {
                this.zIndex = _bind2.zIndex + 1;
                _bind2id = _bind2.frameid;
            } else {
                this.zIndex = G.gc.zIndex.mainmenu;
                _bind2id = "main";
            }

            if (this._bind2Frameid != _bind2id) {
                //如果有变化，则触发事件
                this.showWith && this.showWith(_bind2id);
            }
            this._bind2Frameid = _bind2id;
        },
        delShowWithHistory: function (id) {
            var me = this;

            var idx = X.arrayFind(me.showWithHistory, id);
            if (idx != -1) {
                me.showWithHistory.splice(idx, 1);
            }
        },
        getLastShowWith: function () {
            //获取最后一个被要求显示的frame
            var me = this;

            if (me.showWithHistory.length > 0) {
                return me.showWithHistory.pop();
            } else {
                return null;
            }
        },
        showWith: function (frameid) {
            var me = this;
            cc.log('mainMenu showWith', frameid);

            //被frame要求显示
            this.frameID = frameid;

            //维护显示历史
            me.delShowWithHistory(this.frameID);
            me.showWithHistory.push(this.frameID);
        },
        showMainCity: function () {
            var me = this;
            G.frame.fight.visible(false);
            // G.frame.world.visible(false);
            if (!G.class.mainView.isTop) G.class.mainView.visible(true);
            // X.hideAllFrame({singleGroup:"f2"});
            // X.hideAllFrame({singleGroup:"f3"});
            // X.hideAllFrame({singleGroup:"f4"});

            G.frame.tanxian_zdbg.hide();
            G.frame.gonggao.hide();
        },
        bindBTN: function () {
            var me = this;
            if (X.keysOfObject(me.nodes).length == 0) return;

            function isHave() {
                var isHave = false;
                var redPointData = X.clone(G.DATA.hongdian);
                delete redPointData.tanxian;
                delete redPointData.gonghui;
                delete redPointData.worship;
                delete redPointData.guajitime;
                for (var i in redPointData) {
                    var is = redPointData[i];
                    if (cc.isArray(is)) {
                        if (is.length > 0) {
                            isHave = true;
                            break;
                        }
                    } else if(cc.isObject(is)){
                        for (var j in is) {
                            if (is[j] > 0) {
                                isHave = true;
                                break;
                            }
                        }
                    } else {
                        if (is > 0) {
                            isHave = true;
                            break;
                        }
                    }
                }
                if (isHave) {
                    G.setNewIcoImg(me.nodes.btn_haoyou);
                    me.nodes.btn_haoyou.getChildByName("redPoint").y -= 5;
                } else {
                    G.removeNewIco(me.nodes.btn_haoyou);
                }
            }

            me.checkRedPoint = function(val) {
                if (val) {
                    G.hongdian.getData(val, 1, function () {
                        isHave();
                        switch (val) {
                            case "tanxian":
                                G.removeNewIco(me.nodes.btn_tanxian);
                                break;
                            case "gonghui":
                                G.removeNewIco(me.nodes.btn_gonghui);
                                break;
                        }
                    })
                } else {
                    isHave();
                }
            };

            var btn_arr = ["btn_beibao", "btn_yingxiong", "btn_tanxian", "btn_haoyou", "btn_gonghui"];
            var ani_arr = ["ani_ui_beibao", "ani_ui_yingxiong", "ani_ui_tanxian", "ani_ui_zhucheng", "ani_ui_gonghui"];
            var act_arr = [];
            for (var i = 0; i < btn_arr.length; i++) {
                me.nodes[btn_arr[i]].setTouchEnabled(true);
                me.nodes[btn_arr[i]].setPositionY(me.nodes[btn_arr[i]].height / 2 + 10);

                if(G.tiShenIng){
                    var _img = new ccui.ImageView();
                    _img.loadTexture("img/main2/"+ ani_arr[i] + ".png");
                    me.nodes[btn_arr[i]].addChild(_img);
                    _img.x = _img.y = 50;
                }else{
                    G.class.ani.show({
                        addTo: me.nodes[btn_arr[i]],
                        json: ani_arr[i],
                        y: 10,
                        repeat: false,
                        autoRemove: false,
                        onload: function (node, action) {
                            if (i == 3) {
                                action.play('xuanzhong', true);
                            } else {
                                action.play('changtai', true)
                            }
                            act_arr.push(action);
                        }
                    });
                }
            }


            // var xuanzhong = function (n) {
            //     for (var i = 0; i < btn_arr.length; i++) {
            //         if (i == n) {
            //             act_arr[i].play('xuanzhong', true);
            //         } else {
            //             act_arr[i].play('changtai', true);
            //         }
            //     }
            // };

            me.set_fhzc = function (n) {
                if(G.tiShenIng)return;
                for (var i = 0; i < btn_arr.length; i++) {
                    if (i == n) {
                        act_arr[i].play('xuanzhong', true);
                    } else {
                        act_arr[i].play('changtai', true);
                    }
                }
            };
            // 背包
            me.nodes.btn_beibao.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.set_fhzc(0);
                    if (G.frame.beibao.isTop) return;
                    G.frame.beibao.once('show', function () {
                        X.uiMana.closeAllFrame(true, function (frame) {
                            if (frame.ID() == 'beibao') {
                                return false;
                            }
                        });
                    }).show();
                    me.checkRedPoint();
                    me.checkGonghuiRed();
                }
            });

            // 英雄
            me.nodes.btn_yingxiong.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.set_fhzc(1);
                    if (G.frame.yingxiong.isTop) return;
                    G.frame.yingxiong.once('show', function () {
                        X.uiMana.closeAllFrame(true, function (frame) {
                            if (frame.ID() == 'yingxiong') {
                                return false;
                            }
                        });
                    }).show();
                    me.checkRedPoint();
                    me.checkGonghuiRed();
                }
            });
            //探险
            me.nodes.btn_tanxian.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.set_fhzc(2);
                    if (G.frame.tanxian.isTop) return;
                    G.frame.tanxian.once('show', function () {
                        X.uiMana.closeAllFrame(true, function (frame) {
                            if (frame.ID() == 'tanxian') {
                                return false;
                            }
                        });
                    }).show();
                    me.checkRedPoint("tanxian");
                    me.checkGonghuiRed();
                }
            });
            // 好友
            // me.nodes.btn_haoyou.click(function () {
            //     if (G.frame.friend.isTop) return;
            //     G.frame.friend.show();
            //     f();
            // });

            //回城
            me.nodes.btn_haoyou.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.set_fhzc(3);
                    X.uiMana.closeAllFrame();
                    G.removeNewIco(sender);
                    me.checkGonghuiRed();
                }
            });
            //公会
            me.nodes.btn_gonghui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var openType = 'gonghui';
                    if (G.frame.gonghui_main.isTop) return;
                    if (!G.class.opencond.getIsOpenById(openType)) {
                        G.tip_NB.show(G.class.opencond.getTipById(openType));
                        return;
                    }
                    me.set_fhzc(4);
                    if (!P.gud.ghid) {
                        G.ajax.send('gonghui_getlist', [1], function (d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                if (!d.d.applylist) d.d.applylist = [];
                                d.d[1] = d.d.list;

                                G.frame.gonghui_main.once('show', function () {
                                    X.uiMana.closeAllFrame(true, function (frame) {
                                        if (frame.ID() == 'gonghui_main') {
                                            return false;
                                        }
                                    });
                                }).checkShow(d.d);
                            }
                        }, true);
                    } else {
                        G.frame.gonghui_main.once('show', function () {
                            X.uiMana.closeAllFrame(true, function (frame) {
                                if (frame.ID() == 'gonghui_main') {
                                    return false;
                                }
                            });
                        }).checkShow();
                    }
                    me.checkRedPoint("gonghui");
                }
            });
        },
        showMessage: function (d) {
            var me = this;
            var item = G.frame.liaotian.createItem(d);
            if (cc.isNode(me.nodes.panel_wz)) {
                me.nodes.panel_wz.removeAllChildren();
                item.y = -20;
                me.nodes.panel_wz.addChild(item);
            }
        },
        onOpen: function () {
            var me = this;
            me.bindBTN();

            me.zIndex = G.gc.zIndex.mainmenu;
            // G.event.on('new_main_liaotian', function (d) {
            //     me.showMessage(d);
            // })
        },
        onShow: function () {
            var me = this;
            me.checkGonghuiRed();

            if(G.tiShenIng){
                me.finds('bg_down').hide();
            }
        },
        onRemove: function () {
            var me = this;
            delete G.view.mainMenu;
            G.event.removeListener('uiChange', me.uiChange);
        },
        checkGonghuiRed: function () {
            var me = this;
            if (!P.gud.ghid && P.gud.lv >= G.class.opencond.getLvById("gonghui")) {
                G.setNewIcoImg(me.nodes.btn_gonghui);
                me.nodes.btn_gonghui.getChildByName("redPoint").y -= 5;
            }
        }
    });

})();
;;
(function () {
    //跑马灯
    var ID = 'paomadeng';

    var fun = X.bUi.extend({
        ctor: function(json,id){
            this.preLoadRes = ['public2.plist','public2.png'];
            this._super(json,id);
            this.modalFrame = true;
        },
        onShow: function () {
            this.fillSize();
        },
        onRemove: function () {
        },
        onOpen : function(){
            var me = this;
            me.initUI();
            me.goToTop();
        },
        initUI: function () {
            var me = this;
            me.ui_paomadeng = me.ui.finds('paomadeng');
            me.ui_background = me.ui_paomadeng.finds('tu');
            G.event.emit("paomadengOver");

        },
        scrollMessage: function (d) {
            if(!G.frame.paomadeng.isShow){
                G.frame.paomadeng.show();
            }
            this._allMessage = [].concat(this._allMessage || [],d);

            if (!this._showMessageRunning){
                this._scrollMessage();
                var img = new ccui.ImageView('img/public/bg_paomadeng.png',1)
                img.setAnchorPoint(0,1);
                img.setPosition(-35,this.ui_background.height-6);
                this.ui_background.removeAllChildren();
                this.ui_background.addChild(img);
            }
        },
        _scrollMessage: function () {
            var me = this;
            var w = 640;
            if (!this._allMessage || this._allMessage.length == 0) {
                return;
            }else{
                me.ui_paomadeng.show();
            }
            this._lastOne = false;
            this._showMessageRunning = true;

            var msg = this._allMessage.shift();
            var item = G.frame.liaotian.createItem(msg);
            var width = item.getContentSize().width;
            //me.ui_paomadeng.find('wz').addChild(item);
            me.ui_paomadeng.getChildren()[1].addChild(item);
            item.setPositionX(w);

            item.runActions([
                cc.moveTo((width + w/2)/100,cc.p(w/2 - width,0)),
                cc.callFunc (function () {
                me._lastOne = true;
                me._scrollMessage();
                }),
                cc.moveTo((w/2 + 10)/100,cc.p(-width - 50,0)),
                cc.callFunc (function () {
                    if (me._lastOne){
                        me.ui_paomadeng.hide();
                        //me.ui_paomadeng.find('wz').removeAllChildren();
                        me.ui_paomadeng.getChildren()[1].removeAllChildren();
                        delete me._showMessageRunning;
                        delete me._lastOne;
                    }
                }
            )]);

            // item.moveTo((width + w/2)/100,cc.p(w/2 - width,0)).then(function () {
            //     me._lastOne = true;
            //     me._scrollMessage();
            // }).moveTo((w/2 + 10)/100,cc.p(-width - 50,0)).then(function () {
            //     if (me._lastOne){
            //         me.ui_paomadeng.hide();
            //         //me.ui_paomadeng.find('wz').removeAllChildren();
            //         me.ui_paomadeng.getChildren()[1].removeAllChildren();
            //         delete me._showMessageRunning;
            //         delete me._lastOne;
            //     }
            // }).run();
        },
        onAniShow:function() {
            var me = this;

        }
    });

    G.frame[ID] = new fun('paomadeng.json', ID);
})();
;;/**
 * Created by LYF on 2018/9/11.
 */
(function () {
    //总排行榜
    var ID = 'phb_main';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
            me.topMenu = new G.class.topMenu(me, {
                btns: X.clone(G.class.menu.get('rank'))
            }, null, me.nodes.listview_phb);
            me.nodes.listview_phb.setTouchEnabled(true);
        },
        changeType: function(sender) {
            var me = this;
            var type = sender.data.id;

            if(sender.disable) {
                G.tip_NB.show(sender.show);
                return;
            }

            me.type = type;

            me.setContents();
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function (sender, type) {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();

            me.title = {
                1: L("PHB_GQ"),
                11: L("PHB_ZL"),
                3: L("PHB_JF"),
                10: L("PHB_DJ"),
                2: L("PHB_CS"),
                14: L("PHB_TJ"),
                17: L("PHB_CJ")
            };
            me.idx = {
                1: 0,
                11: 1,
                3: 2,
                10: 3,
                2: 4,
                14: 5,
                17: 6
            };
            me.menu = {
                0: 1,
                1: 11,
                2: 3,
                3: 10,
                4: 2,
                5: 14,
                6: 17
            }
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.checkRedPoint();

            new X.bView("zhuui_paihangbang.json", function (node) {
                me.ui.finds("p_nr").addChild(node);
                me.view = node;
                cc.enableScrollBar(me.view.nodes.scrollview);
                cc.enableScrollBar(me.view.nodes.listview);

                me.view.finds("btn_mobai").click(function () {
                    G.ajax.send('rank_worship', [me.idx[me.type]], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            me.worship.push(me.idx[me.type]);
                            me.setBtnState();
                            G.frame.jiangli.data({
                                prize: d.d.prize
                            }).show();
                            me.jumpList();
                            G.hongdian.getData("worship", 1, function () {
                                me.checkRedPoint();
                            })
                        }
                    }, true);
                });

                X.viewCache.getView('ui_list6.json', function (node) {
                    me.list = node.nodes.list_rank;
                    me.topMenu.changeMenu(me.type);
                    me.setTime();
                });

            })
        },
        jumpList: function() {
            var me = this;

            for(var i = 0; i < me.nodes.listview_phb.getChildren().length; i ++) {
                if(!X.inArray(me.worship, i)) {
                    if(me.nodes.listview_phb.getChildren()[i].btn.disable) {
                        continue;
                    }else {
                        me.topMenu.changeMenu(me.menu[i]);
                        if(i > 3) {
                            me.nodes.listview_phb.jumpToRight();
                        } else {
                            me.nodes.listview_phb.jumpToLeft();
                        }
                    }
                    break;
                }
            }
        },
        checkRedPoint: function() {
            var me = this;
            var data = G.DATA.hongdian.worship;
            var child = me.nodes.listview_phb.getChildren();

            if(!data) return;

            for(var i in child) {
                if(!X.inArray(data, me.idx[child[i].name])) {
                    if(!child[i].btn.disable) {
                        G.setNewIcoImg(child[i], .85);
                        child[i].getChildByName("redPoint").setPosition(140, 39);
                    }
                }else {
                    G.removeNewIco(child[i]);
                }
            }
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            me.type = (me.data() && me.data().type) || 1;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        getData: function(callback) {
            var me = this;

            G.ajax.send('rank_open', [1, 2, 3, 10, 11, 14, 17], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.allDATA = d.d;
                    me.worship = d.d.worship;
                    callback && callback();
                }
            }, true);
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            me.DATA = me.allDATA.rankinfo[me.type];
            me.setMB();
            me.setMyRank();
            me.setRankList();
        },
        setBtnState: function() {
            var me = this;

            if(!X.inArray(me.worship, me.idx[me.type])) {
                me.view.finds("btn_mobai").setBright(true);
                me.view.finds("btn_mobai").setTouchEnabled(true);
                me.view.finds("txt_lq").setTextColor(cc.color("#2f5719"));
                G.setNewIcoImg(me.view.finds("btn_mobai"), .95);
            }else {
                me.view.finds("btn_mobai").setBright(false);
                me.view.finds("btn_mobai").setTouchEnabled(false);
                me.view.finds("txt_lq").setTextColor(cc.color("#6c6c6c"));
                G.removeNewIco(me.view.finds("btn_mobai"));
            }
        },
        setMB: function () {
            var me = this;
            var data = me.DATA.ranklist[0];

            me.view.finds("btn_mobai").setBright(false);
            me.view.finds("btn_mobai").setTouchEnabled(false);
            me.view.finds("txt_lq").setTextColor(cc.color("#6c6c6c"));
            me.view.nodes.panel_tx.removeAllChildren();

            if(!data) {
                me.view.nodes.txt_name.setString("");
                me.view.nodes.txt_wz2.setString("");
            }else {
                if(me.type == 10) {
                    me.view.nodes.txt_name.setString(data.name);
                    me.view.nodes.txt_wz2.setString(me.title[me.type] + ": " + data.lv);

                    var img = new ccui.ImageView(G.class.gonghui.getFlagImgById(data.flag), 1);
                    img.setScale(.6);
                    img.setAnchorPoint(0.5, 0.5);
                    img.setPosition(me.view.nodes.panel_tx.width / 2, me.view.nodes.panel_tx.height / 2);
                    me.view.nodes.panel_tx.addChild(img);
                    me.view.nodes.txt_wz1.setString(X.STR(L('PHB_MAIN_HZ_1'),data.boss ? data.boss : ''));
                }else {
                    me.view.nodes.txt_name.setString(data.headdata.name);
                    if(me.type == 3) {
                        me.view.nodes.txt_wz2.setString(me.title[me.type] + ": " + me.getVal(data, null, null, "jifen"));
                    }else {
                        me.view.nodes.txt_wz2.setString(me.title[me.type] + ": " + me.getVal(data));
                    }
                    me.view.nodes.txt_wz1.setString(X.STR(L('PHB_MAIN_GH_1'),data.headdata.guildname == '' ? L('PHB_MAIN_JRGH') : data.headdata.guildname));
                    var head = G.class.shead(data.headdata);
                    head.setPosition(me.view.nodes.panel_tx.width / 2, me.view.nodes.panel_tx.height / 2);
                    me.view.nodes.panel_tx.removeAllChildren();
                    me.view.nodes.panel_tx.addChild(head);
                    head.data = data.headdata;
                    head.setTouchEnabled(true);
                    head.icon.setTouchEnabled(false);
                    head.touch(function(sender, type) {
                        if (type == ccui.Widget.TOUCH_NOMOVE) {
                            G.frame.wanjiaxinxi.data({
                                pvType: 'zypkjjc',
                                uid: sender.data.uid
                            }).checkShow();
                        }
                    });
                }


                me.setBtnState();
            }
        },
        setMyRank: function () {
            var me = this;

            me.view.finds("txt_level").setString(me.title[me.type]);

            if(me.DATA.myrank > 0) {
                me.view.nodes.fnt_player.setString(me.DATA.myrank);
                me.view.finds("wsb_player").hide();

                if(me.type == 3) {
                    me.view.finds("txt_level_0").setString(me.DATA.jifen);
                }else if(me.type == 11) {
                    me.view.finds("txt_level_0").setString(P.gud.maxzhanli);
                }else if(me.type == 1){
                    me.view.finds("txt_level_0").setString(P.gud.maxmapid);
                } else if(me.type == 10){
                    me.view.finds("txt_level_0").setString(me.DATA.lv);
                } else if(me.type == 17){
                    me.view.finds("txt_level_0").setString(P.gud.success);
                }else {
                    me.view.finds("txt_level_0").setString(me.DATA.val);
                }
            }else {
                me.view.finds("wsb_player").show();
                me.view.nodes.fnt_player.setString("");
                me.view.finds("txt_level_0").setString("");
            }
        },
        setRankList: function  () {
            var me = this;

            var scrollView = me.view.nodes.scrollview;
            scrollView.removeAllChildren();

            var data = X.clone(me.DATA.ranklist);
            data.splice(0, 1);

            if(data.length < 1) {
                me.view.nodes.img_zwnr.show();
                return;
            } else me.view.nodes.img_zwnr.hide();

            for(var i = 0; i < data.length; i ++) {
                data[i].rank = i + 2;
            }

            var table = me.table = new X.TableView(scrollView, me.list, 1, function (ui, data) {
                me.setItem(ui, data);
            }, null, null, 8, 10);
            table.setData(data);
            table.reloadDataWithScroll(true);
            scrollView.getChildren()[0].getChildren()[0].x = 4;
        },
        setItem: function(ui, data) {
            X.autoInitUI(ui);
            var me = this;
            var layPh = ui.nodes.img_rank;
            var txtPh = ui.nodes.sz_phb;
            var layIco = ui.nodes.panel_tx;
            var txtName = ui.nodes.txt_name;
            var txtGuanqia = ui.nodes.txt_number;
            var txt_wz = ui.nodes.txt_wz;
            ui.nodes.txt_title.setString(me.title[me.type]);
            layPh.hide();
            txtPh.setString('');
            layIco.removeAllChildren();
            if (data.rank < 0) {
                txtPh.setString(0);
            } else if (data.rank < 4) {
                layPh.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                layPh.show();
            } else {
                txtPh.setString(data.rank);
                txtPh.show();
            }

            if(me.type == 10) {
                var img = new ccui.ImageView(G.class.gonghui.getFlagImgById(data.flag), 1);
                img.setScale(.6);
                img.setAnchorPoint(0.5, 0.5);
                img.setPosition(layIco.width / 2, layIco.height / 2);
                layIco.addChild(img);
                txtName.setString(data.name);
                txtGuanqia.setString(data.lv);
                txt_wz.setString(X.STR(L('PHB_MAIN_HZ'),data.boss ? data.boss : ''));
            }else {
                var head = G.class.shead(data.headdata);
                head.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
                layIco.addChild(head);
                head.data = data.headdata;
                head.setTouchEnabled(true);
                head.icon.setTouchEnabled(false);
                head.touch(function(sender, type) {
                    if (type == ccui.Widget.TOUCH_NOMOVE) {
                        G.frame.wanjiaxinxi.data({
                            pvType: 'zypkjjc',
                            uid: sender.data.uid
                        }).checkShow();
                    }
                });
                txtName.setString(data.headdata.name);
                txtGuanqia.setString(me.type == 3 ? me.getVal(data, null, null, "jifen") : me.getVal(data));
                txt_wz.setString(X.STR(L('PHB_MAIN_GH'),data.headdata.guildname == '' ? L('PHB_MAIN_JRGH') : data.headdata.guildname));
            }

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            layPh.setTouchEnabled(false);
        },
        getVal: function (obj, val, val1, val2) {
            var me = this;

            val = val || "uid";
            val1 = val1 || "uid";

            if(!cc.isArray(obj)) {
                var keys = X.keysOfObject(obj);
                for(var i in keys) {
                    if(keys[i] == "headdata") {
                        keys.splice(i, 1);
                        break;
                    }
                }
                return val2 ? obj[val2] : obj[keys[0]];
            } else {
                if(val !== "uid") {
                    for(var i in obj) {
                        if(obj[i][val] == P.gud[val1]) {
                            return obj[i].lv;
                        }
                    }
                }else {
                    for(var i in obj) {
                        if(obj[i].headdata[val] == P.gud[val1]) {
                            return me.getVal(obj[i], val, val1, val2);
                        }else{
                            if(me.type == 1){
                                val2 = 0;
                                return val2;
                            }
                        }
                    }
                }
            }
        },
        setTime: function () {
            var me = this;
            var timeTxt = new ccui.Text();
            X.timeout(timeTxt, X.getTodayZeroTime() + 24 * 3600,function () {
                G.hongdian.getData("worship", 1, function () {
                    me.checkRedPoint();
                    me.getData(function () {
                        me.setBtnState();
                    })
                })
            });
        }
    });
    G.frame[ID] = new fun('ui_xinphb.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/2.
 */
(function () {
    //人物升级
    var ID = 'playerlvup';

    G.event.on("playerLvup", function (d) {
        G.hongdian.getHongdian(1);
        G.view.mainView.checkUnlock();
		//前几级弹框会影响新手指导
        if(d.olv < 5) return;
        if(d.lv >= G.class.opencond.getLvById("gonghui")) G.view.mainMenu.checkGonghuiRed();
        if(G.frame.tanxian.isShow) G.frame.tanxian.refreshData();
        if(G.frame.yingxiong_fight.isShow){
            G.frame.fight.once("hide", function () {
                G.frame.playerlvup.data(d).show();
            })
        }else{
            cc.director.getRunningScene().setTimeout(function () {
                if(G.frame.jiangli.isShow){
                    G.frame.jiangli.once("hide", function () {
                        G.frame.playerlvup.data(d).show();
                    })
                } else if(G.DATA.tanxianAni){
                    G.event.once("aniEnd", function () {
                        cc.director.getRunningScene().setTimeout(function () {
                            if(G.frame.jiangli.isShow){
                                G.frame.jiangli.once("hide", function () {
                                    G.frame.playerlvup.data(d).show();
                                })
                            }else{
                                G.frame.playerlvup.data(d).show();
                            }
                        }, 500);
                    })
                } else{
                    G.frame.playerlvup.data(d).show();
                }
            }, 500);
        }
    });

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id);
            me.preLoadRes = ["jiesuojianzhu.png", "jiesuojianzhu.plist"]
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function (sender, type) {
                if(!me.open || !me.open.title[me.idx]){
                    me.remove();
                }else{
                    me.showOpen();
                }
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.idx = 0;
            me.open = {
                "title": [],
                "info": [],
                "img": []
            };

            var newLv = me.data().lv;
            var oldLv = me.data().olv;
            var conf = G.class.getConf("open");
            var keys = X.keysOfObject(conf);
            var openArr = [];
            for(var i = 0; i < keys.length; i ++){
                if(keys[i] > oldLv && keys[i] <= newLv){
                    if(keys[i] !== 45) {
                        openArr.push(conf[keys[i]]);
                    }else {
                        if(P.gud.vip < 3) openArr.push(conf[keys[i]]);
                    }

                }
            }
            for(var i = 0; i < openArr.length; i ++){
                for(var j in openArr[i].title){
                    me.open.title.push(openArr[i].title[j]);
                }
                for(var k in openArr[i].title){
                    me.open.info.push(openArr[i].info[k]);
                }
                for(var l in openArr[i].title){
                    me.open.img.push(openArr[i].img[l]);
                }
            }
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            var data = me.data();
            var conf = G.class.getConf("player")[data.lv];
            X.audio.playEffect("sound/wanjiashengji.mp3");
            G.class.ani.show({
                json: "ani_renwusj",
                addTo: me.ui.finds("Image_1"),
                x: me.ui.finds("Image_1").width / 2,
                y: me.ui.finds("Image_1").height / 2,
                repeat: false,
                autoRemove: false,
                onload: function(node, action){
                    X.autoInitUI(node);
                    if(conf){
                        var str = X.STR("<font node=1></font>  +{1}", conf.prize[0].n);
                        var icon = new ccui.ImageView(G.class.getItemIco(conf.prize[0].t), 1);
                        var rh = new X.bRichText({
                            size: 22,
                            maxWidth: node.nodes.Panel_1.width,
                            lineHeight: 34,
                            family: G.defaultFNT,
                            color: "#ffffff",
                            eachText: function (node) {
                                X.enableOutline(node, "#000000", 2);
                            }
                        });
                        rh.text(str, [icon]);
                        rh.setAnchorPoint(0.5, 0.5);
                        rh.setPosition(node.nodes.Panel_1.width / 2, node.nodes.Panel_1.height / 2);
                        node.nodes.Panel_1.removeAllChildren();
                        node.nodes.Panel_1.addChild(rh);
                    }else{
                        node.nodes.ico_1.hide();
                        node.nodes.wz_1.hide();
                    }
                    node.nodes.dengji_1.setString(data.lv);
                },
                onend: function (node, action) {
                    action.play("wait", true);
                }
            })
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
        },
        showOpen: function () {
            var me = this;
            me.ui.finds("Image_1").removeAllChildren();
            G.class.ani.show({
                json: "ani_jiesuoxinwanfa",
                addTo: me.ui.finds("Image_1"),
                x: me.ui.finds("Image_1").width / 2,
                y: me.ui.finds("Image_1").height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    node.ui.finds("Text_1").setString(me.open.title[me.idx]);
                    node.ui.finds("Text_2").setString(me.open.info[me.idx]);
                    var img = me.open.img && me.open.img[me.idx];
                    if(img) node.ui.finds("Panel_2").setBackGroundImage("img/jiesuojianzhu/" + me.open.img[me.idx] + ".png", 1);
                    me.idx ++;
                },
            })
        }
    });
    G.frame[ID] = new fun('touming.json', ID);
})();
;;(function(){

var ID = 'preload';

var fun = X.bUi.extend({
    ctor: function(json,id){
        //this.cacheFrame = true;
        this._super(json,id);
    },
    show : function(task,callback){
        /*
         {
             taskType:'loadFight',
             taskList:taskList,
             endCall : function(){
             }
         }
        * */
        var me = this;
        if(typeof(task)=='object'){
            me.DATA = task;
        }else{
            me.DATA = {
                taskList:[],
                taskType:task,
                endCall : callback
            }
        }

        var _super = me._super;
        X.ccui(this._json,function(loader){
            _super.call(me);
        });
    },
    onOpen : function(){
        var me = this;

        // me.text = me.ui.nodes.txt_nr;
        me.text = me.ui.nodes.txt_loading_jdt;
        me.jdt = me.ui.nodes.img_loading_jdt;
        me.imgBg2 = me.ui.nodes.bg_denglu;
        me.imgBg2.removeBackGroundImage();
    },

    setProgPercent : function(v){
        if(v==null || isNaN(v))v=99;
        this.jdt.setPercent(v);
        this.ui.finds("Image_5").setVisible(true);
    },
    setProgText : function(v,v1){
        this.text.setString((v + v1) || '');
    },
    doTaskList : function(){
        var me = this;
        me.DATA.taskIndex = 0;
        me.DATA.taskMax = me.DATA.taskList.length;

        X.async( me.DATA.taskList ,function(){
            me.DATA.taskIndex = me.DATA.taskMax = 0;
            me.DATA.endCall && me.DATA.endCall.call(me);
            //me.hide();
        },0);
    },
    f5Prog : function(){
        var me = this;
        me.DATA.taskIndex ++ ;
        var v = parseInt(me.DATA.taskIndex/me.DATA.taskMax * 100,10);
        me.setProgPercent( v  +  14);
    },
    onShow: function () {
        var me = this;

        me.setProgPercent(0);
        me.ui.finds("Image_5").setVisible(false);
        me.setProgText(L('load'),L('loadingRes'));

        me.ui.setTimeout(function(){
            me['task_'+ me.DATA.taskType] && me['task_'+ me.DATA.taskType]();
        },20);

        me.changeBgImg();
    },

    task_reconn : function(){
        var me = this;
        me.setProgText(L('RECONNSVR'),'');
        me.setProgPercent(0);
    },

    task_loadres : function(){
        var me = this;
        var res = (R && R.preload) || [];
        if(cc.sys.isNative){
            me.setProgPercent(99);
            me.ui.setTimeout(function(){
                me.DATA.endCall && me.DATA.endCall.call(me);
            },200);
        }else{
            cc.loader.load(res,function (result, count, loadedCount) {
                var percent = parseInt(((loadedCount+1) / count * 100) | 0);
                me.setProgText(L('load'),X.STR(L('loadingbase'),percent));
                me.setProgPercent(percent);
            }, function () {
                me.DATA.endCall && me.DATA.endCall.call(me);
            });
        }
    },
    task_loadJSON : function(){
        var me = this;
        var jsonList = {
            //"city":{"file":folder+"samejson/city.json",onload:function(json){
            //    G.gc.cityIndex=[];
            //    for(var k in json){
            //        G.gc.cityIndex[ json[k].idx ] = k;
            //    }
            //}},

            "extservers": {"file": "json/extservers.json"},
            "menu": {"file": "json/menu.json"},
            "skillani": {
                "file": "json/skillani.json"
            },
            "tiaozhuan": {
                "file": "json/tiaozhuan.json"
            },
            "loading": {
                "file": "json/loading.json"
            },
            "hero": {"file": "samejson/hero.json"},
            "buff": {"file": "samejson/buff.json"},
            "equip": {"file": "samejson/equip.json"},
            "equiptz": {"file": "samejson/equiptz.json"},
            "herocom": {"file": "samejson/herocom.json"},
            "herostarup": {"file": "samejson/herostarup.json"},
            "attricon": {"file": "samejson/attricon.json"},
            "baoshi": {"file": "samejson/baoshi.json"},
            "item": {"file": "samejson/item.json"},
            "shipin": {"file": "samejson/shipin.json"},
            "tanxian": {"file": "samejson/tanxianmap.json"},
            "tanxian_com": {"file": "samejson/tanxiancom.json"},
            "diaoluo": {"file": "samejson/diaoluo.json"},
            "zaoxing": {"file": "samejson/zaoxing.json"},
            "herogrow": {"file": "samejson/herogrow.json"},
            "herohecheng": {"file": "samejson/herohecheng.json"},
            "xstask": {"file": "samejson/xstask.json"},
            "xscom": {"file": "samejson/xstaskcom.json"},
            "shop": {"file": "samejson/shop.json"},
            "shopitem": {"file": "samejson/shopitem.json"},
            'opencond':{'file':'samejson/opencond.json'},
            'worldtree':{'file':'samejson/worldtree.json'},
            "dafashita": {
                "file": "samejson/fashita.json"
            },
            "zypkjjccom": {
                "file": "samejson/zypkjjccom.json"
            },
            "tongguanprize": {
                "file": "samejson/fashitacom.json"
            },
            "fightcom": {
                "file": "samejson/fightcom.json"
            },
            "xuyuanchi": {"file": "samejson/xuyuanchi.json"},
            "npc": {"file": "samejson/npc.json"},
            "mrsl": {"file": "samejson/meirishilian.json"},
            "mrslcon": {"file": "samejson/meirishiliancon.json"},
            "chouka": {"file": "samejson/jitan.json"},
            "yuanzheng_xx": {"file":"samejson/shizhijun_xx.json"},
            "yuanzheng_conf": {"file": "samejson/shizijun.json"},
            "gonghui": {"file": "samejson/gonghui.json"},
            "gonghui_fuben": {"file": "samejson/gonghui_fuben.json"},
            "guide": {"file": "json/guide.json"},
            'championtrial':{"file": "samejson/championtrial.json"},
            "task": {"file":"samejson/task.json"},
            "friend": {"file":"samejson/friend.json"},
            "vip": {"file":"samejson/vip.json"},
            "vip_tequan": {"file":"samejson/vip_tequan.json"},
            "kuafuzhan":{"file":"samejson/crosszb.json"},
            "chongzhihd": {
                "file": "samejson/chongzhihd.json"
            },
            "player": {
                "file": "samejson/playerlv.json"
            },
            "shouchong": {
                "file": "samejson/shouchong.json"
            },
            "xiaoyueka": {
                "file": "samejson/yuka.json"
            },
            "weekmonth": {
                "file": "samejson/weekmonthlibao.json"
            },
            "support" :{
                "file": "samejson/support.json"
            },
            "kaifukuanghuan": {
                "file": "samejson/kaifukuanghuan.json"
            },
            "kaifukuanghuan_jdt": {
                "file": "samejson/kaifukuanghuan_extend.json"
            },
            "open": {
                "file": "samejson/open.json"
            },
            "woyaobianqiang": {
                "file": "samejson/woyaobianqiang.json"
            },
            "shenqicom": {
                "file": "samejson/shenqicom.json"
            },
            "shenqitask": {
                "file": "samejson/shenqitask.json"
            },
            "shenqibuff": {
                "file": "samejson/shenqibuff.json"
            },
            "shenqiskill": {
                "file": "samejson/shenqiskill.json"
            },
            "yuwaizhengba": {
                "file": "samejson/crosszb.json"
            },
            "ciridenglu": {
                "file": "samejson/giverarepet.json"
            },
            "special": {
                "file": "samejson/special.json"
            },
            "watchercom": {
                "file": "samejson/watchercom.json"
            },
            "meltsoul": {
                "file": "samejson/meltsoul.json"
            },
            "meltsoulcom": {
                "file": "samejson/meltsoulcom.json"
            },
            "meirishouchong": {
                "file": "samejson/meirishouchong.json"
            },
            "watcher": {
                "file": "samejson/watcher.json"
            },
            "tongyu": {
                "file": "samejson/tongyu.json"
            },
            "gonghuizhengfeng": {
                "file": "samejson/guildcompeting.json"
            },
            "glyph": {
                "file": "samejson/glyph.json"
            },
            "glyphcom": {
                "file": "samejson/glyphcom.json"
            },
            "glyphextra": {
                "file": "samejson/glyphextra.json"
            },
            "wangzherongyao": {
                "file": "samejson/crosswz.json"
            },
        };

        for(var k in jsonList){
            (function(key){
                me.DATA.taskList.push(function(callback){
                    //me.setProgText(L('load')+L('loadConfig'),key);
                    me.setProgText(L('load'),L('loadConfig'));
                    //me.setProgText(L('loadConfig'));
                    me.f5Prog();

                    X.loadJSON(jsonList[key].file , function(err,json){
                        G.gc[key] = json;
                        jsonList[key].onload && jsonList[key].onload(G.gc[key]);
                        callback && callback();
                    });
                });
            })(k);
        }

        me.doTaskList();
    },
    task_loadView : function(){
        var me = this;
        var viewList = [
            // 'zzsys_jn_item',
        ];

        for(var i=0;i<viewList.length;i++){
            (function(key){
                me.DATA.taskList.push(function(callback){
                    me.setProgText(L('load'),L('loadConfig'));
                    me.f5Prog();
                    if(cc.sys.isNative){
                        //客户端view是同步加载的，无需预加载，按需即可
                        return callback && callback();
                    }

                    G.class[key].loadJson(function(){
                        callback && callback();
                    });
                });
            })(viewList[i]);
        }

        me.doTaskList();
    },
    task_loadbaseData : function(){
        var me = this;
        me.DATA.taskList.push(function(callback){
            me.setProgText(L('load'),L('loadYingXiong'));
            me.f5Prog();
            G.frame.yingxiong.getData(function(){
                callback && callback();
            },true);
        });
        me.DATA.taskList.push(function(callback){
            me.setProgText(L('load'),L('loadBeiBao'));
            me.f5Prog();
            G.frame.beibao.getData(function(){
                callback && callback();
            },true);
        });
        me.DATA.taskList.push(function(callback){
            me.setProgText(L('load'),L('loadZhuangBei'));
            me.f5Prog();
            G.frame.beibao.getZbData(function(){
                callback && callback();
            },true);
        });
        me.DATA.taskList.push(function(callback){
            me.setProgText(L('load'),L('loadShipin'));
            me.f5Prog();
            G.frame.beibao.getShipinData(function(){
                callback && callback();
            },true);
        });
        me.DATA.taskList.push(function(callback){
            me.setProgText(L('load'),L('loadGlyph'));
            me.f5Prog();
            G.frame.beibao.getGlyphData(function(){
                callback && callback();
            },true);
        });
        me.DATA.taskList.push(function(callback){
            me.setProgText(L('load'),L('loadShipin'));
            me.f5Prog();
            G.frame.yingxiong.getHeroCellData(function(){
                callback && callback();
            },true);
        });

        me.DATA.taskList.push(function(callback){
            X.ccui('btn_list.json', function (loader){
                G._hdBtnNode = new ccui.Layout();
                G._hdBtnNode.setContentSize(cc.size(80, 80));
                G._hdBtnNode.setAnchorPoint(C.ANCHOR[5]);

                var btn = new ccui.Button;
                btn.setAnchorPoint(0.5, 0.5);
                btn.setName("btn");
                btn.setPosition(G._hdBtnNode.width / 2, G._hdBtnNode.height / 2);
                G._hdBtnNode.addChild(btn);


                var txt = new ccui.Text("", G.defaultFNT, 18);
                btn.txt = txt;
                txt.setName("wz_djs");
                txt.setColor(cc.color("#2BDF02"));
                X.enableOutline(txt, "#000000", 2);
                txt.setAnchorPoint(0.5, 0.5);
                txt.setPosition(G._hdBtnNode.width / 2, -5);
                G._hdBtnNode.addChild(txt);
                G._hdBtnNode.retain();

                callback && callback();
            });
        });

		me.DATA.taskList.push(function(callback){
            me.f5Prog();
            G.serverconfig.getData(function(){
                callback && callback();
            },true);
        });

        // me.DATA.taskList.push(function(callback){
        //     me.setProgText(L('load'),L('loadBuiDui'));
        //     me.f5Prog();
        //     G.frame.budui.getData(function(){
        //         callback && callback();
        //     });
        // });
        // me.DATA.taskList.push(function(callback){
        //     me.setProgText(L('load'),L('loadArmyList'));
        //     me.f5Prog();
        //     G.DAO.budui.getArmyListData(function(){
        //         callback && callback();
        //     });
        // });

        me.doTaskList();
    },
    // task_prepare : function(){
    //     var me = this;
    //     var list = [
    //         'loading',
    //         // 'liaotian',
    //         // 'youjian',
    //         // 'zhuangbei',
    //         // 'shichang',
    //         // 'jingjichang',
    //         // 'beibao',
    //         // 'huishou',
    //         // 'meiriqiandao'
    //     ];

    //     for(var i=0;i<list.length;i++){
    //         (function(index){
    //             var name = list[index];

    //             me.DATA.taskList.push(function(callback){
    //                 //var percent = parseInt((((index+1) / list.length).toFixed(1) * 100) | 0);
    //                 //me.setProgText(X.STR(L('loadingbase'),percent));

    //                 me.setProgText(L('load'),L('loadModule'));
    //                 me.f5Prog();
    //                 G.frame[name].prepare(function(){
    //                     callback && callback();
    //                 });
    //             });
    //         })(i);
    //     }
    //     me.doTaskList();
    // },

    task_doTaskList : function(data){
        var me = this;
        me.doTaskList();
    },

    onRemove: function () {
        var me = this;
        // me.releaseRes(['img/denglu030.png']);
    },
    changeBgImg: function (type) {
        var me = this;

        var arr = ['toMap', 'toZhucheng'];

        cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGB565;
        if (X.inArray(arr, type)) {
            me.imgBg2.show();
            me.imgBg2.find('img_bg').setBackGroundImage(G.class.loading.getOneConf().img, 0);
        } else {
            me.imgBg2.setBackGroundImage('img/bg/bg_denglu.jpg', 0);
            //loading界面不要加动画，这里会预加载大量资源，帧率不高，动画会导致界面看起来很卡顿
            //load部分动画
            //var bg = me.imgBg2;
            //G.class.ani.show({
            //    json:'beijing',
            //    addTo:bg,
            //    x:bg.width/2,
            //    y:bg.height/2,
            //    repeat:true,
            //    autoRemove:false,
            //    onload: function(node, action){
            //        X.forEachChild(node,function(node){
            //            var _action = node.getActionByTag(node.getTag());
            //            if(_action)_action.gotoFrameAndPlay(0,true);
            //        });
            //        G.class.ani.show({
            //            json: "ani_denglu",
            //            addTo: node.finds("niutourongqil_2"),
            //            x: 0,
            //            y: 0,
            //            repeat: true,
            //            autoRemove: false,
            //        })
            //    }
            //});
        }
        cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;
    }
});
G.frame[ID] = new fun('loading.json',ID);

})();

;;/**
 * Created by wfq on 2018/3/17.
 */
(function () {
    //奖励信息
    var ID = 'prize';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            /*
            *******************
            *prize
            *@param {title,intr,prize,callback,state,hideCloseBtn}
            *@returns {null}
            *******************
            */

            X.render({
                top_title:me.data().title,
                btn_gb: function (node) {
                    if (me.data().hideCloseBtn) {
                        node.hide();
                        me.ui.finds('ui_top_whbg').hide();
                    }
                    node.click(function (sender, type) {
                        me.remove();
                    });
                }
            },me.nodes);

            new X.bView('ui_tip_jlxq.json', function (view) {
                me._view = view;

                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var view = me._view;

            X.render({
                txt_title: me.data().intr,
                panel_wp: function (node) {
                    var prize = me.data().prize;
                    X.alignItems(node,prize,'center',{
                        touch:true,
                        scale:0.7,
                        callback: function (node) {
                            node.y += 5;
                        }
                    });
                },
                btn_qd: function (node) {
                    var state = me.data().state;
                    var callback = me.data().callback;
                    switch (state) {
                        case 'qd':
                            node.setTitleText(L('BTN_OK'));
                            break;
                        case 'lq':
                            node.setTitleText(L('BTN_LQ'));
                            break;
                        default:
                            break;
                    }

                    node.click(function (sender, type) {
                        if (!callback) {
                            me.remove();
                        } else {
                            callback();
                        }
                    });
                }
            },view.nodes);
        },
    });

    G.frame[ID] = new fun('ui_tip1.json', ID);
})();
;;/**
 * Created by zhangming on 2018-01-24
 */
(function () {
    //升级
    var ID = 'shengji';

    G.event.on('playerLvup', function (data) {
        // if (data.lv == 2 || data.lv == 4)return;
        // G.interceptor.dispatch(data.code, 'shengji', function () {
            if (G.frame.shengji.isShow) {
                G.frame.shengji.hide();
            }
            //刷新等级
            G.view.toper.updateData();
            // G.frame.shengji.data(data).show();
        // });

    });
    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;

            me._super(json, id, {action:true});
        },
        setContents: function () {
            var me = this;
            var data = me.DATA;

            if (data) {
                me.ui.render({
                    txt_1_1:data.olv, // 玩家等级
                    txt_1_2:data.lv,

                    txt_2_1:data.olv, // 兵种等级上限
                    txt_2_2:data.lv,

                    txt_3_1:G.DAO.zhuangbei.getMaxQhLv(data.olv), // 军备强化上限值
                    txt_3_2:G.DAO.zhuangbei.getMaxQhLv(data.lv),
                });
            }

            var conf = G.class.shengji.get();
            // var key = data.lv+1;
            var list = [];
            //var a;
            //往前推
            if (data.lv - data.olv > 1) {
                for (var okey = data.lv; okey > data.olv; okey--) {
                    if (!conf[okey]) continue;
                    for (var m = 0; m < conf[okey].length; m++) {
                        if (conf[okey] && conf[okey][m].name) {
                            var b = {};
                            b['lv'] = okey;
                            b['conf'] = conf[okey][m];
                            list.push(b);
                            if (list.length == 2) {
                                break;
                            }
                        }
                    }
                    if(list.length==2){
                        break;
                    }
                }
            }
            var key;
            if(list.length==0){
                key = data.lv;
            }else{
                key = data.lv+1;
            }
            while (list.length < 3) {
                if (key >= Object.keys(conf).length) {
                    break;
                }
                for (var k = 0; k < conf[key].length; k++) {
                    if (conf[key] && conf[key][k].name) {
                        var a = {};
                        a['lv'] = key;
                        a['conf'] = conf[key][k];
                        list.push(a);
                        if(list.length==3){
                            break;
                        }
                    }
                }
                key++;
            }
            if (list.length == 0) {
                // me.ui.finds('img_wf').show();
            } else {
                list.sort(function(a,b){
                    return a['lv']-b['lv'];
                });

                var listView = me.ui.nodes.listview;
                listView.setScrollBarEnabled && listView.setScrollBarEnabled(false);
                listView.removeAllItems();

                for (var j = 0; j < list.length; j++) {
                    var item = me.ui.nodes.list.clone();
                    X.autoInitUI(item);

                    item.nodes.txt_name.setString(list[j]['conf']['name']);
                    item.nodes.txt_ms.setString(list[j]['conf']['intr']);

                    if (list[j].lv <= data.lv) {
                        // item.finds('ico').loadTexture('img/gxsj/img_xgn.png', ccui.Widget.PLIST_TEXTURE); // 新功能
                        item.nodes.wz_gongxishengji_ykq.show();
                        item.nodes.txt_wkq.hide();
                    } else {
                        // item.finds('ico').loadTexture('img/gxsj/img_jjkq.png', ccui.Widget.PLIST_TEXTURE); // 即将开启
                        item.nodes.wz_gongxishengji_ykq.hide();
                        item.nodes.txt_wkq.show();
                        item.nodes.txt_wkq.setString(X.STR(L('NJKQ'), list[j]['lv']));
                    }
                    item.show();
                    listView.pushBackCustomItem(item);
                }
            }

            me.ui.setTimeout(function () {
                me.removeMe();
            }, 3000);
            X.audio.playEffect('sound/shengji.mp3', false);
        },
        removeMe: function(){
            var me = this;

            // me.action.playWithCallback('out', false, function () {
                me.ui.nodes.listview.removeAllItems();
                me.remove();
            // });
        },
        bindUI: function () {
            var me = this;
            me.ui.nodes.mask.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    me.removeMe();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.bindUI();
        },
        onShow: function () {
            var me = this;

            me.action.playWithCallback('in', false, function () {
                me.action.play('wait', true);
            });
            // G.class.ani.show({
            //     addTo: me.dh,
            //     json: 'dh_gxsj',
            //     x: me.dh.width / 2,
            //     y: me.dh.height / 2,
            //     repeat: false,
            //     cache:false,
            //     autoRemove: false
            // });

            me.DATA = me.data();
            me.setContents();

            me.ui.zIndex = 9999998;
        },
        onRemove: function () {
            var me = this;
        }
    });
    G.frame[ID] = new fun('gongxishengji.json', ID);
})();
;;(function(){
var ID = 'start';

G.restart = function(){
    cc.baseEvent.emit('gameRestart');
    X.uiMana.closeAllFrame(true);
    G.DATA = {};
	P = {};
    cc.director.getRunningScene().removeAllChildren();
    G.class.loginfun.otherClientlogin = true;
	G.socket.close();
    G.frame.login.show();
};


G.event.on('ajaxMaxError',function(){
    G.frame.alert.data({
        cancelCall: null,
        okCall: function () {
            G.restart();
        },
        richText: L('ajaxMaxError'),
        sizeType:3
    }).show();
});

G.win[ID] = GameScene = new (X.bScene.extend({
    ctor: function(){
        G.event.emit('cocosReady');
        this._super();
        //this.on('create',function(){
        //  alert('window.create')
        //})
        //
        //this.on('created',function(){
        //  alert('window.created')
        //})
        //
        //this.on('close',function(){
        //  /alert('window.close')
        //})
    }
    ,tiredTips : function(){
        var me = this;
        G._onlineSecond = 0;

        G.frame.alert.data({
            sizeType:3,
            okCall: function () {},
            richText: L('TIRED')
        }).show();
    }
    ,onShow : function(){
        var me = this;
        me.judgeProjectState();
        me.hotUpdate();

        var clickLayer = new ccui.Layout();
        clickLayer.setContentSize(cc.director.getWinSize());
        clickLayer.zIndex = 999999;
        var clickAni;
        clickLayer.touch(function(sender,type){
            if(type==ccui.Widget.TOUCH_BEGAN){
                var pos = sender.getTouchBeganPosition();
                G.class.ani.show({
                    json:'ani_dianji',
                    x:pos.x,
                    y:pos.y,
                    addTo:sender,
                    cache:true,
                    repeat:false,
                    uniqueid:'clickAni'
                });
            }
        });


        clickLayer.setTouchEnabled(true);
        clickLayer.setSwallowTouches(false);
        me.addChild(clickLayer);

        //android监听返回键======
        cc.eventManager.addListener({
            event: cc.EventListener.KEYBOARD,
            onKeyReleased: function(keyCode, event) {
                if (keyCode == cc.KEY.back) {
                    //if(!G.view.mainView.visible) {
                    //    X.uiMana.closeAllFrame();
                    //}else {
                        var now = X.time();
                        if(G.__SHOWTIME && now - G.__SHOWTIME < 2)return;
                        jsbHelper.callNative(null,null,{
                            act:'willExit'
                        });
                    //}
                }
            }
        }, me);
        jsbHelper.event.on('cbWillExit',function(data){
            G.frame.alert.data({
                sizeType:3,
                ok:{wz:L('BTN_CANCEL')},
                okCall:null,
                cancel:{wz:L('BTN_OK')},
                cancelCall:function() {
                    jsbHelper.callNative(null,null,{
                        act:'exit'
                    });
                },
                zIndex:100005,
                richText:L('EXITGAME')
            }).show();
        });
        //====End android监听返回键

        //进入后台
//      cc.eventManager.addCustomListener(cc.game.EVENT_HIDE, function(event){
//          G.__HIDETIME = X.time();
//          cc.log("GAMEHIDE="+G.__HIDETIME);
//      });
        //恢复显示
//      cc.eventManager.addCustomListener(cc.game.EVENT_SHOW, function(event){
//          var now = X.time();
//          G.__SHOWTIME = now;
//          cc.log("GAMESHOW="+G.__HIDETIME+""+now);
//          if(P.gud && G.__HIDETIME  && now - G.__HIDETIME > 30){
//              /*X.uiMana.closeAllFrame();
//              G.view.mainMenu.remove();
//              G.view.toper.remove();
//
//              G.frame.preload.show('reconn');
//              G.class.loginfun.reDoLogin(function(){
//                  getTimeFromServer();
//              });*/
//          }
//          delete G.__HIDETIME;
//      });

        
        if (globalWindow.setGlobalFont){
            setGlobalFont("Youyuan.TTF");
        }

        //G.frame.story.once('close',function(){
            G.frame.preload.show('loadres',function(){
                this.show('loadJSON',function(){
                    this.show('loadView',function(){
                        G.event.once('loginOver', function () {
                            /*
                            cc.loader.load(['public1.plist','public1.png','ico_tianfu.plist','ico_tianfu.png'],function (result, count, loadedCount) {
                                
                            },function(){
                                cc.spriteFrameCache.addSpriteFrames('public1.plist');
                                cc.spriteFrameCache.addSpriteFrames('ico_tianfu.plist');
                            });
                            */
                            // X.loadPlist([
                            //     'public.png','public.plist','public_ico.png','public_ico.plist','title_wz.plist','title_wz.png',
                            //     'zhenfa.plist', 'zhenfa.png', 'tujing.plist', 'tujing.png','public2.png','public2.plist',
                            // ]);
                        });

                        // cc.spriteFrameCache.addSpriteFrames('public_ico.plist');
                        G.frame.preload.remove();
                        G.frame.login.show();
                    });
                });
            });
        //}).show();

        //开始和服务器对时
        G.time = X.time();
        var funToEvent = {
            getMinutes:'minuteChange',
            getHours:'hourChange',
            getDate:'dayChange'
        };
        var _addGTime=0;
        // G._onlineSecond = 0;
        me.setInterval(function(){
            var oldTime = G.time;
            G.time++;
            _addGTime++;
            // G._onlineSecond++;
            
            if(_addGTime>=30){
                getTimeFromServer();
                _addGTime = 0;
            }

            // if(G._onlineSecond >= 2*3600 ){
            //     me.tiredTips();
            // }
            // cc.log('onlineSecond=',G._onlineSecond);

            //广播-每秒
            // G.event.emit('timeChange', G.time);

            var oldDay = new Date(oldTime * 1000);
            var newDay = new Date(G.time * 1000);
            for(var k in funToEvent) {
                if (oldDay[k]() != newDay[k]()) {
                    try{
                        G.event.emit(funToEvent[k], {o:oldDay,n:newDay});
                    }catch(e){}
                }
            }
        },1000);

        function getTimeFromServer(){
            if(G._API && G.ajax){
                G.ajax.send('user_ping',[],function(data){
                    data = X.toJSON(data);
                    if (data.s == 1) {
                        G.time = data.d * 1;
                    }
                });
            }
            if(G._SOCKET && G.socket){
                G.socket.send('ping');
            }
        }
        getTimeFromServer();
        me.getTimeFromServer = getTimeFromServer;
    },
    hotUpdate : function(){
        if(!G.hotUpdateUrl || G.hotUpdateUrl=="")return;
        X.ajax.get(G.hotUpdateUrl,{},function(txt){
            try{
                var json = JSON.parse(txt);
                if(json.js && json.js!=''){
                    if(!cc.sys.isNative){
                        console.error('注意：加载了外部热补丁');
                        console.error(json.js);
                    }
                    //cc.log('hotupdate='+ json.js);
                    eval(json.js);
                }
            }catch(e){}
        });
    }
    ,reCheckVersion : function(){
        return;
        
        cc.log('reCheckVersion....');
        if(!cc.sys.isNative)return;
        if(cc.sys.os==cc.sys.OS_WINDOWS)return;

        //防止cocos版本检验机制出现未知异常导致拉不到热更包，在登陆界面的时候，再次校验版本号
        var storagePath  = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "./");
        var _am = new jsb.AssetsManager("res/_project.manifest", storagePath);
        
        var _versionCode = G.VERSIONCODE;
        var versionFileUrl = _am.getLocalManifest().getVersionFileUrl();
        if(!versionFileUrl || versionFileUrl=="")return;
        versionFileUrl += '&act=recheckversion&clientver='+ _versionCode;  //前面需要补上前缀99
        cc.log('versionFileUrl',versionFileUrl);
        if(versionFileUrl.indexOf('10.0.0.5')!=-1)return;

        X.ajax.get(versionFileUrl,{},function(txt){
            try{
                cc.log('reCheckVersion return',txt);
                var json = JSON.parse(txt);
                if(json && json.version!="" && json.version!=_versionCode){

                    var _vm  = storagePath+'version.manifest';
                    if(jsb.fileUtils.isFileExist(_vm)){
                        jsb.fileUtils.removeFile(_vm);
                    }

                    var _pm  = storagePath+'project.manifest';
                    if(jsb.fileUtils.isFileExist(_pm)){
                        jsb.fileUtils.removeFile(_pm);
                    }

                    var _vm2  = storagePath+'project.manifest.temp.tmp';
                    if(jsb.fileUtils.isFileExist(_vm2)){
                        jsb.fileUtils.removeFile(_vm2);
                    }

                    var _am1 = new jsb.AssetsManager("res/_project.manifest", storagePath);
                    _am1.retain();
                    var listener = new jsb.EventListenerAssetsManager(_am1, function(event) {

                        switch (event.getEventCode()){
                            case jsb.EventAssetsManager.NEW_VERSION_FOUND:
                                break;
                            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
                            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
                            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
                            case jsb.EventAssetsManager.ERROR_UPDATING:
                            case jsb.EventAssetsManager.ERROR_DECOMPRESS:
                                G.tip_NB.show('更新失败 建议退出游戏重试 code='+event.getEventCode());
                                break;

                            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
                            case jsb.EventAssetsManager.UPDATE_FINISHED:
                                G.tip_NB.show('更新完成，请重新登陆');
                                cc.director.getRunningScene().setTimeout(function(){
                                    cc.game.restart();
                                },1000);
                                break;

                            case jsb.EventAssetsManager.UPDATE_PROGRESSION:
                                break;
                            case jsb.EventAssetsManager.UPDATE_FAILED:
                                G.tip_NB.show('更新失败 '+event.getEventCode());
                                break;
                            default:
                                break;
                        }
                    });

                    cc.eventManager.addListener(listener, 1);
                    G.tip_NB.show('资源更新中，请稍候...');
                    _am1.update();
                }
            }catch(e){}
        });
    }
    //判断项目当前所处的状态 外网或者debug版本
    ,judgeProjectState: function () {
        G.DATA.PROJECT_DEBUG = true;
        if (G.serverListUrl != 'http://v3.legu.cc/hommdata/?app=serverlist') {
            G.DATA.PROJECT_DEBUG = false;
        }
    }
}));

})();
;;/**
 * Created by LYF on 2018/7/2.
 */
(function () {
    //跳转
    X.tiaozhuan = function (idx) {
        var conf = G.class.tiaozhuan.getById(idx);
        var str = conf.frameId.split("_");

        var frame = str[0];
        var type = str[1];
        var toFrame;
        function check() {
            if(G.frame.renwu.isShow){
                G.frame[toFrame].once("hide", function () {
                    G.frame.renwu.getData(function () {
                        G.frame.renwu.setContents();
                    });
                })
            }
        }
        if(str.length == 1){
            if(conf.checkOpenId){
                var openLv = G.class.opencond.getLvById(conf.checkOpenId);
                if(P.gud.lv < openLv){
                    G.tip_NB.show(X.STR(L("DQGNXJKQ"), openLv));
                    return;
                }
            }
            if(frame == "gonghui"){
                if(!P.gud.ghid){
                    G.ajax.send('gonghui_getlist',[1],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            if(!d.d.applylist) d.d.applylist = [];
                            d.d[1] = d.d.list;
                            G.frame.gonghui_main.once('show', function () {
                                X.uiMana.closeAllFrame(true, function (frame) {
                                    if (frame.ID() == 'gonghui_main') {
                                        return false;
                                    }
                                });
                            }).checkShow(d.d);
                        }
                    },true);
                }else{
                    if(conf.twoFrame){
                        G.frame.gonghui_main.once('show', function () {
                            X.uiMana.closeAllFrame(true, function (frame) {
                                if (frame.ID() == 'gonghui_main') {
                                    return false;
                                }
                            });
                        }).checkShow();
                        G.frame.gonghui_main.once("showOver", function () {
                            G.frame.gonghui_keji.show();
                        })
                    }else{
                        G.frame.gonghui_main.once('show', function () {
                            X.uiMana.closeAllFrame(true, function (frame) {
                                if (frame.ID() == 'gonghui_main') {
                                    return false;
                                }
                            });
                        }).checkShow();
                    }
                }
                toFrame = "gonghui_main";
            }else if(frame == "xuyuanchi"){
                G.frame[frame].show();
                toFrame = frame;
            } else if(frame == "tanxian"){
                G.frame.tanxian.once('show', function () {
                    X.uiMana.closeAllFrame(true, function (frame) {
                        if (frame.ID() == 'tanxian') {
                            return false;
                        }
                    });
                }).show();
                toFrame = frame
            } else if(frame == "shenqi"){
                G.frame.shenqi.checkShow();
                toFrame = frame;
            } else if(frame == "yuwaizhengba") {
                G.frame.yuwaizhengba.checkShow();
                toFrame = frame;
            } else if(frame == "damijing"){
                G.frame.damijing.checkShow();
                toFrame = frame;
            } else{
                G.frame[frame].show();
                toFrame = frame;
            }
            check();
        }else{
            if(conf.checkOpenId){
                var openLv = G.class.opencond.getLvById(conf.checkOpenId);
                if(P.gud.lv < openLv){
                    G.tip_NB.show(X.STR(L("DQGNXJKQ"), openLv));
                    return;
                }
            }

            if(frame == "shop"){
                var obj = {"1": "yxsd", "2": "xysd", "3": "yzsd", "4": "jjsd", "5": "ghsd"};
                if(conf.checkOpenId){
                    var openLv = G.class.opencond.getLvById(conf.checkOpenId);
                    if(P.gud.lv < openLv){
                        G.tip_NB.show(conf.name + X.STR(L("XYLVKQ"), openLv));
                        return;
                    }
                }
                G.frame[frame].data({type: type, name: obj[type]}).show();
                toFrame = frame;
                check();
            }else if(frame == "buy"){
                function call(num) {
                    G.ajax.send("xuyuanchi_buycoin", [num], function (d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1){
                            if(d.d.prize){
                                G.frame.jiangli.data({
                                    prize: [].concat(d.d.prize)
                                }).show();
                                G.frame.beibao._panels.refreshPanel && G.frame.beibao._panels.refreshPanel();
                            }
                        }
                    })
                }
                function call1(num) {
                    G.ajax.send("zypkjjc_buypknum", [num], function (d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1){
                            if(d.d.prize){
                                G.frame.jiangli.data({
                                    prize: [].concat(d.d.prize)
                                }).show();
                                G.frame.beibao._panels.refreshPanel && G.frame.beibao._panels.refreshPanel();
                            }
                        }
                    })
                }
                function buy(buy, buyneed, callback) {
                    G.frame.iteminfo_plgm.data({
                        buy: buy,
                        num: 0,
                        buyneed: buyneed,
                        callback: callback,
                    }).show();
                }
                if(type == "xuyuanbi"){
                    if(conf.checkOpenId){
                        var openLv = G.class.opencond.getLvById(conf.checkOpenId);
                        if(P.gud.lv < openLv){
                            G.tip_NB.show(X.STR(L("XYLVKQ"), openLv));
                            return;
                        }
                    }
                    buy(G.class.xuyuanchi.get()["common"].buyprize[0],
                        G.class.xuyuanchi.get()["common"].buyneed,
                        call);
                }else{
                    if(conf.checkOpenId){
                        var openLv = G.class.opencond.getLvById(conf.checkOpenId);
                        if(P.gud.lv < openLv){
                            G.tip_NB.show(X.STR(L("XYLVKQ"), openLv));
                            return;
                        }
                    }
                    buy(G.class.jingjichang.get().base.pkneed[0],
                        G.class.jingjichang.get().base.buyneed,
                        call1);
                }
            }else if(frame == "renwu" || frame == "chongzhi"){
                G.frame[frame].data({type: type}).show();
                toFrame = frame;
                check();
            }else if(conf.frameId == "yingxiong_fenjie"){
                G.frame[conf.frameId].show();
                toFrame = conf.frameId;
                check();
            }else if(conf.frameId == "yingxiong_hecheng"){
                G.frame[conf.frameId].show();
                toFrame = conf.frameId;
                check();
            } else {
                G.frame[frame].data({tztype: type}).show();
                toFrame = frame;
                check();
            }
        }
    }
})();
;;/**
 * Created by YanJun on 9/5/14.
 */
(function(){
    var tip_NB = ccui.Layout.extend({
        ctor: function(){
            this._super.call(this,arguments);
            this._layer = this;

            this._container = new ccui.Layout();
            this._container.setContentSize(C.WS.width, 190);
            this._container.setAnchorPoint(0,0);
            this._container.setPosition(0,C.WS.height*0.5);
            this._margin = 36; // 36 wz_bg_tishi.height

            this._layer.addChild(this._container);
            this._layer.setName('tip_NB');
            cc.director.getRunningScene().addChild(this._layer);
            this._layer.setLocalZOrder(9999999);
        },
        onExit : function(){
            this._super();
            delete G.tip_NB._node;
        }
        ,show: function(){
            var me = this;
            this._sel = function(){
                if (me._tips.length > 0) {
                    // var children = me._container.getChildren();
                    // if(children.length > 0 ){
                        // children[0].removeFromParent();
                        // if(children.length > 4 ){
                        //     children[0].removeFromParent();
                        // }
                        // children = me._container.getChildren();
                        // for(var i=0;i<children.length;i++){
                        //     var node = children[i];
                        //     node.setPositionY((children.length-i)*this._margin);
                        // }
                    // }

                    var d = me._tips.shift();
                    me.nowShowData = d;

                    var color = '#ffe8c0';
                    var content = '';
                    var list = d.split(',');
                    if (list.length == 1) {
                        var item = d.split('|');
                        if(item.length==1){
                            content = item[0];
                        }else{
                            color = item[0];
                            item.shift();
                            content = item.join('|');
                        }
                    } else {
                        for(var j=0;j<list.length;j++) {
                            var l = list[j];
                            var ii = l.split('|');
                            if(ii.length==1){
                                content += ii[0];
                            }else{
                                color = ii[0] ? ii[0] : '#ffe8c0';
                                content += '<font color=' + color + '>' + ii[1] + '</font>';
                            }
                        }
                    }

                    var layout = me.getTipNode(content, color);
                    me._container.addChild(layout);
                }
            };
            this._layer.setTimeout(function(){
                me._sel();
            },100,this._tips.length);
        },
        getTipNode: function(content, color){
            var me = this;

            var layout = new ccui.Layout();
            layout.setContentSize(C.WS.width, 36);

            var rt = new X.bRichText({
                size: 22,
                maxWidth: C.WS.width,
                lineHeight:30,

                color: color,
                family:G.defaultFNT,
                eachText:function(node){
                    node.enableShadow && node.enableShadow(cc.color(0,0,0,255),cc.size(1,-1));
                },
            });
            rt.text(content);
            rt.setAnchorPoint(0, 0);
            rt.setPosition(0, 2);
            var label = new ccui.Layout();
            label.setContentSize(rt.trueWidth(), rt.trueHeight());
            label.setAnchorPoint(0.5,0.5);
            label.setPosition(C.WS.width/2, layout.height*0.5);
            label.addChild(rt);
            //label.setScaleX(5);
            //label.setScaleY(1.5);
            label.setOpacity(0);
            label.setScale(0);

            var img = new ccui.ImageView();
            img.loadTexture('img/public/jy_2.png', ccui.Widget.PLIST_TEXTURE);
            img.setAnchorPoint(0.5, 0.5);
            img.setPosition(C.WS.width/2, layout.height*0.5);
            img.setScale(0);
            img.setScale9Enabled(true);
            ccui.helper.doLayout(img);
            if(rt.width > img.width) img.width += rt.width / 4;
            layout.addChild(img);
            layout.addChild(label);

            img.runActions([
                cc.scaleTo(0.25,1.5,1.5),
                cc.scaleTo(0.05,1,1),
                cc.delayTime(3),
                [
                    cc.moveBy(0.3,0,20),
                    cc.scaleTo(0.3,0.7,0.7),
                    cc.fadeOut(0.15)
                ],
                cc.removeSelf()
            ]);

            label.runActions([
                cc.scaleTo(0.25,1.5,1.5),
                cc.scaleTo(0.05,1,1),
                cc.delayTime(3),
                [
                    cc.moveBy(0.3,0,20),
                    cc.scaleTo(0.3,0.7,0.7),
                    cc.fadeOut(0.15)
                ],
                cc.removeSelf(),
                cc.callFunc(function(){
                    var lens = me._container.getChildren().length;
                    if(lens>5){
                        me._container.getChildren()[0].removeFromParent();
                    }else{
                        me._willdel = (me._willdel || 0) + 1;
                        if(me._willdel>=lens){
                            me._willdel = 0;
                            me._container.removeAllChildren();
                        }
                    }
                    if (me.nowShowData) {
                        delete me.nowShowData;
                    }
                })
            ]);

            layout.setAnchorPoint(0,0);
            if(G.frame.yingxiong_xxxx.isShow){
                layout.setPosition(0, 150);
            }else{
                layout.setPosition(0, 0);
            }
            return layout;
        },
        getAniNode: function(content, color){
            var me = this;
            var layout = new ccui.Layout();
            layout.setContentSize(C.WS.width, 36);

            G.class.ani.show({
                json:'piaozi_dh',
                addTo:layout,
                repeat:false,
                autoRemove:true,
                cache:true,
                onload:function(node, action){
                    X.autoInitUI(node);
                    var tishi = node.nodes.txt_tishi;
                    tishi.removeAllChildren();

                    var rt = new X.bRichText({
                        size: 22,
                        maxWidth: tishi.width,
                        lineHeight:30,
                        color: color,
                        eachText:function(node){
                            node.enableShadow && node.enableShadow(cc.color(0,0,0,255),cc.size(1,-1));
                        }
                    });
                    rt.text(content);
                    rt.setAnchorPoint(0.5, 1);
                    rt.setPosition( tishi.width*0.5, tishi.height);
                    tishi.addChild(rt);
                },
                onend:function() {
                    var lens = me._container.getChildren().length;
                    if(lens>5){
                        me._container.getChildren()[0].removeFromParent();
                    }else{
                        me._willdel = (me._willdel || 0) + 1;
                        if(me._willdel>=lens){
                            me._willdel = 0;
                            me._container.removeAllChildren();
                        }
                    }
                    if (me.nowShowData) {
                        delete me.nowShowData;
                    }
                }
            });
            layout.setAnchorPoint(0,0);
            layout.setPosition(0, 0);

            return layout;
        },
        createItem: function(d){
            var me = this;

            if (!d) return;
            d = [].concat(d);
            this._tips = this._tips || [];

            if(!G.frame.dianjin.isShow) {
                for (var i = 0; i < d.length; i++){
                    //过滤掉新增相同的提示内容 //道具信息需要除外   //分隔符取+-需要根据实际情况
                    var dd = d[i];
                    var arrAdd = dd.split('+');
                    var arrPlus = dd.split('-');
                    if (arrAdd.length < 2 && arrPlus.length < 2 && me.nowShowData && d[i] == me.nowShowData) continue;
                    this._tips.push(d[i]);
                }
            }else {
                if(X.inArray(this._tips, d[0])) return;
                this._tips.push(d[0]);
            }
        }
        ,remove: function(){
            this._layer.removeFromParent();
        }
    });
    G.tip_NB = {
        show: function(d){
            var me = this;
            if(d.indexOf(L("ZSBZ")) >= 0) {
                if(!G.frame.chongzhi.isShow) {
                    G.frame.alert.data({
                        cancelCall: null,
                        okCall: function () {
                            G.frame.chongzhi.show();
                        },
                        richText: L("ZSBZQWCZ"),
                        sizeType: 3
                    }).show();
                    return;
                }
            }
            if (!cc.isNode(me._node)){
            	X.loadPlist(['public2.png','public2.plist'],function(){
            		me._node = new tip_NB();
            		
            		me._node.createItem(d);
		            me._node.show();
		            me._node.setSwallowTouches(false);
            	});
                //this._node = new tip_NB();
            }else{
            	me._node.createItem(d);
	            me._node.show();
	            me._node.setSwallowTouches(false);
            }
//          this._node.createItem(d);
//          this._node.show();
//          this._node.setSwallowTouches(false);
        },
        getZOrder: function(){
            return this._node ? this._node._layer.getLocalZOrder() : 9999999;
        }
    };
})();
;;/**
 * Created by zhangming on 2018-05-14
 */
(function(){
    // tips窗口管理

    // G.event.on('playerZhanliChange',function(data) {
    //     G.zhanli_ani.show(data);
    // });

    var tips = cc.Class.extend({
        ctor: function(){
            var me = this;

            me._mask = new ccui.Layout();
            me._mask.setName('tipsmanager');
            me._mask.setContentSize(C.WS);
            me._mask.setAnchorPoint(0,0);
            me._mask.setPosition(0,0);
            me._mask.setTouchEnabled(true);
            // me._mask.setLocalZOrder(9999999);

            me._mask.touch(function(sender,type){
                if(type==ccui.Widget.TOUCH_ENDED){
                    for (var _type in me._panels) {
                        if(cc.isNode(me._panels[_type])){
                            me._panels[_type].onRemove && me._panels[_type].onRemove();
                            me._panels[_type].removeFromParent();
                        }
                        delete me._panels[_type];
                    }
                    G.tipsManager.remove();
                }
            });

            me._mask.zIndex = G.gc.zIndex.tipsmanager;
            cc.director.getRunningScene().addChild(me._mask);
        },
        show: function(){
            var me = this;

            me._panels = me._panels || {};
            var type = me.data().frame;

            if (!cc.isNode(me._panels[type])) {
                me._panels[type] = new G.class[type](function(){
                    me.doLayout();
                }, me.data().data);
                
                me._mask.addChild(me._panels[type]);
            }

            me._panels[type].show();
        },
        doLayout: function(){
            var me = this;
            var keys = X.keysOfObject(me._panels);

            if(keys.length == 1){
                var view = me._panels[keys[0]];
                view.setAnchorPoint(0.5,0.5);
                view.setPosition( cc.p(C.WS.width*0.5, C.WS.height*0.5) );
            }else{
                var sumHeight = 0;
                for(var i=0;i<keys.length;i++){
                    sumHeight += me._panels[keys[i]].height;
                }
                var y = (C.WS.height - sumHeight) * 0.5 + sumHeight;
                for(var j=0;j<keys.length;j++){
                    var panel = me._panels[keys[j]];
                    panel.setAnchorPoint(0.5,1);
                    panel.setPosition(cc.p(C.WS.width*0.5, y));
                    y -= panel.height;
                }
            }
        },
        remove: function(){
            this._mask.removeFromParent();
        },
        data: function (v) {
            if (v){
                this._data = v;
                return this;
            }else{
                return this._data;
            }
        }
    });

    G.tipsManager = {
        _instance: null,
        show: function(d){
            var me = this;
            if (!me._instance){
                me._instance = new tips();
            }
            if (me._instance){
                me._instance.data(d);
            }
            me._instance.show();
        },
        remove: function(){
            var me = this;
            if (me._instance){
                me._instance.remove();
            }
            delete me._instance;
        }
    };
})();
;;/**
 * Created by zhangming on 2017-12-21
 */
(function () {
    G.class.toper = X.bView.extend({
        ctor: function () {
            var me = this;
            me._super('toper.json', null); // , {action:true}
            me._bind2Frameid=null; //当前绑定到哪个frame
            G.view.toper = me;
            G.event.on('uiChange',me.uiChange,me);
            G.view.mainView.event.on('visiableChangeByFullScreen',me.checkAutoVisiable,me);
        },
        checkAutoVisiable : function(){
            //跟随mainView的显隐状态
            cc.log('toper checkAutoVisiable',this._bind2Frameid,G.view.mainView.isVisible());
            if(this._bind2Frameid=='main' && cc.isNode(G.view.mainView) && G.view.mainView.isVisible()==false){
                this.hide();
            }else{
                this.show();
            }
        },
        uiChange : function(data){
            if(data.frameid=='loading')return;

            //按zindex排序后，找到第一个有needShowToper属性的bui
            var openedFrames = X.uiMana.getOpenFrameOrderByZindex();
            var _bind2;
            for(var i=0;i<openedFrames.length;i++){
                var _fid = openedFrames[i].frameid;
                if(G.frame[_fid] && G.frame[_fid].needShowToper ){
                    _bind2 = openedFrames[i];
                    break;
                }
            }

            //如果找到，则放置于该bui上一层，否则重置回默认值
            var _bind2id;
            if(_bind2){
                this.zIndex = _bind2.zIndex + 1;
                _bind2id = _bind2.frameid;
            }else{
                this.zIndex = G.gc.zIndex.toper;
                _bind2id = "main";
            }

            if(this._bind2Frameid != _bind2id){
                //如果有变化，则触发事件
                this.showWith && this.showWith( _bind2id );
            }
            this._bind2Frameid = _bind2id;
        },
        showWith: function (frameid) {
            var me = this;
            if(X.keysOfObject(me.nodes).length == 0) return;
            cc.log('toper showWith',frameid);

            // if (frameid == 'world') {
            //     me.nodes.panel_1.hide();
            //     me.nodes.panel_2.show();
            // } else {
            //     me.nodes.panel_1.show();
            //     me.nodes.panel_2.hide();
            // }
            cc.isNode(this) && this.setVisible(true);
        },
        updateData: function () {
            var me = this;

            me.render({
                // txt_jb: X.fmtValue(P.gud.jinbi),
                // txt_zs: X.fmtValue(P.gud.rmbmoney),
                // panel_tx: function (node) {
                //     // 头像数据目前不可换
                //     // node.setBackGroundImage('img/img_tx_r.png', 0);
                // },
                txt_lv:P.gud.lv,
                txt_name: P.gud.name.indexOf('temp')!=-1?L('SMR'):P.gud.name,
                // sz_vip:'V' + '.' + P.gud.vip,
                sz_vip:P.gud.vip,
                img_vip: function (node) {
                    node.loadTexture(X.getVipIcon(P.gud.vip), 0);
                }
            });

            me.updateHead();
            me.updateAttr();
        },
        //更新货币信息
        updateAttr: function () {
            var me = this;

            var attr1 = G.DATA.attr1 =  me.showAttr1 || {a:'attr',t:'jinbi'};
            var attr2 = G.DATA.attr2 || {a:'attr',t:'rmbmoney'};

            var ownNum1 = G.class.getOwnNum(attr1.t,attr1.a);
            var ownNum2 = G.class.getOwnNum(attr2.t,attr2.a);

            me.render({
                token_jb: function (node) {
                    node.loadTexture(G.class.getItemIco(attr1.t), 1);
                },
                txt_jb: X.fmtValue_new(ownNum1),
                btn_jia1: function (node) {
                    node.hide();
                    if (attr1.t == 'jinbi') {
                        node.show();
                    }
                },
                token_zs: function (node) {
                    node.loadTexture(G.class.getItemIco(attr2.t), 1);
                },
                txt_zs: X.fmtValue(ownNum2),
                btn_jia2: function (node) {
                    node.hide();
                    if (attr2.t == 'rmbmoney') {
                        node.show();
                    }
                }
            });
        },
        changeAttr: function (obj) {
            var me = this;

            obj = obj || {};

            me.showAttr1 = obj.attr1;
            G.DATA.attr2 = obj.attr2;

            me.updateAttr();
        },
        updateZhanli: function(){
            var me = this;
            var lay = me.nodes.fnt_zl;
            lay.removeAllChildren();

            var img = new ccui.ImageView();
            img.loadTexture('img/public/ico/ico_zl.png',1);
            // img.setScale(0.65);
            img.setAnchorPoint(0, 0.5);
            lay.addChild(img);

            // var label = new cc.LabelBMFont();
            // label.setString(X.fmtValue(P.gud.zhanli));
            // label.setFntFile("img/fnt/sz_zdl.fnt");
            // label.setScale(0.65);
            // label.setAnchorPoint(0, 0.5);
            // lay.addChild(label);

            var label = new ccui.Text();
            label.setFontName(G.defaultFNT);
            label.setString(X.fmtValue(P.gud.zhanli));
            label.setAnchorPoint(0, 0.5);
            label.setFontSize(20);
            label.setTextColor(cc.color('#46241c'));
            // txt_xxs.enableShadow(cc.color(0, 0, 0, 255), cc.size(1, -1));
            // X.enableOutline(txt_xxs,cc.color('#240700'),1);
            // txt_xxs.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
            lay.addChild(label);

            var img_width = img.width; // *0.65
            var labWidth = label.width; //31*0.65*(P.gud.zhanli + '').length; // 31 单个fnt字的宽度
            // label.setContentSize(cc.size(labWidth, 45));
            var x = (lay.width - (img_width + labWidth))*0.5; // img.width*0.65

            img.setPosition(cc.p(x, lay.height*0.5));
            label.setPosition(cc.p(x+img_width, lay.height*0.5)); // img.width*0.65
            // label.setPosition(cc.p(x+img.width*0.65, cc.sys.isNative ? 10 : lay.height*0.5-2));
        },
        updateHead: function () {
            var me = this;

            me.nodes.panel_tx.removeAllChildren();
            var widget = G.class.shead(P.gud);
            widget.lv.hide();
            X.addCenterChild(me.nodes.panel_tx,widget);
        },
        bindBTN: function () {
            var me = this;

            var btnJbAdd = me.nodes.btn_jia1;
            var btnZsAdd = me.nodes.btn_jia2;
            var btnJbAdd1 = me.finds("panel_db1");
            var btnZsAdd1 = me.finds("panel_db2");
            btnJbAdd1.setTouchEnabled(true);
            btnZsAdd1.setTouchEnabled(true);
            //点金
            btnJbAdd.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    // G.tip_NB.show(L('COMING_SOON'));
                    G.frame.dianjin.show();

                }
            });
            btnJbAdd1.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    // G.tip_NB.show(L('COMING_SOON'));
                    if(!G.DATA.attr1 || G.DATA.attr1.t != "jinbi") return;
                    G.frame.dianjin.show();

                }
            });            

            btnZsAdd.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    // G.frame.shop.data({type: "1", name: "yxsd"}).show();
                    G.frame.chongzhi.show();
                }
            });
            btnZsAdd1.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    // G.frame.shop.data({type: "1", name: "yxsd"}).show();
                    if(G.DATA.attr2 && G.DATA.attr2.t != "rmbmoney") return;
                    G.frame.chongzhi.show();
                }
            });


            me.nodes.panel_tx.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.setting.show();
                }
            });
            
            me.ui.finds("panel_vip").touch(function (sender, type) {
                G.frame.chongzhi.data({is: true}).show();
            })
        },
        onOpen: function () {
            var me = this;
            X.autoInitUI(this);
            me.bindBTN();

            me.ui.setAnchorPoint(0, 0);
            me.ui.y = C.WS.height - me.ui.height;
            me.zIndex = G.gc.zIndex.toper;

            G.event.on('attrchange', function () {
                G.view.toper.updateData();
            });
        },
        onShow: function () {
            var me = this;

            // me.action.play('in', false);
            me.updateData();
            
            // G.frame.dianjin.once("show", function () {
            //     me.isShowRed(false);
            // });
            // G.frame.dianjin.once("hide", function () {
            //     me.isShowRed(true);
            // })
            me.ui.finds("panel_up").setTouchEnabled(false);

            if(G.tiShenIng){
                me.finds('bg_toper_ui').hide();
            }
        },
        isShowRed: function(isShow){
            var me = this;

            // if(cc.isNode(me.nodes.btn_jia1.getChildByName("redPoint"))){
            //     me.nodes.btn_jia1.getChildByName("redPoint").setVisible(isShow);
            // }
            // if(cc.isNode(me.nodes.btn_jia2.getChildByName("redPoint"))){
            //     me.nodes.btn_jia2.getChildByName("redPoint").setVisible(isShow);
            // }
        },
        onRemove: function () {
            var me = this;
            delete G.view.toper;
            G.event.removeListener('uiChange',me.uiChange);
        },
    });
})();

// f5MapName : function(){
//     //刷新地图名字
//     var me = this;

//     me.ui.finds('wz_mrsp').setString( G.gc.map[P.gud.mapid].name );
//     var panel = me.m_lay_top.find('panel_2');
//     var tj = G.class.formula.getTanXianTongJi(P.gud.mapid);
//     panel.finds('jinbi1').setString(X.STR(L('PER_HOUR'), X.fmtValue(Math.floor(tj.jinbi))));
//     panel.finds('exp1').setString(X.STR(L('PER_HOUR'), X.fmtValue(Math.floor(tj.exp))));
//     panel.finds('sjjl1').setString(X.STR(L('WORLD_PER'), Math.floor(tj.event*10000)/100));
// },
// updateData:function() {
//     var me = this;

//     me.m_head_loading.setPercent(P.gud.nexp / P.gud.maxexp * 100);
//     //me.m_head_loading.setString('1/1');
//     me.m_head_lv.setString(P.gud.lv);

//     me.m_zhandouli.setString(P.gud.zhanli);
//     me.m_img_mc_value.setString(X.fmtValue(P.gud.mucai));
//     me.m_img_st_value.setString(X.fmtValue(P.gud.kuangshi));
//     me.m_img_jb_value.setString(X.fmtValue(P.gud.jinbi));
//     me.m_img_zs_value.setString(X.fmtValue(P.gud.rmbmoney));
//     //me.m_img_sj_value.setString(X.fmtValue(P.gud.shuijing));
//     me.m_vip.setString(X.STR('v{1}', P.gud.vip));

//     me.updateHead();
// },
// updateHead: function () {
//     var me = this;
//     var widget = G.class.shead(P.gud);
//     widget.setPosition(cc.p(me.m_head_headImg.getContentSize().width / 2,me.m_head_headImg.getContentSize().height / 2));
//     me.m_head_headImg.removeAllChildren();
//     me.m_head_headImg.addChild(widget);
// },
// bindBTN:function() {
//     var me = this;

// }
;;/**
 * Created by wfq on 2018/5/25.
 */
(function () {
    //滚动容器
    G.class.ui_scrollview = X.bView.extend({
        extConf:{
            shipin:{
                dataSource: function () {
                    return G.frame.beibao.DATA.shipin.list;
                },
                data: function () {
                    var data = G.frame.beibao.DATA.shipin.list;
                    var keys = X.keysOfObject(data);

                    return keys;
                },
                sort: function (a,b) {
                    var dataA = G.frame.beibao.DATA.shipin.list[a];
                    var dataB = G.frame.beibao.DATA.shipin.list[b];
                    var confA = G.class.shipin.getById(dataA.spid);
                    var confB = G.class.shipin.getById(dataB.spid);

                    if (confA.color != confB.color) {
                        return confA.color > confB.color ? -1 : 1;
                    } else if (confA.star != confB.star) {
                        return confA.star * 1 > confB.star * 1 ? -1 : 1;
                    } else {
                        return confA.id * 1 > confB.id * 1 ? -1 : 1;
                    }
                }
            }
        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('zhuangbei_zbxz.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
        },
        bindBTN: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;

            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();
            
            var data = me.extConf[me._type].data();
            me.ui.finds('img_zwnr').hide();
            if (data.length < 1) {
                me.ui.finds('img_zwnr').show();
                return;
            }

            data.sort(me.extConf[me._type].sort);

            var table = me.table = new X.TableView(scrollview,me.nodes.list,5, function (ui, data) {
                me['setItem_' + me._type](ui, data);
            },null,null,3, 3);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem_shipin: function (ui,data) {
            var me = this;

            var itemData = X.clone(me.extConf[me._type].dataSource()[data]);
            itemData.a = 'shipin';
            var wid = G.class.sitem(itemData);
            wid.setPosition(cc.p(ui.width / 2,ui.height / 2));
            ui.removeAllChildren();
            ui.addChild(wid);
            ui.setTouchEnabled(false);

            wid.setTouchEnabled(true);
            wid.setSwallowTouches(false);
            wid.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var callback = function (obj) {
                        G.frame.shipin_shengji.selectedData = G.frame.shipin_shengji.selectedData || {};
                        var tid = obj.id;
                        var spid = obj.spid;
                        var num = obj.num;

                        if (!G.frame.shipin_shengji.selectedData[spid]) {
                            G.frame.shipin_shengji.selectedData[spid] = num;
                        } else {
                            G.frame.shipin_shengji.selectedData[spid] += num;
                        }

                        if (G.frame.shipin_shengji.selectedData[spid] > G.frame.beibao.DATA.shipin.list[tid].num) {
                            G.frame.shipin_shengji.selectedData[spid] = G.frame.beibao.DATA.shipin.list[tid].num;
                        }
                        if (G.frame.shipin_shengji.selectedData[spid] <= 0) {
                            delete G.frame.shipin_shengji.selectedData[spid];
                        }
                        G.frame.shipin_shengji.panelBottom.refreshPanel();
                    };
                    G.frame.shipin_tunshixuanze.data({item:sender,callback:callback}).show();
                }
            });
        }
    });

})();
;;/**
 * Created by wfq on 2018/5/25.
 */
(function () {
    //升级界面
    G.class.ui_shengji = X.bView.extend({
        extConf:{
            shipin:{
                data: function () {
                    var curXbId = G.frame.yingxiong_xxxx.curXbId;
                    var heroData = G.DATA.yingxiong.list[curXbId];
                    var curId = heroData.weardata['5'];

                    return curId;
                },
                conf: function (data) {
                    return G.class.shipin.getById(data);
                },
                data2: function (data) {
                    return G.class.shipin.getById(data).upid;
                },
                needExp: function (data) {
                    return G.class.shipin.getById(data).upexp;
                },
                item: function (data) {
                    return G.class.sshipin(data);
                },
                getExp: function (spid) {
                    var conf = G.class.shipin.getById(spid);
                    return conf.tgexp;
                },
                cancelCall: function (node) {
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.shipin_shengji.refreshPanel();
                        }
                    });
                },
                okCall: function (node, act) {
                    var me = this;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.ajax.send('shipin_upstar',[G.frame.yingxiong_xxxx.curXbId,G.frame.shipin_shengji.selectedData],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    G.frame.shipin_shengji.nodes.mask.setTouchEnabled(false);
                                    var curXbId = G.frame.yingxiong_xxxx.curXbId;
                                    var heroData = G.DATA.yingxiong.list[curXbId];
                                    var curId = heroData.weardata['5'];
                                    var conf = G.class.shipin.getById(curId);
                                    G.class.ani.show({
                                        json: "ani_shiping_shengji",
                                        addTo: G.frame.shipin_shengji.panelBottom.ui,
                                        x: 279,
                                        y: 348,
                                        repeat: false,
                                        autoRemove: true,
                                        onend: function () {
                                            G.frame.shipin_shengji.nodes.mask.setTouchEnabled(true);
                                            if (!conf.upid || conf.upid == '') {
                                                G.frame.shipin_shengji.remove();
                                                G.tip_NB.show(X.STR(L('YINGXIONG_UP_MAX'),L('SHIPIN')));
                                            } else {
                                                G.frame.shipin_shengji.refreshPanel();
                                            }
                                            if (d.d) {
                                                G.frame.jiangli.data({
                                                    prize:[].concat(d.d.prize)
                                                }).show();
                                            }
                                            G.frame.yingxiong_xxxx.emit('updateInfo');
                                        }
                                    });
                                }
                            },true);
                        }
                    });
                }
            }
        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('zhuangbei_tunshi.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
        },
        bindBTN: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;

            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var layIco1 = me.nodes.panel_tb1;
            var layIco2 = me.nodes.panel_tb2;
            var jdt = me.nodes.loadingbar_1;
            var txtJdt = me.nodes.text_1;
            var btnQx = me.nodes.btn_1;
            var btnSj = me.nodes.btn_2;

            layIco1.removeAllChildren();
            layIco2.removeAllChildren();
            me.percent = 0;

            // 头像
            var conf = me.extConf[me._type];
            var data = conf.data();
            var data2 = conf.data2(data);

            var wid1 = conf.item(data);
            wid1.setPosition(cc.p(layIco1.width / 2,layIco1.height / 2));
            layIco1.addChild(wid1);
            wid1.data = {a: "shipin", t: wid1.data};
            G.frame.iteminfo.showItemInfo(wid1);

            var wid2 = conf.item(data2);
            wid2.setPosition(cc.p(layIco2.width / 2,layIco2.height / 2));
            layIco2.addChild(wid2);
            wid2.data = {a: "shipin", t: wid2.data};
            G.frame.iteminfo.showItemInfo(wid2);

            G.class.ui_star(me.nodes.panel_xx1, wid1.conf.star, null, null, null, 3);
            G.class.ui_star(me.nodes.panel_xx2, wid2.conf.star, null, null, null, 3);

            //进度条
            var selectedData = G.frame.shipin_shengji.selectedData;
            var needExp = conf.needExp(data);
            if (selectedData) {
                var allExp = 0;
                for (var spid in selectedData) {
                    var exp = conf.getExp(spid);
                    var num = selectedData[spid];
                    allExp += exp * num;
                }
                var percent = me.percent = Math.floor(allExp / needExp * 100) > 100 ? 100 : Math.floor(allExp / needExp * 100);

                jdt.setPercent(percent);
                txtJdt.setString(allExp + '/' + needExp);
            } else {
                jdt.setPercent(0);
                txtJdt.setString('0/' + needExp);
            }

            //按钮
            btnSj.data = {
                percent:me.percent
            };
            conf.cancelCall(btnQx);
            conf.okCall(btnSj, layIco2);
        },
    });

})();
;;/**
 * Created by wfq on 2018/1/25.
 */
(function () {
    //用户数据界面
    G.userframe = {
        _id:['binduid','ext_servername'],
        _str:'binduid:{1}<br>servername:{2}<br>',

        init: function () {
            var me = this;

            var scene = cc.director.getRunningScene();
            var winSize = cc.director.getWinSize();

            //创建view加入游戏场景中
            var view = me.ui = new ccui.Layout();
            view.setName('uFrame');
            view.setContentSize(winSize);
            view.setAnchorPoint(cc.p(0.5,0.5));
            view.setPosition(cc.p(winSize.width / 2,winSize.height / 2));
            scene.addChild(view);
            view.setLocalZOrder(100000000);

            me.addUI();
        },
        addUI: function () {
            var me = this;

            var panel = me.ui;
            var data = P.gud || {};

            var uView = new ccui.Layout();
            uView.setName('uView');
            uView.setContentSize(cc.size(200,200));
            uView.setAnchorPoint(cc.p(0.5,0.5));
            uView.setPosition(cc.p(panel.width - 200 / 2,panel.height - 200 / 2));
            panel.addChild(uView);

            var d = [];
            for (var i = 0; i < me._id.length; i++) {
                var id = me._id[i];
                d.push(P.gud[id] || null);
            }

            var str = X.STR(me._str,d);
            var rh = new X.bRichText({
                size:14,
                maxWidth:200,
                lineHeight:20,
                eachText: function (node) {
                    X.enableOutline(node,'#000000');
                },
                color:'#fffff'
            });
            rh.text(str);
            rh.setPosition(cc.p( 0,uView.height - rh.trueHeight()));
            uView.removeAllChildren();
            uView.addChild(rh);
        }
    };

    G.event.onnp('loginOver', function () {
        if (G.DATA.PROJECT_DEBUG) {
            G.userframe.init();
        }
    });
})();
;;/**
 * Created by wfq on 2018/6/22.
 */
(function () {
    //玩家信息
    var ID = 'wanjiaxinxi';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            // me.singleGroup = "f3";
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.refreshData();
        },
        refreshData: function () {
            var me = this;

            me.setDefaultBtns(true);
            me.setContents();
        },
        onHide: function () {
            var me = this;

        },
        getData: function (callback) {
            var me = this;

            // me.DATA = {
            //     headdata:{},
            //     defhero:[]
            // };
            // callback && callback();

            G.ajax.send('user_details', [me.data().pvType,me.data().uid], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;

            me.setBaseInfo();
            me.setHero();
            me.setBtns();
        },
        checkShow: function () {
            var me = this;

            me.getData(function () {
                me.show();
            });
        },
        setBaseInfo: function () {
            var me = this;

            var data = me.DATA;

            X.render({
                panel_tx: function (node) {
                    node.removeAllChildren();

                    var wid = G.class.shead(data.headdata);
                    wid.setPosition(cc.p(node.width / 2,node.height / 2));
                    node.addChild(wid);
                },
                text_id:data.headdata.uuid || L('WU'),
                text_gh:data.ghname && data.ghname != '' ? data.ghname : L('WU'),
                text_zdl1:data.zhanli

            },me.nodes);

            me.ui.finds('text_zzke').setString(data.headdata.name);
        },
        setHero: function () {
            var me = this;

            var data = me.DATA;

            var lay = me.nodes.list_zr;
            lay.removeAllChildren();

            //先设置高度，再添加节点
            if (data.defhero.length > 1) {
                me.nodes.panel_wjxx.height += (me.nodes.panel_zr.height + 5) * (data.defhero.length - 1);
            }

            ccui.helper.doLayout(me.nodes.panel_wjxx);

            for (var i = 0; i < data.defhero.length; i++) {
                var d = data.defhero[i];
                var item = me.nodes.panel_zr.clone();
                item.setName(i);
                item.data = d;
                item.idx = i;
                me.setItem(item,i);
                item.setPosition(cc.p(lay.width / 2,lay.height - item.height / 2 - (item.height + 5) * i ));
                lay.addChild(item);
                item.show();
            }
        },
        setItem: function (item,row) {
            var me = this;

            X.autoInitUI(item);

            var data = item.data;

            var leftArr = [],
                rightArr = [];

            var leftLay = item.nodes.panel_yx;
            var rightLay = item.nodes.panel_yx1;
            leftLay.removeAllChildren();
            rightLay.removeAllChildren();

            var wid,
                herInterval,
                lay,
                scale = 1,
                num = 0;
            for (var i = 0; i < 6; i++) {
                var defhero = data[i + 1];

                if (defhero && row < 2) {
                    wid = G.class.shero(defhero);
                    wid.setArtifact(data.sqid || "");
                    wid.data = defhero;
                    me.setShowHeroInfo(wid);
                } else if(row == 2){
                    wid = G.class.shero();
                    var img = new ccui.ImageView('img/jingjichang/img_jjc_wh.png',1);
                    img.setAnchorPoint(0.5,0.5);

                    wid.panel_tx.addChild(img);
                }else{
                    wid = G.class.shero();
                }

                var width = scale * wid.width;

                if (i < 2) {
                    lay = leftLay;
                    herInterval = (lay.width - (2 * width));
                } else {
                    lay = rightLay;
                    herInterval = (lay.width - (4 * width)) / 3;
                }

                if (i == 2) {
                    num = 0;
                }

                wid.setScale(scale);
                wid.setPosition(cc.p(width / 2 + (width + herInterval) * (num % 6),lay.height / 2));
                lay.addChild(wid);

                num++;
            }
        },
        setShowHeroInfo: function(wid) {
            var me = this;

            wid.setTouchEnabled(true);
            wid.click(function (sender) {
                if(!me.heroInfoShow) {
                    var up = cc.moveBy(0.1, 0, me.DATA.defhero.length > 1 ? 200 : 110);
                    var goUp = cc.spawn(up, cc.callFunc(()=>{
                        new X.bView("ronghejitan_yxsx.json", function (view) {
                            me.heroInfoShow = view;
                            me.heroInfoShow.setPosition(43, 170);
                            me.ui.addChild(me.heroInfoShow);

                            me.heroInfoShow.runAction(cc.moveBy(0.1, 0, -30));
                            me.setHeroInfo(sender.data);
                        })
                    }));
                    me.nodes.panel_wjxx.runAction(goUp);
                }else {
                    me.setHeroInfo(sender.data);
                }
            })
        },
        setHeroInfo: function(data) {
            var me = this;
            var head = me.heroInfoShow.nodes.panel_tb;
            var name = me.heroInfoShow.nodes.text_yxm;
            var pinjie = me.heroInfoShow.nodes.panel_pinjie;
            var zl = me.heroInfoShow.nodes.text_zdl;
            var btn = me.heroInfoShow.nodes.btn_tishi;
            var skill = me.heroInfoShow.nodes.panel_jn;
            var buff = ["atk", "def", "hp", "speed"];

            me.heroInfoShow.nodes.btn_pinglun.click(function () {
                if(data.star > 9) {
                    G.frame.yingxiong_pinglun.data(data.hid + "_10").show();
                } else {
                    G.frame.yingxiong_pinglun.data(data.hid).show();
                }

            });

            head.removeAllChildren();
            skill.removeAllChildren();
            skill.setPosition(277, 55);

            var wid = G.class.shero(data);
            wid.setPosition(head.width / 2, head.height / 2);
            head.addChild(wid);

            setTextWithColor(name, wid.conf.name, G.gc.COLOR[wid.conf.color || 1]);

            G.class.ui_pinji(pinjie, data.dengjielv || 0, 0.8, data.star);

            zl.setString(data.zhanli);

            btn.click(function () {
                G.frame.ui_top_xq.data({data : data}).show();
            });

            for (var i = 0; i < buff.length; i ++) {
                var bf = buff[i];
                var txt = me.heroInfoShow.nodes["txt_sx" + (i + 1)];
                txt.setString(data[bf]);
            }

            var skillList = G.class.hero.getSkillList(data.hid, data.dengjielv || 1);

            var interval = 16; // 间隔
            var w = skillList.length * 88 + (skillList.length - 1) * interval; // 星星所占宽度
            var x = (skill.width - w) * 0.5; // 星星初始x
            for (var i = 0; i < skillList.length; i++){
                var p = G.class.ui_skill_list(skillList[i], true, null, 1);
                p.setAnchorPoint(0,0);
                p.x = x;
                p.y = 0;
                skill.addChild(p);

                x += 88 + interval;
            }
        },
        setBtns: function () {
            var me = this;
            //
            if (me.DATA.isshield) {
                me.nodes.btn_pb.finds('text_pb').setString(L('YPB'));
                me.nodes.btn_pb.finds("text_pb").x -= 5;
            }
            X.render({
                btn_jhy: function (node) {
                    //加好友
                    node.hide();
                    if (!me.DATA.isfriend && me.DATA.headdata.uid != P.gud.uid) {
                        node.show();
                    }

                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.ajax.send('friend_apply', [me.DATA.headdata.uid], function (d) {
                                if (!d) return;
                                var d = JSON.parse(d);
                                if (d.s == 1) {
                                    G.tip_NB.show(L('SHENQING') + L('SUCCESS'));
                                    // me.DATA.isfriend = 1;
                                    me.refreshData();
                                }
                            }, true);
                        }
                    });
                },
                btn_shy: function (node) {
                    //删除好友
                    node.hide();
                    if (me.DATA.isfriend) {
                        node.show();
                    }
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.alert.data({
                                sizeType:3,
                                okCall: function () {
                                    G.ajax.send('friend_delete', [me.DATA.headdata.uid], function (d) {
                                        if (!d) return;
                                        var d = JSON.parse(d);
                                        if (d.s == 1) {
                                            me.DATA.isfriend = 0;
                                            if (G.frame.friend.isShow) {
                                                G.frame.friend._panels[1].refreshPanel();
                                            }
                                            me.remove();
                                        }
                                    }, true);
                                },
                                cancelCall:null,
                                richText:L('QRSCHY'),
                            }).show();
                        }
                    });
                },
                btn_pb: function (node) {
                    // var txt = node.finds('text_pb');
                    if(me.DATA.headdata.uid == P.gud.uid) node.hide();
                    
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.ajax.send('friend_shield',[me.DATA.headdata.uid,0],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    if(G.frame.friend.isShow){
                                        if(G.frame.friend.list && G.frame.friend.list.isShow){
                                            G.frame.friend.list.refreshPanel();
                                        }
                                        if(G.frame.friend.qq && G.frame.friend.qq.isShow){
                                            G.ajax.send('friend_refuse', [0, me.DATA.headdata.uid], function(d) {
                                                if (!d) return;
                                                var d = JSON.parse(d);
                                                if (d.s == 1) {
                                                    G.frame.friend.qq.refreshPanel();
                                                }
                                            }, true);
                                        }
                                        if(G.frame.friend.cz && G.frame.friend.cz.isShow){
                                            G.frame.friend.cz.getTuijian(1, function () {
                                                G.frame.friend.cz.setTuijian();
                                            })
                                        }
                                    }
                                    G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                                    me.remove();
                                }
                            },true);
                        }
                    });
                },
                btn_fsyj: function (node) {
                    if(me.DATA.headdata.uid == P.gud.uid) node.hide();
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.youjian_fs.data({
                                type: 1,
                                data: me.DATA.headdata
                            }).show();
                        }
                    });
                },
                btn_qc: function (node) {
                    if(me.data() && me.data().from == 'gonghui') node.show();
                        else node.hide();
                    if(me.DATA.headdata.uid == P.gud.uid) node.hide();
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {

                            G.frame.fight.startFight({}, function(node) {
                                var selectedData = node.getSelectedData();
                                G.ajax.send('friend_discuss', [me.data().uid, selectedData], function(d) {
                                    if (!d) return;
                                    var d = JSON.parse(d);
                                    if (d.s == 1) {
                                        X.cacheByUid('fight_hypk', selectedData);
                                        G.frame.fight.data({
                                                pvType: 'pvfriend',
                                                prize: d.d.prize
                                            }).once('show', function() {
                                                G.frame.yingxiong_fight.remove();

                                            }).demo(d.d.fightres);
                                        }
                                }, true);
                            }, "hypk");

                        }
                    });
                },

            },me.nodes);

            var btnsCall = me.data().btnsCall;
            btnsCall && btnsCall(me);
        },
        setdel: function (){
            var me = this;

        },
        setDefaultBtns: function (bool) {
            var me = this;

            var btnPb = me.nodes.btn_pb;
            var btnSend = me.nodes.btn_fsyj;

            btnPb.setVisible(bool);
            btnSend.setVisible(bool);
        }
    });

    G.frame[ID] = new fun('jingjichang_wjxx.json', ID);
})();
;;(function () {
    var ID = 'xuanfu';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.preLoadRes=['public.png','public.plist'];
            me.preLoadRes = ['fuwuqi.plist', 'fuwuqi.png'];
            me._super(json, id, {action: true});
        },
        onOpen: function () {
            var me = this;

            me.layUI = me.ui.nodes.scrollview_fwq;
            cc.enableScrollBar(me.layUI);
            cc.enableScrollBar(me.ui.finds('listview_fuwuqi'));
            cc.enableScrollBar(me.nodes.listview_btn);
            me.listNode = me.ui.nodes.list_fuwuqi;
            me.ui.nodes.mask.click(function (sender, type) {
                me.remove();
            });
        },
        setLatelyList: function () {
            var me = this;

            var lastSvrs = G.frame.login.lastAllSvr;

            me.setTable(me.layUI, lastSvrs, true);
        },
        setTable: function (scrollview, d, zuijin) {
            var me = this;
            scrollview.removeAllChildren();

            if (!cc.isArray(d)) {
                var arr = [];
                var keys = X.keysOfObject(d);
                keys.sort(function (a, b) {
                    return (a * 1) > (b * 1) ? -1 : 1;
                });

                zuijin && keys.reverse();
                for (var i = 0; i < keys.length; i ++) {
                    arr.push(d[keys[i]]);
                }
                d = arr;
            }

            if (!d || d.length < 1) {
                me.ui.finds("zwnr").show();
                return;
            }else {
                me.ui.finds("zwnr").hide();
            }

            var table = new cc.myTableView({
                type: 'fill',
                rownum: 1,
                lineheight: me.listNode.height + 1
            });
            table.data(d);
            table.setDelegate(this);
            table.bindScrollView(scrollview);
            table.tableView.reloadData();
        },
        setList: function (node, d) {
            var me = this;

            node.finds("txt_qf").setString(G.frame.login.fmtServerNameByData(d));
            node.finds("txt_qf").setTextColor(cc.color(G.gc.COLOR.n4));
            var btn = node;
            btn.setTouchEnabled(true);
            btn.sid = d.sid;
            btn._data = d;
            btn.setTouchEnabled(true);
            btn.setSwallowTouches(false);
            btn.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_NOMOVE) {
                    me.onListClick(sender.sid, sender._data);
                }
            });

            // if(G.frame.login.lastSvr && G.frame.login.lastSvr.sid == d.sid){
            //     // 当前选中的服务器
            //     btn.setBright(false);
            // }

            var imgState = node.nodes.panel_zt;
            var txt_zt = node.nodes.txt_zt;
            imgState.hide();
            if (d.s != null) {
                var c = {
                    // 1:[L('serverState1'),'#4eec00'], // 新服
                    // 2:[L('serverState2'),'#ff3000'], // 爆满
                    // 3:[L('serverState3'),'#cccccc'] // 维护
                    0: 'img/fuwuqi/img_fuwuqi_zt1.png',
                    1: 'img/fuwuqi/img_fuwuqi_zt1.png',
                    2: 'img/fuwuqi/img_fuwuqi_zt1.png',
                    3: 'img/fuwuqi/img_fuwuqi_zt3.png',
                    4: "img/fuwuqi/img_fuwuqi_zt3.png"
                };
                var t = {
                    0: L('serverState2'),
                    1: L('serverState2'),
                    2: L('serverState2'),
                    3: L('serverState3'),
                };
                var t_color = {
                   0: cc.color(G.gc.COLOR[5]),
                   1: cc.color(G.gc.COLOR[5]),
                   2: cc.color(G.gc.COLOR[5]),
                   3: cc.color(G.gc.COLOR.n15), 
                };

                // imgState.setString((c[d.s] ? c[d.s][0] : ""));
                // imgState.color = c[d.s] ? cc.color(c[d.s][1]) : cc.color("#ffffff");

                if(d.s < 4){
                    imgState.setBackGroundImage(c[d.s], 1);
                    txt_zt.setString(t[d.s]);
                    txt_zt.setTextColor(t_color[d.s]);
                }else{
                    imgState.removeBackGroundImage();
                    txt_zt.setString("");
                }
                //node.setBackGroundImage( d.s == 3 ? 'img/fuwuqi/bg_fuwuqi_list2.png' : 'img/fuwuqi/bg_fuwuqi_list1.png',ccui.Widget.PLIST_TEXTURE);
                if (d.starttime && d.starttime != null) {
                    G.time = G.SERVERLIST.now;
                    var time_gap = G.time - d.starttime;
                    var day_gap = Math.floor(time_gap / 86400);
                    if (day_gap < 3) {
                        txt_zt.setString(L('serverState1'));
                        txt_zt.setTextColor(cc.color(G.gc.COLOR[1]));
                    } else if (day_gap < 7) {
                        txt_zt.setString(L('serverState2'));
                        txt_zt.setTextColor(cc.color(G.gc.COLOR[5]));
                    }
                }
                if (d.s == 3) {
                    btn.hide();
                    txt_zt.setString(L('serverState3'));
                    txt_zt.setTextColor(cc.color(G.gc.COLOR.n15));
                }
            }

            if (!d.noShowState) {
                imgState.show();
            }
            return node;
        },
        onListClick: function (sid, data) {
            var me = this;
            if (!G.DATA.PROJECT_DEBUG) {
                G.frame.login.changeServer(sid);
            } else {
                G.frame.login.changeServerByData(data);
            }
            me.remove();
        },
        onShow: function () {
            var me = this;
            var btnArr = [];
            var index = 1;
            var arr = [];
            var BTN = [];
            var num = 0;

            var data = G.SERVERLIST.order;
            data.sort(function (a, b) {
                return a < b ? -1 : 1;
            });

            var btn = me.nodes.list_btn_wodequfu;
            btn.isOld = true;
            btnArr.push(btn);
            
            for (var i = 0; i < data.length; i ++) {
                if(index % 11 == 0) {
                    var button = me.nodes.list_btn.clone();
                    button.sever = arr;
                    button.finds("text_tjfwq$").setString((num * 10 + 1) + "-" + ((num + 1) * 10) + L("QU"));
                    arr = [];
                    index = 1;
                    BTN.push(button);
                    num ++;
                }
                arr.push(data[i]);
                index ++;
            }
            if(arr.length > 0) {
                var button = me.nodes.list_btn.clone();
                button.sever = arr;
                button.finds("text_tjfwq$").setString((num * 10 + 1) + "-" + ((num + 1) * 10) + L("QU"));
                BTN.push(button);
            }
            for (var i = BTN.length - 1; i >= 0; i --) {
                btnArr.push(BTN[i]);
            }
            for (var i = 0; i < btnArr.length; i ++) {
                btnArr[i].show();
                if(i == 0) continue;
                me.nodes.listview_btn.pushBackCustomItem(btnArr[i]);
            }
            X.radio(btnArr, function (sender) {
                me.selectedSever(sender);
            }, {
                callback1: function (sender) {
                    sender.finds("img_arrow").show();
                    sender.finds("text_tjfwq$").setTextColor(cc.color("#cd732a"));
                },
                callback2: function (sender) {
                    sender.finds("img_arrow").hide();
                    sender.finds("text_tjfwq$").setTextColor(cc.color("#a7765d"))
                }
            });
            btnArr[0].triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        selectedSever: function(sender) {
            var me = this;
            if(sender.isOld) {
                me.setLatelyList();
            }else {
                me.setTable(me.layUI, sender.sever);
            }
        },
        onRemove: function () {
            var me = this;
        },
        // setTableViewData: function (scrollview, d) {
        //     var me = this;

        //     scrollview.data(d);
        // },
        /**
         * 数据模板
         * @returns {*}
         */
        cellDataTemplate: function () {
            var me = this;

            return me.listNode.clone();
        },
        /**
         * 数据初始化
         * @param ui
         * @param data
         * @param pos [row,col]
         */
        cellDataInit: function (ui, data, pos) {
            var me = this;
            ui.setName('scrollview' + (pos[0] * 1 + pos[1]));

            if (!data) {
                ui.hide();
                return;
            }

            X.autoInitUI(ui);
            var d = X.instanceOf(data, 'Object') ? data : G.SERVERLIST.data[data];
            if(X.instanceOf(data, 'Object') && G.SERVERLIST.data[d.sid]){
                d.s = G.SERVERLIST.data[d.sid].s;
            }
            d && me.setList(ui, d);
            ui.show();
        },
    });

    G.frame[ID] = new fun('fuwuqi.json', ID);
})();
;;/**
 * Created by YanJun on 5/18/16.
 */
(function(){
    G.event.on('playerZhanliChange',function(data) {
        // if(P.gud.lv==2)return;  //原因：此等级下推送信息过多，屏蔽战力变化信息凸显组合属性变化
        // G.interceptor.dispatch(data.code,'zhanli',function () {
            G.zhanli_ani.show(data);
        // });
    });

    var ani = cc.Class.extend({
        ctor: function(){
            this._layer = new ccui.Layout();
            this._layer.setName('zhanli_ani');
            
            this._layer.setAnchorPoint(0,0.5);
            //this._layer.setPosition(0, C.WS.height - 100);
            cc.director.getRunningScene().addChild(this._layer);
            this._layer.setLocalZOrder(9999999);

            this._text = new ccui.TextBMFont();
            this._text.setFntFile('img/fnt/sz_zdl.fnt');
            this._layer.addChild(this._text);
            this._text.setAnchorPoint(0,0.5);
            // this._text.setContentSize(cc.size(100, 45));
            this._text.setPosition(156, 0);

            var me = this;
            // 左边的战力动画
            X.ccui('zhanlidh.json', function (loader) {
                loader.node.setPosition(80,0);
                me._layer.addChild(loader.node);
                loader.node.runAction(loader.action);
                loader.action.gotoFrameAndPlay(0,true);
            });
        }
        ,show: function(callback){
            var me = this;

            this._layer.clearAllTimers();
            var ovalue = me.data().ov,
                nvalue = me.data().nv;
            me._layer.setScaleX(5);
            me._layer.setScaleY(1.5);
            me._layer.runAction(cc.scaleTo(0.2,1,1));
            var diff = nvalue - ovalue;
            
            var sumWidth = 200 + ( (nvalue+"").length*38); //战力+数字
            me._layer.setPosition((C.WS.width-sumWidth)*.5, C.WS.height*.5-200);
            me._layer.setContentSize(sumWidth,100);

            var aa = diff < 0 ? -1 : 1;

            var bb = diff * aa + '';
            var n = 0;
            for (var i = 0; i < bb.length; i++){
                n += bb[i] * 1;
            }
            var ii = 0,j = diff < 0 ? 0 : bb.length - 1,nn = 0;

            me._text.hide();
            var w;
            if (diff > 0) {
                me._text.setString(nvalue+"");
            }else {
                me._text.setString(ovalue+"");
            }
            w = me._text.getContentSize().width;
            this._layer.setTimeout(function () {
                X.ccui('jiantoudh.json', function (loader) {
                    loader.node.getChildByTag(543).setSpriteFrame(['img/zhanlidh/arrow_zl_down.png','img/zhanlidh/arrow_zl_up.png'][diff < 0 ? 0 : 1]);
                    loader.node.setPosition(180+w,0);
                    cc.sys.isObjectValid(me._layer.getChildByTag(666666)) && me._layer.getChildByTag(666666).removeFromParent();
                    me._layer.addChild(loader.node);
                    loader.node.runAction(loader.action);
                    loader.action.gotoFrameAndPlay(0,true);
                    loader.node.setTag(666666);
                });
                me._text.setString('' + ovalue);
                me._text.show();
                me._layer.setTimeout(function(){
                    ovalue += Math.pow(10,bb.length - 1 - j) * aa;
                    me._text.setString('' + ovalue);

                    ii++;
                    if (ii - nn == bb[j]*1){
                        nn = ii;
                        j -= aa;
                    }

                    if (ii == n){
                        me._text.setString(nvalue+"");

                        me._layer.setTimeout(function () {
                            me._layer.runActions([
                                cc.moveBy(0.3,cc.p(0,70*(diff>0?1:-1))),
                                cc.callFunc(function(){
                                    me.remove(),
                                    callback && callback();
                                })
                            ]);
                        },0,0,1);
                    }
                },50,n - 1,0.5);
            },0);

        }
        ,remove: function(){
            this._layer.removeFromParent();
        }
        ,data: function (v) {
            if (v){
                this._data = v;
                return this;
            }else{
                return this._data;
            }
        }
    });
    G.zhanli_ani = {
        _instance: null,
        show: function(d){
            if (d.ov == d.nv)return;
            var me = this;
            if (!me._instance){
                me._instance = new ani();
            }
            if (me._instance){
                me._instance.data(d);
            }
            me._instance.show(function () {
                delete me._instance;
            });
        }
    };
})();
;;/**
 * Created by wfq on 2015/12/2.
 */
(function () {
    //提示
    var ID = 'alert';
    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;

            me._super(json, id,{action:true});
        },
        onShow: function () {
            var me = this;

            this._okbtn = null;
            this._cancelbtn = null;
            me.ui.nodes.panel_nr.removeAllChildren();

            // ui_tip_tishi 有抬头文字
            // ui_tip_tishi5 无抬头文字
            new X.bView('tishi.json', function (view) {
                me.ui.nodes.panel_nr.addChild(view);
                me.view = view;
                cc.enableScrollBar(me.view.nodes.panel_txt);
                me.setContents();
            });
        },
        onRemove: function () {
        },
        onOpen: function () {
            var me = this;
            //cc.enableScrollBar()
        },
        setContents: function(){
            var me = this;

            this.fillSize();
            this.u_buttonbg = me.view.nodes.panel_btn;
            var args = this.data();
            this._autoClose = true;
            this.set(args);
            if (!this._okbtn) {
                this.okCall();
            }
            this.updateButtonPosition();
            this.ui.zIndex = args.zIndex!=null?args.zIndex:100000;

            this.close(true);
            !me.data().closeCall && this.closeCall();

            me.ui.setTimeout(function(){
            	G.guidevent.emit('alert_open_over');
            },500);
        },
        title: function (v) {
            // this.ui.nodes.top_title.setString(v);
            setPanelTitle(this.ui.nodes.txt_title, v);
        },
        autoClose: function (v) {
            this._autoClose = v;
        },
        ok: function (d) {
            d = d || {};
            if (!this._okbtn) {
                this._okbtn = new ccui.Button();
                this._okbtn.setTouchEnabled(true);
                this._okbtn.setName('btn_ok');
                this._okbtn.setAnchorPoint(C.ANCHOR[5]);
                this._okbtn.setTitleFontSize(24);
                this._okbtn.setTitleColor(cc.color(G.gc.COLOR.n13));
                this.u_buttonbg.addChild(this._okbtn);
                this._okbtn.setTitleFontName(G.defaultFNT);
            }
            this._okbtn.loadTextureNormal(d.bg || 'img/public/btn/btn1_on.png', ccui.Widget.PLIST_TEXTURE);
            this._okbtn.setTitleText(d.wz || L('BTN_OK'));
        },
        okCall: function (call) {
            if (!this._okbtn) {
                this.ok();
            }
            var me = this;
            this._okbtn.click(function (event, type) {
                if (me._autoClose) {
                    me.remove();
                }
                call && call();
            });
        },
        cancel: function (d) {
            d = d || {};
            if (!this._cancelbtn) {
                this._cancelbtn = new ccui.Button();
                this._cancelbtn.setTouchEnabled(true);
                this._cancelbtn.setName('btn_cancel');
                this._cancelbtn.setTitleFontName(G.defaultFNT);
                this._cancelbtn.setAnchorPoint(C.ANCHOR[5]);
                this._cancelbtn.setTitleFontSize(24);
                this._cancelbtn.setTitleColor(cc.color(G.gc.COLOR.n14));
                this.u_buttonbg.addChild(this._cancelbtn);
            }
            this._cancelbtn.loadTextureNormal(d.bg || 'img/public/btn/btn3_on.png', ccui.Widget.PLIST_TEXTURE);
            this._cancelbtn.setTitleText(d.wz || L('BTN_CANCEL'));
        },
        cancelCall: function (call) {
            if (!this._cancelbtn) {
                this.cancel();
            }
            var me = this;
            this._cancelbtn.click(function (event, type) {
                me.remove();
                call && call();
            }, this._cancelbtn);
        },
        close: function (v) {
            var me = this;
            me.ui.nodes.mask.setVisible(v);
        },
        closeCall: function (call) {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_ENDED){
                    me.remove();
                    call && call();
                }
            });
        },
        setButton: function (d) {
            var me = this;
            var button = new ccui.Button();
            button.setTouchEnabled(true);
            button.setAnchorPoint(C.ANCHOR[5]);
            button.loadTextures(d.img || 'button/button_hong1.png', '', '');
            button.setTitleFontSize(24);
            button.setTitleColor(cc.color(G.gc.COLOR.n14));
            button.setTitleText(d.name);
            button.click(function (sender, type) {
                d.call && d.call();
                me.remove();
            }, button);
            this.u_buttonbg.addChild(button);
        },
        setHeight: function (h) {
            this.view.height = h;
            this.fillSize();
        },
        sizeType: function (v) {
            v = v || 0;
            var sizesHeight = [400, 550, 710, 300, 350];
            this._uiHeight = sizesHeight[v];
            this.setHeight(this._uiHeight);  //不处理width
        },
        updateButtonPosition: function () {
            var buttonbg = this.u_buttonbg;
            var w = buttonbg.width;
            var h = buttonbg.height;
            var count = buttonbg.getChildrenCount();
            for (var i = 0; i < count; i++) {
                var button = buttonbg.getChildren()[i];
                var size = button.getSize();
                var x = w / 2 + (i + .5 - count / 2) * (size.width + 80);
                var y = h / 2;
                button.setPosition(cc.p(x, y));
            }
        },
        fontsize: function (v) {
            this._fontsize = v;
            return this;
        },
        cuttingLine: function(v){
            var me = this;
            me.view.nodes.text_xian.setString(v);
            me.view.nodes.text_xian.setTextColor('#804326');
        },
        remarks: function(v){
            var me = this;
            me.view.nodes.text_ts.setString(v);
            me.view.nodes.text_ts.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
            me.view.nodes.text_ts.setTextColor(cc.color('#804326'));
        },
        richText: function (v) {
            // var listView = this.u_listView;
            var me = this;

            var _maxWidth = this.view.nodes.panel_txt.width;
            var data = me.data();
            var richText = new X.bRichText({
                size: me._fontsize || 24,
                maxWidth: _maxWidth,
                lineHeight: (data && data.lineheight) || ((me._fontsize || 24) + 2),
                family:G.defaultFNT,
                color: "#804326",
            });

            if (data && data.richNodes) {
                richText.text(v, data.richNodes);
            } else {
                richText.text(v);
            }
            if(!v.indexOf('<br>') && richText.trueHeight() <= 26){
                this.view.nodes.panel_txt.x += (this.view.nodes.panel_txt.width/2 - richText.trueWidth()/2);
            }
            richText.setPosition(0, this.view.nodes.panel_txt.height - richText.trueHeight());
            this.view.nodes.panel_txt.removeAllChildren();
            this.view.nodes.panel_txt.addChild(richText);
            if(richText.trueWidth() < _maxWidth){
                this.view.nodes.panel_txt.setPosition(cc.p(this.view.width/2 + (this.view.nodes.panel_txt.width-richText.trueWidth())/2,140 + (richText.trueHeight() - 24)/2));
            }
        },
        xiaoHao: function(v) {
            var me = this;
            var _maxWidth = this.view.nodes.panel_xh.width;
            var data = me.data();
            var richText = new X.bRichText({
                size: me._fontsizeXh || 18,
                maxWidth: _maxWidth,
                lineHeight: (me._fontsizeXh || 18) + 2,
                color: G.gc.COLOR.n4,
                family: G.defaultFNT
            });

            richText.text.apply(richText, v); // [X.STR(str, a,n), img]
            richText.setPosition( (this.view.nodes.panel_xh.width - richText.trueWidth()) * 0.5, this.view.nodes.panel_xh.height - richText.trueHeight());
            this.view.nodes.panel_xh.removeAllChildren();
            this.view.nodes.panel_xh.addChild(richText);
        },
        set: function (args) {
            if (!args) return;
            if (!args.sizeType) args.sizeType = 0;

            // if (args.close || args.closeCall) {
            //     this.close(args.close);
            //     this.closeCall(args.closeCall);
            // }
            for (var key in args) {
                if (key == 'ok') continue;
                this[key] && this[key](args[key]);
            }
            if (args.ok || args.okCall) {
                this.ok(args.ok);
            }

            if (!args.title) {
                this.title(L('TS'));
            }
        }
    });

    G.frame[ID] = new fun('ui_tip_tishi.json', ID);
})();

;;/**
 * Created by wfq on 2018/6/28.
 */
(function () {
    //单项购买弹窗
    var ID = 'alert_gm';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            me.ui.nodes.txt_title.setString(me.data().title);
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function (sender, type) {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.DATA = me.data();
            new X.bView('ui_tip_gm2.json', function (view) {
                me._view = view;

                me.nodes.panel_nr.removeAllChildren();
                me.nodes.panel_nr.addChild(view);

                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },

        setContents: function () {
            var me = this;

            var panel = me._view;

            X.render({
                txt_nr: function (node) {
                    var str = me.DATA.intr;
                    var rh = new X.bRichText({
                        size:18,
                        maxWidth:node.width,
                        lineHeight:24,
                        color:G.gc.COLOR.n4,
                        family:G.defaultFNT
                    });
                    rh.text(str);
                    rh.setPosition(cc.p(0,node.height - rh.trueHeight()));
                    node.removeAllChildren();
                    node.addChild(rh);
                },
                btn_gm: function (node) {

                    var txtGm = node.finds('txt_gm');
                    var imgGm = node.finds('img_zs');

                    var need = me.data().need[0];

                    if (need.n < 1) {
                        txtGm.setString(L('MIANFEI'));
                    } else {
                        var ownNum = G.class.getOwnNum(need.t,need.a);
                        setTextWithColor(txtGm,need.n,G.gc.COLOR[ownNum >= need.n ? 'n12' : 5]);
                    }

                    imgGm.loadTexture(G.class.getItemIco(need.t),1);

                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            var callback = me.DATA.callback;
                            callback && callback();
                        }
                    });
                }
            },panel.nodes);
        },
    });

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;(function(){
    //兵种动画单个
    G.class.armyAni = X.bView.extend({
        //hid = 佣兵id，通过army.json中的 json字段配置，获取动画资源前缀，如：bb01
        //level = 等级（1/2/3），不同的等级，有不同的外形
        //direction = 方向(f/z)
        ctor: function (type,hid,level,direction,callback, conf) {

            cc.log('G.class.armyAni ctor....',type,hid,level,direction,callback, conf);
            if(hid==null || level==null || direction==null){
                cc.log('G.class.armyAni时，hid level direction必传');
                return;
            }

            conf = conf || {};
            conf.action = true;
            conf.autoFillSize = false;
            conf.releaseRes = false;

            if(type=='hero'){
                if(hid*1 > 10000) level = 1; // 经验宝宝没有进阶变化形象
                var json = G.class.hero.getAniFileName(hid,level,direction);
            }else if(type=='machine'){
                var json = G.class.machine.getAniFileName(hid,1,direction);
            }

            this.jsonFile = json;

            //根据资源前缀，判断出兵种类型
            var baseName = cc.path.basename(json);
            if(baseName.startsWith('bb')){
                this.armyType = "bubing";
                this.isBuBing = true;
            }else if(baseName.startsWith('tk')){
                this.armyType = "tanke";
                this.isTanKe = true;
            }else if(baseName.startsWith('zsj')){
                this.armyType = "zhishengji";
                this.isZhiShengJi = true;
            }else if(baseName.startsWith('hjp')){
                this.armyType = "huojian";
                this.isHuoJian = true;
            }else if(baseName.startsWith('zj')){
                this.armyType = "zhanjian";
                this.isZhanjian = true;
            }

            this._super( json, callback, conf );
        },
        onShow : function(){
            this.wait();
        },
        wait : function(){
            this.setAct('wait',true);
        },
        move : function(){
            this.setAct('move',true);
        },
        byatk : function(callback){
            var me = this;
            me.setAct('byatk',false,function(){
                //if(me._currAct=='byatk'){
                    me.wait();
                //}
                callback && callback();
            });
        },
        die : function(){
            this.setAct('die',false);
        },
        //{actname,hitCallback,endCallback}
        atk : function(conf){
            var me = this;
            conf = conf || {};
            var _actName = "atk";
            if(conf && conf.actname)_actName = conf.actname;

            //如果不存在动作，则直接容错回调
            if(!me.action.isAnimationInfoExists(_actName)){
                cc.log('JSON文件缺少动作',me.jsonFile,_actName);
                conf.hitCallback && conf.hitCallback();
                conf.endCallback && conf.endCallback();
                return;
            }

            me.action.setFrameEventCallFunc(function (e) {
                cc.log('atk_Event===',e.getEvent());
                if (e.getEvent() == 'hit') {
                    conf.hitCallback && conf.hitCallback();
                    me.action.clearFrameEventCallFunc();
                }
            });

            me.setAct(_actName,false,function(){
                //if(me._currAct==_actName){
                    me.wait();
               //}
                conf.endCallback && conf.endCallback();
            });
        },
        setAct : function(actName,repeat,callback){
            var me = this;
            me._willPlay = arguments; //试图播放
            if(me._currAct && me._currAct.startsWith('atk')){
                //如果正在播放攻击动作，则不允许被打断
                return;
            }else{
                delete me._willPlay;
            }

            me._currAct = actName;
            me.action.playWithCallback(actName,repeat,function(){
                //native中，无论repeat为何值，都会触发，WEB中repeat=true时不会进入
                cc.log('end...',actName);
                delete me._currAct;
                callback && callback.call(me);

                if(me._willPlay){
                    me.setAct.apply(me,me._willPlay);
                }
            });
        },
        onRemove : function(){
            delete this._willPlay;
            delete this._currAct;
        }
    });
})();

;;(function () {

G.class.boxList = function (nodes, count, callback) {
    var me = this;
    me._nodes = nodes;
    me._count = count;
    me._boxColor = {};

    for(var i=0;i<me._count;i++){
        var idx = i+1;
        var box = me._nodes['panel_bx' + idx];
        box.idx = i;
        // me.setStatus(idx, 2); // 默认不可领取
        // me.setPercent(idx, 0); // 默认进度条0

        box.setTouchEnabled(true);
        box.click(function(sender, type){
            callback && callback(sender, type);
        });
    }
};

G.class.boxList.prototype = {
    setPercent : function(idx, val){
        var me = this;
        me._nodes['jdt_' + idx].setPercent(val);
    },
    // color 1 绿 2蓝 3橙
    setBoxColors : function(colors){
        var me = this;
        for(var i=0;i<colors.length;i++){
            me._boxColor[i+1] = colors[i];
        }
    },
    // status 0未领取 1已领取 2不可领取 
    setStatus : function(idx, status){
        var me = this;
        var box = me._nodes['panel_bx' + idx];
        box.status = status;
        var color = me._boxColor[idx] || '1';
        box.setBackGroundImage({
            "0": 'img/public/img_bx' + color + '_1.png', // 可领取
            "1": 'img/public/img_bx' + color + '_3.png', // 已领取
            "2": 'img/public/img_bx' + color + '_2.png', // 不可领取
        }[status],ccui.Widget.PLIST_TEXTURE);
    },
    setText : function(idx, val){
        var me = this;
        var box = me._nodes['panel_bx' + idx];

        var rt = new X.bRichText({
            size: 18,
            lineHeight: 24,
            maxWidth:box.width,
            color:G.gc.COLOR.n11
        });
        rt.text(val);
        rt.setAnchorPoint(0.5, 0);
        rt.setPosition(cc.p( (box.width-rt.trueWidth())*0.5, 0 ));
        box.removeAllChildren();
        box.addChild(rt);
    },
    reset: function(){
        var me = this;
        me._count

        for(var i=0;i<me._count;i++){
            var idx = i+1;
            me.setPercent(idx, 0); // 默认进度条0
            me.setStatus(idx, 2);   // 默认不可领取
            var box = me._nodes['panel_bx' + idx];
            box.setTouchEnabled(true);
        }
    },
    getBox: function(idx){
        var me = this;
        return me._nodes['panel_bx' + idx];
    }
};

})();
;;/**
 * Created by YanJun on 12/22/15.
 */
(function () {
    //重生奖励
    var ID = 'huishou_csjl';
    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        onOpen: function () {
            var me = this;
            new X.bView('ui_tip_tishi3.json', function (view) {
                me.ui.nodes.panel_nr.addChild(view);
                me.view = view;
                me.initUI();
                me.getData(me.setData);
            })
        },
        initUI: function () {
            var me = this;
            me.ui.render({
                top_title: L('UI_TITLE_CHONGZAO_JIANGLI')
            });
            me.ui.nodes.btn_gb.click(function () {
                me.remove();
            });
            qxfun = function () {
                me.remove();
            };
            qdfun = function () {
                var callback = me.data().callback;
                callback && callback();
                me.remove();
            };
            X.addBtn(me.view.nodes.panel_btn, {
                count: 2,
                texture: ['btn_hong.png', 'btn_lan.png'],
                title: [L('BTN_CANCEL'), L('BTN_OK')],
                callback: [qxfun, qdfun]
            });
        },
        getData: function (callback) {
            var me = this;
            G.ajax.send(me.data().api, [me.data().data], function (data) {
                data = X.toJSON(data);
                if (data.s == 1) {
                    me.DATA = data.d.prize || data.d;
                    callback && callback.call(me);
                }
            });
        },
        setData: function () {
            var me = this;
            var d = me.DATA;
            var listView = me.view.nodes.listview;
            listView.removeAllChildren();
            // var table = me.table = new X.TableView(scrollview, me.list, 4, function (ui, data) {
            //     me.setItem(ui, data);
            // }, null, null, 35);
            for (var i in d) {
                var p = G.class.sitem(d[i], true);
                p.setScale(0.8);
                // p.setPosition(cc.p(ui.width / 2, ui.height / 2));
                listView.pushBackCustomItem(p);
            }
            // table.setData(d);
            // table.reloadDataWithScroll(true);
            //
            me.setRichtext();
        },
        // setItem: function (ui, data) {
        //     var me = this;
        //
        //     ui.removeAllChildren();
        //     var p = G.class.sitem(data, true);
        //     p.setPosition(cc.p(ui.width / 2, ui.height / 2));
        //     ui.addChild(p);
        // },
        setRichtext: function () {
            var me = this;
            var str = me.data().richText;
            X.render({
                panel_title: !str ? L('CS_' + me.data().api) : str
            }, me.view.nodes);
        }
    });

    G.frame[ID] = new fun('ui_tip1.json', ID);
})();
;;/**
 * Created by admin on 2018/1/6.
 */
(function () {
    //奖励
    var ID = 'jiangli';
    var fun = X.bUi.extend({
        extConf:{
            maxnum:5
        },
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;

            if(me.data().sd) me.ui.finds("wz_huodewupin_hdwp").loadTexture("img/public/wz_sdjl.png", 1);
        },
        bindBtn: function () {
            var me = this;
            me.nodes.btn_qr.click(function () {
                me.remove();
            });
            //新手指导会调用这个按钮的逻辑，按钮虽然隐藏了，但事件不能屏蔽
            me.nodes.btn_qr2.click(function () {
                me.remove();
            });
            me.ui.nodes.mask.click(function () {
                if(me.isTouch) me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            me.isTouch = false;
            me.nodes.btn_qr2.zIndex = 999;
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onShow: function () {
            var me = this;
            X.audio.playEffect("sound/lingqujiangli.mp3");
            me.aniItem = [];
            me.DATA = me.data();
            me.nodes.btn_qr.hide();
            me.nodes.btn_zzyc.hide();
            me.nodes.btn_qr2.hide();
            me.nodes.text_btn.setString(L("QR"));
            me.ui.setTimeout(function () {
                me.setContents();
                me.checkWordTree();
                G.guidevent.emit('jiangliShowOver');
            }, 200);
            me.action.playWithCallback("in", false, function () {
                me.isTouch = true;
                me.action.play("wait", true);
            });

        },
        checkWordTree: function() {
            var me = this;

            if(me.data().tree) {
                me.nodes.btn_qr.show();
                me.nodes.btn_zzyc.show();
                me.nodes.text_2.setString(1);
                me.nodes.img_zs.loadTexture(G.class.getItemIco("2011"), 1);
                me.ui.finds("txt_sx").setString(L("ZH"));
                me.nodes.btn_zzyc.click(function () {
                    me.remove();
                    G.frame.worldtree.tree.noAni = true;
                    G.frame.worldtree.tree.nodes.btn_gs.triggerTouch(ccui.Widget.TOUCH_ENDED);
                })
            }
        },
		onAniShow: function () {
            var me = this;
		},
        onRemove: function () {
            var me = this;
            me.emit("hide");
			G.guidevent.emit('jiangliRemoveOver');
        },
        setContents: function () {
            var me = this;
            cc.enableScrollBar(me.nodes.listview_ico);
            if(me.DATA && me.DATA.prize){
                //X.lengthChangeByPanel(me.DATA.prize, me.nodes.panel_ico, me.nodes.listview_ico3);
                var prize = me.DATA.prize;
                if(prize.length <= 5){
                    X.alignCenter(me.nodes.panle_tb2, prize, {
                        touch: true,
                        mapItem: function (item) {
                            if(me.DATA.isAni) {
                                item.hide();
                                me.aniItem.push(item);
                            }
                        }
                    })
                }else{
                    me.nodes.panle_tb2.hide();
                    me.nodes.panel_ico.removeAllChildren();
                    me.nodes.panel_tb.hide();
                    var arr = me.formatData(me.DATA.prize);
                    for(var i = 0; i < arr.length; i ++){
                        var list = me.nodes.panel_tb.clone();
                        list.setAnchorPoint(0.5, 0.5);
                        X.autoInitUI(list);

                        for(var j = 0; j < arr[i].length; j ++){
                            var item = G.class.sitem(arr[i][j]);
                            var panel = list.nodes["panel_" + (j + 1)];
                            if(me.DATA.isAni) {
                                item.hide();
                                me.aniItem.push(item);
                            }
                            me.icon = item;
                            panel.addChild(item);
                            item.setPosition(panel.width / 2, arr.length > 2 ? 70 : panel.height / 2);
                            G.frame.iteminfo.showItemInfo(item);
                        }
                        list.show();
                        list.setAnchorPoint(0.5, 0.5);
                        me.nodes.listview_ico.pushBackCustomItem(list);
                    }
                    me.nodes.listview_ico.jumpToTop();
                }
            }
            if(me.DATA.isAni) {
                me.playAni();
            }
        },
        playAni: function() {
            var me = this;

            for (var i = 0; i < me.aniItem.length; i ++) {
                me.aniItem[i].fuse(me.aniItem[i]);
            }
        },
        formatData: function (data) {
            var arr = [];
            var p = [];
            for(var i = 0; i < data.length; i ++){
                p.push(data[i]);
                if((i + 1) % 5 == 0){
                    arr.push(p);
                    p = [];
                }
            }
            if(data.length % 5 !== 0){
                var a = [];
                for(var i = data.length - data.length % 5; i < data.length; i ++){
                    a.push(data[i]);
                }
                arr.push(a);
            }
            return arr;
        }
    });

    G.frame[ID] = new fun('ui_hdwp2.json', ID);
})();

;;/**
 * Created by LYF on 2018/6/2.
 */
(function () {
    //奖励预览
    var ID = 'jiangliyulan';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            X.render({
                panel_bt:function(node){
                    var rh = new X.bRichText({
                        size: 30,
                        maxWidth: node.width,
                        lineHeight: 32,
                        color: "#FFE8C0",
                        family: G.defaultFNT,
                    });
                    rh.setPosition(cc.p(165, 0));
                    rh.text(L('JLYL'));
                    node.addChild(rh);
                }
            },me.nodes);
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function (sender, type) {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
            me.ui.finds("panel_tip").hide();
            me.nodes.panel_top.show();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.DATA = me.data();
            
            new X.bView("ui_hdwp.json", function (node) {
                me.nodes.panel_nr1.removeAllChildren();
                me.nodes.panel_nr1.addChild(node);
                me.view = node;
                if(me.DATA.callback){
                    me.view.nodes.btn_qr.setTitleText(L("QW"));
                    me.view.nodes.btn_qr.click(function (sender, type) {
                        me.DATA.callback();
                        me.remove();
                    });
                }else{
                    me.view.nodes.btn_qr.click(function (sender, type) {
                        me.remove();
                    });
                }
                me.setContents();
            })
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            me.view.nodes.panel_1.x = 0;
            me.view.nodes.listview_1.x = 0;
            if(me.DATA.prize){
                X.lengthChangeByPanel(me.DATA.prize, me.view.nodes.panel_1, me.view.nodes.listview_1, {
                    num: 5,
                    touch:true
                });
            }

            if(me.DATA.layer) {
                var rh = new X.bRichText({
                    size: 20,
                    maxWidth: me.view.nodes.panel_wz.width,
                    lineHeight: 32,
                    color: "#FFE8C0",
                    family: G.defaultFNT,
                });
                rh.setAnchorPoint(0.5, 0.5);
                rh.setPosition(cc.p(me.view.nodes.panel_wz.width / 2 - 20, 20));
                rh.text(X.STR(L('JLSDLQBX'), me.DATA.layer));
                me.view.nodes.panel_wz.addChild(rh);
            }

            me.nodes.txt_title.setString(me.DATA.title || L("JLYL"));
        },
    });
    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by wfq on 2017/1/3.
 */
(function () {
    //批量处理
    var ID = 'plhandle';
    var _CONF = {
        // baowu:{  //宝物的暂未使用
        //     need_tip_color:[4],
        //     default_show_color:[1,2,3],
        //     api:'baowu_jinglian'
        // },
        hero: {
            need_tip_color: [3, 4],
            default_show_color: [1, 2],
            api: 'army_plchuli'
        },
        equip: {
            need_tip_color: [3, 4],
            default_show_color: [1, 2],
            api: 'equip_plchuli'
        }
    };

    G.event.on('plhandle_success', function (d) {
        if (!d) return;
        if (d.type == 'hero' || d.typ == 'equip') return;
        G.frame.plhandle['callback_' + d.type] && G.frame.plhandle['callback_' + d.type](d.d);
    });

    G.event.on('new_army_data', function (d) {
        if (!d) return;
        if (G.frame.plhandle.isShow) {
            G.frame.plhandle.ui.setTimeout(function () {
                G.frame.plhandle.setContents();
                G.frame.plhandle.callback_hero();
            }, 500);
        }
    });
    G.event.on('new_equip_data', function (d) {
        if (!d) return;
        if (G.frame.plhandle.isShow) {
            G.frame.plhandle.ui.setTimeout(function () {
                G.frame.plhandle.setContents();
                G.frame.plhandle.callback_equip();
            }, 500);
        }
    });
    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        setContents: function () {
            var me = this;
            me.setBaseInfo();
            me.colorArr = [].concat(_CONF[me.curType].default_show_color);
            var color2Arr = me.color2Arr = me['getColor2ArrFrom' + me.curType]();
            for (var j = 0; j < 4; j++) {
                me.view.nodes['txt_fxk' + (j + 1)].setString(L('COLOR' + (j + 1)) + L(me.curType) + 'x' + color2Arr[j + 1].length);
                me.view.nodes['btn_fxk' + (j + 1)].idx = j + 1;
                me.view.nodes['btn_fxk' + (j + 1)].setSelected(X.inArray(me.colorArr, j + 1));
                me.view.nodes['btn_fxk' + (j + 1)].click(function (sender, type) {
                    var idx = X.arrayFind(me.colorArr, sender.idx);
                    if (idx != -1) {
                        me.colorArr.splice(idx, 1);
                    } else {
                        me.colorArr.push(sender.idx);
                    }
                });
            }
        },
        setBaseInfo: function () {
            var me = this;
            me.ui.nodes.top_title.setString(L('PL_TIP_TITLE_' + me.curType));
            me.view.nodes.txt_1.setString(L('PL_TIP_1_' + me.curType));
            me.view.nodes.txt_2.setString(L('PL_TIP_2_' + me.curType));
        },
        // getColor2ArrFrombaowu: function () {
        //     var obj = {};
        //     for (var j = 1; j < 5; j++) {
        //         obj[j] = [];
        //     }
        //
        //     var baowu = G.DATA.baowu;
        //     for (var k in baowu) {
        //         if (!baowu[k].tsbuff && !baowu[k].lock && (!baowu[k].useitem || baowu[k].useitem == '' || baowu[k].side == undefined)) {
        //             // C.log(baowu[k]['color']);
        //             obj[baowu[k]['color']].push(k);
        //         }
        //     }
        //     return obj;
        // },
        getColor2ArrFromarmy: function () {
            var obj = {};
            for (var j = 1; j < 5; j++) {
                obj[j] = [];
            }

            var data = G.DAO.budui.getCanHuiShouList(0);
            for (var k in data) {
                var conf = G.class.getItem(data[k].hid, 'hero');
                obj[conf.color].push(k);
            }
            return obj;
        },
        getColor2ArrFromequip: function () {
            var obj = {};
            for (var j = 1; j < 5; j++) {
                obj[j] = [];
            }

            var data = G.DAO.zhuangbei.getCanLianHuaList(0);
            for (var k in data) {
                var conf = G.frame.beibao.DATA.zhuangbei.list[data[k]];
                obj[conf.color].push(k);
            }
            return obj;
        },
        // callback_baowu: function (d) {
        //     if (d.addjl > 0) {
        //         G.tip_NB.show(L('JINGLIAN') + '*' + d.addjl);
        //     }
        //     var bw = d.newbw;
        //     if (bw && X.isHavItem(bw)) {
        //         var p = [];
        //
        //         for (var k in bw) {
        //             p.push({a: 'baowu', t: bw[k].bid, n: bw[k].num || 1, c: bw[k].color});
        //         }
        //         G.tip_NB.show(X.createPrizeInfo(p, 0, 1));
        //     }
        //     G.frame.tiejiangpu.showTk(d);
        //     G.frame.tiejiangpu._bwSelectedArr = [];
        //     G.frame.tiejiangpu.initJL();
        // },
        callback_hero: function (d) {
            var me = G.view.barrack_huishou;
            me._fjlist = [];
            me.nodes.btn_yjtj.setTouchEnabled(true);
            me.nodes.btn_hs.setTouchEnabled(true);
            me.setFJ();
        },
        callback_equip: function (d) {
            var me = G.view.institute_huishou;
            me._lhlist = [];
            me.nodes.btn_yjtj.setTouchEnabled(false);
            me.nodes.btn_hs.setTouchEnabled(false);
            me.setLH();
            G.event.emit('equip_lianhua');
        },
        initUI: function () {
            var me = this;
            // for (var j = 0; j < 4; j++) {
            //     me.panelArr.push(me.ui.finds('panel' + (j + 1)));
            // }
        },
        bindUI: function () {
            var me = this;

            me.ui.nodes.btn_gb.click(function (sender, type) {
                me.remove();
            });
            var qxfun = function () {
                me.remove();
            };
            var qdfun = function () {
                if (me.colorArr.length < 1) {
                    G.tip_NB.show(L('TJP_NO_SELECT_COLOR_' + me.curType));
                    return;
                }
                var tip = false;
                for (var j = 0; j < _CONF[me.curType].need_tip_color.length; j++) {
                    var need = _CONF[me.curType].need_tip_color[j];
                    if (X.inArray(me.colorArr, need) && me.color2Arr[need].length > 0) {
                        tip = true;
                    }
                }

                function send() {
                    G.ajax.send(_CONF[me.curType].api, [me.colorArr], function (data) {
                        if (!data) return;
                        var data = X.toJSON(data);
                        if (data.s == 1) {
                            G.tip_NB.show(X.createPrizeInfo(data.d.prize, 0, 1));
                            G.event.emit('plhandle_sucess', {type: me.curType, d: data.d});
                        }
                    });
                }

                if (tip) {
                    var str = L('TJP_COLOR_TIP_' + me.curType);
                    G.frame.alert.data({
                        cancelCall: null,
                        okCall: function () {
                            send();
                        },
                        sizeType: 3,
                        close: true,
                        closeCall: null,
                        richText: str
                    }).show();
                } else {
                    send();
                }
            };
            X.addBtn(me.view.nodes.panel_btn, {
                count: 2,
                texture: ['btn_hong.png', 'btn_lan.png'],
                title: [L('BTN_CANCEL'), L('BTN_OK')],
                callback: [qxfun, qdfun]
            });
        },
        onOpen: function () {
            var me = this;
            me.curType = me.data().type;
            new X.bView('ui_tip_sz.json', function (view) {
                me.ui.nodes.panel_nr.addChild(view);
                me.view = view;
                me.initUI();
                me.bindUI();
                me.setContents();
            });
        },
        onShow: function () {
            var me = this;
        }
    });

    G.frame[ID] = new fun('ui_tip1.json', ID);
})();
;;/**
 * Created by LYF on 2018/8/9.
 */
(function () {
    //跳转前往
    var ID = 'qianwang';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.setTouchEnabled(true);
            me.ui.click(function (sender, type) {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.DATA = me.data();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.nodes.btn_hqtj.hide();
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var btnArr = [];
            for(var i = 0; i < me.DATA.length; i ++) {
                var btn = G.class.setTZ(me.DATA[i]);
                btnArr.push(btn);
            }
            btnArr.sort(function (a, b) {
                return a.is > b.is ? -1 : 1;
            });
            X.center(btnArr, me.nodes.panel_ico, {
                callback:function (item) {
                    if(btnArr.length > 5) item.setScale(.8);
                }
            });
        },
    });
    G.frame[ID] = new fun('zhuangbei_tip2.json', ID);
})();
;;/**
 * Created by zhangming on 2017-12-25
 */
(function () {
    //自动创建按钮组
    G.class.topMenu = function(bui,conf, view, listView){
        var me = this;

        me.list = view ? view.nodes.list : bui.ui.nodes.list;

        var listview = view ? view.nodes.listview : (bui.ui.nodes.listview || listView);
        me._listview = me.listview = listview;

        me.bui = bui;
        me.btns = {};

        listview.setScrollBarEnabled && listview.setScrollBarEnabled(false);
        listview.removeAllItems();

        for(var i=0;i<conf.btns.length;i++){
            var d = conf.btns[i];
            var list = me.list.clone();
            list.setName(d.id);
            list.idx = i;
            me.setItem(list,d);

            list.show();
            listview.pushBackCustomItem(list);
        }
    };

    G.class.topMenu.prototype = {
        getItem : function(id){
            var items = this._listview.getItems();
            for(var i=0;i<items.length;i++){
                if(items[i].getName() == id){
                    return items[i];
                }
            }
            return null;
        },
        getBtn : function(id){
            var item = this.getItem(id);
            return item ? item.btn : null;
        },
        getConf : function(id){
            return this.getBtn(id).data;
        },
        changeMenu : function(id){ // , jump
            var me = this;
            var item = me.getItem(id);
            if (!cc.sys.isObjectValid(item)) {
                return;
            }
            item.btn.triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        //设置按钮
        setItem: function (list,d) {
            var me = this;

            X.autoInitUI(list);
            var btn = list.btn = list.nodes.btn_1;
            var title = list.title = list.nodes.txt_name;

            title.setString(d.title);
            btn.data = d;

            title.setTextColor(cc.color('#A79682'));
            btn.setBright(true);

            var _name = 'menuBtn'+ (d.id||"");
            btn.setName(_name);
            me.btns[_name] = btn;

            if(d.checkLv) {
                if(d.checkLv == 'gh') {
                    if(!P.gud.ghid) {
                        btn.disable = true;
                        btn.show = d.show;
                    }
                }else {
                    if(P.gud.lv < G.class.opencond.getLvById(d.checkLv)) {
                        btn.disable = true;
                        btn.show = X.STR(d.show, G.class.opencond.getLvById(d.checkLv));
                    }
                }
            }

            btn.touch(function (sender, type, fromwhere) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    if (fromwhere != 'fromcode' && !sender.isBright()) {
                        return;
                    }
                    var btns = me.listview.getItems();
                    for (var j = 0; j < btns.length; j++) {
                        var btn = btns[j].btn;
                        if (sender == btn) {
                            // 选中状态
                            if (!sender.disable) {
                                btns[j].title.setTextColor(cc.color('#FFFFFF'));
                                X.enableOutline(btns[j].title,cc.color('#0a1021'),2);
                                sender.setBright(false);
                            }
                        } else {
                            // 未选中状态
                            if (!sender.disable && !btn.disable) {
                                btns[j].title.setTextColor(cc.color('#A79682'));
                                X.enableOutline(btns[j].title,cc.color('#44281d'),2);
                                btn.setBright(true);
                            }
                        }
                    }
                    me.bui.changeType && me.bui.changeType(sender);
                }
            });
        },
        //增加单个按钮
        addItem: function (d) {
            var me = this;

            var listview = me.listview;
            var list = me.list.clone();

            //如果已经存在该节点，跳出设置
            var child = listview.finds(d.id);
            if (cc.isNode(child)) {
                return;
            }

            list.setName(d.id);
            list.idx = listview.getChildren().length;
            me.setItem(list,d);

            listview.pushBackCustomItem(list);
            list.show();
        },
        // enableMenu : function(v){
        //     var items = this._listview.getItems();
        //     for(var i=0;i<items.length;i++){
        //         items[i].btn.setTouchEnabled(v);
        //     }
        // },
        // setDisable: function (id,disbale) {
        //     var item = this.getItem(id);
        //     if (!cc.sys.isObjectValid(item)) {
        //         return;
        //     }

        //     item.setLock(disbale);
        // }
    };

})();

;;/**
 * Created by admin on 2018-03-09
 */
(function () {
    //批量购买
    var ID = 'ui_tip_plgm';
    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        setContents: function () {
            var me = this;

            var view = me._view;

            if(me.data().data){
                X.render({
                    txt_name: function (node) {
                        var conf = G.class.getItem(me.data().data.t, me.data().data.a);
                        node.setString(conf.name);
                    },
                    ico: function (node) {
                        var wid = G.class.sitem(me.data().data);
                        wid.setPosition(cc.p(node.width / 2,node.height / 2));
                        wid.num.hide();
                        node.removeAllChildren();
                        node.addChild(wid);
                    },
                    panel_wp: function (node) {
                        node.show();
                    },
                    txt_yysl:X.STR(L('CUR_OWN_X'), me.mynum),
                },view.nodes);
            }else{
                view.nodes.txt_nr.show();
                X.render({
                    txt_nr: me.data().intr
                },view.nodes);
            }

            // X.render({
            //     txt_nr: function (node) {
            //         var myNum = me.mynum;
            //         var str = X.STR(L('CUR_OWN_X'), myNum);
            //         var rh = new X.bRichText({
            //             size:20,
            //             maxWidth:node.width,
            //             lineHeight:32,
            //             color:G.gc.COLOR.n5
            //         });
            //         rh.text(str);
            //         rh.setPosition(cc.p(0,node.height - 10));
            //         node.removeAllChildren();
            //         node.addChild(rh);
            //         node.show();
            //     },
            // },view.nodes);

            me.setCount(1);
        },
        setCount: function (v) {
            var me = this;
            var view = me._view;
            var maxBuy = me.data().maxBuy; // 最多可购买数量
            var need = me.data().need.n;
            var num = maxBuy || 999999999;

            if (v < 0 && me._count == 1)return;
            if (v > 10 && me._count == num)return;
            me._count += v;
            if (me._count < 0) me._count = 1;
            if (me._count > num ) me._count = num;

            view.nodes.txt_cs.setString(me._count);
            me.setXiaohao(need * me._count);
        },
        setXiaohao: function(count){
            var me = this;
            var view = me._view;

            var lay = view.nodes.txt_xh1;
            var img = new ccui.ImageView();
            img.loadTexture(G.class.attricon.getById(me.data().need.t).ico, ccui.Widget.PLIST_TEXTURE);
            var rt = new X.bRichText({
                size: 20,
                maxWidth: lay.width,
                lineHeight: 28,
                color:G.gc.COLOR.n12,
            });
            rt.text.apply(rt,[X.STR(L('<font node=1></font>{1}'), count), img]);
            rt.setAnchorPoint(0, 1);
            rt.setPosition(cc.p(lay.width*0.5 - rt.trueWidth()*0.5, lay.height));
            lay.removeAllChildren();
            lay.addChild(rt);
            lay.show();
        },
        bindBtn: function () {
            var me = this;
            var view = me._view;

            // 购买
            view.nodes.btn_gm.click(function(){
                var callback = me.data().callback;
                callback && callback(me._count);
                me.remove();
            });

            // 减
            view.nodes.btn_jian1.click(function(){
                me.setCount(-1);
            });

            // 减10
            view.nodes.btn_jian10.click(function(){
                me.setCount(-10);
            });

            // 加
            view.nodes.btn_jia1.click(function(){
                me.setCount(1);
            });

            // 加10
            view.nodes.btn_jia10.click(function(){
                me.setCount(10);
            });

        },
        onOpen: function () {
            var me = this;

            // me.ui.render({
            //     top_title: me.data().title
            // });
        },
        onShow: function () {
            var me = this;
            me._count = 0;

            me.mynum = me.data().mynum;
            X.render({
                btn_gb: function (node) {
                    node.click(function (sender, type) {
                        me.remove();
                    });
                },
                top_title:L('PILIANG') + L('GOUMAI') ,
            }, me.nodes);

            new X.bView('ui_tip_plgm.json', function (view) {
                me._view = view;
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
                me.bindBtn();
            });
        },
        onRemove: function () {
        }
    });

    G.frame[ID] = new fun('ui_tip1.json', ID);
})();

;;/**
 * Created by Zhangming on 2018-03-14
 */
(function () {
    //通用奖励预览
    var ID = 'ui_tip_prize';
    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        setContents: function () {
            var me = this;

            var data = this.data();
            me.ui.render({
                // 标题, (查看奖励, 领取奖励)
                top_title: data.title || L('showPrizeTxt'),
            });

            // 奖励描述
            me.setRT(me.view.nodes.panel_title, data.intr || '');
            
            var prize = [].concat(data.prize || []);
            var listView = me.view.nodes.listview;
            listView.removeAllChildren();
            for (var i = 0; i < prize.length; i++){
                var p = G.class.sitem(prize[i], true);
                p.setScale(0.8);
                // p.setPosition(cc.p(ui.width / 2, ui.height / 2));
                p.setTouchEnabled(true);
                p.setSwallowTouches(false);
                p.touch(function (sender, type) {
                    if (type == ccui.Widget.TOUCH_NOMOVE){
                        G.frame.iteminfo.data(sender).show();
                    }
                });
                listView.pushBackCustomItem(p);
            }
        },
        setRT: function(lay, str){
            var me = this;

            var rt = new X.bRichText({
                size: 24,
                maxWidth: lay.width,
                lineHeight: 24,
                color:G.gc.COLOR.n5
            });
            rt.text(str);
            rt.setPosition(cc.p( (lay.width-rt.trueWidth())*0.5, lay.height - rt.trueHeight() ));
            lay.removeAllChildren();
            lay.addChild(rt);
        },
        bindUI: function () {
            var me = this;

            me.ui.nodes.btn_gb.click(function () {
                me.remove();
            });

            var btns = me.data().btns || {
                count:1,
                colors:['btn_lan.png'],
                titles:[L('BTN_OK')],
                funs:[
                  function(){
                    me.remove();
                  }
                ]
            };
            if(btns){
                X.addBtn(me.view.nodes.panel_btn, {
                    count: btns.count,
                    texture: btns.colors, // ['btn_lan.png', 'btn_hong.png']
                    title: btns.titles, // [L('BTN_OK')],
                    callback: btns.funs
                });
            }
        },
        onOpen: function () {
            var me = this;

            new X.bView('ui_tip_tishi3.json', function (view) {
                me.view = view;
                me.ui.nodes.panel_nr.addChild(view);
                me.bindUI();
                me.setContents();
            })
        },
    });

    G.frame[ID] = new fun('ui_tip1.json', ID);
})();
;;/**
 * Created by LYF on 2018/8/14.
 */
(function () {
    //我要变强
    var ID = 'woyaobianqiang';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;

            me.ui.nodes.mask.click(function(sender,type){
                me.remove();
            });

            me.nodes.tip_title.setString(L('UI_TITLE_WYBQ'));
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView("woyaobianqiang.json", function (view) {
                me._view = view;
                me._view.nodes.scrollview_xuanshangrenwu.hide();

                cc.enableScrollBar(me._view.nodes.listview_xuanshangrenwu);
                cc.enableScrollBar(me._view.nodes.scrollview_xuanshangrenwu);

                me.ui.nodes.panel_nr.addChild(view);
                X.viewCache.getView("woyaobianqiang_list.json", function (node) {
                    me.list = node.finds("list_nr");
                    me.setContents();
                    me.ui.setTimeout(function(){
                        G.guidevent.emit('woyaobainqiangOpenOver');
                    },200);
                })
            })
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var conf = G.class.getConf("woyaobianqiang");
            var keys = X.keysOfObject(conf);

            for(var i = 0; i < keys.length; i ++) {
                if(conf[keys[i]].checkLv) {
                    if(P.gud.lv < conf[keys[i]].checkLv) {
                        keys.splice(i, 1);
                        break;
                    }
                }
            }

            for(var i = 0; i < keys.length; i ++) {
                me._view.nodes.listview_xuanshangrenwu.pushBackCustomItem(me.setItem(conf[keys[i]], me.list.clone(), i));
            }
        },
        setItem: function(data, ui, idx) {
            X.autoInitUI(ui);

            var me = this;

            ui.nodes.tubiao.loadTexture("img/woyaobianqiang/" + data.img, 1);
            ui.finds("Image_2").loadTexture("img/woyaobianqiang/" + data.typeimg, 1);
            ui.finds("wz_biaoti").setString(data.title);

            var text = "";
            if(data.touchText.length > 1) {
                text = X.STR(data.content,
                    "<font color=#324cae" + " onclick=G.frame.woyaobianqiang.showTujing(this,0)>" + data.touchText[0] +"</font>",
                    "<font color=#324cae" + " onclick=G.frame.woyaobianqiang.showTujing(this,1)>" + data.touchText[1] +"</font>")
            }else {
                text = X.STR(data.content,
                    "<font color=#324cae" + " onclick=G.frame.woyaobianqiang.showTujing(this,0)>" + data.touchText[0] +"</font>");
            }

            var rh = new X.bRichText({
                size: 24,
                maxWidth: ui.nodes.wz_neirong.width,
                lineHeight: 32,
                color: "#be5e30",
                family: G.defaultFNT
            });
            rh.tconf = data.Texttujing;
            rh.text(text);
            rh.setAnchorPoint(0, 1);
            rh.setPosition(0, ui.nodes.wz_neirong.height);
            ui.nodes.wz_neirong.addChild(rh);

            if(idx == 0) {
                //映射引导按钮
                G.frame.woyaobianqiang.btn_on = ui.nodes.btn2_on;
            }
            ui.nodes.btn2_on.click(function () {
                me.remove();
                X.tiaozhuan(data.tujing);
            });

            return ui;
        },
        showTujing: function (target, idx) {
            G.frame.qianwang.data(target.tconf[idx]).show();
        }
    });
    G.frame[ID] = new fun('ui_tip7.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/24.
 */
 (function () {
    //宝石-升级
    var ID = 'baoshi_shengji';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            setPanelTitle(me.ui.nodes.txt_title,L('SHENGJI'));

        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if(me.isAniShow) return;
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('zhuangbei_shengji.json', function (view) {
                me._view = view;

                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me._view.nodes.text_sl.setPositionX(me._view.nodes.image_zs.getPositionX());

                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setCenter();
            me.setXh();
        },
        setCenter: function () {
            var me = this;

            var panel = me._view;
            me.curXbId = G.frame.yingxiong_xxxx.curXbId;
            me.heroData = G.DATA.yingxiong.list[me.curXbId];
            me.bsData = me.heroData.weardata['6'];
            me.curId = X.keysOfObject(me.bsData)[0];
            me.conf = G.class.baoshi.getById(me.curId);

            var conf = me.conf;

            var btnSj = panel.nodes.btn_zs;
            var imgZs = panel.nodes.image_zs;
            var txtZs = panel.nodes.text_sl;
            var checkBox = panel.nodes.checkbox_1;

            btnSj.show();
            checkBox.show();
            panel.finds('text_sd').show();

            var buffid = me.bsData[me.curId];

            var setBuff = function (i) {
                var lay = panel.nodes['panel_' + (i + 1)];
                var layBuff = lay.finds('panel_sx1$');
                var txtName = lay.finds('text_mz1$');
                var layIco = lay.finds('panel_tb1$');

                var arr = [me.curId,me.curId*1 + 1];
                layIco.removeAllChildren();
                layBuff.removeAllChildren();

                var wid = G.class.sbaoshi(arr[i]);
                wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
                wid.setScale(0.5);
                layIco.addChild(wid);

                setTextWithColor(txtName,wid.conf.name,G.gc.COLOR[wid.conf.color == 0 ? 'n4' : wid.conf.color]);
                if(!wid.conf.buff)return;
                var buff = wid.conf.buff[buffid];
                var str = '';
                var buffArr = X.fmtBuff(buff);
                for (var j = 0; j < buffArr.length; j++) {
                    var bObj = buffArr[j];
                    str += bObj.tip + '<br>';
                }
                var rh = new X.bRichText({
                    size:18,
                    maxWidth:layBuff.width,
                    lineHeight:20,
                    family:G.defaultFNT,
                    color:G.gc.COLOR[i == 1 ? 'n7' : 'n4']
                });
                rh.text(str);
                var offsetY = rh.trueHeight();
                rh.setPosition(cc.p(0,layBuff.height - offsetY));
                layBuff.addChild(rh);
            };

            setBuff(0);
            // panel.nodes.img_wzsj.show();
            // btnSj.setTitleText(L('BTN_SHENGJI'));
            // setBuff(1);


            var setBuffState = function (bool) {
                if (bool) {
                    panel.nodes.panel_2.show();
                    panel.nodes.img_wzsj.hide();
                    setBuff(1);
                    btnSj.setTitleText('');
                } else {
                    panel.nodes.panel_2.hide();
                    panel.nodes.img_wzsj.show();
                    btnSj.setTitleText(L('BTN_SHENGJI'));
                }
            };

            var setZs = function (bool) {
                imgZs.setVisible(bool);
                imgZs.setScale(1.1);
                txtZs.setVisible(bool);
            };

            setZs(false);
            txtZs.setString(conf.lockneed[0].n);
            me.needLock = 0;
            checkBox.setSelected(false);
            setBuffState(0);

            checkBox.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var isSelected = cc.sys.isNative;
                    
                    setZs(isSelected == sender.isSelected());
                    me.needLock = isSelected == sender.isSelected() ? 1 : 0;
                    setBuffState(me.needLock);
                }
            });

            btnSj.setTouchEnabled(true);
            btnSj.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    sender.setTouchEnabled(false);
                    G.ajax.send('baoshi_lvup',[me.curXbId,me.needLock],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            // G.tip_NB.show(L('SHENGJI') + L('SUCCESS'));
                            me.playAni(me.ui, function () {
                                G.frame.jiangli.data({
                                    prize:[{a:'baoshi',t:me.curId*1 + 1,n:1}]
                                }).once('show', function () {
                                    G.frame.yingxiong_xxxx.emit('updateInfo');
                                    if (me.curId * 1 == G.class.baoshi.getMaxLen() - 1) {
                                        me.ui.setTimeout(function () {
                                            me.remove();
                                        }, 500);
                                    }else{
                                        if(me.needLock){
                                         me.setContents();
                                         checkBox.setSelected(true);
                                         setBuffState(true); 
                                         setZs(true);
                                         txtZs.setString(conf.lockneed[0].n);
                                         me.needLock = true;
                                     }else{
                                        me.setContents();
                                    }
                                }
                            }).show();
                            });
                        } else {
                            sender.setTouchEnabled(true);
                        }
                    },true);
                }
            });
        },
        //消耗
        setXh: function () {
            var me = this;

            var view = me._view;

            var conf = me.conf;
            var need = conf.lvupneed;

            for (var i = 0; i < need.length; i++) {
                var nneed = need[i];
                var layAttr = view.nodes['panel_token' + (i + 1)];
                var txtAttr = view.nodes['txt_sz' + (i + 1)];

                layAttr.setBackGroundImage(G.class.getItemIco(nneed.t),1);
                var ownNum = G.class.getOwnNum(nneed.t,nneed.a);
                setTextWithColor(txtAttr,X.fmtValue(ownNum) + '/' + X.fmtValue(nneed.n),G.gc.COLOR[ownNum >= nneed.n ? 'n8' : 'n16']);
                X.enableOutline(txtAttr,cc.color(ownNum >= nneed.n ? '#000000' : '#740000'),1);
            }
        },
        playAni: function (panel, callback) {
            var me = this;
            me.isAniShow = true;
            G.class.ani.show({
                json: "ani_baoshishenji",
                addTo: panel,
                x: panel.width / 2,
                y: panel.height / 2,
                repeat: false,
                autoRemove: true,
                onend: function (node, action) {
                    callback && callback();
                    me.isAniShow = false;
                }
            });
        }
    });

G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/24.
 */
(function () {
    //宝石-详情
    var ID = 'baoshi_xq';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.finds('panel_1').touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.curType = '6';
            me.curXbId = G.frame.yingxiong_xxxx.curXbId;
            me.bsData = G.DATA.yingxiong.list[me.curXbId].weardata[me.curType];
            me.curId = X.keysOfObject(me.bsData)[0];
            me.conf = G.class.baoshi.getById(me.curId);


            new X.bView('zhuangbei_tip1.json', function (view) {
                me._view = view;

                me.defHeight = me._view.height;
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
                view.setTouchEnabled(true);
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;


            me.setTop();
            me.setBtns();
        },
        setTop: function () {
            var me = this;

            var panel = me._view;
            var conf = me.conf;

            var btnHqtj = panel.nodes.btn_hqtj;
            var layIco = panel.nodes.panel_1;
            var layBuff = panel.nodes.panel_2;
            var txtName = panel.nodes.text_1;
            var txtType = panel.nodes.text_2;
            var txtHqtj = panel.finds('text_hqtj');
            var layYx = panel.nodes.panel_4;

            layIco.removeAllChildren();
            layBuff.removeAllChildren();
            layYx.removeAllChildren();

            var heroData = G.DATA.yingxiong.list[me.curXbId];
            // 英雄
            var hero = G.class.shero(heroData);
            hero.setPosition(cc.p(layYx.width / 2,layYx.height / 2));
            layYx.addChild(hero);

            //头像
            var wid = G.class.sbaoshi(me.curId);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);

            // 名字
            setTextWithColor(txtName,conf.name,G.gc.COLOR[conf.color || 1]);
            // 类型
            txtType.setString(L('ZHUANGBEI_TYPE')+L('ZHUANGBEI_TYPE_' + me.curType));

            // buff
            //var buffArr = X.fmtBuff(me.conf.buff[me.bsData.buff]);
            var buffArr = X.fmtBuff(wid.conf.buff[me.bsData[me.curId]]);
            var str = '';
            for (var i = 0; i < buffArr.length; i++) {
                var buff = buffArr[i];
                str += buff.tip + '<br>';
            }
            var rh = new X.bRichText({
                size:22,
                maxWidth:layBuff.width,
                lineHeight:34,
                family:G.defaultFNT,
                color:G.gc.COLOR.n5
            });
            str += '<br><font size=20>' + ' ' + '</font>';
            rh.text(str);
            // var offsetY = rh.trueHeight() + 50;
            // panel.nodes.panel_bg.height += offsetY;
            // ccui.helper.doLayout(panel.nodes.panel_bg);
            var offsetY = rh.trueHeight();
            panel.nodes.panel_bg.setContentSize( cc.size(panel.nodes.panel_bg.width,panel.nodes.panel_bg.height + offsetY + panel.nodes.panel_3.height + 10));
            ccui.helper.doLayout( panel.nodes.panel_bg);

            rh.setPosition(cc.p(0, -20));
            layBuff.addChild(rh);
        },
        setBtns: function () {
            var me = this;

            var panel = me._view;
            var layBtns = panel.nodes.panel_3;

            layBtns.removeAllChildren();

            var state2num = {
                btns:[
                    {
                        setBtn: function (item) {
                            // 转换
                            item.setTitleText(L('BTN_ZHUANHUAN'));
                            item.setTitleColor(cc.color(G.gc.COLOR.n12));
                            item.touch(function (sender, type) {
                                if (type == ccui.Widget.TOUCH_ENDED) {
                                    G.frame.baoshi_zhuanhuan.once('show',function () {
                                        me.remove();
                                    }).show();
                                }
                            });
                        }
                    },
                    {
                        setBtn: function (item) {
                            //升级
                            item.setTitleText(L('BTN_SHENGJI'));
                            item.setTitleColor(cc.color(G.gc.COLOR.n12));
                            item.touch(function (sender, type) {
                                if (type == ccui.Widget.TOUCH_ENDED) {
                                    G.frame.baoshi_shengji.once('show',function () {
                                        me.remove();
                                    }).show();
                                }
                            });
                        }
                    }
                ]
            };

            if (me.curId * 1 == G.class.baoshi.getMaxLen()) {
                state2num.btns.splice(1, 1);
            }

            var btn = new ccui.Button();
            var img = 'img/public/btn/btn2_on.png';
            btn.loadTextures(img,'','',1);
            btn.setTitleFontName(G.defaultFNT);
            btn.setTitleFontSize(24);
            X.autoLayout_new({
                parent:layBtns,
                item:btn,
                num:state2num.btns.length,
                mapItem: function (item) {
                    var idx = item.idx;
                    var btnsConf = state2num.btns;
                    btnsConf[idx].setBtn(item);
                }
            });

        }
    });

    G.frame[ID] = new fun('panel_nr.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/24.
 */
(function () {
    //宝石-转换
    var ID = 'baoshi_zhuanhuan';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            setPanelTitle(me.ui.nodes.txt_title,L('ZHUANHUAN'));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('zhuangbei_shengji.json', function (view) {
                me._view = view;

                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);

                var btnZh = view.nodes.btn_zh;
                me.defaultPosX = btnZh.getPositionX();

                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setCenter();
            me.setXh();
        },
        setCenter: function () {
            var me = this;

            var panel = me._view;
            me.curXbId = G.frame.yingxiong_xxxx.curXbId;
            me.heroData = G.DATA.yingxiong.list[me.curXbId];
            me.bsData = me.heroData.weardata['6'];
            me.curId = X.keysOfObject(me.bsData)[0];
            me.conf = G.class.baoshi.getById(me.curId);

            var conf = me.conf;

            var btnZh = panel.nodes.btn_zh;
            var btnBc = panel.nodes.btn_bc;
            var imgZs = panel.nodes.image_zs;
            var txtZs = panel.nodes.text_sl;
            var checkBox = panel.nodes.checkbox_1;
            var txtCheckbox = panel.finds('text_sd');
            var imgWeizhi = panel.nodes.img_wzsj;
            var layRight = panel.nodes.panel_2;


            layRight.hide();
            btnZh.show();
            btnBc.hide();
            imgWeizhi.show();

            var setBuff = function (i) {
                var lay = panel.nodes['panel_' + (i + 1)];
                var layBuff = lay.finds('panel_sx1$');
                var txtName = lay.finds('text_mz1$');
                var layIco = lay.finds('panel_tb1$');

                var arr = [me.curId,me.curId];
                layIco.removeAllChildren();
                layBuff.removeAllChildren();

                var wid = G.class.sbaoshi(arr[i]);
                wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
                wid.setScale(0.5);
                layIco.addChild(wid);

                setTextWithColor(txtName,wid.conf.name,G.gc.COLOR[wid.conf.color == 0 ? 'n4' : wid.conf.color]);

                var buffid = [me.bsData[me.curId],me.nextId][i];
                var buff = conf.buff[buffid];

                // buff = {
                //     atk:10,
                //     hp:10,
                //     def:10,
                // };
                var str = '';
                var buffArr = X.fmtBuff(buff);
                for (var j = 0; j < buffArr.length; j++) {
                    var bObj = buffArr[j];
                    str += bObj.tip + '<br>';
                }
                var rh = new X.bRichText({
                    size:22,
                    maxWidth:layBuff.width,
                    lineHeight:20,
                    family:G.defaultFNT,
                    color:G.gc.COLOR[i == 1 ? 'n7' : 'n4']
                });
                rh.text(str);
                rh.setPosition(cc.p(0,layBuff.height - rh.trueHeight()));
                layBuff.addChild(rh);
            };

            setBuff(0);
            if (me.needBaocun) {
                setBuff(1);
                imgWeizhi.hide();
                layRight.show();
            }
            // setBuff(1);

            var setZs = function (bool) {
                imgZs.setVisible(bool);
                txtZs.setVisible(bool);
            };

            setZs(false);
            checkBox.hide();
            txtCheckbox.hide();


            if (me.needBaocun) {
                btnZh.setPositionX(me.defaultPosX);
                btnBc.show();
            } else {
                btnZh.setPositionX(btnZh.getParent().width / 2);
            }

            //置换
            btnZh.setTouchEnabled(true);
            btnZh.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    sender.setTouchEnabled(true);
                    G.ajax.send('baoshi_buffchange',[me.curXbId],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            me.needBaocun = true;
                            me.nextId = d.d.buffid;
                            me.playAni(me.ui, function () {
                                // G.tip_NB.show(L('YZH'));
                                me.setContents();
                            });
                        } else {
                            sender.setTouchEnabled(true);
                        }
                    },true);
                }
            });

            //保存
            btnBc.setTouchEnabled(true);
            btnBc.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    // if (me.needBaocun) delete me.needBaocun;
                    // me.playAni(me.ui, function () {
                    //     me.setContents();
                    // });
                    sender.setTouchEnabled(false);
                    G.ajax.send('baoshi_buffsave',[me.curXbId],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            if (me.needBaocun) delete me.needBaocun;
                            // G.tip_NB.show(L('BAOCUN') + L('SUCCESS'));
                            me.setContents();
                            // me.playAni(me.ui, function () {
                            //
                            // });
                        } else {
                            sender.setTouchEnabled(true);
                        }
                    },true);
                }
            });
        },
        //消耗
        setXh: function () {
            var me = this;

            var view = me._view;

            var conf = me.conf;
            var need = conf.changeneed;

            for (var i = 0; i < need.length; i++) {
                var nneed = need[i];
                var layAttr = view.nodes['panel_token' + (i + 1)];
                var txtAttr = view.nodes['txt_sz' + (i + 1)];

                layAttr.setBackGroundImage(G.class.getItemIco(nneed.t),1);
                var ownNum = G.class.getOwnNum(nneed.t,nneed.a);
                //setTextWithColor(txtAttr,X.fmtValue(ownNum) + '/' + X.fmtValue(nneed.n),G.gc.COLOR[ownNum > nneed.n ? 'white' : 5]);
                setTextWithColor(txtAttr,X.fmtValue(ownNum) + '/' + X.fmtValue(nneed.n),G.gc.COLOR[ownNum >= nneed.n ? 'n8' : 'n16']);
                X.enableOutline(txtAttr,cc.color(ownNum >= nneed.n ? '#000000' : '#740000'),1);
            }
        },
        playAni: function (panel, callback) {
            var me = this;
            G.class.ani.show({
                json: "ani_baoshishenji",
                addTo: me.ui,
                x: me.ui.width / 2,
                y: me.ui.height / 2,
                repeat: false,
                autoRemove: true,
                onend: function (node, action) {
                    callback && callback();
                }
            });
        }
    });

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by zhangming on 2018-05-14
 */

G.event.on('itemchange_over', function (data) {
    var isSuiPian = false;
    var keys = X.keysOfObject(data);
    for (var i in keys) {
        var conf = G.class.getItem(data[keys[i]].itemid);
        if (conf && conf.bagtype == "3") {
            isSuiPian = true;
            break;
        }
    }
    if (isSuiPian) {
        G.hongdian.checkSuiPian();
        if (G.frame.beibao.isShow) {
            G.frame.beibao.checkRedPoint();
        }
    }
});

(function () {
    //背包
    var ID = 'beibao';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f2";
            me.fullScreen = true;
            me.needshowMainMenu = true;
            me._super(json, id, {action: true});
        },
        changeType: function (sender) {
            var me = this;
            var type = sender.data.id;
            me._curType = type;

            var viewConf = {
                "1": G.class.beibao_list,
                "2": G.class.beibao_list,
                "3": G.class.beibao_list,
                "4": G.class.beibao_list,
                "5": G.class.beibao_list,
            };

            var newView = new viewConf[type];
            newView.setVisible(false);
            newView._type = type;
            me.ui.nodes.panel_nr.addChild(newView);

            if(cc.isNode(me._panels)) {
                me.playBookAni(function () {
                    me._panels.removeFromParent();
                    me._panels = newView;
                    me._panels.setVisible(true);
                    cc.callLater(function () {
                        G.guidevent.emit('beibaoChangeTypeOver', type);
                    });
                })
            }else {
                me.playBookAni(function () {
                    me._panels = newView;
                    me._panels.setVisible(true);
                })
            }
        },
        playBookAni: function(callback, type) {
            var me = this;

            callback && callback();
            // G.class.ani.show({
            //     json: "ani_fanshu",
            //     addTo: me.nodes.panel_fydh,
            //     x: me.nodes.panel_fydh.width / 2,
            //     y: me.nodes.panel_fydh.height / 2,
            //     repeat: false,
            //     autoRemove: true,
            //     onend: function () {
            //
            //     }
            // });
        },
        getCurType: function () {
            var me = this;
            return me._curType;
        },
        bindUI: function () {
            var me = this;

            // 关闭
            // me.ui.nodes.btn_guanbi.click(function(sender,type){
            //     me.remove();
            // });
            var arr = [];
            var btns = G.class.menu.get('beibao');
            for (var i in btns) {
                var btn = me.nodes["page_" + btns[i].id];
                btn.show();
                btn.children[0].setString(btns[i].title);
                if(btns[i].checkLv) {
                    if(P.gud.lv < G.class.opencond.getLvById(btns[i].checkLv)) {
                        btn.checkLv = true;
                        btn.show = X.STR(btns[i].show, G.class.opencond.getLvById(btns[i].checkLv));
                    }
                }
                btn.data = btns[i];
                arr.push(btn);
            }
            X.radio(arr, function (sender) {
                if(sender.disable){
                    G.tip_NB.show(sender.show);
                    return;
                }
                me.changeType(sender);
            }, {
                callback1: function (sender) {
                    sender.children[0].setTextColor(cc.color("#ffffff"));
                    X.enableOutline(sender.children[0], "#001e5b", 2);
                },
                callback2: function (sender) {
                    sender.children[0].setTextColor(cc.color("#af9e89"));
                    X.enableOutline(sender.children[0], "#592e1c", 2);
                }
            });
        },
        onOpen: function () {
            var me = this;

            //setPanelTitle(me.nodes.tip_title, L('UI_TITLE_BEIBAO'));
            me.nodes.tip_title.setBackGroundImage(X.getTitleImg('bb'), 1);
            me.bindUI();
            me.ui.finds("panel_tip").setTouchEnabled(false);
            me.ui.finds("bg_tip_1").zIndex = -2;
        },
        onShow: function () {
            var me = this;

            me.showToper();
            var type;
            if (me.data() && me.data().tztype) {
                type = me.data().tztype;
            } else {
                type = '1';
            }
            me.nodes["page_" + type].triggerTouch(ccui.Widget.TOUCH_ENDED);
            me.checkRedPoint();
            if (cc.isNode(G.view.mainMenu.nodes.btn_beibao.getChildByName("redPoint"))) {
                G.view.mainMenu.nodes.btn_beibao.getChildByName("redPoint").hide();
            }
            G.view.mainMenu.set_fhzc(0);
            G.view.mainMenu.checkRedPoint();
            me.ui.setTimeout(function () {
                G.guidevent.emit('beibaoShowOver');
            }, 500)
        },
        onAniShow: function () {
            var me = this;
        },
        onRemove: function () {
            var me = this;
            me.event.emit('hide');
            if (cc.isNode(G.view.mainMenu.nodes.btn_beibao.getChildByName("redPoint"))) {
                G.view.mainMenu.nodes.btn_beibao.getChildByName("redPoint").show();
            }
        },
        checkRedPoint: function () {
            var me = this;

            if (G.hongdian.checkSuiPian()) {
                G.setNewIcoImg(me.nodes.page_3);
                me.nodes.page_3.getChildByName("redPoint").setPosition(80, 70);
            }
            else G.removeNewIco(me.nodes.page_3);
        }
    });
    G.frame[ID] = new fun('ui_tip5.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/24.
 */
G.event.on('itemchange',function(d){
    var o = X.toJSON(d);
    var tips = [];

    var type = 'item';
    var data = G.frame.beibao.DATA[type];
    G.frame.beibao.oldDATA = G.frame.beibao.oldDATA || {};
    G.frame.beibao.oldDATA[type] = JSON.parse(JSON.stringify(data));

    for(var k in o){
        var d = o[k];
        data.list[k] = data.list[k] || {num:0,n:0,itemid:k};
        if (typeof d == 'object') {
            for(var val in d) {
                data.list[k][val] = d[val];
            }
        } else {
            data.list[k].num = o[k]*1;
            data.list[k].n = o[k]*1;
            data.list[k].itemid = k;
        }

        if (data.list[k].num == 0){
            o[k].itemid = data.list[k].itemid;
            delete data.list[k];
        }
        if (o[k]*1 != 0){
            tips.push(G.gc.COLOR[o[k]*1 > 0 ? 1 : 5] + '|' + (L(k) || G.class.getItem(k).name) + num2str(o[k]*1));
        }
    }

    G.frame.beibao.setItemid2num(o,'item');

    G.frame.beibao.DATA[type] = data;

    G.event.emit('itemchange_over', o);
});

G.event.on("glyphchange", function (d) {
    var o = X.toJSON(d);
    var data = G.frame.beibao.DATA.glyph.list;

    for (var i in o) {
        var d = o[i];

        if(d.num == 0) {
            delete data[i];
        } else {
            if(!data[i]) {
                data[i] = d;
            } else {
                for (var j in d) {
                    data[i][j] = d[j];
                }
            }
            data[i].tid = i;
        }
    }

    G.event.emit('glyphchange_over');
});

G.event.on('shipinchange',function(d){
    var o = X.toJSON(d);
    var tips = [];

    var type = 'shipin';
    var data = G.frame.beibao.DATA[type];
    G.frame.beibao.oldDATA = G.frame.beibao.oldDATA || {};
    G.frame.beibao.oldDATA[type] = JSON.parse(JSON.stringify(data));

    for(var k in o){
        var d = o[k];
        data.list[k] = data.list[k] || {num:0,n:0,spid:k};
        if (typeof d == 'object') {
            for(var val in d) {
                data.list[k][val] = d[val];
            }
        } else {
            data.list[k].num = o[k]*1;
            data.list[k].n = o[k]*1;
            data.list[k].spid = k;
        }

        if(isNaN(data.list[k].num)) {
            data.list[k].num = 0;
        }

        if (data.list[k].num == 0){
            o[k].spid = data.list[k].spid;
            delete data.list[k];
        }
        if (o[k]*1 != 0){
            tips.push(G.gc.COLOR[o[k]*1 > 0 ? 1 : 5] + '|' + (L(k) || G.class.getItem(k,'shipin').name) + num2str(o[k]*1));
        }
    }

    G.frame.beibao.setItemid2num(o,'shipin');
    G.frame.beibao.DATA[type] = data;

    G.event.emit('shipinchange_over');
});

G.event.on('equipchange',function(d){
    var o = X.toJSON(d);
    var tips = [];

    var type = 'zhuangbei';
    var data = G.frame.beibao.DATA[type];
    G.frame.beibao.oldDATA = G.frame.beibao.oldDATA || {};
    G.frame.beibao.oldDATA[type] = JSON.parse(JSON.stringify(data));

    for(var k in o){
        var d = o[k];
        data.list[k] = data.list[k] || {num:0,n:0,eid:k};
        if (typeof d == 'object') {
            for(var val in d) {
                data.list[k][val] = d[val];
            }
            data.list[k].tid = k;
        } else {
            // data.list[k].num = o[k]*1;
            // data.list[k].n = o[k]*1;
            // data.list[k].eid = k;
        }

        if (data.list[k].num == 0){
            o[k].eid = data.list[k].eid;
            delete data.list[k];
        }
        if (o[k]*1 != 0){
            tips.push(G.gc.COLOR[o[k]*1 > 0 ? 1 : 5] + '|' + (L(k) || G.class.getItem(k,'equip').name) + num2str(o[k]*1));
        }
    }

    G.frame.beibao.setItemid2num(o,'zhuangbei');
    G.frame.beibao.DATA[type] = data;

    G.event.emit('equipchange_over');
});


;;/**
 * Created by zhangming on 2018-05-03
 */
(function(){
 // 背包列表
G.class.beibao_list = X.bView.extend({
    extConf:{
        zhuangbei:{
            data: function (type) {
                var data = G.frame.beibao.DATA.zhuangbei.list;
                var keys = X.keysOfObject(data);

                var arr = [];
                if (type == -1) {
                    for (var i = 0; i < keys.length; i++) {
                        var tid = keys[i];
                        var d = data[tid];
                        var useNum = d.usenum || 0;
                        if (d.num > useNum) {
                            arr.push(tid);
                        }
                    }
                } else {
                    for (var i = 0; i < keys.length; i++) {
                        var tid = keys[i];
                        var d = data[tid];
                        var useNum = d.usenum || 0;
                        var conf = G.class.equip.getById(d.eid);
                        if (conf.color == type && d.num > useNum) {
                            arr.push(tid);
                        }
                    }
                }

                return arr;
            },
            sort: function (a,b) {
                var dataA = G.frame.beibao.DATA.zhuangbei.list[a];
                var dataB = G.frame.beibao.DATA.zhuangbei.list[b];
                var confA = G.class.equip.getById(dataA.eid);
                var confB = G.class.equip.getById(dataB.eid);

                if (confA.color != confB.color) {
                    return confA.color > confB.color ? -1 : 1;
                } else {
                    return confA.star > confB.star ? -1 : 1;
                }
            }
        },
        item:{
            data: function (type) {
                var data = G.frame.beibao.DATA.item.list;
                var keys = X.keysOfObject(data);

                var arr = [];
                if (type == -1) {
                    for (var i = 0; i < keys.length; i++) {
                        var tid = keys[i];
                        var d = data[tid];
                        var conf = G.class.getItem(d.itemid,'item');
                        if (conf.bagtype == '2') {
                            arr.push(tid);
                        }
                    }
                } else {
                    for (var i = 0; i < keys.length; i++) {
                        var tid = keys[i];
                        var d = data[tid];
                        var conf = G.class.getItem(d.itemid,'item');
                        if (conf.bagtype == '2' && conf.color == type) {
                            arr.push(tid);
                        }
                    }
                }

                return arr;
            },
            sort: function (a,b) {
                var dataA = G.frame.beibao.DATA.item.list[a];
                var dataB = G.frame.beibao.DATA.item.list[b];
                var confA = G.class.getItem(dataA.itemid);
                var confB = G.class.getItem(dataB.itemid);

                if (confA.usetype != confB.usetype) {
                    return confA.usetype * 1 < confB.usetype * 1 ? -1 : 1;
                } else if (confA.color != confB.color) {
                    return confA.color > confB.color ? -1 : 1;
                } else {
                    return confA.itemid * 1 < confB.itemid * 1 ? -1 : 1;
                }
            }
        },
        suipian:{
            data: function (type) {
                var data = G.frame.beibao.DATA.item.list;
                var keys = X.keysOfObject(data);
                var heroData = [];
                var arr = [];
                if (type == -1) {
                    for (var i = 0; i < keys.length; i++) {
                        var tid = keys[i];
                        var d = data[tid];
                        var conf = G.class.getItem(d.itemid,'item');
                        if (conf.bagtype == '3') {
                            arr.push(tid);
                        }
                    }
                    for(var i = 0; i < keys.length; i ++){
                        heroData.push(G.frame.beibao.DATA.item.list[keys[i]]);
                        if(!heroData[i].tid) heroData[i].tid = keys[i];
                    }
                } else {
                    for (var i = 0; i < keys.length; i++) {
                        var tid = keys[i];
                        var d = data[tid];
                        var conf = G.class.getItem(d.itemid,'item');
                        if (conf.bagtype == '3' && conf.color == type) {
                            arr.push(tid);
                        }
                    }
                }

                return arr;
            },
            sort: function (a,b) {
                var dataA = G.frame.beibao.DATA.item.list[a];
                var dataB = G.frame.beibao.DATA.item.list[b];
                var confA = G.class.getItem(dataA.itemid);
                var confB = G.class.getItem(dataB.itemid);

                var hcheroA = confA.hchero ? 1 : 0;
                var hcheroB = confB.hchero ? 1 : 0;
                var isHcA = dataA.num >= confA.hcnum ? 0 : 1;
                var isHcB = dataB.num >= confB.hcnum ? 0 : 1;
                if (isHcA != isHcB) {
                    return isHcA < isHcB ? -1 : 1;
                } else if (hcheroA != hcheroB) {
                    return hcheroA * 1 < hcheroB * 1 ? -1 : 1;
                } else if (confA.color != confB.color) {
                    return confA.color > confB.color ? -1 : 1;
                } else {
                    return confA.itemid * 1 < confB.itemid * 1 ? -1 : 1;
                }
            }
        },
        shipin:{
            data: function (type) {
                var data = G.frame.beibao.DATA.shipin.list;
                var keys = X.keysOfObject(data);

                var arr = [];
                if (type == -1) {
                    arr = arr.concat(keys);
                } else {
                    for (var i = 0; i < keys.length; i++) {
                        var tid = keys[i];
                        var d = data[tid];
                        var conf = G.class.shipin.getById(d.spid);
                        if (conf.color == type) {
                            arr.push(tid);
                        }
                    }
                }

                return arr;
            },
            sort: function (a,b) {
                var dataA = G.frame.beibao.DATA.shipin.list[a];
                var dataB = G.frame.beibao.DATA.shipin.list[b];
                var confA = G.class.shipin.getById(dataA.spid);
                var confB = G.class.shipin.getById(dataB.spid);

                if (confA.color != confB.color) {
                    return confA.color > confB.color ? -1 : 1;
                } else {
                    return confA.star * 1 > confB.star * 1 ? -1 : 1;
                }
            }
        },
        glyph: {
            data: function (type) {
                var data = G.frame.beibao.DATA.glyph.list;
                var keys = X.keysOfObject(data);

                var arr = [];
                if (type == -1) {
                    for (var i in keys) {
                        if(!data[keys[i]].isuse) arr.push(keys[i]);
                    }
                } else {
                    for (var i = 0; i < keys.length; i++) {
                        var tid = keys[i];
                        var d = data[tid];
                        var conf = G.class.glyph.getById(d.gid);
                        if (conf.color == type && !d.isuse) {
                            arr.push(tid);
                        }
                    }
                }

                return arr;
            },
            sort: function (a, b) {
                var dataA = G.frame.beibao.DATA.glyph.list[a];
                var dataB = G.frame.beibao.DATA.glyph.list[b];
                var confA = G.class.glyph.getById(dataA.gid);
                var confB = G.class.glyph.getById(dataB.gid);

                if (confA.color != confB.color) {
                    return confA.color > confB.color ? -1 : 1;
                } else {
                    return dataA.lv * 1 > dataB.lv * 1 ? -1 : 1;
                }
            }
        }
    },
    ctor: function (type) {
        var me = this;
        me._type = type;
        me._super('beibao.json');
    },
    bindBTN:function() {
        var me = this;


    },
    onOpen: function () {
        var me = this;
        me.bindBTN();
    },
    onShow : function(){
        var me = this;


        me.needScroll = true;
        me.createMenu();
    },
    onNodeShow : function(){
        var me = this;
    },
    onRemove: function () {
        var me = this;
    },
    createMenu: function(){
        var me = this;
        me._menus = [];

        var color2png = {
            1:1,
            2:6,
            3:2,
            4:3,
            5:4,
            6:5,
            7:7
        };

        for(var i=1;i<8;i++){
            var panel = me.nodes['panel_' + i];
            var list_ico = me.nodes.list_ico.clone();
            X.autoInitUI(list_ico);
            list_ico.nodes.panel_pj.setBackGroundImage('img/public/ico/ico_pj' + color2png[i] + '.png', 1);
            list_ico.nodes.panel_pj.setTouchEnabled(false);
            list_ico.setTouchEnabled(true);
            list_ico.data = i - 2;

            list_ico.click(function(sender, type){
                for(var j=0;j<me._menus.length;j++){
                    var node = me._menus[j];
                    var img = "img/public/ico/ico_pj" + color2png[node.data + 2] + ".png";
                    if(node.data == sender.data){
                        if(me.effect) X.audio.playEffect("sound/dianji.mp3", false);
                        me.effect = true;
                        img = "img/public/ico/ico_pj" + color2png[node.data + 2] + "_g.png";
                        if(sender.ani){
                            sender.ani.show();
                        }else{
                            G.class.ani.show({
                                json: "ani_guangbiaoqiehuan",
                                addTo: sender,
                                x: sender.width / 2,
                                y: sender.height / 2,
                                repeat: true,
                                autoRemove: false,
                                onload: function(node){
                                    sender.ani = node;
                                }
                            })
                        }
                    }else{
                        if(node.ani) node.ani.hide();

                    }
                    node.nodes.panel_pj.setBackGroundImage(img, 1);
                }

                G.frame.beibao.curType = sender.data;
                me.needScroll = true;
                me.setContents();
            });

            list_ico.show();
            list_ico.setAnchorPoint(0.5,0.5);
            list_ico.setPosition(cc.p(panel.width*0.5, panel.height*0.5));
            panel.addChild(list_ico);

            me._menus.push(list_ico);
            list_ico.show();
        }

        var type = G.frame.beibao.curType != undefined ? G.frame.beibao.curType + 1 : 0;
        me._menus[type].triggerTouch(ccui.Widget.TOUCH_ENDED);
    },
    refreshPanel: function(){
        var me = this;

        me.needScroll = false;
        me.setContents();
    },
    setContents: function () {
        var me = this;

        var panel = me.ui;
        var scrollview = me.nodes.scrollview;
        cc.enableScrollBar(scrollview);
        scrollview.removeAllChildren();
        me.nodes.list.hide();

        var obj = {
            1:'zhuangbei',
            2:'item',
            3:'suipian',
            4:'shipin',
            5: "glyph"
        };
        var data = me.extConf[obj[me._type]].data(G.frame.beibao.curType);

        cc.isNode(panel.finds('img_zwnr')) && panel.finds('img_zwnr').hide();
        if (data.length < 1) {
            cc.isNode(panel.finds('img_zwnr')) && panel.finds('img_zwnr').show();
            return;
        }

        data.sort(me.extConf[obj[me._type]].sort);

        
        G.frame.beibao._firstItem = null;
        
        var table = me.table = new X.TableView(scrollview,me.nodes.list,4, function (ui, data) {
            me.setItem(ui, data);
        },null,null,me._type == '3' ? 31 : 12 ,5);
        table.setData(data);
        table.reloadDataWithScroll(true);
    },

    setItem: function (ui, data) {
        var me = this;

        if (data == null) {
            ui.hide();
            return;
        }
        var obj = {
            1:{
                type:'zhuangbei',
                a:'equip'
            },
            2:{
                type:'item',
                a:'item'
            },
            3:{
                type:'item',
                a:'item'
            },
            4:{
                type:'shipin',
                a:'shipin'
            },
            5: {
                type: "glyph",
                a: "glyph"
            }
        }
        ;
        var itemData = X.clone(G.frame.beibao.DATA[obj[me._type].type].list[data]);
        X.autoInitUI(ui);
        var layIco = ui.nodes.ico;
        layIco.removeAllChildren();

        itemData.a = obj[me._type].a;
        itemData._type = me._type;
        var widget = G.class.sitem(itemData);
        
        //映射出去便于新手指导
        if(G.frame.beibao._firstItem==null){
        	G.frame.beibao._firstItem = ui;
        }
        
        // widget.setScale(0.8);
        widget.setAnchorPoint(0.5,0.5);
        widget.setPosition(cc.p( layIco.width / 2, layIco.height / 2));
        layIco.addChild(widget);
        layIco.setTouchEnabled(false);

        if (me._type == '3') {
            widget.num.hide();
            var jdtBg = new ccui.Layout();
            jdtBg.setName('jdtBg');
            jdtBg.setBackGroundImage('img/public/jdt/img_sp_jdt_bg.png',1);
            jdtBg.setAnchorPoint(cc.p(0.5,0.5));
            jdtBg.setPosition(cc.p(widget.width / 2,-13));
            widget.addChild(jdtBg);

            var jdt = new ccui.LoadingBar();
            jdt.loadTexture('img/public/jdt/img_sp_jdt2.png',1);
            jdt.setPosition(widget.width / 2,-13);
            jdt.setName('jdt');
            widget.addChild(jdt);

            if (widget.data.num >= widget.conf.hcnum * 1) {
                jdt.setPercent(100);
                jdt.loadTexture('img/public/jdt/img_sp_jdt.png',1);
            } else {
                jdt.setPercent(Math.floor(widget.data.num / widget.conf.hcnum * 100));
            }

            var txtJdt = new ccui.Text('0/0','',14);
            txtJdt.setName('txtJdt');
            txtJdt.setFontName(G.defaultFNT);
            txtJdt.setString(widget.data.num + '/' + widget.conf.hcnum);
            txtJdt.setPosition(cc.p(widget.width / 2,-13));
            txtJdt.setAnchorPoint(cc.p(0.5,0.5));
            X.enableOutline(txtJdt,'#66370e');
            widget.addChild(txtJdt);
        }
        ui.data = itemData;
        ui.id = data;
        
        if(me._type != 5) {
            G.frame.iteminfo.showItemInfo(ui);
        } else {
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.click(function (sender) {
                G.frame.diaowen_sx.data(sender.id).show();
            });
        }
        ui.show();
    },

});

})();
;;/**
 * Created by wfq on 2018/5/23.
 */
(function () {
    var _fun = {
        // 背包数据
        getData: function (callback) {
            var me = this;

            G.ajax.send('item_getlist',[],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    me.DATA = {};
                    me.DATA.item = d.d;
                    me.setItemid2num(d.d.list,'item');
                    callback && callback();
                }
            });
        },
        //装备数据
        getZbData: function (callback) {
            var me = this;

            G.ajax.send('equip_getlist',[],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    me.DATA = me.DATA || {};
                    me.DATA.zhuangbei = d.d;
                    me.setItemid2num(d.d.list,'zhuangbei');
                    callback && callback();
                }
            });
        },
        //饰品数据
        getShipinData: function (callback) {
            var me = this;
            
            G.ajax.send('shipin_getlist',[],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    me.DATA = me.DATA || {};
                    me.DATA.shipin = d.d;
                    me.setItemid2num(d.d.list,'shipin');
                    callback && callback();
                }
            });
        },
        getGlyphData: function(callback) {
            var me = this;

            G.ajax.send('glyph_getlist',[],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    me.DATA = me.DATA || {};
                    me.DATA.glyph = d.d;
                    for (var i in me.DATA.glyph.list) {
                        me.DATA.glyph.list[i].tid = i;
                    }
                    callback && callback();
                }
            });
        },
        getItemInfo: function (tid) {
            var me = this;

            return me.DATA.item.list[tid];
        },
        //通过itemid对应的数量
        setItemid2num: function (d,type) {
            var me = this;

            var obj = {
                zhuangbei:'eid',
                item:'itemid',
                shipin:'spid',
                glyph: "glyphid"
            };
            me.DATA.item2num = me.DATA.item2num || {};
            me.DATA.item2num[type] = me.DATA.item2num[type] || {};

            for (var tid in d) {
                var data = d[tid];
                me.DATA.item2num[type][data[obj[type]]] = data.num;
            }
        },
        getItemNum: function (id) {
            var me = this;

            var a = me.getItemInfo(id);
            return a ? a.num : 0;
        },
        getItemNumByTypeid: function (id,type) {
            var me = this;

            type = type || 'item';

            return me.DATA.item2num[type][id];
        }
    };

    for (var key in _fun) {
        G.frame.beibao[key] = _fun[key];
    }
})();
;;/**
 * Created by lsm on 2018/6/29.
 */
(function () {
    //充值
    var ID = 'chongzhi';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
            me.preLoadRes = ["sale.png", "sale.plist"]
        },
        initUi: function () {
            var me = this;
            me.nodes.btn_quota.getChildren()[0].setString(L("MRXG"));
            var bntns = [me.nodes.btn_topup,me.nodes.btn_quota,me.nodes.btn_giftbag,me.nodes.btn_dailystore];
            me.nodes.btn_topup.setEnabled(true);
            me.ui.nodes.panel_nr.setTouchEnabled(true);
            X.radio(bntns, function (sender) {
                var name = sender.getName();

                var name2type = {
                    btn_topup$:'1',
                    btn_quota$:'2',
                    btn_giftbag$:'3',
                    btn_dailystore$:'4',
                };
                for(var i in bntns){
                    if(cc.isNode(bntns[i].getChildByName("redPoint"))){
                        bntns[i].getChildByName("redPoint").show();
                    }
                }
                if(cc.isNode(sender.getChildByName("redPoint"))){
                    sender.getChildByName("redPoint").hide();
                }
                me.changeType(name2type[name]);
            },{
                callback1: function(sender) {
                    sender.getChildren()[0].setTextColor(cc.color('#FFFFFF'));
                    X.enableOutline(sender.getChildren()[0],cc.color('#0a1021'),2);
                }
                //callback2: function (sender) {
                //    btns[j].title.setTextColor(cc.color('#A79682'));
                //    X.enableOutline(btns[j].title,cc.color('#44281d'),2);
                //}
            });

            if(G.tiShenIng){
                cc.each(bntns,function(btn){
                    btn.hide();
                });
            }
        },
        bindBtn: function () {
            var me = this;
            me.nodes.mask.click(function(){
                 me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        show: function(conf) {
            var me = this;
            var _super = this._super;
            this.getData(function() {
                _super.apply(me, arguments);
            })
        },
        onShow: function () {
            var me = this;
            var data = me.data() || {};
            var idx = data.type || 1;
            var btns = [me.nodes.btn_topup, me.nodes.btn_quota, me.nodes.btn_giftbag, me.nodes.btn_dailystore][idx - 1];
            btns.triggerTouch(ccui.Widget.TOUCH_ENDED);
            me.checkRedPoint();

            if(G.tiShenIng){
                var _img = new ccui.ImageView();
                _img.loadTexture("img/main2/bg_im2.png");
                _img.setAnchorPoint(cc.p(0.5,0.5));
                me.ui.finds('bg_sale2').addChild(_img);
                _img.x = me.ui.finds('bg_sale2').width/2;
                _img.y = me.ui.finds('bg_sale2').height/2;
            }
        },
        checkRedPoint: function(){
            var me = this;
            var redData = G.DATA.hongdian.chongzhiandlibao;
            if(redData.meiribx > 0){
                G.setNewIcoImg(me.nodes.btn_quota);
                me.nodes.btn_quota.getChildByName("redPoint").setPosition(110, 60);
            }else{
                G.removeNewIco(me.nodes.btn_quota);
            }
            if(redData.meirisd > 0){
                G.setNewIcoImg(me.nodes.btn_dailystore);
                me.nodes.btn_dailystore.getChildByName("redPoint").setPosition(110, 60);
            }else{
                G.removeNewIco(me.nodes.btn_dailystore);
            }
        },
        onHide: function () {
            var me = this;
            G.hongdian.getData("chongzhiandlibao", 1);
            me.emit("hide");
        },
        getData: function (callback) {
            var me = this;
            G.ajax.send('chongzhi_open', [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        changeType: function (type) {
            var me = this;

            if (me.curType == type) return;

            me.curType = type;

            var viewConf = {
                "1": G.class.chongzhi_vip,
                "2": G.class.chongzhi_mrxg,
                "3": G.class.chongzhi_czlb,
                "4": G.class.chongzhi_mrsc,
            };
            me._panels = me._panels || {};
            for (var _type in me._panels) {
                cc.isNode(me._panels[_type]) && me._panels[_type].hide();
            }
            if (!cc.isNode(me._panels[type])) {
                cc.log('type...',type);
                me._panels[type] = new viewConf[type](type);
                me.ui.nodes.panel_nr.addChild(me._panels[type]);
            }
            me._panels[type].show();
        },
    });

    G.frame[ID] = new fun('sale.json', ID);
})();
;;/**
 * Created by lsm on 2018/6/29
 */
(function() {
    //超值礼包
    G.class.chongzhi_czlb = X.bView.extend({
        ctor: function(type) {
            var me = this;
            me._type = type;
            me._super('sale_giftbag.json');
        },
        refreshPanel: function() {
            var me = this;
            G.frame.chongzhi.getData(function() {
                me.DATA = G.frame.chongzhi.DATA;
                me.setContents();
            })
        },
        bindBTN: function() {
            var me = this;
        },
        onOpen: function() {
            var me = this;
            me.initPageView();
            me.loopAdvertising();
            me.bindBTN();
        },
        onShow: function() {
            var me = this;
            me.refreshPanel();
            me.nodes.listview.setItemsMargin(0);
        },
        onRemove: function() {
            var me = this;

        },
        setContents: function() {
            var me = this;
            me.setChaozhilibao();
        },
        setChaozhilibao: function() {
            var me = this;
            var conf = G.class.chongzhihd.getChaozhilibao();
            var chaozhihaoli = me.DATA.chaozhihaoli;
            var listview = me.nodes.listview;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();
            var xbcon = {
                week: 'img/sale/bg_sale_xb1',
                month: 'img/sale/bg_sale_xb2',
                forever: 'img/sale/bg_sale_xb3'
            };
            for (var k in conf) {
                var list = me.nodes.list.clone();
                setitem(list, conf[k], k);
                listview.pushBackCustomItem(list);
            }
            listview.jumpToTop();

            function setitem(ui, data, idx) {
                X.autoInitUI(ui);
                var ico = ui.nodes.panel_ico;
                var name = ui.nodes.txt_name;
                var srandard = ui.nodes.panel_srandard;
                var describe = ui.nodes.panel_describe;
                var item = ui.nodes.panel_item;
                var countdown = ui.nodes.txt_countdown;
                var tiem = ui.nodes.txt_time;
                var buy = ui.nodes.btn_buy;
                var txt_number = ui.nodes.txt_number;
                var img_ygm = ui.nodes.img_ygm;
                var cash = ui.nodes.txt_cash;
                cash.setTextColor(cc.color(G.gc.COLOR.n12));
                ico.setBackGroundImage('img/sale/' + data.img + '.png', 1);
                name.setBackGroundImage('img/sale/' + data.wz + '.png', 1);
                srandard.setBackGroundImage(xbcon[data.ctype] + '.png', 1);
                if (chaozhihaoli[data.chkkey] != undefined) {
                    if (chaozhihaoli[data.chkkey] == 0) {
                        img_ygm.show();
                        countdown.hide();
                        buy.hide();
                    } else {
                        buy.setBright(false);
                        buy.setTouchEnabled(false);
                        buy.hide();
                        cash.setTextColor(cc.color(G.gc.COLOR.n15));
                        var str = X.moment(chaozhihaoli[data.chkkey] - G.time, {
                            d: L('czlb_djs'),
                            h: L('czlb_djs1'),
                            mm: L('czlb_djs2'),
                        });
                        tiem.setString(str);
                        img_ygm.show();
                        img_ygm.setPositionY(buy.getPositionY());
                    }
                } else {
                    countdown.hide();
                }
                var rt = new X.bRichText({
                    size: 20,
                    maxWidth: describe.width,
                    lineHeight: 10,
                    color: '#804326',
                    family: G.defaultFNT
                });
                rt.text(data.intr);
                rt.setAnchorPoint(0, 0.5);
                rt.setPositionY(describe.height / 2 - 6);
                describe.addChild(rt);
                if (data.tq > 0) {
                    var items = [{a: "item", t: "tq" + idx, n: 0}].concat(data.prize);
                    X.alignItems(item, items, 1, {
                        touch: true
                    });
                } else {
                    X.alignItems(item, data.prize, 1, {
                        touch: true
                    });
                }
                buy.data = data;
                buy.idx = idx;
                if (data.act == 'pay') {
                    buy.finds('image_2').hide();
                    txt_number.hide();
                    cash.setString(data.btnshow);
                    buy.click(function(sender, type) {
                        G.event.once('paysuccess', function(txt) {
                            try {
                                me.refreshPanel();
                                G.frame.jiangli.data({
                                    prize: sender.data.prize
                                }).show();
                            } catch (e) {}
                        });
                        G.event.emit('doSDKPay', {
                            pid: sender.data.chkkey,
                            logicProid: sender.data.chkkey,
                            money: sender.data.money,
                            pname: sender.data.btnshow
                        });
                    }, 3000);
                } else {
                    txt_number.setString(data.btnshow);
                    buy.click(function(sender) {
                        G.ajax.send('czhl_buy', [sender.idx >> 0], function(data) {
                            if (!data) return;
                            var d = JSON.parse(data);
                            if (d.s == 1) {
                                me.refreshPanel();
                                G.frame.jiangli.data({
                                    prize: sender.data.prize
                                }).show();
                            }
                        })
                    })
                }
                ui.setContentSize(cc.size(ui.width, ui.height + 5));
                ccui.helper.doLayout(ui);
                ui.show();
            }
        },
        loopAdvertising: function() {
            var me = this;
            me.ui.scheduleUpdate()
            me.ui.update = function() {
                if (--me.loopTime <= 0) {
                    me.loopTime = me.deftime;
                    var pageview = me.pageview;
                    var idx = pageview.getCurPageIndex().valueOf() - 0 + 1;
                    pageview.scrollToPage(idx);
                    if (idx + 1 == 6) {
                        pageview.scrollToPage(1);
                        pageview.update(1 / 60 * 1000);
                    } else {
                        me.pointShow(idx - 1);
                    }
                }
            }
        },
        pointShow: function(idx) {
            var me = this;
            var points = [me.nodes.img_dot1, me.nodes.img_dot2, me.nodes.img_dot3];
            for (var i = points.length - 1; i >= 0; i--) {
                points[i].hide();
            }
            points[idx - 1].show();
        },
        initPageView: function() {
            var me = this;
            var pageview = me.pageview = me.nodes.pageview;
            me.deftime = 150;
            me.loopTime = me.deftime;
            pageview.setCustomScrollThreshold(10 * 0.01 * pageview.width);
            var advertising = G.class.chongzhihd.getAdvertising();
            var conf = {
                0: 'img/sale/' + advertising[2] + '.png',
                1: 'img/sale/' + advertising[0] + '.png',
                2: 'img/sale/' + advertising[1] + '.png',
                3: 'img/sale/' + advertising[2] + '.png',
                4: 'img/sale/' + advertising[0] + '.png',
            }
            for (var i = 0; i < 5; i++) {
                var page = new ccui.Layout();
                var img = me.nodes.panel_banner.clone();
                img.setBackGroundImage(conf[i], 0);
                page.setContentSize(pageview.getContentSize());
                page.removeAllChildren();
                page.addChild(img);
                page.show();
                pageview.addWidgetToPage(page, i, true);
            }
            pageview.scrollToPage(1);
            pageview.addEventListener(function(sender, type) {
                var pageview = sender;
                me.loopTime = me.deftime;
                var idx = pageview.getCurPageIndex().valueOf() - 0 + 1;
                if (idx == 5) {
                    pageview.scrollToPage(1);
                    pageview.update(1 / 60 * 1000);
                    me.pointShow(1);
                } else if (idx == 1) {
                    pageview.scrollToPage(3);
                    pageview.update(1 / 60 * 1000);
                    me.pointShow(3);
                } else {
                    me.pointShow(idx - 1);
                }
            });
        }
    });
})();
;;/**
 * Created by lsm on 2018/6/29
 */
(function() {
    //每日商城
    G.class.chongzhi_mrsc = X.bView.extend({
        ctor: function(type) {
            var me = this;
            me._type = type;
            me._super('sale_dailystore.json');
        },
        refreshPanel: function() {
            var me = this;
            me.getData(function() {
                me.setContents();
            })
        },
        bindBTN: function() {
            var me = this;
        },
        onOpen: function() {
            var me = this;
            me.ifFirst = true;
            me.initScorllView();
            me.bindBTN();
        },
        onShow: function() {
            var me = this;
            me.refreshPanel();
        },
        onRemove: function() {
            var me = this;

        },
        filterData: function(data) {
            var me = this;
            var newData = [];
            for (var i = 0; i < data.length; i++) {
                if (i == 0) {
                    newData.push(i);
                }
                if (i == 1) continue;
                if (i % 2 != 0) {
                    newData.push(i);
                }
            }
            return newData;
        },
        setContents: function() {
            var me = this;
            var data = me.DATA;
            me.shopData = data.shop.shopitem;
            var arr = me.filterData(me.shopData);
            me.ui_table.data(arr);
            if (me.ifFirst) {
                me.ui_table.reloadDataWithScroll(true);
                me.ifFirst = false;
            } else {
                me.ui_table.reloadDataWithScroll(false);
            }

        },
        getData: function(callback, errCall) {
            var me = this;
            G.ajax.send('shop_open', [6], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                } else {
                    errCall && errCall();
                }
            }, true);
        },
        initScorllView: function(data) {
            var me = this;
            cc.enableScrollBar(me.nodes.scrollview, false);
            me.nodes.scrollview.removeAllChildren();
            var table = new cc.myTableView({
                rownum: 1,
                type: 'fill',
                lineheight: me.nodes.list.height + 10,
                paddingTop: 5
            });
            me.ui_table = table;
            table.setDelegate(this);
            me.ui_table.data([]);
            table.bindScrollView(me.nodes.scrollview);
            me.ui_table.reloadDataWithScroll(true);
        },
        setItem: function(ui, data) {
            var me = this;

            for (var i = 0; i < 2; i++) {
                var parent = ui.finds('list' + (i + 1) + '$');
                var list = me.nodes.list.clone();
                list.setPosition(cc.p(0, 0));
                parent.removeAllChildren();
                parent.addChild(list);
                parent.hide();
                list.hide();
                var dd = me.shopData[data + i];
                if (dd) {
                    me.setChildItem(list, dd);
                    list.show();
                    parent.show();
                }
            }

            ui.setTouchEnabled(false);
            ui.show();
        },
        setChildItem: function(ui, data) {
            var me = this;
            X.autoInitUI(ui);
            var tb = ui.nodes.ico_tb;
            var limit = ui.nodes.txt_limit;
            var img_zs = ui.nodes.img_zs;
            var txt_jb1 = ui.nodes.txt_jb1;
            var panel_line = ui.nodes.panel_line;
            var txt_jb = ui.nodes.txt_jb;
            var img_zkbg = ui.nodes.img_zkbg;
            var text_zk = ui.nodes.text_zk;
            var img_ygm = ui.nodes.img_ygm;
            var panel_limit = ui.nodes.panel_limit;
            var txt_bg = panel_limit.finds('bg_limit');
            txt_bg.setColor(cc.color('#d37656'));
            txt_bg.setOpacity(155);
            img_zkbg.setPosition(cc.p(33, 120));
            text_zk.setPosition(cc.p(23, 96));
            panel_limit.show();
            var item = G.class.sitem(data.item);
            item.setPosition((tb.width - item.width) / 2, (tb.height - item.height) / 2)
            item.setAnchorPoint(0, 0);
            tb.removeAllChildren();
            tb.addChild(item);
            tb.setTouchEnabled(true);
            tb.setSwallowTouches(true);
            G.frame.iteminfo.showItemInfo(item);
            var sale = data.sale / 10;
            text_zk.setString(data.sale + L('sale'));
            if (data.sale <= 5) {
                img_zkbg.loadTexture('img/sale/img_sale_zhong.png', 1);
                X.enableOutline(text_zk, '#b51718', 2);
            } else {
                img_zkbg.loadTexture('img/sale/img_sale_zlv.png', 1);
                X.enableOutline(text_zk, '#085f0d', 2);
            }
            txt_jb.setString(data.need[0].n * sale);
            if (data.need[0].n * sale == 0 && data.buynum > 0) {
                G.setNewIcoImg(ui, .95);
                me.idx = data.idx;
            }
            txt_jb1.setString(data.need[0].n);
            if (P.gud.vip < data.chkvip) {
                limit.setString(X.STR(L('GZZS'), data.chkvip));
            } else {
                limit.setString(X.STR(L('todaycs'), data.buynum));
            }
            limit.setFontName(G.defaultFNT);
            if (data.buynum < 1) {
                img_ygm.show();
                ui.nodes.txt_jb.hide();
                ui.nodes.txt_jb1.hide();
                ui.nodes.panel_line.hide();
                ui.nodes.img_zs.hide();
                ui.nodes.panel_limit.hide();
                img_ygm.x -= 20;
                ui.setTouchEnabled(true);
            } else {
                img_ygm.hide();
                ui.setTouchEnabled(true);
            }

            ui.setSwallowTouches(false);
            ui.data = data;
            ui.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    if(sender.data.buynum<1){
                        G.tip_NB.show(L('SELLOVER'));
                        return;
                    }
                    if (P.gud.vip < sender.data.chkvip) {
                        G.tip_NB.show(X.STR(L('GZXGM'), sender.data.chkvip))
                    } else {
                        function buy() {
                            me.buy({
                                num: 1,
                                idx: sender.data.idx,
                                prize: ui.data.item
                            }, function() {
                                sender.data.need[0].n = need;
                                if (sender.idx == me.idx) {
                                    G.removeNewIco(sender);
                                    G.hongdian.getData("chongzhiandlibao", 1, function() {
                                        G.frame.chongzhi.checkRedPoint();
                                    })
                                }
                            });
                        }
                        var need = sender.data.need[0].n * sale;
                        if(P.gud[sender.data.need[0].t] < need) {
                            G.tip_NB.show(L("ZSBZ"));
                            return;
                        }
                        if (need >= 100) {
                            G.frame.alert.data({
                                cancelCall: null,
                                okCall: function() {
                                    buy();
                                },
                                richText: L("SFGM"),
                                sizeType: 3
                            }).show();
                        } else {
                            buy();
                        }
                    }
                }
            })
        },
        buy: function(args, callback) {
            var me = this;

            var num = args.num;
            var idx = args.idx;
            var shopid = 6;
            G.ajax.send('shop_buy', [shopid, idx], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA.shop = d.d.shopinfo;
                    // G.tip_NB.show(L('GOUMAI') + L('SUCCESS'));
                    G.frame.jiangli.data({
                        prize: [].concat(args.prize)
                    }).show();
                    callback && callback();
                    me.refreshPanel();
                    G.view.toper.updateAttr();
                }
            }, true);
        },
        cellDataTemplate: function() {
            return this.nodes.panel_list.clone();
        },
        /**
         * 数据初始化
         * @param ui
         * @param data
         */
        cellDataInit: function(ui, data) {
            if (!data && data != 0) {
                ui.hide();
                return;
            }
            this.setItem(ui, data);
            ui.show();
        },
    });
})();
;;/**
 * Created by lsm on 2018/6/29
 */
(function() {
    //每日限购
    G.class.chongzhi_mrxg = X.bView.extend({
        ctor: function(type) {
            var me = this;
            me._type = type;
            me.preLoadRes = ['gonghui1.plist', 'gonghui1.png'];
            me._super('sale_quota.json');
        },
        refreshPanel: function() {
            var me = this;
            G.frame.chongzhi.getData(function() {
                me.DATA = G.frame.chongzhi.DATA;
                me.setTop();
                me.setContents();
            });
        },
        bindBTN: function() {
            var me = this;
            me.nodes.btn_receive.click(function() {
                G.ajax.send('mrxg_recmrprize', [], function(data) {
                    if (!data) return;
                    var d = JSON.parse(data);
                    if (d.s == 1) {
                        me.refreshPanel();
                        G.frame.jiangli.data({
                            prize: d.d.prize
                        }).show();
                        G.hongdian.getData("chongzhiandlibao", 1, function () {
                            G.frame.chongzhi.checkRedPoint();
                        })
                    }
                });
            })
        },
        onOpen: function() {
            var me = this;

            me.bindBTN();
        },
        onShow: function() {
            var me = this;
            me.refreshPanel();
        },
        onRemove: function() {
            var me = this;

        },
        setTop: function() {
            var me = this;
            var meirixiangou = me.DATA.meirixiangou;
            // me.nodes.panel_banner.setBackGroundImage('img/sale/bg_sale_banner2.png',1);
            if (X.inArray(meirixiangou, 'free')) {
                G.removeNewIco(me.nodes.btn_receive);
                me.nodes.btn_receive.setBright(false);
                me.nodes.btn_receive.setTouchEnabled(false);
                me.nodes.btn_receive.setTitleText(L('jingri')+L('YLQ'));
                me.nodes.btn_receive.setTitleColor(cc.color(G.gc.COLOR.n15));
                me.nodes.panel_box.removeBackGroundImage();
                me.nodes.panel_box.setBackGroundImage('img/sale/img_sale_box2.png',1);
            } else {
                G.setNewIcoImg(me.nodes.btn_receive, .95);
                me.nodes.btn_receive.setBright(true);
                me.nodes.btn_receive.setTouchEnabled(true);
                me.nodes.btn_receive.setTitleColor(cc.color(G.gc.COLOR.n13));
                me.nodes.panel_box.removeBackGroundImage();
                me.nodes.panel_box.setBackGroundImage('img/sale/img_sale_box.png',1);
            }

        },
        setContents: function() {
            var me = this;

            var conf = G.class.chongzhihd.getMeirixiangou();
            var listview = me.nodes.listview;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();
            var fcolor = {
                0: '#054484',
                1: '#5a165b',
                2: '#940000'
            };
            var pcolor = {
                0: '#006f00',
                1: '#1173a9',
                2: '#be5e30'
            };
            for (var i = 1; i < 4; i++) {
                var list = me.nodes.list.clone();
                setItem(list, conf[i], i - 1);
                listview.pushBackCustomItem(list);
            }

            function setItem(ui, data, idx) {
                X.autoInitUI(ui);
                ui.nodes.bg_list.loadTexture('img/sale/bg_sale_list' + (idx + 1) + '.png', 1);
                ui.nodes.img_flag.loadTexture('img/sale/img_sale_flag' + (idx + 1) + '.png', 1);
                setTextWithColor(ui.nodes.txt_flag, data.name, '#ffe9cd');
                X.enableOutline(ui.nodes.txt_flag, fcolor[idx])
                X.alignItems(ui.nodes.panel_item, data.prize, 1, {
                    touch: true
                });
                for (var i = ui.nodes.panel_item.children.length - 1; i >= 0; i--) {
                    ui.nodes.panel_item.children[i].setSwallowTouches(true);
                }
                ui.nodes.txt_limit.setString(X.STR(L('MRSG_PAYNUM'), data.paynum));
                setTextWithColor(ui.nodes.txt_price, data.paymoney, pcolor[idx]);
                X.enableOutline(ui.nodes.txt_price, '#ffffff')
                if (X.inArray(me.DATA.meirixiangou, "mrxgbox"+(idx+1))){
                    ui.nodes.img_ygm.show();
                    ui.nodes.txt_limit.hide();
                    ui.nodes.txt_price.hide();
                }
                ui.nodes.panel_gift.setBackGroundImage('img/gonghui/img_gonghui_jxbx1.png',1);
                ui.data = data;
                ui.setTouchEnabled(true);
                ui.click(function(sender, type) {
                    if(P.gud.vip < sender.data.vip) {
                        G.tip_NB.show(X.STR(L("GZXKGM"), sender.data.vip));
                        return;
                    }
                    G.event.once('paysuccess', function(txt) {
                        try {
                            G.frame.jiangli.data({
                                prize: sender.data.prize
                            }).show();
                            ui.nodes.img_ygm.show();
                            ui.nodes.txt_limit.hide();
                            ui.nodes.txt_price.hide();
                            me.refreshPanel();
                        } catch (e) {}
                    });
                    if(X.inArray(me.DATA.meirixiangou,sender.data.chkkey)){
                        G.tip_NB.show(L('ToDaySx'));
                        return;
                    }
                    sender.setTouchEnabled(false);
                    G.event.emit('doSDKPay', {
                        pid: sender.data.chkkey,
                        logicProid: sender.data.chkkey,
                        money: sender.data.money,
                        pname: sender.data.name
                    });
                    sender.setTimeout(function () {
                        sender.setTouchEnabled(true);
                    }, 5000);
                });
                ui.show()
            }
        }

    });
})();
;;/**
 * Created by lsm on 2018/7/4.
 */
(function() {
    //充值-特权详情
    var ID = 'chongzhi_tqinfo';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id, {action: true});
        },
        initUi: function() {
            var me = this;
        },
        bindBtn: function() {
            var me = this;

            me.ui.finds('panel_1').touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function() {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;

            new X.bView('zhuangbei_tip1.json', function(view) {
                me._view = view;

                me.defHeight = me._view.height;
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
                view.setTouchEnabled(true);
            });
        },
        onHide: function() {
            var me = this;
        },
        setContents: function() {
            var me = this;
            me.tqid = me.data().id;
            me.conf = G.class.chongzhihd.getTequan();
            me.setTop();
        },
        setTop: function() {
            var me = this;

            var panel = me._view;
            var conf = me.conf[me.tqid];
            var layIco = panel.nodes.panel_1;
            var layBuff = panel.nodes.panel_2;
            var txtType = panel.nodes.text_2;
            var txt1 = panel.nodes.text_1;
            var tq = G.class.sitem();
            tq.num.setVisible(false);
            tq.icon.setScale(1.5);
            tq.icon.loadTextureNormal('img/sale/img_sale_privilege' + me.tqid + '.png', 1);
            tq.setTouchEnabled(false);
            tq.setTouchEnabled(true);
            tq.background.loadTexture('img/public/ico/ico_bg' + 3 + '.png', 1);
            tq.setAnchorPoint(0, 0);
            layIco.addChild(tq);
            txtType.setString(L('tq'));
            setTextWithColor(txt1, conf.name, G.gc.COLOR[3]);
            var rt = new X.bRichText({
                size: 20,
                maxWidth: panel.nodes.panel_2.width,
                lineHeight: 30,
                color: '#f6ebcd',
                family: G.defaultFNT
            });
            rt.text(conf.intr);
            var offsetY = rt.trueHeight() + 60;
            panel.nodes.panel_bg.setContentSize( cc.size(panel.nodes.panel_bg.width,panel.nodes.panel_bg.height + offsetY) );
            ccui.helper.doLayout(panel.nodes.panel_bg);
            rt.setPosition(cc.p(0,0));
            layBuff.addChild(rt);
            // panel.nodes.panel_2.addChild(rt);
        },
    });

    G.frame[ID] = new fun('panel_nr.json', ID);
})();
;;/**
 * Created by lsm on 2018/6/29
 */
(function() {
    //充值礼包 
    G.class.chongzhi_vip = X.bView.extend({
        ctor: function(type) {
            var me = this;
            G.frame.huodong.zs = me;
            me._type = type;
            me._super('sale_topup.json');
        },
        refreshPanel: function() {
            var me = this;
            G.frame.chongzhi.getData(function() {
                me.DATA = G.frame.chongzhi.DATA;
                me.setContents();
            });
        },
        bindBTN: function() {
            var me = this;

            me.nodes.btn_vip.click(function() {
                if (me.cjShow) {
                    me.nodes.panel_bottom2.hide();
                    me.nodes.panel_bottom1.show();
                    me.nodes.btn_vip.loadTextureNormal('img/sale/btn_sale_vip1.png', 1);
                    me.nodes.btn_vip.finds('redPoint') && me.nodes.btn_vip.finds('redPoint').hide();
                    jumpToTqlb();
                    me.cjShow = false;
                } else {
                    me.nodes.panel_bottom2.show();
                    me.nodes.panel_bottom1.hide();
                    me.nodes.btn_vip.loadTextureNormal('img/sale/btn_sale_vip.png', 1);
                    me.nodes.btn_vip.finds('redPoint') && me.nodes.btn_vip.finds('redPoint').show();
                    me.cjShow = true;
                }
            });


            function jumpToTqlb() {
                G.frame.chongzhi.getData(function() {
                    if (me.isDykTz) {
                        me.setPage(P.gud.vip || 1);
                        me.nodes.pageview.scrollToPage(P.gud.vip - 1 || 0);
                        me.nodes.pageview.update(1 / 60 * 1000);
                    }else{
                        var data = G.frame.chongzhi.DATA.alreadypack;
                        var jump = false;
                        for (var i = P.gud.vip; i > 0; i--) {
                            if (!X.inArray(data, i) && data.length > 0) {
                                jump = true;
                                me.showPage(i || 1);
                                me.nodes.pageview.scrollToPage((i - 1 || 0));
                                me.nodes.pageview.update(1 / 60 * 1000);
                                me.firstshow = true;
                                break;
                            }
                        }
                        if (!jump) {
                            me.showPage(P.gud.vip || 1);
                            me.nodes.pageview.scrollToPage(P.gud.vip - 1 || 0);
                            me.nodes.pageview.update(1 / 60 * 1000);
                            me.firstshow = true;
                        }
                    }

                })
            }
        },
        onOpen: function() {
            var me = this;
            me.DATA = G.frame.chongzhi.DATA;
            me.isFrist = true;
            me.isDykTz = G.frame.chongzhi.data() && G.frame.chongzhi.data().isDykTz;
            me.bindBTN();
        },
        onShow: function() {
            var me = this;
            me.setContents();
        },
        onRemove: function() {
            var me = this;

        },
        onNodeShow: function() {
            var me = this;
            if (cc.isNode(me.ui)) {
                me.setVip();
            }
        },
        setContents: function() {
            var me = this;
            var dt = 0;
            me.setVip();
            me.setChongzhi();
            me.checkRedPoint();
            if (!me.vip) {
                me.vip = P.gud.vip
            }
            if(!me.isDykTz){
                dt = me.isFris ? 800 : 100
            }else{
                dt = 100;
            }
            if (P.gud.vip > me.vip || me.isFrist) {
                me.ui.setTimeout(function() {
                    me.vip = P.gud.vip;
                    me.setTequan();
                    if (me.isDykTz) {
                        me.nodes.btn_vip.triggerTouch(ccui.Widget.TOUCH_ENDED);
                        me.isFrist = false;
                    } else {
                        var data = G.frame.chongzhi.DATA.alreadypack;
                        var jump = false;
                        for (var i = P.gud.vip; i > 0; i--) {
                            if (!X.inArray(data, i) && data.length > 0) {
                                me.showPage(i || 1);
                                me.nodes.pageview.scrollToPage((i - 1 || 1));
                                me.nodes.pageview.update(1 / 60 * 1000);
                                jump = true;
                                break;
                            }
                        }
                        if (!jump) {
                            me.showPage(P.gud.vip || 1);
                            me.nodes.pageview.scrollToPage(P.gud.vip - 1 || 0);
                            me.nodes.pageview.update(1 / 60 * 1000);
                        }
                    }
                },dt);
            }
            if(me.isFrist && !me.isDykTz) {
                me.nodes.panel_bottom2.show();
                me.isFrist = false;
            }else if(me.isDykTz){
                me.nodes.panel_bottom2.hide();
            }
        },
        checkRedPoint: function() {
            var me = this;
            var redNum = 0;
            var buyArr = me.DATA.alreadypack;
            if (P.gud.vip < 1) return;
            G.removeNewIco(me.nodes.btn_vip);
            for (var i = 1; i <= P.gud.vip; i++) {
                if (!X.inArray(buyArr, i)) {
                    redNum++;
                }
            }
            if (redNum > 0) {
                G.setNewIcoImg(me.nodes.btn_vip, .8, redNum);
                me.nodes.btn_vip.getChildByName("redPoint").setPosition(0 + 5, me.nodes.btn_vip.height - 20);
            }
        },
        // onNodeShow: function(){
        //     var me = this;
        //     me.setVip();
        // },
        setVip: function() {
            var me = this;
            var conf = G.class.vip.get();
            var vip = P.gud.vip;
            var nextvip = vip + 1 < 17 ? vip + 1 : vip;
            var payexp = P.gud.payexp;
            var needexp = conf[vip + 1 > 17 ? 17 : vip + 1].payexp;

            me.nodes.ico_vip1.setBackGroundImage(X.getVipIcon(P.gud.vip), 0);
            me.nodes.ico_vip2.setBackGroundImage(X.getVipIcon(nextvip), 0);
            me.nodes.txt_viplv.setString(P.gud.vip);
            me.nodes.txt_viplv2.setString(nextvip);
            var rt = new X.bRichText({
                size: 22,
                maxWidth: me.nodes.txt1.width + 100,
                lineHeight: 32,
                family: G.defaultFNT,
                color: '#ffb47d',
            });
            var cz = (needexp - payexp) / 10 > 0 ? (needexp - payexp) / 10 : 0;
            var str = X.STR(L('CHONGZHI_ZCZ'), cz.toFixed(0));
            rt.text(str);
            me.nodes.txt1.removeAllChildren();
            rt.setAnchorPoint(0,0);
            rt.setPositionX(me.nodes.txt1.width - rt.trueWidth());
            me.nodes.txt1.addChild(rt);
            me.nodes.txt1.setPosition(me.nodes.ico_vip2.x - me.nodes.txt1.width - me.nodes.ico_vip2.width / 4, me.nodes.txt1.y);
            // me.nodes.txt_number.setString(needexp - payexp);
            var pre = payexp / needexp * 100;
            me.nodes.img_jdt.setPercent(pre);
            me.nodes.txt_jdt.setString(payexp + '/' + needexp);

            if(G.tiShenIng){
                me.finds('img_banner').hide();
            }
        },
        setTequan: function() {
            var me = this;
            var vipconf = G.class.vip.get();
            var tequan = G.class.vip.getVipTeQuan();
            var pageView = me.nodes.pageview;
            var pageItem = me.nodes.page_bottom;
            var dt = 5;
            var count = 0;
            pageView.setCustomScrollThreshold(10 * 0.01 * pageView.width);
            pageView.removeAllPages();
            vipconf[0] = {};
            delete vipconf[0];
            var vips = X.keysOfObject(vipconf);
            vips.sort(function(a, b) {
                return a * 1 - b * 1;
            });
            //设置pageview
            var len;
            if(P.gud.vip < 10) len = 10;
            else if(P.gud.vip < 13) len = 13;
            else if(P.gud.vip < 15) len = 15;
            else len = 17;
            for (var i = 0; i < len; i++) {
                var page = new ccui.Layout();
                page.setContentSize(pageView.getContentSize());
                pageView.addPage(page);
            }
            var setPage = me.setPage = function(vip) {
                if (vip == 0 || vip > vips.length) return;
                if(P.gud.vip > 1) {
                    if (pageView.getPage(vip - 1).getChildrenCount() > 0) return;
                }
                var page = pageItem.clone();
                var viptq = vipconf[vip].tq;
                X.autoInitUI(page);
                var listview = page.nodes.listview_vip;
                var listItem = page.nodes.list_vip;
                listview.removeAllChildren();

                cc.enableScrollBar(listview);
                for (var i in viptq) {
                    (function(i,page){
                        listview.setTimeout(function() {
                            if(!cc.isNode(page))return;

                            var tq = viptq[i];
                            var tqItem = page.nodes.list_vip.clone();
                            X.autoInitUI(tqItem);
                            var tqcon = tequan[tq[0]];
                            var rt = new X.bRichText({
                                size: 20,
                                maxWidth: tqItem.nodes.txt_vipinfo.width,
                                lineHeight: 30,
                                color: '#7b531a',
                                family: G.defaultFNT
                            });
                            rt.text(X.STR(tqcon.intr, tq[1]));
                            rt.setPosition(0, 0);
                            tqItem.nodes.txt_vipinfo.addChild(rt);
                            tqItem.nodes.txt_vipinfo.setPositionY(tqItem.nodes.img_dot.y + tqItem.nodes.txt_vipinfo.y - rt.trueHeight() / 2);
                            listview.pushBackCustomItem(tqItem);
                            tqItem.show();
                        }, i *  (i<4?0:100)  );
                    })(i,page)
                }
                prize = vipconf[vip].tqprize;

                X.alignCenter(page.nodes.panel_item, prize, {
                    touch: true,
                    scale: prize.length > 4 ? .7 : .8
                });

                prize1 = vipconf[vip].tqmonth;

                X.alignCenter(page.finds("pan"), prize1, {
                    touch: true,
                    scale: prize1.length > 4 ? .45 : .55
                });

                page.nodes.bg_vipinfo.setOpacity(75);
                page.nodes.bg_giftbag.setOpacity(75);
                // page.finds('bg_bottom2').setOpacity(90);
                page.nodes.ico_vip3.setBackGroundImage(X.getVipIcon(vip), 0);
                page.nodes.txt_viplv3.setString((vip));
                page.nodes.txt_number1.setString(vipconf[vip].needpay);
                page.nodes.txt_number2.setString(vipconf[vip].nowpay);
                X.enableOutline(page.nodes.txt_viplv3, '#2A1C0F', 2);
                X.enableOutline(page.finds('txt_title'), '#854500', 2);
                X.enableOutline(page.finds('txt_title2'), '#854500', 2);
                page.nodes.btn_buy.vip = vip;
                page.nodes.btn_buy.prize = vipconf[vip].tqprize;
                page.nodes.btn_buy.money = vipconf[vip].nowpay;
                if (vip <= P.gud.vip) {
                    page.nodes.btn_buy.setBright(true);
                    page.nodes.btn_buy.setTouchEnabled(true);
                } else {
                    page.nodes.btn_buy.setBright(false);
                    page.nodes.btn_buy.setTouchEnabled(false);
                }
                if (X.inArray(me.DATA.alreadypack, vip)) {
                    page.nodes.btn_buy.hide();
                    page.nodes.img_bought.show();
                    page.finds("panel_price1").hide();
                    page.finds("panel_price2").hide();
                } else {
                    page.nodes.img_bought.hide();
                    page.nodes.btn_buy.show();
                    page.finds("panel_price1").show();
                    page.finds("panel_price2").show();
                }
                page.nodes.btn_buy.click(function(sender) {
                    if(P.gud.rmbmoney < sender.money) {
                        G.tip_NB.show(L("ZSBZ"));
                        return;
                    }
                    G.frame.alert.data({
                        cancelCall: null,
                        okCall: function () {
                            G.ajax.send('vip_getpack', [sender.vip], function(data) {
                                if (!data) return;
                                var d = JSON.parse(data);
                                if (d.s == 1) {
                                    page.nodes.btn_buy.hide();
                                    page.nodes.img_bought.show();
                                    page.finds("panel_price1").hide();
                                    page.finds("panel_price2").hide();
                                    G.frame.jiangli.data({
                                        prize: [].concat(sender.prize)
                                    }).show();
                                    me.DATA.alreadypack.push(sender.vip);
                                    me.checkRedPoint();
                                }
                            });
                        },
                        richText: L("QDGM"),
                        sizeType: 3
                    }).show();

                });
                pageView.getPage(vip - 1).removeAllChildren();
                pageView.getPage(vip - 1).addChild(page);
                page.show();
            };
            var showPage = me.showPage = function(vip) {

                // if (me.curPage && me.curPage == vip) {
                //     return;
                // }
                me.curPage = vip;

                var len = pageView.getPages().length;
                if (vip - 1 >= 0) {
                    setPage(vip - 1);
                }
                if (vip > 0 && vip <= len) {
                    setPage(vip);
                }
                if (vip + 1 <= len) {
                    setPage(vip + 1);
                }
            };
            pageView.addEventListener(function(sender, type) {
                if (type == ccui.PageView.EVENT_TURNING) {
                    if (me.isDykTz){
                        me.isDykTz = false;
                        return;
                    }
                    var curPageIndex = sender.getCurrentPageIndex ? sender.getCurrentPageIndex() : sender.getCurPageIndex();
                    showPage(curPageIndex + 1);
                }
            });


            me.nodes.btn_left.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var curPageIndex = pageView.getCurrentPageIndex ? pageView.getCurrentPageIndex() : pageView.getCurPageIndex();
                    if (curPageIndex <= 0) {
                        return;
                    }
                    showPage(curPageIndex - 1);
                    pageView.scrollToPage(curPageIndex - 1);
                }
            });
            me.nodes.btn_right.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var curPageIndex = pageView.getCurrentPageIndex ? pageView.getCurrentPageIndex() : pageView.getCurPageIndex();
                    if (curPageIndex >= pageView.getPages().length - 1) {
                        return;
                    }
                    showPage(curPageIndex + 1);
                    pageView.scrollToPage(curPageIndex + 1);
                }
            });

        },
        setChongzhi: function() {
            var me = this;
            var listview = me.nodes.listview;
            var data = me.DATA.paylist;
            var d = [];
            var count = 0;
            me.nodes.list.hide();
            listview.removeAllChildren();
            listview.setItemsMargin(9);
            for (var i in data) {
                count++;
                d.push(data[i]);
                if (count % 2 == 0 && count != 0) {
                    var list = me.nodes.list.clone();
                    X.autoInitUI(list);
                    for (var k = 0; k < 2; k++) {
                        var panel = me.nodes.panel_list.clone();
                        var ld = d[k];
                        X.autoInitUI(panel);
                        panel.nodes.txt_info.setString(X.STR(L('HDZS'), ld.name));
                        // var icon = new ccui.ImageView('img/sale/img_sale_rmb.png', 1);
                        var txt = X.STR(L('price'), ld.show);
                        var rh = new X.bRichText({
                            size: 16,
                            maxWidth: panel.nodes.txt_price.width,
                            lineHeight: 26,
                            family: G.defaultFNT,
                            color: '#be5e30',
                        });
                        rh.text(txt);
                        rh.setAnchorPoint(1.1, 0.5);
                        rh.setPosition(panel.nodes.txt_price.width, panel.nodes.txt_price.height / 2 + 3);
                        panel.nodes.txt_price.removeAllChildren();
                        panel.nodes.txt_price.addChild(rh);

                        if(G.tiShenIng){
                            panel.nodes.panel_treasure.setBackGroundImage('img/main2/' + ld.img);
                        }else{
                            panel.nodes.panel_treasure.setBackGroundImage('img/sale/' + ld.img, 1);
                        }

                        if (ld.zs.cznum < 1) {
                            panel.nodes.panel_pop.setBackGroundImage('img/sale/' + ld.xb, 1);
                        } else {
                            panel.nodes.panel_pop.setBackGroundImage('img/sale/' + ld.xbn, 1);
                        }
                        panel.nodes.panel_pop.show();
                        panel.setAnchorPoint(0, 0);
                        panel.setPositionY(-8);
                        panel.show();
                        panel.data = ld;
                        panel.setTouchEnabled(true);
                        panel.click(function(sender) {
                            sender.setTouchEnabled(false);
                            G.event.once('paysuccess', function(txt) {
                                try {
                                    me.refreshPanel();
                                } catch (e) {}
                            });
                            G.event.emit('doSDKPay', {
                                pid: sender.data.proid,
                                logicProid: sender.data.proid,
                                money: sender.data.unitPrice,
                                pname: sender.data.name
                            });
                            sender.setTimeout(function () {
                                sender.setTouchEnabled(true);
                            }, 6000)
                        });
                        list.nodes['panel_' + (k + 1)].addChild(panel);
                    }
                    d = [];
                    list.show();
                    listview.pushBackCustomItem(list);
                    cc.enableScrollBar(listview);
                }
            }
            var aa = me.nodes.list.clone();
            aa.setContentSize(me.nodes.list.width, 10);
            aa.hide();
            listview.pushBackCustomItem(aa);
            me.cjShow = true;
        },
    });
})();
;;/**
 * Created by LYF on 2018/6/13.
 */
(function () {
    //抽卡
    var ID = 'chouka';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me._super(json, id, {action: true});
            me.preLoadRes = ["ani_chouka.plist", "ani_chouka_png", "ani_chouka_taizi.plist", "ani_chouka_taizi.png",
                "ani_chouka_chongji.png", "ani_chouka_chongji.plist", "ck_gz_ht.png", "ck_gz_ht.plist", "chouka2.png", "chouka2.plist"];
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_fh.click(function (sender, type) {
                me.remove();
            });

            me.nodes.btn_bz.click(function (sender, type) {
                G.frame.help.data({
                    intr:L('TS1')
                }).show();
            });

            me.nodes.btn_jia1.click(function (sender, type) {
                G.frame.dianjin.once("hide", function () {
                    me.setAttr();
                }).show();
            });

            me.nodes.btn_jia2.click(function (sender, type) {
                G.frame.chongzhi.once("hide", function () {
                    me.setAttr();
                    me.setNewList();
                }).show();
            });
        },
        onOpen: function () {
            var me = this;
            X.audio.playEffect("sound/openzhaohuan.mp3");
            me.ftime = ['putong','gaoji'];
            me.bgArr = ["pt", "gj", "yq"];
            me.nodes.loadingbar.setPercent(0);
            me.aniNode = [];
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
			G.guidevent.emit('choukaOpenOver');
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("jitan_open", [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            })
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;
            me.setContents();
            me.nodes.panel_kp.hide();
            G.class.ani.show({
                json: "ani_choukajuese",
                x: me.nodes.ani_rw.width / 2,
                y: me.nodes.ani_rw.height / 2,
                addTo: me.nodes.ani_rw,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {

                }
            });
            G.class.ani.show({
                json: "ani_mofashu",
                x: me.nodes.ani_mfs.width / 2,
                y: 0,
                addTo: me.nodes.ani_mfs,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    node.setAnchorPoint(0.5, 0);
                }
            });
            G.class.ani.show({
                json: "ani_lazhu",
                x: me.nodes.ani_lz.width / 2,
                y: 0,
                addTo: me.nodes.ani_lz,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    node.setAnchorPoint(0.5, 0);
                }
            });
            G.class.ani.show({
                json: "chouka_light",
                x: me.nodes.ani_light.width / 2,
                y: me.nodes.ani_light.height / 2,
                addTo: me.nodes.ani_light,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    node.setAnchorPoint(0.5, 0);
                }
            });
            G.class.ani.show({
                json: "ani_chuanghuguang",
                x: me.nodes.ani_light.width / 2 - 20,
                y: me.nodes.ani_light.height / 2 + 40,
                addTo: me.nodes.ani_light,
                repeat: true,
                autoRemove: false,
            });
        },
        onHide: function () {
            var me = this;
            me.event.emit('hide');
            G.hongdian.getData("herojitan", 1);
        },
        setContents: function () {
            var me = this;
            me.setItem();
            me.setAttr();
        },
        setItem: function () {
            var me = this;
            var conf = G.class.getConf("chouka");
            var keys = X.keysOfObject(conf);
            var num = parseInt(keys.length / 2);
            var isFree = true;
            var arr = [];
            me.nodes.list.hide();
            me.nodes.listview.setTouchEnabled(true);
            me.nodes.listview.removeAllChildren();
            cc.enableScrollBar(me.nodes.listview);
            for(var i = 0; i < num; i++){
                fun(i)
            }
            function fun(idx) {
                var list = me.nodes.list.clone();
                list.setName('list'+idx);
                var leftConf = conf[(idx + 1) * 2 - 1];
                var rightConf = conf[(idx + 1) * 2];
                var num = G.class.getOwnNum(rightConf.need[0].t, rightConf.need[0].a);
                list.show();
                X.autoInitUI(list);
                
                //将祭祀中的免费召唤按钮映射出去方便新手指导中配置
                if(idx==0){
                	me.nodes.ptjs_btn_1 = list.nodes.btn_1;
                }else if(idx==1){
                	me.nodes.gjjs_btn_1 = list.nodes.btn_1;
                }
                list.nodes.btn_1.loadTextureNormal("img/public/btn/btn2_on.png", 1);
                list.finds("text_mfsx").setTextColor(cc.color(G.gc.COLOR.n13));
                list.finds("text_yc").setTextColor(cc.color(G.gc.COLOR.n12));
                list.finds("text_sc").setTextColor(cc.color(G.gc.COLOR.n12));
                if(me.bgArr[idx] == "yq") list.nodes.text_mf.hide();
                if(me.DATA[me.ftime[idx]] && me.DATA[me.ftime[idx]].freenum < 1 && me.DATA[me.ftime[idx]].freecd && me.DATA[me.ftime[idx]].freecd - G.time > 0){
                    while (list.nodes.btn_1.getChildByTag(999)) {
                        list.nodes.btn_1.getChildByTag(999).removeFromParent();
                    }
                    X.timeout(list.nodes.text_djs, me.DATA[me.ftime[idx]].freecd, function () {
                        G.setNewIcoImg(list.nodes.btn_1, .95);
                        G.class.ani.show({
                            json: "ani_mianfeizhaohuan",
                            addTo: list.nodes.btn_1,
                            x: list.nodes.btn_1.width / 2,
                            y: list.nodes.btn_1.height / 2,
                            repeat: true,
                            autoRemove: false,
                            onload: function (node) {
                                node.setScale(1.2);
                                node.setTag(999);
                            }
                        });
                        isFree = false;
                        list.finds("text_mfsx").show();
                        list.nodes.btn_1.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                        list.nodes.text_mf.hide();
                        list.nodes.btn_ptyj1.hide();
                        list.nodes.text_sl1.hide();
                        list.finds("text_yc").hide();
                    })
                }else if(me.DATA[me.ftime[idx]] && me.DATA[me.ftime[idx]].freenum > 0){
                    G.setNewIcoImg(list.nodes.btn_1, .95);
                    G.class.ani.show({
                        json: "ani_mianfeizhaohuan",
                        addTo: list.nodes.btn_1,
                        x: list.nodes.btn_1.width / 2,
                        y: list.nodes.btn_1.height / 2,
                        repeat: true,
                        autoRemove: false,
                        onload: function (node) {
                            node.setScale(1.2);
                            node.setTag(999);
                        }
                    });
                    isFree = false;
                    list.nodes.btn_1.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                    list.finds("text_mfsx").show();
                    list.nodes.text_mf.hide();
                    list.nodes.btn_ptyj1.hide();
                    list.nodes.text_sl1.hide();
                    list.finds("text_yc").hide();
                }
                list.nodes.img_ptjs.loadTexture("img/chouka/img_ck_" + me.bgArr[idx] + "js.png", 1);
                list.nodes.panel_dh.show();

                list.nodes.img_ptyj.loadTexture(G.class.getItemIco(rightConf.need[0].t), 1);
                if(me.bgArr[idx] == "gj"){
                    if(num < leftConf.need[0].n){
                        list.nodes.btn_ptyj1.loadTexture(G.class.getItemIco(leftConf.rmbmoney[0].t), 1);
                        list.nodes.text_sl1.setString(leftConf.rmbmoney[0].n);
                    }else{
                        list.nodes.btn_ptyj1.loadTexture(G.class.getItemIco(leftConf.need[0].t), 1);
                        list.nodes.text_sl1.setString(leftConf.need[0].n);
                    }
                    if(num < rightConf.need[0].n){
                        list.nodes.btn_ptyj2.loadTexture(G.class.getItemIco(rightConf.rmbmoney[0].t), 1);
                        list.nodes.text_sl2.setString(rightConf.rmbmoney[0].n);
                    }else{
                        list.nodes.btn_ptyj2.loadTexture(G.class.getItemIco(rightConf.need[0].t), 1);
                        list.nodes.text_sl2.setString(rightConf.need[0].n);
                    }
                }else{
                    list.nodes.btn_ptyj1.loadTexture(G.class.getItemIco(rightConf.need[0].t), 1);
                    list.nodes.btn_ptyj2.loadTexture(G.class.getItemIco(rightConf.need[0].t), 1);
                    list.nodes.text_sl1.setString(leftConf.need[0].n);
                    list.nodes.text_sl2.setString(rightConf.need[0].n);
                }
                list.nodes.btn_1.chouType = (idx + 1) * 2 - 1;
                list.nodes.btn_2.chouType = (idx + 1) * 2;
                var txtNum1 = list.nodes.btn_1.finds('text_sl1$');
                var txtNum2 = list.nodes.btn_2.finds('text_sl2$');

                X.enableOutline(txtNum1,'#000000');
                X.enableOutline(txtNum2,'#000000');

                list.nodes.text_sl.setString(num);
                if(!list.nodes.btn_1.data) list.nodes.btn_1.data = [];
                list.nodes.btn_1.click(function (sender, type) {
                    if(isFree){
                        if(me.bgArr[idx] == "gj"){
                            if(num < leftConf.need[0].n){
                                if(P.gud.rmbmoney < leftConf.rmbmoney[0].n){
                                    G.tip_NB.show(L("ZSBZ"));
                                    return;
                                }
                            }
                        }else{
                            // if(num < leftConf.need[0].n){
                            //     G.tip_NB.show(L("YJBZ"));
                            //     return;
                            // }
                        }
                    }
                    me.chou(list.nodes.btn_1.chouType, leftConf);
                }, 2000);
                if(!list.nodes.btn_2.data) list.nodes.btn_2.data = [];
                list.nodes.btn_2.click(function (sender, type) {
                    if(me.bgArr[idx] == "gj"){
                        if(num < rightConf.need[0].n){
                            if(P.gud.rmbmoney < rightConf.rmbmoney[0].n){
                                G.tip_NB.show(L("ZSBZ"));
                                return;
                            }
                        }
                    }else{
                        // if(num < rightConf.need[0].n){
                        //     G.tip_NB.show(L("YJBZ"));
                        //     return;
                        // }
                    }
                    me.chou(list.nodes.btn_2.chouType, rightConf);
                }, 2000);
                arr.push(list);
            }
            var temp = arr[1];
            arr[1] = arr[2];
            arr[2] = temp;
            for (var i = 0; i < arr.length; i ++) {
                me.nodes.listview.pushBackCustomItem(arr[i]);
            }
            var newList = me.nodes.list.clone();
            newList.show();
            newList.finds("img_ptyj$").loadTexture("img/public/token/token_yhsp.png", 1);
            newList.finds("btn_ptyj1$").loadTexture("img/public/token/token_yhsp.png", 1);
            newList.finds("btn_ptyj2$").loadTexture("img/public/token/token_yhsp.png", 1);
            newList.finds("btn_2$").hide();
            newList.finds("text_mf$").hide();
            newList.finds("text_sl1$").setString(999);
            X.enableOutline(newList.finds("text_sl1$"), "#000000", 1);
            me.nodes.listview.pushBackCustomItem(newList);
            arr.push(newList);
            me.setNewList();
            me.addListAni(arr);
        },
        addListAni: function(arr) {
            var obj = {
                0: 2,
                1: 1,
                2: 3,
                3: 4
            };

            for (var i = 0; i < arr.length; i ++) {
                G.class.ani.show({
                    json: "ani_yingxiongjitan_" + obj[i],
                    addTo: arr[i].finds("panel_dh$"),
                    x: 308,
                    y: 102,
                    repeat: true,
                    autoRemove: false
                });
            }
        },
        setNewList: function() {
            var me = this;
            var list = me.nodes.listview.children[3];
            X.autoInitUI(list);
            if(P.gud.vip < 3) {
                list.nodes.img_ptjs.loadTexture("img/chouka/img_ck_csjs2.png", 1);
                list.nodes.img_ptjs.setTouchEnabled(true);
                list.nodes.img_wjsdi.show();
                list.nodes.btn_1.hide();
                list.nodes.img_ptjs.click(function () {
                    G.tip_NB.show(L("GZJSCSJS"))
                })
            }else {
                list.nodes.btn_1.show();
                list.nodes.img_wjsdi.hide();
                list.nodes.img_ptjs.loadTexture("img/chouka/img_ck_csjs.png", 1);
            }
            list.nodes.text_sl.setString(me.DATA.jifen);
            list.nodes.txt_wjswz.setString("999");
            
            list.nodes.btn_1.click(function () {
                me.ajax("jitan_duihuan", [], function (str, data) {
                    if(data.s == 1) {
                        X.audio.playEffect("sound/zhaohuan.mp3");
                        if(G.frame.chouka_hdyx.isShow){
                            G.frame.chouka_hdyx.nodes.ico_yx.removeAllChildren();
                            for(var i = 0; i < 10; i ++){
                                G.frame.chouka_hdyx.nodes["ico_" + (i + 1)].removeAllChildren();
                            }
                        }
                        G.frame.chouka_hdyx.data({
                            hero:data.d.prize
                        }).show();
                        me.getData(function () {
                            me.setContents();
                            if (G.frame.chouka_hdyx.isShow) {
                                G.frame.chouka_hdyx.bindBtn();
                            }
                        });
                    }else {
                        X.audio.playEffect("sound/dianji.mp3", false);
                    }
                })
            })
        },
        chou: function (type, data, bool) {
            var me = this;
            var num = type % 2 == 0? 10 : 1;
            var list = G.DATA.yingxiong.list;
            var keys = X.keysOfObject(list);
            if(keys.length + num > G.DATA.heroCell.maxnum){
                G.frame.alert.data({
                    sizeType: 3,
                    cancelCall: null,
                    okCall: function () {
                        G.frame.yingxiong.show();
                    },
                    richText: L("YXLBYM"),
                }).show();
            }else{
                G.ajax.send("jitan_chouka", [type], function (d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {

                        if(G.frame.chouka_hdyx.isShow){
                            G.frame.chouka_hdyx.nodes.ico_yx.removeAllChildren();
                            for(var i = 0; i < 10; i ++){
                                G.frame.chouka_hdyx.nodes["ico_" + (i + 1)].removeAllChildren();
                            }
                        } else {
                            X.audio.playEffect("sound/zhaohuan.mp3");
                        }
                        G.frame.chouka_hdyx.data({
                            hero: d.d.prize,
                            data: data,
                            type: type,
                            jifen: d.d.jifen,
                            bool: bool
                        }).show();
                        me.getData(function () {
                            me.setContents();
                            if (G.frame.chouka_hdyx.isShow) {
                                G.frame.chouka_hdyx.bindBtn();
                            }
                        });
                    }else{
                        X.audio.playEffect("sound/dianji.mp3", false);
                    }
                })
            }
        },
        setAttr: function () {
            var me = this;

            me.nodes.txt_jb.setString(X.fmtValue(P.gud.jinbi));
            me.nodes.txt_zs.setString(X.fmtValue(P.gud.rmbmoney));
        }
    });
    G.frame[ID] = new fun('chouka.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/14.
 */
 (function () {
    //抽卡-获得英雄
    var ID = 'chouka_hdyx';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.preLoadRes = ["ani_chouka_guangxiao.png", "ani_chouka_guangxiao.plist"];
            me._super(json, id, {action: true});

        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
            
            me.nodes.btn_qd.click(function (sender, type) {
                me.remove();
            });

            var data = me.data().data;
            if(!data){
                me.nodes.btn_qd.setPositionX(me.ui.width/2 + me.nodes.btn_qd.width/2 + 5);
                return;
            }
            var img = me.ui.finds("img_zs");
            var imgNum = me.ui.finds('text_zs$');
            var ci = me.ui.finds("text_sc");
            if(me.data().type % 2 == 0){
                ci.setString(L("SC"));
            }else{
                ci.setString(L("YC"));
            }

            if(G.class.getOwnNum(data.need[0].t, data.need[0].a) < data.need[0].n){
                if(data.rmbmoney.length > 0){
                    img.loadTexture(G.class.getItemIco(data.rmbmoney[0].t), 1);
                    imgNum.setString(data.rmbmoney[0].n);
                }else{
                    img.loadTexture(G.class.getItemIco(data.need[0].t), 1);
                    imgNum.setString(data.need[0].n);
                }
            }else{
                img.loadTexture(G.class.getItemIco(data.need[0].t), 1);
                imgNum.setString(data.need[0].n);
            }
            me.nodes.btn_sc.click(function (sender, type) {
                if(G.class.getOwnNum(data.need[0].t, data.need[0].a) < data.need[0].n){
                    if(data.rmbmoney.length > 0){
                        if(P.gud.rmbmoney < data.rmbmoney[0].n){
                            G.tip_NB.show(L("ZSBZ"));
                            return;
                        }else{
                            G.frame.chouka.chou(me.data().type, data, true);
                        }
                    }else{
                        G.tip_NB.show(L("YJBZ"));
                        return;
                    }
                }else{
                    G.frame.chouka.chou(me.data().type, data, true);
                }
            }, 500);
            
            me.nodes.btn_bz.click(function (sender, type) {
                G.frame.help.data({
                    intr:L('TS1')
                }).show();
            });

            me.nodes.btn_jia1.click(function (sender, type) {
                G.frame.dianjin.once("hide", function () {
                    me.setAttr();
                }).show();
            });

            me.nodes.btn_jia2.click(function (sender, type) {
                G.frame.chongzhi.once("hide", function () {
                    me.setAttr();
                }).show();
            });
        },
        onOpen: function () {
            var me = this;
            me.nodes.btn_jia.hide();
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.nodes.ico_yhsp.setBackGroundImage("img/public/token/token_yhsp.png", 1);
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.ui.setTouchEnabled(true);

            if(me.data().jifen) {
                me.nodes.txt_yhspsl.setString(me.data().jifen)
            }

            me.setAttr();
            if(!me.data().bool) {
                me.ui.finds("bg_ico").hide();
                me.ui.finds('bg_2').opacity = 0;
                me.setAnimation();
            } else {
                me.setContents();
            }
            me.setButton(false);
            me.endPos = me.ui.finds("panel_ui").convertToNodeSpace(me.ui.finds("panel_jdt").convertToWorldSpace(me.nodes.btn_info));
        },
        setButton: function(isShow){
            var me = this;
            me.nodes.btn_sc.setVisible(isShow);
            me.nodes.btn_qd.setVisible(isShow);
            me.nodes.btn_bz.setVisible(isShow);
            me.ui.finds("panel_jdt").setVisible(isShow);
        },
        setAttr: function () {
            var me = this;

            me.nodes.txt_jb.setString(X.fmtValue(P.gud.jinbi));
            me.nodes.txt_zs.setString(X.fmtValue(P.gud.rmbmoney));
        },
        setAnimation: function(){
            var me = this;
            var bg2 = me.ui.finds('bg_2');
            bg2.runAction(cc.fadeOut(0.3));

            for(var i = 0; i < 2; i ++){
                var layout = me.nodes["panel_fire" + (i + 1)];
                G.class.ani.show({
                    json: "ani_chouka_huo",
                    addTo: layout,
                    x: layout.width / 2,
                    y: layout.height / 2 - 18,
                    cache: true,
                    repeat: true,
                    autoRemove: false
                })
            }

            var ani = me.nodes.panel_dh;
            ani.removeAllChildren();

            G.class.ani.show({
                json: "ani_chouka_taizi",
                addTo: ani,
                x: ani.width / 2,
                y: 259,
                repeat: false,
                cache: true,
                autoRemove: true,
                onkey: function (node, action, event) {
                    if(event == "cx") {
                        G.class.ani.show({
                            json: "chouka_dh1",
                            addTo: ani,
                            x: ani.width / 2,
                            y: 260,
                            repeat: false,
                            cache: true,
                            autoRemove: true,
                            onload: function (node, action) {
                                action.setTimeSpeed(1.4);
                            },
                            onkey: function (node, action, event) {
                                if(event == "hit") {
                                    G.class.ani.show({
                                        json: "chouka_dh3",
                                        addTo: me.nodes.panel_dh1,
                                        x: me.nodes.panel_dh1.width / 2,
                                        y: me.nodes.panel_dh1.height / 2,
                                        repeat: false,
                                        autoRemove: false,
                                        onload: function (node) {
                                            var callfunc = cc.callFunc(function () {
                                                me.setContents();
                                            });
                                            bg2.runActions([
                                                cc.fadeIn(0.4),
                                                callfunc
                                            ]);
                                        },
                                        onend: function () {
                                            
                                        }
                                    })
                                }
                            }
                        });
                    }
                }
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            G.class.ani.show({
                json: "ani_chouka_guangxiao",
                addTo: me.ui.finds("bg_ico"),
                x: me.ui.finds("bg_ico").width / 2,
                y: me.ui.finds("bg_ico").height / 2,
                repeat: false,
                cache:true,
                autoRemove: true
            });
            me.ui.finds("bg_ico").show();
            if(me.data().hero.length > 1){
                me.chouType = "ten";
                me.tenChou();
            }else{
                me.chouType = "one";
                me.oneChou();
            }
        },
        oneChou: function(){
            var me = this;
            var hero = G.class.shero(me.data().hero[0]);
            hero.hide();
            hero.setPosition(me.nodes.ico_yx.width / 2, me.nodes.ico_yx.height / 2);
            hero.setTouchEnabled(true);
            hero.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_ENDED){
                    G.frame.yingxiong_jianjie.data({
                        id:me.data().hero[0].t
                    }).show();
                }
            });
            me.nodes.ico_yx.addChild(hero);
            G.class.ani.show({
                json: "ani_chouka_chuxian",
                addTo: me.nodes.ico_yx,
                x: me.nodes.ico_yx.width / 2,
                y: me.nodes.ico_yx.height / 2 + 7,
                repeat: false,
                cache:true,
                autoRemove: true,
                onkey: function (node, action, event) {
                    if(event == "chuxian") {
                        hero.show();
                        me.nodes.btn_qd.show();
                        if(me.data().data) me.nodes.btn_sc.show();
                        if(me.data().jifen) me.nodes.panel_yhsp.show();
                        me.event.emit("over");
                        if(hero.conf.star > 4) {
                            G.class.ani.show({
                                json: "ani_huoqu5xing",
                                addTo: hero,
                                x: hero.width / 2,
                                y: hero.height / 2,
                                repeat: true,
                                autoRemove: false,
								releaseRes:false,
                                onload :function(node,action){
                                    node.setScale(1.4);
                                }
                            });
                            me.showHero(hero.conf);
                        }
                        me.ui.setTimeout(function(){
                            G.guidevent.emit('chouka_hdyx_one_over');
                        },300);
                    }
                }
            });
            X.audio.playEffect("sound/jianglichuxian.mp3", false);
        },
        tenChou: function () {
            var me = this;
            var idx;
            var icon;
            var long = me.data().hero.length;

            for(var i = 0; i < long; i ++){
                if(me.nodes["ico_" + (i + 1)].getChildren().length < 1){
                    idx = i;
                    icon = me.nodes["ico_" + (i + 1)];
                    break;
                }
                if(me.nodes["ico_" + long].getChildren().length > 0) {
                    me.nodes.btn_qd.show();
                    me.nodes.btn_sc.show();
                    me.event.emit("over");
                    if(me.data().jifen) me.nodes.panel_yhsp.show();
                    return;
                }
            }
            var hero = G.class.shero(me.data().hero[idx]);
            hero.setPosition(icon.width / 2, icon.height / 2);
            hero.setTouchEnabled(true);
            hero.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_ENDED){
                    G.frame.yingxiong_jianjie.data({
                        id: me.data().hero[idx].t
                    }).show();
                }
            });
            hero.hide();
            icon.addChild(hero);

            G.class.ani.show({
                json: "ani_chouka_chuxian",
                addTo: icon,
                x: icon.width / 2,
                y: icon.height / 2 + 7,
                repeat: false,
                cache:true,
                autoRemove: true,
            });
            me.ui.setTimeout(function () {
                hero.show();
                if(hero.conf.star > 4) {
                    G.class.ani.show({
                        json: "ani_huoqu5xing",
                        addTo: hero,
                        x: hero.width / 2,
                        y: hero.height / 2,
                        repeat: true,
                        autoRemove: false,
                        onload :function(node,action){
                            node.setScale(1.4);
                        }
                    });
                    me.showHero(hero.conf, function () {
                        me.tenChou();
                    });
                }else {
                    me.tenChou();
                }
            }, 300);
            X.audio.playEffect("sound/jianglichuxian.mp3", false);
        },
        showHero: function (conf, callback) {
            var me = this;
            var layout = new ccui.Layout;
            layout.setContentSize(cc.director.getWinSize());
            layout.setTouchEnabled(true);
            me.ui.addChild(layout);

            G.class.ani.show({
                json: "ani_xinhuode_wuxing_ui",
                addTo: layout,
                x: layout.width / 2,
                y: layout.height / 2,
                repeat: false,
                autoRemove: false,
                onload: function (node, action) {
                    action.playWithCallback("kaishi", false, function () {
                        action.play("xunhuan", true);
                        X.setHeroModel({
                            parent: node.finds("renwu1"),
                            data: conf
                        });
                        me.ui.setTimeout(function () {
                            me.emit("aniOver");
                            layout.click(function (sender) {
                                callback && callback();
                                sender.removeFromParent();
                            })
                        }, 1000);
                    });
                },
            });

            G.class.ani.show({
                json: "ani_xinhuode_wuxing",
                addTo: layout,
                x: layout.width / 2,
                y: layout.height / 2,
                repeat: false,
                autoRemove: false,
                onload: function (node, action) {
                    node.finds("yingxiong").setString(conf.name)
                }
            });
        }
    });


    G.frame[ID] = new fun('chouka_hdyx.json', ID);
})();
;;/**
 * Created by ys on 2018/8/17.
 */
(function () {
    //抽卡_积分召唤
    var ID = 'chouka_jfzh';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;

        },
        bindBtn: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('chouka_tip.json', function (view) {
                me._view = view;
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
                view.setTouchEnabled(true);
            });
        },
        bindBtn: function () {
            var me = this;

            me.ui.finds('panel_1').touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var view = me._view;

            var widget = G.class.sitem("4009");
            widget.panel_zz.hide();
            widget.num.hide();
            widget.sui.hide();
            widget.setPosition(cc.p(view.nodes.panel_1.width/2, view.nodes.panel_1.height/2));
            view.nodes.panel_1.addChild(widget);

            if(me.data().jifen < 1000 || P.gud.lv < 3){
                view.nodes.btn_3.setBright(false);
                view.nodes.btn_3.setTouchEnabled(true);
                view.nodes.btn_3.setTitleColor(cc.color(G.gc.COLOR.n15));
            }
            view.nodes.btn_3.click(function () {
                if(G.frame.chouka.DATA.jifen < 1000 || P.gud.lv < 3){
                    G.tip_NB.show(L("NLTANDVIP"));
                    return;
                }
                me.huan();
                G.frame.chouka_jfzh.remove();
            }, 1000)
        },
        huan: function(){
            var me = G.frame.chouka;

            G.ajax.send('jitan_duihuan',[],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    X.audio.playEffect("sound/zhaohuan.mp3");
                    if(G.frame.chouka_hdyx.isShow){
                        G.frame.chouka_hdyx.nodes.ico_yx.removeAllChildren();
                        for(var i = 0; i < 10; i ++){
                            G.frame.chouka_hdyx.nodes["ico_" + (i + 1)].removeAllChildren();
                        }
                    }
                    G.frame.chouka_hdyx.data({
                        hero:d.d.prize
                    }).show();
                    me.getData(function () {
                        me.setContents();
                        if (G.frame.chouka_hdyx.isShow) {
                            G.frame.chouka_hdyx.setBar();
                            G.frame.chouka_hdyx.bindBtn();
                        }
                    });
                }else{
                    X.audio.playEffect("sound/dianji.mp3", false);
                }
            },true);
        },
    });

    G.frame[ID] = new fun('panel_nr.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/8.
 */
(function () {
    //极限通关
    var ID = 'dafashita_jxtg';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
            me.nodes.mask.click(function (sender, type) {
                me.remove();
            });
            setPanelTitle(me.nodes.txt_title, L("JXTG"));
        },
        getData: function(callback){
            var me = this;
            G.ajax.send("fashita_recording", [me.data()], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if(d.s == 1){
                    me.DATA = d.d.recording;
                    callback && callback();
                }
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            new X.bView("fashita_jxtg.json", function (node) {
                me.view = node;
                me.view.nodes.list.hide();
                me.nodes.panel_nr.removeAllChildren();
                me.nodes.panel_nr.addChild(node);
                me.getData(function () {
                    me.setContents();
                })
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            for(var i = 0; i < 3; i ++){
                var list = me.view.nodes.list.clone();
                var conf = me.DATA[i];
                me.setList(list, conf, i + 1);
            }
        },
        setList: function (list, conf, idx) {
            var me = this;
            X.autoInitUI(list);
            if(conf){
                var data = conf.fightdata.headdata[0];
                list.nodes.btn_lx.click(function (sender, type) {
                    conf.fightdata.pvType = "video";//增加跳过类型
                    G.frame.fight.demo(conf.fightdata);
                });
                list.nodes.img_txk.hide();
                list.nodes.text_mz.setString(data.name);
                var head = G.class.shead(data);
                head.setPosition(list.nodes.panel_tx.width / 2, list.nodes.panel_tx.height / 2);
                list.nodes.panel_tx.addChild(head);
            }else{
                list.nodes.btn_lx.hide();
                list.nodes.text_mz.hide();
                list.nodes.img_txk.hide();
                list.nodes.panel_tx.hide();
                list.nodes.img_zwnr.show();
            }

            list.show();
            var panel = me.view.finds("panel_" + idx);
            list.setPosition(cc.p(0,0));

            panel.addChild(list);
        }
    });
    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/8.
 */
(function () {
    //大法师塔
    var ID = 'dafashita';

    var fun = X.bUi.extend({
        extConf: {
            1: {
                scale: .15,
                pos: {x: 351, y: 789},
                tier: 1,
                isModel: true,
                isTouch: false,
                opacity: 100,
                txt: false,
                actionCall: function (node, time, callback) {
                    node.runActions([
                        cc.spawn(cc.moveTo(time, 172, 732), cc.scaleTo(time, .3, .3), cc.fadeTo(time, 175)),
                        cc.callFunc(function () {
                            callback && callback(node);
                        })
                    ])
                }
            },
            2: {
                scale: .3,
                pos: {x: 172, y: 732},
                tier: 3,
                isModel: true,
                isTouch: false,
                opacity: 175,
                txt: false,
                actionCall: function (node, time, callback) {
                    node.runActions([
                        cc.spawn(cc.moveTo(time, 464, 679), cc.scaleTo(time, .4, .4), cc.fadeTo(time, 230)),
                        cc.callFunc(function () {
                            callback && callback(node);
                        })
                    ])
                }
            },
            3: {
                scale: .4,
                pos: {x: 464, y: 679},
                isModel: true,
                tier: 5,
                isTouch: false,
                opacity: 230,
                txt: false,
                actionCall: function (node, time, callback) {
                    node.runActions([
                        cc.spawn(cc.moveTo(time, 242, 505), cc.scaleTo(time, .9, .9), cc.fadeTo(time, 255)),
                        cc.callFunc(function () {
                            callback && callback(node);
                        })
                    ])
                }
            },
            4: {
                scale: .9,
                pos: {x: 242, y: 505},
                isModel: true,
                tier: 7,
                isTouch: true,
                opacity:255,
                txt: true,
                actionCall: function (node, time) {
                    node.runActions([
                        cc.spawn(cc.moveBy(time, 400, -1000)),
                        cc.removeSelf()
                    ])
                }
            }
        },
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me._super(json, id, {action:true});
            me.preLoadRes=['fashita.png','fashita.plist'];
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_fh.click(function (sender, type) {
                me.remove();
            });
            me.ui.finds("btn_bx").click(function (sender, type) {
                var num = parseInt(me.DATA.layernum / 10);
                if(G.class.dafashita.getPrize().passprize[num]) {
                    G.frame.jiangliyulan.data({
                        prize: G.class.dafashita.getPrize().passprize[num][1],
                        layer: G.class.dafashita.getPrize().passprize[num][0]
                    }).show();
                } else {
                    G.tip_NB.show(L("ZWJL"));
                }
            });
            me.nodes.btn_bz.click(function (sender, type) {
                G.frame.help.data({
                    intr:L("TS6")
                }).show();
            });
            me.nodes.btn_ph.click(function (sender, type) {
                G.frame.dafashita_phb.show();
            });
            me.nodes.btn_kstx.hide();
            me.nodes.btn_kstx.click(function () {
                G.frame.dafashita_tiaozhan.data({
                    conf: me.conf[me.DATA.layernum + 1]
                }).show();
            });
        },
        getPrize: function(callback) {
            var me = this;

            G.frame.jiangli.once("hide", function () {
                callback && callback();
            }).data({
                prize: G.class.dafashita.getPrize().passprize[me.DATA.layernum / 10 - 1][1]
            }).show();
            me.DATA.prizelist.push(me.DATA.layernum);
            me.setBoxText();
            // me.ajax("fashita_getprize", [me.DATA.layernum], function (str, data) {
            //     if(data.s == 1) {
            //
            //     }
            // })
        },
        setBoxText: function() {
            var me = this;
            var last;
            var conf = G.class.dafashita.getPrizeTargetArr();

            for (var i = 0; i < conf.length; i ++) {
                if(!X.inArray(me.DATA.prizelist, conf[i])) {
                    last = conf[i];
                    break;
                }
            }

            if(last) {
                me.nodes.text_bx.setString(me.DATA.layernum + "/" + last);
            } else {
                me.nodes.text_bx.setString(me.DATA.layernum + "/" + conf[conf.length - 1]);
            }
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("fashita_open", [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if(d.s == 1){
                    me.DATA = d.d.fashita;
                    me.DATA.passlist = [];
                    for(var i = 0; i < me.DATA.layernum; i ++) {
                        me.DATA.passlist.push(i);
                    }
                    me.DATA.prizelist.sort(function (a, b) {
                        return a < b ? -1 : 1;
                    });
                    callback && callback();
                }
            })
        },
        onOpen: function () {
            var me = this;
            X.audio.playEffect("sound/openfashita.mp3");
            me.conf = G.class.dafashita.get();
            me.com = G.class.dafashita.getPrize();
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        show: function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me, arguments);
            })
        },
        onShow: function () {
            var me = this;

            me.nodes.gw.hide();
            me.action.play("y", true);

            me.sui = [];
            me.listArr = [];
            me.setContents();
            me.setBoxText();

            me.ui.setTimeout(function(){
                G.guidevent.emit('dafashitaOpenOver');
            },200);
        },
        onHide: function () {
            var me = this;
            X.audio.playEffect("sound/openfashita.mp3");
            me.event.emit('hide');
            G.hongdian.getData("fashita", 1);
        },
        setContents: function () {
            var me = this;
            var arr = me.getLevelArr();
            var type = {
                0: 4,
                1: 3,
                2: 2,
                3: 1,
            };
            var info = [
                {scale: .25, opacity: 100, tier: 2, pos: {x: 289, y: 740}, time: 3},
                {scale: .4, opacity: 180, tier: 4, pos: {x: 345, y:674}, time: 2},
                {scale: .6, opacity: 255, tier: 6, pos: {x: 556, y:549}, time: 1}
            ];

            me.nodes.txt_mz.setString(X.STR(L("SDSW"), me.DATA.layernum + 1));

            for (var i = 0; i < arr.length; i ++) {
                var list =  me.nodes.list.clone();
                list.idx = type[i];
                list.type = arr[i];
                me.setTZ(list);
                list.setName(arr[i]);
                me.listArr.push(list);
            }

            for (var i = 0; i < 3; i ++) {
                (function (i) {
                    var sui = new ccui.ImageView("img/julongshendian/img_st2.png", 1);
                    sui.setPosition(info[i].pos);
                    sui.setScale(info[i].scale);
                    sui.conf = info[i];
                    sui.opacity = info[i].opacity;
                    sui.zIndex = info[i].tier;
                    var action = cc.repeatForever(cc.sequence(cc.moveBy(info[i].time, 0, 6 - i), cc.moveBy(info[i].time, 0, -6 + i)));
                    sui.action = action;
                    sui.runAction(action);
                    me.nodes.panel_bg.addChild(sui);
                    me.sui.push(sui);
                })(i);
            }
        },
        setSui: function(bool) {
            var me = this;

            if(bool) {
                me.sui[0].runAction(cc.fadeTo(0.5, me.sui[0].conf.opacity));
                me.sui[1].runAction(cc.fadeTo(0.5, me.sui[1].conf.opacity));
                me.sui[2].runAction(cc.fadeTo(0.5, me.sui[2].conf.opacity));
            } else {
                me.sui[0].runAction(cc.fadeOut(0.5));
                me.sui[1].runAction(cc.fadeOut(0.5));
                me.sui[2].runAction(cc.fadeOut(0.5));
            }
        },
        setTZ: function(list) {
            var me = this;
            var conf = me.extConf[list.idx];

            if(conf.isModel) {
                if(list.type == "box") {
                    list.children[1].removeAllChildren();
                    G.class.ani.show({
                        json: "ani_xinfashita_baoxiang",
                        addTo: list.children[1],
                        x: list.children[1].width / 2,
                        y: 40,
                        repeat: true,
                        autoRemove: false,
                    });
                    list.box = true;
                } else {
                    if(me.conf[list.type]) {
                        X.setModel({
                            parent: list.children[1],
                            data: {
                                hid: me.conf[list.type].model
                            },
                        });
                    } else {
                        if(X.keysOfObject(me.conf).length + 1 == list.type) {
                            list.children[1].setBackGroundImage("img/julongshendian/img_sttg.png", 1);
                            list.children[1].y = 242;
                        }
                    }
                }
            }
            list.taizi = true;
            list.setScale(conf.scale);
            list.setCascadeOpacityEnabled(true);
            list.children[0].setBackGroundImage("img/julongshendian/img_st.png", 1);
            list.children[1].setCascadeOpacityEnabled(true);
            list.opacity = conf.opacity;
            list.actionCall = conf.actionCall;

            if(conf.isTouch && me.conf[list.type]) {
                G.class.ani.show({
                    json: 'ani_gonghuiboss',
                    addTo: list.children[1],
                    x: list.children[1].width / 2,
                    y: 50,
                    repeat: true,
                    autoRemove: false,
                    onload: function (node) {
                        node.zIndex = 999
                    }
                });
            }

            if((me.conf[list.type] || list.type == "box") && conf.isTouch) {
                list.children[1].setTouchEnabled(true);
            } else {
                list.children[1].setTouchEnabled(false);
            }

            list.show();
            list.setPosition(conf.pos);
            list.zIndex = conf.tier;

            if(!cc.isNode(me.nodes.panel_bg.getChildByName(list.getName()))) {
                me.nodes.panel_bg.addChild(list);
            }

            X.enableOutline(list.children[2], "#000000", 2);
            if(conf.txt && me.conf[list.type]) {
                list.children[2].show();
                list.children[2].setString(X.STR(L("SDSW"), list.type));
            } else if(conf.txt && list.type == "box"){
                list.children[2].show();
                list.children[2].setString(L("BXJL"));
            } else {
                list.children[2].hide();
            }
            list.children[1].type = list.type;
            list.children[1].click(function (sender) {
                if(sender.type == "box") {
                    me.getPrize(function () {
                        me.playLevelAni();
                    });
                } else {
                    G.frame.dafashita_tiaozhan.data({
                        conf: me.conf[sender.type]
                    }).show();
                }
            });
        },
        playLevelAni: function() {
            var me = this;

            me.setSui(false);
            for (var i = 0; i < me.listArr.length; i ++) {
                var node = me.listArr[i];
                (function (node) {
                    node.actionCall(node, 0.5, function (node) {
                        node.idx ++;
                        me.setTZ(node);
                    });
                })(node);
            }
            me.ui.setTimeout(function () {
                me.listArr.splice(0, 1);
                var list = me.nodes.list.clone();
                var arr = me.getLevelArr();
                list.type = arr[arr.length - 1];
                list.idx = 1;
                list.setName(arr[arr.length - 1]);
                me.setTZ(list);
                me.listArr.push(list);
                me.nodes.txt_mz.setString(X.STR(L("SDSW"), me.DATA.layernum + 1));
                me.setBoxText();
                me.setSui(true);
            }, 700);
        },
        getLevelArr: function () {
            var me = this;
            var arr = [];
            var index = 1;
            var curNum = me.DATA.layernum;

            while (arr.length != 4) {
                if(curNum % 10 == 0 && curNum != 0 && !X.inArray(me.DATA.prizelist, curNum) && !X.inArray(arr, "box")) {
                    arr.push("box");
                } else if(arr[arr.length - 1] && arr[arr.length - 1] != 0 && arr[arr.length - 1] % 10 == 0 && !X.inArray(arr, "box")) {
                    arr.push("box");
                } else {
                    arr.push(curNum + index);
                    index ++;
                }
            }

            return arr;
        },
        fightCall: function () {
            var me = this;
            
            me.ajax("fashita_fight", [G.frame.dafashita.DATA.layernum + 1, X.cacheByUid('fight_fashita')], function (str, d) {
                if(d.d.fightres.winside == 0){
                    G.frame.dafashita.DATA.layernum ++;
                }
                d.d.fightres['pvType'] = 'pvdafashita';
                if(d.d.israndom) {
                    G.frame.fight.remove();
                    G.class.ani.show({
                        json: "ani_taopao",
                        addTo: G.frame.dafashita.ui,
                        x: G.frame.dafashita.ui.width / 2,
                        y: G.frame.dafashita.ui.height / 2,
                        repeat: false,
                        autoRemove: true,
                        onend: function () {
                            G.frame.fight_win.data(d.d).show();
                            G.tip_NB.show(L("ZJSL"));
                        }
                    });
                }else {
                    G.frame.fight.data({
                        prize:d.d.prize,
                        pvid:me.DATA.layernum + 1
                    }).demo(d.d.fightres);
                }
            })
        },
        refreshPanel:function () {
            var me = this;
            var chr = me.nodes.panel_bg.children;

            for (var i in chr) {
                if(chr[i].taizi) {
                    chr[i].removeFromParent(true);
                }
            }
            me.listArr = [];

            var arr = me.getLevelArr();
            var type = {
                0: 4,
                1: 3,
                2: 2,
                3: 1,
            };

            me.nodes.txt_mz.setString(X.STR(L("SDSW"), me.DATA.layernum + 1));

            for (var i = 0; i < arr.length; i ++) {
                var list =  me.nodes.list.clone();
                list.idx = type[i];
                list.type = arr[i];
                me.setTZ(list);
                list.setName(arr[i]);
                me.listArr.push(list);
            }
        }
    });
    G.frame[ID] = new fun('julongshendian.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/8.
 */
(function () {
    //排行榜
    var ID = 'dafashita_phb';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
            me.nodes.text_zdjl.setString(L("PHB"));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("rank_open", [2], function (d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1){
                    me.DATA = d.d;
                    callback && callback();
                }
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            new X.bView("ui_paihangbang.json", function (view) {
                me.view = view;
                me.nodes.panel_nr.addChild(view);
                me.view.nodes.panel_rank.height -= 103;
                ccui.helper.doLayout(me.view.nodes.panel_rank);
                cc.enableScrollBar( me.view.nodes.panel_rank.finds('listview$') );
                X.viewCache.getView('ui_list2.json', function (node) {
                    me.list = node.nodes.list_rank;
                    me.getData(function () {
                        me.setContents();
                    });
                });
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var scrollview = me.view.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();

            var data = me.DATA;
            me.setMyRank();
            if (data.ranklist.length < 1) {
                cc.isNode(me.ui.finds('zwnr')) && me.ui.finds('zwnr').show();
                return;
            } else {
                cc.isNode(me.ui.finds('zwnr')) && me.ui.finds('zwnr').hide();
            }

            for (var i = 0; i < data.ranklist.length; i++) {
                data.ranklist[i].rank = i + 1;
            }
            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,10);
            table.setData(data.ranklist);
            table.reloadDataWithScroll(true);
            scrollview.getChildren()[0].getChildren()[0].x = -1;
        },
        setItem: function (ui, data) {
            X.autoInitUI(ui);
            var layPh = ui.nodes.img_rank;
            var txtPh = ui.nodes.sz_phb;
            var layIco = ui.nodes.panel_tx;
            var txtName = ui.nodes.txt_name;
            var txtGuanqia = ui.nodes.txt_number;
            ui.nodes.txt_title.setString(L('CENGSHU'));

            layPh.hide();
            txtPh.setString('');
            layIco.removeAllChildren();
            if (data.rank < 0) {
                txtPh.setString(0);
            } else if (data.rank < 4) {
                layPh.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                layPh.show();
            } else {
                txtPh.setString(data.rank);
                txtPh.show();
            }

            var wid = G.class.shead(data.headdata);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);
            wid.data = data.headdata;
            wid.setTouchEnabled(true);
            wid.icon.setTouchEnabled(false);
            wid.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    G.frame.wanjiaxinxi.data({
                        pvType: 'zypkjjc',
                        uid: sender.data.uid
                    }).checkShow();
                }
            });

            txtName.setString(data.headdata.name);
            txtGuanqia.setString(data.layernum);

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            layPh.setTouchEnabled(false);
        },
        setMyRank: function () {
            var me = this;

            var rank = me.DATA.myrank;
            var txtPh = me.view.nodes.fnt_player;
            var txt = me.view.finds("txt_player");
            var txtGuanqia = me.view.finds('txt_level_0');
            if (!rank || rank == -1) {
                txtPh.setString("");
                me.view.finds('wsb_player').show();
            } else {
                txtPh.setString(rank);
            }
            txtGuanqia.setString(G.frame.dafashita.DATA.layernum);

            me.view.nodes.panel_player.show();
        }
    });
    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/8.
 */
(function () {
    //通关奖励
    var ID = 'dafashita_tgjl';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
            me.ui.nodes.tip_title.setString(L('TGJL'));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.bx = me.data();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            new X.bView('tongguanjiangli.json', function (view) {
                me._view = view;
                me._view.nodes.panel_tgjl.show();
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);

                X.viewCache.getView('tongguanjiangli_list.json', function (node) {
                    me.list = node.finds('list_nr');
                    me.setContents();
                });
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var panel = me._view;
            var prize = [];
            var conf = G.class.dafashita.getPrize().passprize;
            var scrollview = panel.nodes.scrollview;
            var keys = X.keysOfObject(conf);
            for(var i = 0; i < keys.length; i ++){
                conf[keys[i]].push(i);
                prize.push(conf[keys[i]]);
            }

            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();

            me.sortData(prize);
            me.list.hide();

            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8, 10);
            table.setData(prize);
            table.reloadDataWithScroll(true);
        },
        setItem: function(ui, data){
            X.autoInitUI(ui);
            ui.setTouchEnabled(false);
            var me = this;
            var txtName = ui.nodes.wz_title;
            var layWp = ui.nodes.ico_jlwp;
            var btnLq = ui.nodes.btn1_on;
            var ylq = ui.nodes.img_ylq;
            ylq.hide();
            btnLq.hide();

            var dqgk = G.frame.dafashita.DATA.layernum;
            txtName.setString(X.STR(L('FST_TADQ_CENG'),data[0],G.frame.dafashita.DATA.passlist.length,data[0]));
            X.alignItems(layWp,data[1],'left',{
                touch:true
            });
            if(G.frame.dafashita.DATA.passlist.length >= data[0] && !(X.inArray(G.frame.dafashita.DATA.prizelist, data[0]))){
                btnLq.hide();
                ylq.hide();
            }
            if(G.frame.dafashita.DATA.passlist.length >= data[0] && (X.inArray(G.frame.dafashita.DATA.prizelist, data[0]))){
                ylq.show();
                btnLq.hide();
            }
            btnLq.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_ENDED){
                    sender.setTouchEnabled(false);
                    G.ajax.send("fashita_getprize", [data[0]], function (d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            G.frame.jiangli.data({
                                prize: d.d.prize
                            }).show();
                            G.frame.dafashita.getData(function () {
                                me.setContents();
                            });
                            if(me.bx && me.bx.id == data[0]) {
                                me.bx.target.setBackGroundImage("img/fashita/img_fst_bx2.png", 1);
                                me.bx.target.setTouchEnabled(false);
                            }
                        }
                    })
                }
            })
        },
        sortData: function (data) {
            var passArr = G.frame.dafashita.DATA.passlist;
            var prizeArr = G.frame.dafashita.DATA.prizelist;
            for(var i = 0; i < data.length; i ++){
                if(passArr.length >= data[i][0] && !X.inArray(prizeArr, data[i][0])){
                    data[i].push(1);
                }else if(passArr.length >= data[i][0] && X.inArray(prizeArr,data[i][0])){
                    data[i].push(3);
                }else{
                    data[i].push(2);
                }
            }

            data.sort(function (a, b) {
                if(a[a.length - 1] !== b[b.length - 1]){
                    return a[a.length - 1] < b[b.length - 1] ? -1 : 1;
                }else{
                    return a[0] < b[0] ? -1 : 1;
                }
            })
        }
    });
    G.frame[ID] = new fun('ui_tip1.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/8.
 */
(function () {
    //挑战
    var ID = 'dafashita_tiaozhan';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
            me.nodes.mask.click(function (sender, type) {
                me.remove();
            });
            me.nodes.btn_lx.click(function (sender, type) {
                G.frame.dafashita_jxtg.data(me.data().conf.id).show();
            });
            me.nodes.btn_zd.click(function (seder, type) {
                var obj = {
                    pvType:'pvdafashita',
                    data:me.data().conf.id
                };
                G.frame.yingxiong_fight.data(obj).show();
            })
        },
        onOpen: function () {
            var me = this;
            X.audio.playEffect("sound/openguanqia.mp3");
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.setContents();
        },
        onHide: function () {
            var me = this;
            X.audio.playEffect("sound/openguanqia.mp3");
        },
        setContents: function () {
            var me = this;
            var zhanli = 0;
            var bossArr = [];
            var conf = me.data().conf;
            var enemyConf = G.class.npc.getById(conf.boss);
            me.nodes.text_guanqia.setString(X.STR(L('TANXIAN_CENG'),conf.id));
            for(var i = 0; i < enemyConf.length; i ++){
                var boss = G.class.shero(enemyConf[i]);
                var info = G.class.herogrow.getById(enemyConf[i].hid);
                zhanli += info.hp + info.hp_grow * (enemyConf[i].lv - 1) / 6;
                zhanli += info.atk + info.atk_grow * (enemyConf[i].lv - 1);
                zhanli += info.def + info.def_grow * (enemyConf[i].lv - 1);
                bossArr.push(boss);
            }
            X.center(bossArr, me.nodes.panel_ico1, {
                callback: function (node) {
                    node.setScale(.8);
                }
            });
            me.nodes.text_zdl1.setString(parseInt(zhanli));
            X.alignItems(me.nodes.panel_ico2, conf.prize, "center", {
                touch: true
            })
        },
    });
    G.frame[ID] = new fun('julongshendian_dsxx.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/21.
 */
(function () {
    //大秘境
    var ID = 'damijing';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_bz.click(function () {
                G.frame.help.data({
                    intr:L("TS18")
                }).show();
            });

            me.nodes.btn_fanhui.click(function () {
                me.remove();
            });

            me.ui.finds("btn_jl").click(function () {
                G.frame.damijing_jlyl.show();
            });

            me.ui.finds("btn_phb").click(function () {
                G.frame.damijing_phb.show();
            });

            me.ui.finds("btn_mjsd").click(function () {
                if (!me.DATA.trader){
                    G.tip_NB.show(L('ZWSP'));
                    return;
                }
                me.nodes.btn_dj.hide();
                if(me.dijing) me.setDiJingAni();
                G.frame.damijing_shop.show();
            });

            me.ui.finds("img_di").setTouchEnabled(true);
            me.ui.finds("img_di").click(function () {

                if(!X.cacheByUid("dmj_jumpFight")) {
                    X.cacheByUid("dmj_jumpFight", 1);
                    me.ui.finds("ico_gou").show();
                }else {
                    X.cacheByUid("dmj_jumpFight", 0);
                    me.ui.finds("ico_gou").hide();
                }
            });

            G.class.ani.show({
                json: "ani_mijing_kaizhan",
                addTo: me.ui.finds("btn_an"),
                x: me.ui.finds("btn_an").width / 2,
                y: me.ui.finds("btn_an").height / 2,
                repeat: true,
                autoRemove: false,
                onend: function (node) {
                    me.ui.finds("btn_an").ani = node;
                }
            });

            if(X.cacheByUid("dmj_jumpFight")) {
                me.ui.finds("ico_gou").show();
            }else {
                me.ui.finds("ico_gou").hide();
            }

            me.ui.finds("btn_an").click(function (sender) {
                if(me.isAllDead) {
                    G.tip_NB.show(L("ALL_HERO_DEAD"));
                    return;
                }
                me.ajax("watcher_fight", [me.curIdx], function (str, data) {
                    if(data.s == 1) {
                        sender.hide();
                        data.d.fightres.pvType = "damijing";
                        var obj = {
                            1: me.DATA.herolist[me.curIdx][0],
                            2: me.DATA.npc.headdata
                        };
                        data.d.fightres.pv = obj;
                        if(X.cacheByUid("dmj_jumpFight")){
                            if(data.d.fightres.winside) {
                                G.frame.fight_fail.data(data.d.fightres).show();
                            }else {
                                G.frame.fight_win.data(data.d.fightres).show();
                            }
                        }else {
                            G.frame.fight.demo(data.d.fightres);
                        }
                        me.DATA = data.d.data;

                        if(!data.d.fightres.winside) {
                            var winPrize = data.d.winprize;
                            var layout = me.ui.finds("panel_ui");
                            var target = me.ui.finds("js_you");
                            me.ui.finds("ico_qizi").hide();
                            target.hide();
                            me.setLevelInfo();
                            if(me.DATA.layer <= X.keysOfObject(G.class.getConf("watcher")).length) {
                                me.setWinAni(winPrize, layout, target);
                            }
                        }else {
                            me.ui.finds("ico_qizi").show();
                            me.ui.finds("btn_an").show();
                        }
                        me.setEnemy();
                        me.setHeroList();
                        me.setButtonState();
                        G.hongdian.getData("watcher", 1, function () {
                            me.checkRedPoint(true);
                        })
                    }
                })
            }, 500);

            me.nodes.panel_rw.setTouchEnabled(true);
            me.nodes.panel_rw.click(function() {
                if(!me.nodes.panel_rw.getChildren()[0]) return;
                me.nodes.panel_rw.getChildren()[0].runAni(0, "atk", false);
                me.nodes.panel_rw.getChildren()[0].addAni(0, "wait", true, 0);
            });

            me.nodes.panel_rw2.setTouchEnabled(true);
            me.nodes.panel_rw2.click(function (sender) {
                G.frame.damijing_drxx.data(me.DATA.npc).show();
            });

            var obj = {
                "bg_ax": 1,
                "bg_sd": 2,
                "bg_fy": 3
            };
            for(var i in obj) {
                var btn = me.ui.finds(i);
                btn.idx = obj[i];
                (function (btn) {
                    btn.setTouchEnabled(true);
                    btn.touch(function (sender, type) {
                        if(type == ccui.Widget.TOUCH_BEGAN) {
                            G.frame.damijing_ysxq.data(sender.idx).show();
                        }else if(type == ccui.Widget.TOUCH_ENDED || type == ccui.Widget.TOUCH_NOMOVE || type == ccui.Widget.TOUCH_CANCELED) {
                            sender.setTimeout(function () {
                                if(G.frame.damijing_ysxq.isShow) {
                                    G.frame.damijing_ysxq.remove();
                                }
                            }, 100);
                        }
                    })
                })(btn)
            }

            me.nodes.btn_dj.click(function (sender) {
                if(!me.dijing) return;
                sender.hide();
                me.setDiJingAni(true);
            })

        },
        setDiJingAni: function(isAni) {
            var me = this;

            G.class.ani.show({
                json: "ani_mijing_dijing",
                addTo: me.ui.finds("panel_ui"),
                x: me.ui.finds("js_you").x,
                y: me.ui.finds("js_you").y + 100,
                repeat: false,
                autoRemove: true,
                onend: function () {
                    me.playAni(function () {
                        me.ui.finds("js_you").show();
                        me.ui.finds("ico_qizi").show();
                        me.ui.finds("btn_an").show();
                    });
                }
            });

            G.setNewIcoImg(me.ui.finds("btn_mjsd"));
            G.class.ani.show({
                json: "ani_mijing_guangxiao",
                addTo: me.ui.finds("btn_mjsd"),
                x: me.ui.finds("btn_mjsd").width / 2,
                y: me.ui.finds("btn_mjsd").height / 2,
                repeat: false,
                autoRemove: true
            });

            me.dijing.runAction(cc.sequence(cc.spawn(cc.fadeOut(0.5), cc.scaleTo(0.5, 0.1, 0.1), cc.moveBy(0.5, 0, 100)), cc.callFunc(()=>{
                me.dijing.removeFromParent();
                me.dijing = undefined;
            })));
            if(cc.isNode(me.touchLayout)) me.touchLayout.hide();
        },
        setWinAni: function(winPrize, layout1, target) {
            var me = this;

            function f() {
                var endPos;
                var data = winPrize.val[0];
                var startPos = cc.p(target.x, target.y + 90);

                var layout = new ccui.Layout;
                layout.setContentSize(cc.size(20, 20));
                layout.setAnchorPoint(0.5, 0.5);
                layout.setPosition(startPos);

                layout1.addChild(layout);

                if(winPrize.key == "mixture") {
                    endPos = layout1.convertToNodeSpace(me.ui.finds("Image_1").convertToWorldSpace(
                        me.nodes["txt_sl" + data.id].getParent().getPosition()));

                }else {
                    var chr;
                    var children = me.ui.finds("lview").children;
                    for (var i in children) {
                        if(children[i].idx == data.id) {
                            chr = children[i];
                            break;
                        }
                    }
                    if(chr) {
                        endPos = layout1.convertToNodeSpace(me.ui.finds("lview").convertToWorldSpace(
                            chr.getPosition()
                        ))
                    }
                }

                G.class.ani.show({
                    json: "ani_tuoweilizi",
                    addTo: layout,
                    x: layout.width / 2,
                    y: layout.height / 2,
                    repeat: true,
                    autoRemove: false,
                    onload: function (node) {
                        node.getChildren()[0].getChildren()[0].getChildren()[0].positionType = 0;
                        G.class.ani.show({
                            json: winPrize.key == "mixture" ? "ani_ico_ys" + data.id : "ani_ico_wu" + data.id,
                            addTo: layout,
                            x: layout.width / 2,
                            y: layout.height / 2,
                            repeat: true,
                            autoRemove: false,
                            onload: function () {
								layout.runActions([
									cc.moveTo(0.1, endPos),
									cc.callFunc(function(){
										G.class.ani.show({
											json: "ani_mijing_guangxiao",
											addTo: layout1,
											x: endPos.x,
											y: endPos.y,
											repeat: false,
											autoRemove: true,
											onend: function () {
												me.setMedicinal();
												me.setBuff();

												me.playAni(function () {
													target.show();
													me.ui.finds("ico_qizi").show();
													me.ui.finds("btn_an").show();
												})
											}
										});
									}),
									cc.removeSelf()
								]);
                            }
                        });
                    }
                });
            }

            G.frame.fight_win.once("hide", function () {
                switch (winPrize.key) {
                    case "box":
                        me.zz.show();
                        X.spine.show({
                            json: 'spine/' + 'xiangzi' + '.json',
                            addTo: layout1,
                            cache: true,
                            x: target.x - 60,
                            y: target.y,
                            z: 0,
                            autoRemove: false,
                            onload: function (node) {
                                node.stopAllAni();
                                node.setTimeScale(1);
                                node.opacity = 255;
                                node.setScale(1);
                                node.runAni(0, "baoxiang_daiji", false);
                                node.setCompleteListener(function () {
                                    G.frame.jiangli.once("hide", function () {
                                        node.removeFromParent();
                                        me.playAni(function () {
                                            target.show();
                                            me.ui.finds("ico_qizi").show();
                                            me.ui.finds("btn_an").show();
                                            me.zz.hide();
                                        });
                                    }).data({
                                        prize: winPrize.val
                                    }).show();
                                })
                            }
                        });
                        break;
                    case "trader":
                        me.playAni(function () {
                            X.spine.show({
                                json: 'spine/' + 'dijing' + '.json',
                                addTo: layout1,
                                cache: true,
                                x: target.x,
                                y: target.y,
                                z: 0,
                                autoRemove: false,
                                onload: function (node) {
                                    node.stopAllAni();
                                    node.setTimeScale(1);
                                    node.opacity = 255;
                                    node.setScale(1);
                                    node.runAni(0, "dj", true);

                                    me.dijing = node;
                                    me.nodes.btn_dj.show();

                                    if(me.touchLayout) {
                                        me.touchLayout.show();
                                    }else {
                                        var touchLayout = me.touchLayout = me.ui.finds("js_you").clone();
                                        touchLayout.removeAllChildren();
                                        touchLayout.setTouchEnabled(true);
                                        touchLayout.show();
                                        touchLayout.click(function () {
                                            G.frame.damijing_buy.show();
                                        });
                                        touchLayout.setName("shopBtn");
                                        touchLayout.zIndex = 40;
                                        layout1.addChild(touchLayout);
                                    }
                                }
                            });
                        });
                        break;
                    case "flop":
                        G.class.ani.show({
                            json: "ani_fanpai",
                            addTo: layout1,
                            x: target.x + 20,
                            y: target.y + 150,
                            repeat: true,
                            autoRemove: false,
                            onload: function (node, action) {
                                action.playWithCallback("chuxian", false, function () {
                                    action.play("animation0", true);
                                    G.frame.damijing_flop.once("hide", function () {
                                        me.card.removeFromParent();
                                        me.ui.finds("ico_qizi").show();
                                        me.ui.finds("btn_an").show();
                                        target.show();
                                    }).data(winPrize.val).show();
                                });
                                me.card = node;
                            }
                        });
                        break;
                    default:
                        G.class.ani.show({
                            json: "ani_mijing_taizi",
                            addTo: layout1,
                            x: target.x + 20,
                            y: target.y,
                            repeat: false,
                            autoRemove: true,
                            onload: function (node) {
                                node.setName("taizi");
                            }
                        });
                        G.class.ani.show({
                            json: "ani_mijing_shanguang",
                            addTo: layout1,
                            x: target.x,
                            y: target.y + 90,
                            repeat: false,
                            autoRemove: true,
                            onkey: function (node, action, event) {
                                if(event == "chuxian") {
                                    if(layout1.getChildByName("taizi")) layout1.getChildByName("taizi").removeFromParent();
                                    f();
                                }
                            }
                        });
                        break;
                }
            });
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();

            cc.enableScrollBar(me.ui.finds("lstView"));
            me.ui.finds("lstView").setTouchEnabled(false);
            me.nodes.list.hide();
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback, err) {
            var me = this;

            G.ajax.send('watcher_open', [], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    if(me.DATA.prize) {
                        me.event.once("show", function () {
                            G.class.ani.show({
                                json: "ani_mijing_saodang",
                                addTo: me.ui,
                                x: me.ui.width / 2,
                                y: me.ui.height / 2,
                                repeat: false,
                                autoRemove: true,
                                onend: function () {
                                    if(me.DATA.prize.length > 0) {
                                        G.frame.jiangli.data({
                                            prize: me.DATA.prize,
                                            sd: true
                                        }).show();
                                    }
                                }
                            });
                        })
                    }
                    me.data(true).show();
                }else if(d.s == -2) {
                    me.once("show", function () {
                        G.frame.damijing_setDef.show();
                    }).show();

                }
            }, true);
        },
        checkShow: function() {
            var me = this;

            me.getData(function () {
                me.show()
            }, function () {
                G.frame.damijing_setDef.show();
            })
        },
        onShow: function () {
            var me = this;
            me.event.emit("show");
            if(!me.data()) return;

            var zz = me.zz = me.nodes.mask;
            zz.hide();
            zz.zIndex = 9999999;

            me.ui.finds("panel_1").show();
            me.nodes.jdt_hp_d2.hide();
            me.setContents();
            me.event.emit("show");
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setLevelInfo();
            me.setHeroList();
            me.setButtonState();
            me.setBuff();
            me.setEnemy(true);
            me.setMedicinal();
            me.setCloseTime();
            G.hongdian.getData("watcher", 1, function () {
                me.checkRedPoint();
            })
        },
        checkRedPoint: function(is) {
            var me = this;
            var data = G.DATA.hongdian.watcher;
            var obj = {
                "target": "btn_jl",
                "trader": "btn_mjsd"
            };

            for(var i in data) {
                if(i == "trader") continue;
                if(data[i] > 0) {
                    G.setNewIcoImg(me.ui.finds(obj[i]));
                }else {
                    G.removeNewIco(me.ui.finds(obj[i]));
                }
            }
        },
        setButtonState: function() {
            var me = this;
            var isAllDead = true;
            var num = me.DATA.herolist.length;
            var keys = X.keysOfObject(me.DATA.status);

            if(keys.length < num) {
                isAllDead = false;
            }else {
                for (var i in me.DATA.status) {
                    if(me.DATA.status[i].hp > 0) {
                        isAllDead = false;
                        break;
                    }
                }
                if(isAllDead) {
                    me.ui.finds("btn_an").setBright(false);
                    me.isAllDead = true;
                }else {
                    me.ui.finds("btn_an").setBright(true);
                    me.isAllDead = false;
                }
            }

            if(me.isAllDead || me.DATA.layer > X.keysOfObject(G.class.getConf("watcher")).length) {
                me.ui.finds("js_you").hide();
                me.ui.finds("js_zuo").hide();
                me.ui.finds("ico_qizi").hide();

                me.nodes.img_rw.setBackGroundImage("img/mijing/" + (me.isAllDead ? "img_tz2" : "img_tz") + ".png", 1);
            }
        },
        setLevelInfo: function() {
            var me = this;
            var txt_gk = me.ui.finds("txt_gk");
            var level = me.DATA.layer;
            if(me.DATA.layer > X.keysOfObject(G.class.getConf("watcher")).length) {
                level = X.keysOfObject(G.class.getConf("watcher")).length;
            }
            var str = X.STR(G.class.watchercom.getTitle(parseInt((level - 1) / 100)), level);

            var rh = new X.bRichText({
                size: 24,
                maxWidth: txt_gk.width,
                lineHeight: 32,
                color: "#ffefe7",
                family: G.defaultFNT,
                eachText: function (node) {
                    X.enableOutline(node, "#000000", 2);
                }
            });
            rh.text(str);
            rh.setAnchorPoint(0.5, 0.5);
            rh.setPosition(txt_gk.width / 2, txt_gk.height / 2);
            txt_gk.removeAllChildren();
            txt_gk.addChild(rh);
        },
        setCloseTime: function() {
            var me = this;
            var txt_time = me.ui.finds("txt_shijian");

            var str = L("JSDJS") + " <font node=1></font>";
            var txt = new ccui.Text("", G.defaultFNT, 20);
            txt.setTextColor(cc.color("#30ff01"));
            X.enableOutline(txt, "#000000", 2);
            X.timeout(txt, me.DATA.rebirthtime, function () {
                X.uiMana.closeAllFrame();
            });

            var rh = new X.bRichText({
                size: 20,
                maxWidth: txt_time.width,
                lineHeight: 32,
                color: "#ffefe7",
                family: G.defaultFNT,
                eachText: function (node) {
                    X.enableOutline(node, "#000000", 2);
                }
            });
            rh.text(str, [txt]);
            rh.setAnchorPoint(0.5, 0.5);
            rh.setPosition(txt_time.width / 2, txt_time.height / 2);
            txt_time.addChild(rh);
        },
        setHeroList: function() {
            var me = this;
            var data = me.DATA.herolist;
            var listView = me.ui.finds("lstView");
            var deadArr = [];
            var isAllDead = true;

            listView.removeAllChildren();

            for (var i = 0; i < data.length; i ++) {
                if(me.DATA.status && me.DATA.status[i] && me.DATA.status[i].hp <= 0) {
                    deadArr.push("dead");
                }else {
                    deadArr.push("live");
                }
            }
            for (var i = 0; i < deadArr.length; i ++) {
                if(deadArr[i] == "live") {
                    isAllDead = false;
                    break;
                }
            }
            me.deadArr = deadArr;
            if(isAllDead) me.ui.finds("js_zuo").hide();

            for(var i = 0; i < data.length; i ++) {
                var info = data[i][0];
                var wid = G.class.shero(info);
                wid.idx = i;
                wid.setScale(.8);
                wid.setName("wid" + i);
                if(deadArr[i] == "dead") {
                    wid.setEnabled(false);
                    wid.dead = true;
                }
                me.setHeroTouch(wid);
                listView.pushBackCustomItem(wid);
            }
            me.setState();
            if(!me.curIdx) {
                for(var i = 0; i < deadArr.length; i ++) {
                    if(deadArr[i] == "live") {
                        listView.children[i].triggerTouch(ccui.Widget.TOUCH_ENDED);
                        break;
                    }
                }
            }
            else {
                if(deadArr[me.curIdx] == "dead") {
                    for(var i = 0; i < deadArr.length; i ++) {
                        if(deadArr[i] == "live") {
                            listView.children[i].triggerTouch(ccui.Widget.TOUCH_ENDED);
                            break;
                        }
                    }
                }else {
                    listView.children[me.curIdx].triggerTouch(ccui.Widget.TOUCH_ENDED);
                }
            }
        },
        setState: function() {
            var me = this;
            var listView = me.ui.finds("lstView");

            for(var i = 0; i < listView.children.length; i ++) {
                var chr = listView.children[i];
                var hp = (me.DATA.status && me.DATA.status[i] && me.DATA.status[i].hp && me.DATA.status[i].maxhp) ? me.DATA.status[i].hp / me.DATA.status[i].maxhp * 100 : 100;
                var nuqi = (me.DATA.status && me.DATA.status[i] && me.DATA.status[i].nuqi) ? me.DATA.status[i].nuqi : 50;
                chr.setNQ(nuqi, chr.dead ? false : true);
                chr.setHP(hp, chr.dead ? false : true);
            }
        },
        setHeroTouch: function(node) {
            var me = this;
            var listView = me.ui.finds("lstView");

            node.setTouchEnabled(node.dead ? false : true);
            node.click(function (sender) {
                node.setGou(true);
                me.setHero(node.idx);
                for(var i = 0; i < listView.children.length; i ++) {
                    var chr = listView.children[i];
                    if(chr.idx != sender.idx) chr.setGou(false);
                }
            })
        },
        setHero: function(idx) {
            var me = this;

            function f(idx) {
                var data = me.DATA.herolist[idx][0];
                var hp = (me.DATA.status && me.DATA.status[me.curIdx] && me.DATA.status[me.curIdx].hp && me.DATA.status[me.curIdx].maxhp) ? me.DATA.status[me.curIdx].hp / me.DATA.status[me.curIdx].maxhp * 100 : 100;
                var nuqi = (me.DATA.status && me.DATA.status[me.curIdx]) ? ((me.DATA.status[me.curIdx].nuqi || me.DATA.status[me.curIdx].nuqi == 0) ? me.DATA.status[me.curIdx].nuqi : 50) : 50;

                me.nodes.list_gw.show();
                me.nodes.jdt_hp.setPercent(hp);
                me.nodes.jdt_sp.setPercent(nuqi);
                me.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + ((data.zhongzu * 1) + 1) + '_s.png', 1);

                if(hp < 20) {
                    G.class.ani.show({
                        json: "ani_mijing_xuetiao",
                        addTo: me.nodes.jdt_hp,
                        x: 33,
                        y: me.nodes.jdt_hp.height / 2,
                        repeat: true,
                        autoRemove: false,
                        onload: function (node) {
                            node.setName("xuetiao")
                        }
                    })
                }
                else {
                    while (me.nodes.jdt_hp.getChildByName("xuetiao")) {
                        me.nodes.jdt_hp.getChildByName("xuetiao").removeFromParent();
                    }
                }

                if(me.curModleIdx == idx) return;
                if(!me.curModleIdx && me.curModleIdx != 0) {
                    X.setHeroModel({
                        parent: me.nodes.panel_rw,
                        data: data,
                        scaleNum: .9
                    });
                }else {
                    me.nodes.list_gw.runAction(cc.moveBy(0.2, cc.p(-250, 0)));
                    me.nodes.panel_rw.children[0].runAction(cc.sequence(cc.moveBy(0.2, cc.p(-250, 0)), cc.callFunc(()=>{
                        me.nodes.panel_rw.removeAllChildren();
                        me.nodes.panel_rw.hide();
                        X.setHeroModel({
                            parent: me.nodes.panel_rw,
                            data: data,
                            callback: function (node) {
                                me.nodes.list_gw.runAction(cc.moveBy(0.2, cc.p(250, 0)));
                                node.x -= 250;
                                node.parent.show();
                                node.runAction(cc.moveBy(0.2, cc.p(250, 0)));
                            },
                            scaleNum: .9
                        });
                    })))
                }
                me.curModleIdx = idx;
            }

            me.curIdx = idx;
            f(idx);
        },
        setMedicinal: function () {
            var me = this;
            var arr = [];
            var conf = G.class.watchercom.getMedicine();
            me.ui.finds("lview").removeAllChildren();

            for(var i in conf) {
                var medicine = G.class.medicine(i, me.DATA.supply && me.DATA.supply[i] || 0, function (node) {
                    if(me.deadArr[me.curIdx] == "dead" || me.isAllDead) {
                        G.tip_NB.show(L("ALL_HERO_DEAD"));
                        return;
                    }
                    if(node.idx * 1 > 3) {
                        if(cc.isNode(me.dijing)) {
                            return;
                        }
                        me.zz.show();
                        me.ajax("watcher_useitem", [node.idx * 1 - 1, node.idx], function (str, data) {
                            if(data.s == 1) {
                                G.tip_NB.show(L("SYCG"));
                                if(node.idx == 5) {
                                    for (var i in data.d) {
                                        me.DATA[i] = data.d[i];
                                    }
                                    me.zz.hide();
                                    G.frame.damijing_buy.show();
                                    me.setMedicinal();
                                }else {
                                    for (var i in data.d.data) {
                                        me.DATA[i] = data.d.data[i];
                                    }
                                    G.class.ani.show({
                                        json: "ani_mijing_dushashouwei",
                                        addTo: me.ui.finds("js_you"),
                                        x: me.ui.finds("js_you").width / 2,
                                        y: me.ui.finds("js_you").height / 2,
                                        repeat: false,
                                        autoRemove: true,
                                        onkey: function (node, action, event) {
                                            if(event == "xiaoshi") {
                                                me.zz.hide();
                                                var winPrize = data.d.winprize;
                                                var layout = me.ui.finds("panel_ui");
                                                var target = me.ui.finds("js_you");
                                                target.hide();
                                                me.ui.finds("ico_qizi").hide();
                                                me.setLevelInfo();
                                                if(me.DATA.layer <= X.keysOfObject(G.class.getConf("watcher")).length) {
                                                    me.setWinAni(winPrize, layout, target);
                                                }
                                                me.setEnemy();
                                                me.setHeroList();
                                                me.setButtonState();
                                                G.hongdian.getData("watcher", 1, function () {
                                                    me.checkRedPoint(true);
                                                });
                                                G.frame.fight_win.emit("hide");
                                                me.setMedicinal();
                                            }
                                        }
                                    });
                                }
                            }
                        })
                    } else {
                        me.ajax("watcher_useitem", [1, node.idx, me.curIdx], function (str, data) {
                            if(data.s == 1) {
                                G.tip_NB.show(L("SYCG"));
                                me.DATA.supply = data.d.supply;
                                me.DATA.status = data.d.status;
                                me.setMedicinal();
                                G.class.ani.show({
                                    json: "ani_mijing_huifu",
                                    addTo: me.ui.finds("js_zuo"),
                                    x: me.ui.finds("js_zuo").width / 2,
                                    y: 10,
                                    repeat: false,
                                    autoRemove: true,
                                    onend: function (node) {
                                        me.setState();
                                        me.setHero(me.curIdx);
                                    }
                                });
                            }
                        })
                    }
                });
                arr.push(medicine);
            }
            X.center(arr, me.ui.finds("lview"));
        },
        setBuff: function () {
            var me = this;

            for(var i = 0; i < G.class.watchercom.getMixtureBuyId().length; i ++) {
                var num = me.DATA.mixture && me.DATA.mixture[i + 1] || 0;
                var conf = G.class.watchercom.getMixtureBuyId(i);
                var keys = X.keysOfObject(conf.buff);
                var text = me.nodes["txt_sl" + (i + 1)];

                text.setString(L(keys[0]) + "+" +conf.buff[keys[0]] * num / 10 + "%");
                text.setTextColor(cc.color(num == 0 ? "#ffffff" : (num >= conf.limit ? "#e85911" : "#30ff01")));
            }
        },
        setEnemy: function (first) {
            var me = this;

            if(me.DATA.layer > X.keysOfObject(G.class.getConf("watcher")).length || me.isAllDead) return;

            if(first) {
                me.playAni(function () {
                    me.addEnemy()
                })
            }else {
                me.addEnemy();
            }
        },
        addEnemy: function() {
            var me = this;

            var hp = me.DATA.npc.fightless ? (me.DATA.npc.fightless.hp / me.DATA.npc.fightless.maxhp * 100) : 100;
            var nuqi = me.DATA.npc.fightless ? (me.DATA.npc.fightless.nuqi || 50) : 50;

            me.nodes.list_gw2.show();
            me.nodes.jdt_hp2.setPercent(hp);
            me.nodes.jdt_sp2.setPercent(nuqi);
            me.nodes.panel_zz2.setBackGroundImage('img/public/ico/ico_zz' + ((me.DATA.npc.herolist[0].zhongzu * 1) + 1) + '_s.png', 1);

            if(hp < 20) {
                G.class.ani.show({
                    json: "ani_mijing_xuetiao",
                    addTo: me.nodes.jdt_hp2,
                    x: 33,
                    y: me.nodes.jdt_hp2.height / 2,
                    repeat: true,
                    autoRemove: false,
                    onload: function (node) {
                        node.setName("xuetiao")
                    }
                })
            }
            else {
                while (me.nodes.jdt_hp2.getChildByName("xuetiao")) {
                    me.nodes.jdt_hp2.getChildByName("xuetiao").removeFromParent();
                }
            }

            X.setHeroModel({
                parent: me.nodes.panel_rw2,
                data: me.DATA.npc.headdata,
                direction: -1
            })
        },
        playAni: function (callback) {
            var me = this;
            G.class.ani.show({
                json: "ani_tanxian_guaiwushuaxin",
                addTo: me.ui.finds("panel_ui"),
                x: me.ui.finds("js_you").x,
                y: me.ui.finds("js_you").y + 140,
                repeat: false,
                autoRemove: true,
                onkey: function (node, action, event) {
                    if(event == "chuxian") {
                        callback && callback();
                    }
                }
            })
        }
    });
    G.frame[ID] = new fun('mijing.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/24.
 */
(function () {
    //大秘境-购买
    var ID = 'damijing_buy';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.click(function () {
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.DATA = G.frame.damijing.DATA.trader[G.frame.damijing.DATA.trader.length - 1];
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('tishi_1.json', function (view) {
                me.ui.nodes.panel_nr.addChild(view);
                me.view = view;
                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var layout = me.view.ui.finds("ico_tx");

            me.view.nodes.btn_qx.click(function () {
                me.remove();
            });

            me.view.nodes.btn_qd.click(function (sender) {
                me.ajax("watcher_useitem", [2, G.frame.damijing.DATA.trader.length - 1], function (str, data) {
                    if(data.s == 1) {
                        G.removeNewIco(G.frame.damijing.ui.finds("btn_mjsd"));
                        G.frame.jiangli.once("hide", function () {
                            me.remove();
                            G.frame.damijing.DATA.trader = data.d.trader;
                            me.isBuy = true;
                            if(cc.isNode(G.frame.damijing.dijing)) {
                                G.frame.damijing.nodes.btn_dj.hide();
                                G.frame.damijing.setDiJingAni();
                            }
                        }).data({
                            prize: data.d.prize
                        }).show();
                    }
                })
            });

            var item = G.class.sitem(me.DATA.item);
            item.setPosition(layout.width / 2, layout.height / 2);
            layout.addChild(item);

            G.frame.iteminfo.showItemInfo(item);

            me.view.nodes.bg_di.finds("txt_sz").setString(X.fmtValue(me.DATA.need[0].n));
            me.view.finds("bg_di$_0").finds("txt_sz").setString(X.fmtValue(me.DATA.need[0].n * (me.DATA.sale / 10)));

            me.view.finds("ico_zs").loadTexture(G.class.getItemIco(me.DATA.need[0].t), 1);
            me.view.finds("ico_zs1").loadTexture(G.class.getItemIco(me.DATA.need[0].t), 1);

            me.view.nodes.text_zk.setString(me.DATA.sale + L("sale"));
        },
    });
    G.frame[ID] = new fun('ui_tip_tishi.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/24.
 */
(function () {
    //大秘境-敌人信息
    var ID = 'damijing_drxx';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.DATA = me.data();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var layout = me.ui.finds("panel_yx");
            var arr = [];
            for(var i in me.DATA.herolist) {
                var data = me.DATA.herolist[i];
                var wid = G.class.shero(data);
                var hp = me.DATA.fightless ? (me.DATA.fightless.hp / me.DATA.fightless.maxhp * 100) : (data.hp / data.maxhp * 100)
                wid.setNQ(data.nuqi / data.maxnuqi * 100, true);
                wid.setHP(hp, true);
                arr.push(wid);
            }
            X.center(arr, layout, {
                scale: arr.length > 4 ? .8 : 1
            });
        },
    });
    G.frame[ID] = new fun('ui_top8.json', ID);
})();
;;/**
 * Created by LYF on 2018/11/21.
 */
(function () {
    //大秘境-翻牌
    var ID = 'damijing_flop';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;

            me.ui.finds("wz!").setString(G.class.watchercom.getAllFlopNeed());
        },
        bindBtn: function () {
            var me = this;
            var btn = [];

            for (var i = 1; i < 6; i ++) {
                me.nodes["list" + i].idx = i - 1;
                btn.push(me.nodes["list" + i]);
                me.nodes["list" + i].setTouchEnabled(false);
            }
            for (var i = 0; i < btn.length; i ++) {
                var card = btn[i];
                (function (card) {
                    card.click(function (sender) {
                        me.flop(sender);
                    }, 1500);
                })(card)
            }
            me.btn = btn;

            me.ui.finds("btn2").click(function () {
                me.idx = 1;
                me.isBuy = true;
                me.ui.finds("zhuangtai1").hide();
                for (var i = 0; i < me.aniNode.length; i ++) {
                    (function (i) {
                        me.aniNode[i].finds("wupin").removeAllChildren();
                        me.aniArr[i].playWithCallback("zhuankai2", false, function () {
                            me.aniArr[i].play("animation0", true);
                            me.aniNode[i].runActions([
                                cc.moveTo(0.1, cc.p(me.ui.width / 2, me.ui.height / 2)),
                                cc.moveTo(0.1, cc.p(me.nodes["list" + (i + 1)].x, me.nodes["list" + (i + 1)].y))
                            ]);
                            me.ui.setTimeout(function () {
                                for (var i = 1; i < 6; i ++) {
                                    me.nodes["list" + i].setTouchEnabled(true);
                                }
                                me.ui.finds("zhuangtai2").show();
                            }, 1000)
                        })
                    })(i)
                }
            });

            me.ui.finds("btn1").click(function () {
                me.ajax("watcher_getflopprize", [1], function (str, data) {
                    if(data.s == 1) {
                        me.isBuy = true;
                        G.frame.jiangli.data({
                            prize: data.d.prize
                        }).show();
                        me.ui.finds("zhuangtai1").hide();
                        me.ui.finds("zhuangtai3").show();
                    }
                });
            });

            me.nodes.mask.click(function () {
                if(!me.idx && !me.isBuy) {
                    return;
                }else if(me.idx == 1 && me.isBuy) {
                    G.tip_NB.show(L("BCMFQWCG"));
                    return;
                }
                me.remove();
            })
        },
        flop: function(sender) {
            var me = this;

            me.ajax("watcher_getflopprize", [0], function (str, data) {
                if(data.s == 1) {
                    G.frame.jiangli.data({
                        prize: data.d.prize
                    }).show();
                    sender.isFlop = true;
                    sender.setTouchEnabled(false);
                    me.idx ++;
                    me.setState();
                    var item = G.class.sitem(data.d.prize[0]);
                    item.setAnchorPoint(0.5, 0.5);
                    item.setPosition(me.aniNode[sender.idx].finds("wupin").width / 2, me.aniNode[sender.idx].finds("wupin").height / 2);
                    me.aniNode[sender.idx].finds("wupin").addChild(item);
                    me.aniArr[sender.idx].playWithCallback("zhankai", false, function () {
                        me.aniArr[sender.idx].play("beimianxunhuan", true);
                    });
                }
            });
        },
        setState: function() {
            var me = this;
            me.ui.finds("zhuangtai2").hide();
            me.ui.finds("zhuangtai3").show();
            for (var i in me.btn) {
                if(me.btn[i].isFlop) {
                    me.btn[i].finds("zs_sz").hide();
                } else {
                    me.btn[i].finds("zs_sz").show();
                    me.btn[i].finds("sz_1").setString(G.class.watchercom.getFlopNeedById(me.idx));
                }
            }
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.aniArr = [];
            me.aniNode = [];
            me.setContents();
            me.ui.finds("zhuangtai1").hide();
        },
        onHide: function () {
            var me = this;

            me.emit("hide");
        },
        setContents: function () {
            var me = this;

            for (var i = 1; i < 6; i ++) {
                (function (i) {
                    G.class.ani.show({
                        json: "ani_fanpai",
                        addTo: me.ui,
                        x: me.ui.width / 2,
                        y: me.ui.height / 2,
                        repeat: true,
                        autoRemove: false,
                        onload: function (node, action) {
                            me.aniArr.push(action);
                            me.aniNode.push(node);
                            var item = G.class.sitem(me.data()[i - 1].prize);
                            item.setAnchorPoint(0.5, 0.5);
                            item.setPosition(node.finds("wupin").width / 2, node.finds("wupin").height / 2);
                            node.finds("wupin").addChild(item);
                            node.setPosition(me.nodes["list" + i].getPosition());
                            action.play("beimianxunhuan", true);
                            me.ui.setTimeout(function () {
                                me.ui.finds("zhuangtai1").show();
                            }, 500);
                        }
                    })
                })(i);
            }
        }
    });
    G.frame[ID] = new fun('fanpai.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/24.
 */
(function () {
    //通关奖励
    var ID = 'damijing_jlyl';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
            me.ui.nodes.tip_title.setString(L('MBJL'));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            new X.bView('tongguanjiangli.json', function (view) {
                me._view = view;
                me._view.nodes.panel_tgjl.show();
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);

                X.viewCache.getView('tongguanjiangli_list.json', function (node) {
                    me.list = node.finds('list_nr');
                    me.setContents();
                });
            });
        },
        onHide: function () {
            var me = this;

            G.hongdian.getData("watcher", 1, function () {
                G.frame.damijing.checkRedPoint();
            })
        },
        setContents: function () {
            var me = this;
            var panel = me._view;
            var prize = [];
            var conf = G.class.watchercom.get().base.prize;
            var scrollview = panel.nodes.scrollview;

            G.frame.damijing.DATA.target = [6, 12, 18, 24, 30];

            for(var i = 0; i < conf.length; i ++) {
                var obj = {
                    prize: conf[i],
                    idx: i,
                    target: G.frame.damijing.DATA.target[i]
                };
                prize.push(obj);
            }

            prize = me.sortData(prize);

            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();

            me.list.hide();

            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,10);
            table.setData(prize);
            table.reloadDataWithScroll(true);
        },
        setItem: function(ui, data){
            X.autoInitUI(ui);
            ui.setTouchEnabled(false);
            var me = this;
            var txtName = ui.nodes.wz_title;
            var layWp = ui.nodes.ico_jlwp;
            var btnLq = ui.nodes.btn1_on;
            var ylq = ui.nodes.img_ylq;
            ylq.hide();
            btnLq.hide();

            X.alignItems(layWp, data.prize, "left", {
                touch: true
            });

            if(G.frame.damijing.DATA.winnum >= data.target && !X.inArray(G.frame.damijing.DATA.reclist, data.target)) {
                btnLq.show();
            }

            if(X.inArray(G.frame.damijing.DATA.reclist, data.target)) {
                ylq.show();
            }
            txtName.setString(X.STR(L('DDCENG'),data.target, G.frame.damijing.DATA.winnum,data.target));

            btnLq.idx = data.target;
            btnLq.click(function (sender) {
                me.ajax("watcher_getprize", [sender.idx], function (str, data) {
                    if(data.s == 1) {
                        G.frame.jiangli.data({
                            prize: data.d.prize
                        }).show();
                        sender.hide();
                        ylq.show();
                        G.frame.damijing.DATA.reclist = data.d.reclist;
                    }
                })
            })
        },
        sortData: function (data) {
            var reclist = G.frame.damijing.DATA.reclist || [];
            var tar = G.frame.damijing.DATA.winnum;
            var arr = [];

            for (var i = 0; i < data.length; i ++) {
                if(data[i].target <= tar) {
                    if(!X.inArray(reclist, data[i].target)) {
                        data[i].rank = 1;
                    }else{
                        data[i].rank = 3;
                    }
                }else {
                    data[i].rank = 2;
                }
                arr.push(data[i]);
            }

            arr.sort(function (a, b) {
                if(a.rank != b.rank) {
                    return a.rank < b.rank ? -1 : 1;
                }else {
                    return a.target > b.target;
                }
            });

            return arr;
        }
    });
    G.frame[ID] = new fun('ui_tip1.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/23.
 */
(function () {
    //大秘境-使用药水
    var ID = 'damijing_medicine';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.click(function () {
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.DATA = me.data();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('tishi_nlp.json', function (view) {
                me.ui.nodes.panel_nr.addChild(view);
                me.view = view;
                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.view.finds("img_gou").setTouchEnabled(true);
            me.view.finds("img_gou").click(function () {
                if(!X.cacheByUid("dmj_bj")) {
                    X.cacheByUid("dmj_bj", 1);
                    me.view.finds("ico_gou").show();
                }else {
                    X.cacheByUid("dmj_bj", 0);
                    me.view.finds("ico_gou").hide();
                }
            });

            me.view.nodes.btn_qd.click(function () {
                me.DATA.callback && me.DATA.callback(me.DATA.node);
                me.remove();
            });

            me.view.nodes.btn_qx.click(function () {
                me.remove();
            });

            var str = X.STR(L("dmj_syyj"), me.DATA.name);
            var rh = new X.bRichText({
                size: 24,
                maxWidth: me.view.finds("txt_nlp").width,
                lineHeight: 32,
                family: G.defaultFNT,
                color: "#804326"
            });
            rh.text(str);
            rh.setAnchorPoint(0.5, 0.5);
            rh.setPosition(me.view.finds("txt_nlp").width / 2, me.view.finds("txt_nlp").height / 2);
            me.view.finds("txt_nlp").addChild(rh);
        },
    });
    G.frame[ID] = new fun('ui_tip_tishi.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/23.
 */
(function () {
    //排行榜
    var ID = 'damijing_phb';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
            me.nodes.text_zdjl.setString(L("PHB"));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("rank_open", [16], function (d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1){
                    me.DATA = d.d;
                    callback && callback();
                }
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();

            me.txt = [
                L("JIANDAN"),
                L("PUTONG"),
                L("KUNNAN"),
                L("DIYU"),
                L("EMENG"),
                L("JUEWANG")
            ]
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            new X.bView("ui_paihangbang.json", function (view) {
                me.view = view;
                me.nodes.panel_nr.addChild(view);
                me.view.nodes.panel_rank.height -= 103;
                ccui.helper.doLayout(me.view.nodes.panel_rank);
                cc.enableScrollBar( me.view.nodes.panel_rank.finds('listview$') );
                X.viewCache.getView('ui_list2.json', function (node) {
                    me.list = node.nodes.list_rank;
                    me.getData(function () {
                        me.setContents();
                    });
                });
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var scrollview = me.view.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();

            var data = me.DATA;
            if (data.ranklist.length < 1) {
                cc.isNode(me.ui.finds('zwnr')) && me.ui.finds('zwnr').show();
                return;
            } else {
                cc.isNode(me.ui.finds('zwnr')) && me.ui.finds('zwnr').hide();
            }
            me.setMyRank();
            for (var i = 0; i < data.ranklist.length; i++) {
                data.ranklist[i].rank = i + 1;
            }

            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,10);
            table.setData(data.ranklist);
            table.reloadDataWithScroll(true);
            scrollview.getChildren()[0].getChildren()[0].x = -1;
        },
        setItem: function (ui, data) {
            X.autoInitUI(ui);
            var me = this;
            var layPh = ui.nodes.img_rank;
            var txtPh = ui.nodes.sz_phb;
            var layIco = ui.nodes.panel_tx;
            var txtName = ui.nodes.txt_name;
            var txtGuanqia = ui.nodes.txt_number;
            ui.nodes.txt_title.setString(me.txt[parseInt((data.layer - 1) / 100)] || me.txt[me.txt.length - 1]);

            ui.finds("img_zdl").show();
            ui.nodes.text_zdl2.show();
            ui.nodes.text_zdl2.setString(data.zhanli);

            layPh.hide();
            txtPh.setString('');
            layIco.removeAllChildren();
            if (data.rank < 0) {
                txtPh.setString(0);
            } else if (data.rank < 4) {
                layPh.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                layPh.show();
            } else {
                txtPh.setString(data.rank);
                txtPh.show();
            }

            var wid = G.class.shead(data.headdata);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);
            wid.data = data.headdata;
            wid.setTouchEnabled(true);
            wid.icon.setTouchEnabled(false);
            wid.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    G.frame.wanjiaxinxi.data({
                        pvType: 'zypkjjc',
                        uid: sender.data.uid
                    }).checkShow();
                }
            });

            txtName.setString(data.headdata.name);
            txtGuanqia.setString(data.layer > X.keysOfObject(G.class.getConf("watcher")).length ? X.keysOfObject(G.class.getConf("watcher")).length : data.layer);

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            layPh.setTouchEnabled(false);
        },
        setMyRank: function () {
            var me = this;

            var rank = me.DATA.myrank;
            var txtPh = me.view.nodes.fnt_player;
            var txtGuanqia = me.view.finds('txt_level_0');
            if (!rank || rank == -1) {
                txtPh.setString("");
                me.view.finds('wsb_player').show();
            } else {
                txtPh.setString(rank);
            }
            me.view.finds("txt_level").setString(me.txt[parseInt((G.frame.damijing.DATA.layer - 1) / 100)] || me.txt[me.txt.length - 1]);
            txtGuanqia.setString(G.frame.damijing.DATA.layer > X.keysOfObject(G.class.getConf("watcher")).length ? X.keysOfObject(G.class.getConf("watcher")).length : G.frame.damijing.DATA.layer - 1);

            me.view.nodes.panel_player.show();
        }
    });
    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/22.
 */
(function () {
    //大秘境-保存备战阵容
    G.class.damijing_save_hero = X.bView.extend({
        extConf:{
            maxnum:6,
        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('zhandou_chuzhan.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
        },
        bindBTN: function () {
            var me = this;

            me.nodes.btn_bc.click(function () {
                var arr = me.getSelectedData();
                if(arr.length < 1) {
                    G.tip_NB.show(L('QFRXYBZDYX'));
                    return;
                }
                me.ajax("watcher_prepare", [arr], function (str, data) {
                    if(data.s == 1) {
                        G.frame.damijing_setDef.remove();
                        G.frame.damijing.checkShow();
                    }
                })
            })
        },
        onOpen: function () {
            var me = this;
            me.bindBTN();
            me.panel_yx = me.ui.finds("panel_yx");
        },
        onShow: function () {
            var me = this;
            me.fightData = (G.frame.damijing_setDef.data() && G.frame.damijing_setDef.data().herolist) || [];
            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.createLayout();
        },
        createLayout: function () {
            var me = this;
            var list = me.nodes.list_yx;

            me.itemArr = [];
            for(var i = 0; i < me.extConf.maxnum; i ++) {
                var item = list.clone();
                item.idx = i;
                item.setName(i);
                item.show();
                me.setItem(item);
                me.itemArr.push(item);
            }
            X.center(me.itemArr, me.panel_yx, {
                scale: .9
            });
            me.loadCache();
        },
        loadCache: function() {
            var me = this;

            for(var i = 0; i < me.itemArr.length; i ++) {
                var item = me.itemArr[i];
                if(me.fightData[i] && G.DATA.yingxiong.list[me.fightData[i].tid]) {
                    var tid = me.fightData[i].tid;
                    var latIco = item.nodes.panel_yx;
                    var wid = G.class.shero(me.fightData[i]);
                    wid.setAnchorPoint(0.5, 1);
                    wid.setPosition(latIco.width / 2, latIco.height);
                    latIco.addChild(wid);
                    item.data = tid;
                }
            }
            me.setZL();
        },
        setItem: function (item) {
            X.autoInitUI(item);
            var me = this;
            var layIco = item.nodes.panel_yx;
            layIco.setTouchEnabled(false);
            layIco.removeAllChildren();

            item.setTouchEnabled(true);
            item.click(function (sender) {
                if (sender.data) {
                    me.removeItem(sender.data);
                }
            })
        },
        removeItem: function (tid) {
            var me = this;

            var itemArr = me.itemArr;
            for (var i = 0; i < itemArr.length; i++) {
                var item = itemArr[i];
                var layIco = item.nodes.panel_yx;
                if (item.data && item.data == tid) {
                    var idx = X.arrayFind(G.frame.damijing_setDef.top.selectedData, tid);
                    if (idx > -1) {
                        G.frame.damijing_setDef.top.selectedData.splice(idx, 1);
                        G.frame.damijing_setDef.top.removeGou(tid);
                    }

                    var child = G.frame.damijing_setDef.top.getChildByTid(tid);
                    if (child) {
                        G.frame.damijing_setDef.posSelect = G.frame.damijing_setDef.ui.convertToNodeSpace(child.getParent().convertToWorldSpace(child.getPosition()));
                        G.frame.damijing_setDef.posSelect.x += child.width / 2;
                    }
                    if (cc.isNode(G.frame.damijing_setDef.item)) {
                        G.frame.damijing_setDef.item.stopAllActions();
                        G.frame.damijing_setDef.item.removeFromParent();
                    }
                    G.frame.damijing_setDef.playAniType = 'remove';
                    G.frame.damijing_setDef.posSz = G.frame.damijing_setDef.ui.convertToNodeSpace(layIco.getParent().convertToWorldSpace(layIco.getPosition()));
                    var itemClone = G.frame.damijing_setDef.item = layIco.clone();
                    itemClone.setPosition(G.frame.damijing_setDef.posSz);
                    G.frame.damijing_setDef.ui.addChild(itemClone);
                    G.frame.damijing_setDef.playAniMove(itemClone);

                    delete item.data;
                    layIco.removeAllChildren();
                }
            }
            me.setZL();
        },
        addItem: function (tid) {
            var me = this;

            var itemArr = me.itemArr;
            for (var i = 0; i < itemArr.length; i++) {
                var item = itemArr[i];
                if (!item.data) {
                    item.data = tid;
                    var layIco = item.nodes.panel_yx;
                    var wid = G.class.shero(G.DATA.yingxiong.list[tid]);
                    wid.setAnchorPoint(0.5,1);
                    wid.setPosition(cc.p(layIco.width / 2,layIco.height));
                    layIco.addChild(wid);
                    wid.hide();
                    me.ui.setTimeout(function () {
                        wid.show();
                    }, 180);

                    G.frame.damijing_setDef.playAniType = 'add';
                    G.frame.damijing_setDef.posSz = G.frame.damijing_setDef.ui.convertToNodeSpace(layIco.getParent().convertToWorldSpace(layIco.getPosition()));
                    G.frame.damijing_setDef.posSz.x -= layIco.width / 2;
                    break;
                }
            }
            me.setZL();
        },
        getSelectedData: function () {
            var me = this;

            var itemArr = me.itemArr;
            var arr = [];
            for (var i = 0; i < itemArr.length; i++) {
                var item = itemArr[i];
                if (item.data) {
                    arr.push(item.data);
                }
            }
            return arr;
        },
        setZL: function () {
            var me = this;
            var num = 0;
            var txt = me.nodes.txt_djs;

            for (var i = 0; i < me.itemArr.length; i ++) {
                var item = me.itemArr[i];
                if(!item.data) continue;
                num += item.children[2].children[0].data.zhanli;
            }
            txt.setString(num);
        }
    });

})();
;;/**
 * Created by LYF on 2018/10/22.
 */
(function () {
    //大秘境-设置上阵英雄
    var ID = 'damijing_setDef';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;

            setPanelTitle(me.ui.nodes.txt_title,L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                X.uiMana.closeAllFrame();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            var mask = me.mask = new ccui.Layout;
            mask.setContentSize(cc.director.getWinSize());
            mask.setTouchEnabled(true);
            mask.setAnchorPoint(0, 0);
            me.ui.finds("panel_ui").addChild(mask);
            me.mask.zIndex = 999;
            me.mask.hide();

            me.setContents();

            me.ui.setTimeout(function () {
                G.guidevent.emit("shouwangzhemijingOpenOver");
            }, 500)
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            me.ui.finds('panel_tip').finds('txt_djgb').hide();
            me.setBottom();
            me.setTop();
        },
        setTop: function () {
            var me = this;

            if (!me.top) {
                me.top = new G.class.damijing_zhongzu_xuanze("fight");
                me.nodes.panel_nr1.removeAllChildren();
                me.nodes.panel_nr1.addChild(me.top);
            } else {
                me.top.refreshPanel();
            }
        },
        setBottom: function () {
            var me = this;

            if (!me.bottom) {
                me.bottom = new G.class.damijing_save_hero('fight');
                me.nodes.panel_nr2.removeAllChildren();
                me.nodes.panel_nr2.addChild(me.bottom);
            } else {
                me.bottom.refreshPanel();
            }
        },
        playAniMove: function (node) {
            var me = this;
            me.mask.show();
            var posSz = G.frame.damijing_setDef.posSz;
            var posSelect = G.frame.damijing_setDef.posSelect;
            var type = G.frame.damijing_setDef.playAniType;

            var posEnd;
            if (type == 'remove') {
                posEnd = posSelect || cc.p(310,800);
            } else {
                posEnd = posSz;
            }

            cc.isNode(me.item) && me.item.runActions([
                cc.moveTo(0.2, posEnd),
                cc.callFunc(function () {
                    cc.isNode(me.item) && me.item.removeFromParent();
                    me.mask.hide();
                })
            ]);
        }
    });
    G.frame[ID] = new fun('ui_tip3.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/25.
 */
(function () {
    //大秘境-商店
    var ID = 'damijing_shop';

    var fun = X.bUi.extend({
        extConf:{
            maxnum:3
        },
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
            // me.ui.nodes.tip_title.setString(L("sjssd"));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            // for(var i = 0; i < 7; i ++) {
            //     var icon = me.nodes.list_ico.clone();
            //
            // }
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            cc.isNode(me.nodes["zhuangshi_" + me.curType]) && me.nodes["zhuangshi_" + me.curType].show();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.createMenu();
            me.getData();
            me.setAttr();
            me.needScroll = true;
            me.topMenu.changeMenu(me.checkInitType());
        },
        changeType: function (sender) {
            var me = this;
            var type = sender.data.id;

            if(!me.DATA) return;

            if(me.curType && me.curType == type) return;
            me.curType = type;

            if(!me.table) {
                me.setContents();
            }else {
                me.refreshData();
            }
        },
        createMenu: function(){
            var me = this;

            me.topMenu = new G.class.topMenu(me, {
                btns: X.clone(G.class.menu.get('damijing'))
            });
        },
        onHide: function () {
            var me = this;

            G.removeNewIco(G.frame.damijing.ui.finds("btn_mjsd"));
        },
        getData: function (callback) {
            var me = this;
            me.DATA = G.frame.damijing.DATA.trader;
            if(!me.DATA) return;
            for(var i = 0; i < me.DATA.length; i ++) {
                me.DATA[i].idx = i;
            }
            me.nodes.txt_sl3.setString(me.DATA.length);
            callback && callback();
        },
        refreshData: function () {
            var me = this;

            me.needScroll = false;
            me.getData(function () {
                me.refreshPanel();
            });
        },
        refreshPanel: function () {
            var me = this;

            //刷新界面显示
            var data = me.filterData();

            if(data.length < 1) {
                me.ui.finds("list_zw").show();
            }else {
                me.ui.finds("list_zw").hide();
            }

            me.table.setData(data);
            me.table.reloadDataWithScroll(true);
            if(me.refresh) me.refresh = 0;
        },
        setContents: function () {
            var me = this;

            var scrollview = me.nodes.scrollview_sp;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();
            var list = me.getNewItem();

            var data = me.filterData();

            if(data.length < 1) {
                me.ui.finds("list_zw").show();
            }else {
                me.ui.finds("list_zw").hide();
            }

            var table = me.table = new X.TableView(scrollview,list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,1);
            table.setData(data);
            table.reloadDataWithScroll(me.needScroll);
            if(me.refresh) me.refresh = 0;
        },
        // 设置每行
        setItem: function (ui,data) {
            var me = this;

            for (var i = 0; i < 3; i++) {
                var parent = ui.finds('panel_wp' + (i + 1) + '$');
                var child = parent.getChildren()[0];
                child.hide();
                var dd = data[i];
                if (dd) {
                    me.setChildItem(child,dd);
                    child.show();
                }
            }

            ui.setTouchEnabled(false);
            ui.show();
        },
        //设置一行的子项
        setChildItem: function (ui,data) {
            var me = this;

            X.autoInitUI(ui);
            var layIco = ui.nodes.ico_tb;
            var imgAttr = ui.nodes.image_jb;
            var txtAttr = ui.nodes.text_jinbi;
            var imgZhekou = ui.nodes.img_zkbg;
            var txtZhekou = ui.nodes.text_zk;
            var imgYgm = ui.nodes.img_ygm;


            layIco.removeAllChildren();
            imgZhekou.hide();
            txtZhekou.setString('');
            imgYgm.hide();

            // 道具
            var wid = G.class.sitem(data.item);
            if(me.refresh) wid.refresh();
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);

            G.frame.iteminfo.showItemInfo(wid);
            wid.setTouchEnabled(true);
            wid.setSwallowTouches(true);

            //设置名字
            // setTextWithColor(txtName,wid.conf.name,G.gc.COLOR[wid.conf.color || 1]);

            // 消耗货币
            imgAttr.loadTexture(G.class.getItemIco(data.need[0].t),1);
            txtAttr.setString(X.fmtValue(data.need[0].n * (data.sale / 10)));

            //折扣
            if (data.sale != 10) {
                imgZhekou.show();
                txtZhekou.setString(data.sale + L("sale"));
                X.enableOutline(txtZhekou,'#1d9600',2);
            }

            //是否显示限购
            if (data.buynum == 0) {
                imgYgm.show();
                txtAttr.hide();
                imgAttr.hide();
            }else{
                imgYgm.hide();
                txtAttr.show();
                imgAttr.show();
            }

            if(data.buynum > 0) {
                ui.finds("xiangou").show();
                ui.finds("wz1").setString(X.STR(L("XG"), data.buynum));
            }else {
                ui.finds("xiangou").hide();
            }

            //整个卡牌除道具显示区域外可点击购买
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.data = data;
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    if (sender.data.buynum == 0) {
                        G.tip_NB.show(L('SHOP_ITEM_OVER'));
                        return;
                    } else {
                        me.buy({
                            idx: sender.data.idx,
                        });
                    }
                }
            });
        },
        // 获得组合后的新模板
        getNewItem: function () {
            var me = this;

            var list = me.nodes.list_mb;
            var list2 = me.nodes.list1;

            // var interval = (list.width - me.extConf.maxnum * list2.width) / (me.extConf.maxnum - 1);
            for (var i = 0; i < me.extConf.maxnum; i++) {
                var lay = list.finds('panel_wp' + (i + 1) + '$');
                lay.setTouchEnabled(false);
                lay.removeAllChildren();
                var item = list2.clone();
                item.setAnchorPoint(cc.p(0.5,0.5));
                item.setPosition(cc.p(lay.width / 2,lay.height / 2));
                lay.addChild(item);
                // item.setPosition(cc.p(item.width / 2 + (item.width + interval) * i,list.height / 2));
                // list.addChild(item);
            }

            return list;
        },
        //组合成需要显示的数据
        filterData: function () {
            var me = this;

            var data = me.DATA;
            var xiyou = [];

            for (var i = 0; i < data.length; i ++) {
                if(!data[i].xiyou) {
                    xiyou.push(data[i])
                }else {
                    if(data[i].xiyou == me.curType) {
                        xiyou.push(data[i]);
                    }
                }
            }
            data = xiyou;
            var newData = [],
                arr=[];
            for (var i = 0; i < data.length; i++) {
                var d = data[i];
                arr.push(d);
                if ((i + 1) % me.extConf.maxnum == 0) {
                    newData.push(arr);
                    arr = [];
                }
            }
            if(arr.length > 0) {
                newData.push(arr);
            }
            return newData;
        },
        //设置初始页面
        checkInitType:function () {  
            var me = this;
            for(var j = 1;j < 4; j++){
                var data = me.DATA;
                var xiyou = [];
                var curType = j;
                for (var i = 0; i < data.length; i++) {
                    if (!data[i].xiyou) {
                        xiyou.push(data[i])
                    } else {
                        if (data[i].xiyou == curType) {
                            xiyou.push(data[i]);
                        }
                    }
                }
                data = xiyou;
                var newData = [],
                    arr = [];
                for (var i = 0; i < data.length; i++) {
                    var d = data[i];
                    arr.push(d);
                    if ((i + 1) % me.extConf.maxnum == 0) {
                        newData.push(arr);
                        arr = [];
                    }
                }
                if (arr.length > 0) {
                    newData.push(arr);
                }
                if (newData.length > 0){
                    return j;
                }
            }
            return 1;
        },
        // 设置货币信息
        setAttr: function () {
            var me = this;

            me.nodes.txt_sl.setString(X.fmtValue(P.gud.jinbi));
            me.nodes.txt_sl2.setString(X.fmtValue(P.gud.rmbmoney));
        },
        buy: function (args) {
            var me = this;

            G.frame.alert.data({
                cancelCall: null,
                okCall: function () {
                    me.ajax("watcher_useitem", [2, args.idx], function (str, data) {
                        if(data.s == 1) {
                            G.frame.jiangli.data({
                                prize: data.d.prize
                            }).show();
                            G.frame.damijing.DATA.trader = data.d.trader;
                            me.refreshData();
                            me.setAttr();
                        }
                    });
                },
                richText: L("SFGM"),
                sizeType: 3
            }).show();
        }
    });

    G.frame[ID] = new fun('shangdian_mjsd.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/22.
 */
(function () {
    //大秘境-种族-选择
    G.class.damijing_zhongzu_xuanze = X.bView.extend({
        extConf:{
            fight:{
                data: function (type) {
                    var data = G.DATA.yingxiong.list;
                    var keys = X.keysOfObject(data);

                    var arr = [];
                    if (type == 0) {
                        arr = keys;
                    } else {
                        for (var i = 0; i < keys.length; i++) {
                            var tid = keys[i];
                            var heroData = data[tid];
                            if (heroData.zhongzu == type) {
                                arr.push(tid);
                            }
                        }
                    }
                    return arr;
                },
                getSort: function (arr, str1, str2, str3, str4) {
                    var data = [];
                    var heroData = [];
                    var hidData = [];
                    var sortArr = [];
                    var zz = {
                        5:0, //神圣
                        6:1, //暗影
                        4:2, //自然
                        3:4, //邪能
                        2:5, //奥术
                        1:6 //亡灵
                    };
                    for(var i = 0; i < arr.length; i ++){
                        heroData.push(G.DATA.yingxiong.list[arr[i]]);
                        if(!heroData[i].tid) heroData[i].tid = arr[i];
                    }
                    for(var i = 0, j = heroData.length; i < j; i += 1){
                        var conf = heroData[i];
                        var q = conf[str1];
                        var w = conf[str2];
                        var e = zz[conf[str3]];
                        var r = conf[str4];
                        if(!sortArr[q]){
                            sortArr[q] = [];
                        }
                        if(!sortArr[q][w]){
                            sortArr[q][w] = [];
                        }
                        if(!sortArr[q][w][e]){
                            sortArr[q][w][e] = [];
                        }
                        if(!sortArr[q][w][e][r]){
                            sortArr[q][w][e][r] = [];
                        }
                        sortArr[q][w][e][r].push(heroData[i]);
                    }
                    var index = heroData.length - 1;
                    for(var i in sortArr){
                        for(var j in sortArr[i]){
                            for (var k in sortArr[i][j]){
                                for(var l in sortArr[i][j][k]){
                                    for(var m in sortArr[i][j][k][l]){
                                        data[index --] = sortArr[i][j][k][l][m];
                                    }
                                }
                            }
                        }
                    }
                    for(var i = 0; i < data.length; i ++){
                        hidData.push(data[i].tid);
                    }
                    return hidData;
                }
            }
        },

        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('ui_tip3_shang.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
        },
        bindBTN: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;

            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.fightData = (G.frame.damijing_setDef.data() && G.frame.damijing_setDef.data().herolist) || [];
            me.createMenu();
            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var cacheArr = [];

            for(var i = 0; i < me.fightData.length; i ++) {
                cacheArr.push(me.fightData[i].tid);
            }

            me.selectedData = cacheArr;

            var type = me.curType || 0;
            me._menus[type].triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        createMenu: function () {
            var me = this;

            var view = me;
            me._menus = [];
            var listview = view.nodes.listview_zz;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();
            view.nodes.list_ico.hide();

            //图标中，1指的是全部
            for (var i = 0; i < 7; i++) {
                var list_ico = view.nodes.list_ico.clone();
                X.autoInitUI(list_ico);
                list_ico.nodes.panel_zz.setTouchEnabled(false);
                list_ico.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (i + 1) + '.png', 1);
                list_ico.nodes.panel_zz.setScale(0.8);
                list_ico.show();

                list_ico.data = i;
                list_ico.setTouchEnabled(true);

                list_ico.click(function(sender, type){
                    for(var j=0;j<me._menus.length;j++){
                        var node = me._menus[j];
                        var img = 'img/public/ico/ico_zz' + (node.data + 1) + '.png';
                        if(node.data == sender.data){
                            if(me.effect) X.audio.playEffect("sound/dianji.mp3", false);
                            me.effect = true;
                            me.curType = sender.data;
                            me.fmtItemList();
                            img = 'img/public/ico/ico_zz' + (node.data + 1) + '_g.png';
                            if(sender.ani) {
                                sender.ani.show();
                            }else {
                                G.class.ani.show({
                                    json: "ani_guangbiaoqiehuan",
                                    addTo: sender,
                                    x: sender.width / 2,
                                    y: sender.height / 2,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node) {
                                        sender.ani = node;
                                    }
                                })
                            }
                        }else{
                            if(node.ani) node.ani.hide();
                        }
                        node.nodes.panel_zz.setBackGroundImage(img,1);
                    }
                });

                me._menus.push(list_ico);
                listview.pushBackCustomItem(list_ico);
                list_ico.show();
            }
        },
        fmtItemList: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();
            me.nodes.list.hide();

            var d = me.extConf[me._type].data(me.curType);

            if (d.length < 1) {
                me.ui.finds('img_zwnr').show();
                return;
            } else {
                me.ui.finds('img_zwnr').hide();
            }

            var data = me.extConf[me._type].getSort(d, "star", "lv", "zhongzu", "hid");
            var table = me.table = new X.TableView(scrollview,me.nodes.list,5, function (ui, data) {
                me.setItem(ui, data);
            }, null, null, 1, 5);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            var heroData = G.DATA.yingxiong.list[data];
            ui.setName(heroData.hid);

            var widget = G.class.shero(heroData);
            widget.setName('widget');
            widget.setAnchorPoint(0.5,1);
            widget.setPosition(cc.p( ui.nodes.panel_ico.width*0.5, ui.nodes.panel_ico.height ));
            widget.setScale(0.9);

            ui.nodes.panel_ico.removeAllChildren();
            ui.nodes.panel_ico.addChild(widget);
            ui.nodes.panel_ico.setTouchEnabled(false);
            ui.nodes.panel_ico.show();

            if (X.inArray(me.selectedData,data)) {
                widget.setGou(true);
            }

            ui.data = data;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE){
                    G.frame.damijing_setDef.posSelect = G.frame.damijing_setDef.ui.convertToNodeSpace(sender.getParent().convertToWorldSpace(sender.getPosition()));
                    if (X.inArray(me.selectedData, sender.data)) {
                        G.frame.damijing_setDef.posSelect.x += sender.width / 2;
                        sender.finds('widget').setGou(false);
                        me.selectedData.splice(X.arrayFind(me.selectedData,sender.data),1);
                        G.frame.damijing_setDef.bottom.removeItem(sender.data);
                    } else {
                        if (me.selectedData.length >= 6) {
                            G.tip_NB.show(L('YX_FIGHT_XZ_FULL'));
                            for (var i = 0; i < G.frame.damijing_setDef.bottom.panel_yx.children.length; i ++) {
                                var chr = G.frame.damijing_setDef.bottom.panel_yx.children[i];
                                chr.children[2].children[0].setSelected();
                            }
                            return;
                        }
                        me.selectedData.push(sender.data);
                        sender.finds('widget').setGou(true);
                        G.frame.damijing_setDef.bottom.addItem(sender.data);

                        if (cc.isNode(G.frame.damijing_setDef.item)) {
                            G.frame.damijing_setDef.item.stopAllActions();
                            G.frame.damijing_setDef.item.removeFromParent();
                        }
                        var itemClone = G.frame.damijing_setDef.item = sender.clone();
                        itemClone.finds('gou').hide();
                        itemClone.setPosition(G.frame.damijing_setDef.posSelect);
                        G.frame.damijing_setDef.ui.addChild(itemClone);
                        G.frame.damijing_setDef.playAniMove(itemClone);
                    }
                }
            });

            ui.show();
        },
        removeGou: function (tid) {
            var me = this;

            var child = me.getChildByTid(tid);
            if (child) {
                me.ui.setTimeout(function () {
                    child.finds('widget').setGou(false);
                    child.finds('widget').setHighLight(true);
                }, 180);
            }
        },
        getChildByTid:function (tid) {
            var me = this;

            var cd = null;
            var children = me.table.getAllChildren();
            for (var i = 0; i < children.length; i++) {
                var child = children[i];
                if (child.isVisible() && child.data == tid) {

                    cd = child;
                    break;
                }
            }
            return cd;
        }
    });

})();

;;/**
 * Created by LYF on 2018/10/24.
 */
(function () {
    //药水详情
    var ID = 'damijing_ysxq';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f6";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.DATA = me.data();
            me.setContents();
            me.nodes.panel_top.y -= 70;
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var num = G.frame.damijing.DATA.mixture && G.frame.damijing.DATA.mixture[me.DATA] || 0;
            var conf = G.class.watchercom.getMixtureBuyId(me.DATA - 1);
            var layIco = me.nodes.panel_jn;
            var txtName = me.nodes.txt_jn_name;
            var txtIntr = me.nodes.panel_jnnr;
            var txt_h = txtIntr.height;
            var keys = X.keysOfObject(conf.buff);

            layIco.setBackGroundImage("img/mijing/bg_wp4.png", 1);
            txtName.setString(conf.name + "(" + num + "/" + conf.limit + ")");

            var img = new ccui.ImageView('img/mijing/ico_ysda' + me.DATA + '.png', 1);
            img.setAnchorPoint(0.5, 0.5);
            img.setPosition(layIco.width / 2, layIco.height / 2);
            layIco.addChild(img);

            var str = X.STR((conf.show), num * conf.buff[keys[0]] / 10);
            var rt = new X.bRichText({
                size: 20,
                lineHeight: 20,
                color: G.gc.COLOR.n5,
                maxWidth: txtIntr.width,
                family: G.defaultFNT,
            });
            rt.text(str);
            rt.setAnchorPoint(0, 1);
            rt.setPosition( cc.p(0, txtIntr.height) );
            txtIntr.removeAllChildren();
            txtIntr.addChild(rt);


            var extHeight = rt.trueHeight() - txt_h > 0 ? rt.trueHeight() - txt_h : 0;
            me.nodes.panel_top.height += extHeight;

            ccui.helper.doLayout(me.nodes.panel_top);
        },
    });

    G.frame[ID] = new fun('ui_top2.json', ID);
})();
;;(function () {
    G.class.medicine = function (idx, num, callback) {
        if(!idx && idx != 0) return;
        var conf = G.class.watchercom.getMedicine(idx);
        var keys = X.keysOfObject(conf.buff);

        var btn = new ccui.Button;
        btn.idx = conf.id;
        btn.loadTextureNormal("img/mijing/bg_wp" + 5 + ".png", 1);
        if(!num) {
            var icon = new ccui.Button;
            icon.loadTextureNormal("img/mijing/ico_wu" + idx + ".png", 1);
            icon.setAnchorPoint(0.5, 0.5);
            icon.setPosition(btn.width / 2, btn.height / 2);
            icon.setTouchEnabled(false);
            btn.addChild(icon);
        }else {
            G.class.ani.show({
                json: "ani_ico_wu" + idx,
                addTo: btn,
                x: btn.width / 2,
                y: btn.height / 2,
                repeat: true,
                cache: true,
                autoRemove: false,
                onload: function (node) {
                    node.setAnchorPoint(0.5, 0.5);
                }
            })
        }


        var numTxt = new ccui.Text(num, G.defaultFNT, 16);
        numTxt.setTextColor(cc.color("#f6ebcd"));
        numTxt.setAnchorPoint(0.5, 0.5);
        numTxt.setPosition(btn.width / 2 + btn.width / 4, btn.height / 4);
        X.enableOutline(numTxt, "#000000", 2);
        numTxt.zIndex = 999;
        btn.addChild(numTxt);

        for (var i = 0; i < keys.length; i ++) {
            var str = L(keys[i]) + X.STR("<font color=#5ce624>+{1}</font>", keys[i] == "hp" ? conf.buff[keys[i]] + "%" : conf.buff[keys[i]]);
            var rh = new X.bRichText({
                size: 16,
                maxWidth: btn.width,
                lineHeight: 32,
                family: G.defaultFNT,
                color: "#f6ebcd",
                eachText: function (node) {
                    X.enableOutline(node, "#000000", 2);
                }
            });
            rh.text(str);
            rh.setAnchorPoint(0.5, 0.5);
            rh.setPosition(btn.width / 2, 0 - i * rh.height);
            rh.zIndex = 999;
            btn.addChild(rh);
        }
        if(conf.intr) {
            var str = conf.intr;
            var rh = new X.bRichText({
                size: 16,
                maxWidth: btn.width,
                lineHeight: 32,
                family: G.defaultFNT,
                color: "#f6ebcd",
                eachText: function (node) {
                    X.enableOutline(node, "#000000", 2);
                }
            });
            rh.text(str);
            rh.setAnchorPoint(0.5, 0.5);
            rh.setPosition(btn.width / 2, 0);
            rh.zIndex = 999;
            btn.addChild(rh);
        }

        if(!num) {
            btn.setBright(false);
        }

        btn.click(function (sender) {
            if(num == 0) {
                G.tip_NB.show(L("DMJ_BJ"));
                return;
            }
            if(G.frame.damijing.isAllDead) {
                G.tip_NB.show(L("ALL_HERO_DEAD"));
                return;
            }
            if(X.cacheByUid("dmj_bj")) {
                callback && callback(sender);
            }else{
                G.frame.damijing_medicine.data({
                    name: conf.name,
                    node: sender,
                    callback: callback
                }).show();
            }
        });

        return btn;
    }
})();
;;/**
 * Created by zhangming on 2018-05-14
 */
(function () {
    //点金
    var CONSUME = {1:0,2:20,3:50,4:100};
    var ID = 'dianjin';
    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            // me.fullScreen = true;//UI要换成弹窗样式
            me.singleGroup = "f3";
            // me.needshowMainMenu = true;
            me._super(json, id,{action:true});
        },
        getData : function(callback){
            var me = this;
            me.ajax('dianjin_open',[],function(str ,data){
                if (data.s === 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            },true);
        },
        bindUI: function () {
            var me = this;
            // 关闭
            me.ui.opacity = 255 * .7;
            me.ui.finds("panel_ui").click(function(sender,type){
                me.remove();
            });

            // setPanelTitle(me.nodes.tip_title, L('UI_TITLE_ZHP'));
        },
        setContents:function() {
            var me = this;
            var data = me.DATA.prize;
            for(var idx in data){
                me.ui.nodes['text_jb'+idx].setString(data[idx].n + (idx == "4" ? L("JY") : L('jinbi')));
                var list = me.ui.nodes.list.clone();
                me.ui.nodes['panel_'+idx].removeAllChildren();
                me.ui.nodes['panel_'+idx].addChild(list);
                list.setAnchorPoint(0.5,0.5);
                list.setPosition(me.ui.nodes['panel_'+idx].width*0.5,me.ui.nodes['panel_'+idx].height*0.5);
                me._setItem(list,data[idx],idx);
            }
            me._setTime(me.DATA);
            me.setCount();
        },
        setCount: function() {
            var me = this;

            if(me.DATA.huodongtime > 0) {
                for(var i in me.DATA.act) {
                    me.nodes["txt_sy" + i].show();
                    me.nodes["txt_sy" + i].getChildren()[0].setString(me.DATA.act[i]);
                    if(me.DATA.act[i] == 0) {
                        me.nodes["txt_sy" + i].hide();
                    }
                }
            }
        },
        _setTime:function (d) {
            var me = this;
            if(d.cd && d.cd > G.time){
                X.timeout(me.nodes.text_djs,d.cd,function () {
                    //me.nodes.text_mf.setString(L('BCMF'));
                    me.refreshData();
                },null)//,{showStr: L('SYSJ')})
            }
        },
        _setItem: function (item, data,idx) {
            var me = this;
            X.autoInitUI(item);
            var xh = item.nodes.text_1;
            var img_xh = item.nodes.img_zs;
            var btn = item.nodes.btn_1;
            var img_mf = item.nodes.img_wz;
            var img_mf2 = item.nodes.img_wz2;
            img_mf2.hide();
            // btn.setPositionX(114);
            if(idx == 1){
                img_mf.show();
                me.nodes.panel_sxsj.hide();
            }else {
                img_xh.show();
                xh.setString(CONSUME[idx]);
                X.enableOutline(xh,'#2a1c0f',2);
                xh.show();
            }

            item.show();
            btn.show();
            if(me.DATA.act[idx] == 0){
                img_mf.hide();
                if(idx == 1){
                    img_mf2.show();
                    me.nodes.panel_sxsj.show();
                }else{
                    xh.hide();
                    img_xh.hide();
                    img_mf2.show()
                }
                btn.setBright(false);
                btn.setTouchEnabled(false);
                btn.hide();
            }
            btn.idx = idx;
            btn.data = ["noMusic"];
            btn.click(function(sender,type){
                me._buy(sender,img_mf,img_mf2, xh, img_xh);
            },200);
        },
        _buy:function (item,img_mf,img_mf2, xh, img_xh, callback) {
            var me = this;
            me.ajax('dianjin_lingqu',[item.idx],function(str ,data){
                if (data.s === 1) {
                    X.audio.playEffect("sound/dianjin.mp3", false);
                    if(item.idx == 1){
                        G.hongdian.getData("dianjin", 1);
                    }
                    me.aniArr[parseInt(item.idx) - 1].playWithCallback("out", false , function () {
                        me.aniArr[parseInt(item.idx) - 1].play("wait", true);
                    });
                    var vip = P.gud.vip > 0 ? X.STR(L("GZXJC"), P.gud.vip) : "";
                    G.tip_NB.show(data.d.prize.n + (item.idx == 4 ? L("JY") : L('jinbi')) + vip);
                    me.getData(function () {
                        me.setContents();
                    })
                }else{
                    X.audio.playEffect("sound/dianji.mp3", false);
                }
            },true);
        },
        onOpen: function () {
            var me = this;
            me.bindUI();
        },
        refreshData:function () {
            var me = this;
            me.getData(function () {
                me.setContents();
            });
        },
        onShow: function () {
            var me = this;

            me.aniArr = [];
            for(var i = 0; i < 4; i ++){
                var box = me.ui.finds("img_bx" + (i + 1));
                var bg = me.nodes["panel_dh" + (i + 1)];
                G.class.ani.show({
                    json: "ani_lingqujinbi",
                    addTo: box,
                    x: box.width / 2,
                    y: box.height / 2,
                    repeat: true,
                    autoRemove: false,
                    onload: function (node, action) {
                        action.play("wait", true);
                        me.aniArr.push(action);
                    }
                });
            }
            var rw = me.ui.finds('img_rw');
            rw.removeBackGroundImage();
            rw.setFlippedX(true);
            G.class.ani.show({
                json:'ani_choukajuese',
                addTo:rw,
                x:rw.width/2,
                y:rw.height/2,
                repeat:true,
                autoRemove:false,
            });
            me.refreshData();
            me.emit("show");
        },
        onAniShow: function () {
            var me = this;
        },
        onRemove: function () {
            var me = this;
            me.event.emit('hide');
        },
    });

    G.frame[ID] = new fun('dianjin.json', ID);
})();
;;/**
 * Created by LYF on 2018-12-26
 */
(function () {
    var ID = "diaowen_dwxz";

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        bindUI: function () {
            var me = this;
            setPanelTitle(me.nodes.txt_title, L('UI_TITLE_DWXZ'));

            me.nodes.mask.click(function(){
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.bindUI();

            new X.bView('zhuangbei_zbxz.json',function(view){
                me._view = view;
                cc.enableScrollBar(view.nodes.scrollview);
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
            });
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var view = me._view;
            var data = G.frame.diaowen.getGlyphArrBySort();

            if(me.data().state == "genghuan") {
                if(G.frame.yingxiong_xxxx.dw.curDwId) data.unshift(G.frame.yingxiong_xxxx.dw.curDwId);
            }
            if(me.data().state == "ts") {
                data = G.frame.diaowen.getGlyphArrByTs(me.data().color, me.data().id);
            }

            cc.isNode(view.finds('img_zwnr')) && view.finds('img_zwnr').hide();
            if (data.length < 1) {
                cc.isNode(view.finds('img_zwnr')) && view.finds('img_zwnr').show();
                return;
            }

            if(!me.table) {
                var table = me.table = new X.TableView(view.nodes.scrollview, view.nodes.list, 5, function (ui, data) {
                    me.setItem(ui, data);
                }, null, null, 1, 3);
                table.setData(data);
                table.reloadDataWithScroll(true);
            } else {
                me.table.setData(data);
                me.table.reloadDataWithScroll(false);
            }
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            ui.setName(data);
            ui.data = data;

            var d = G.frame.beibao.DATA.glyph.list[data];
            var widget = G.class.sglyph(d);
            widget.setScale(0.95);
            widget.setAnchorPoint(0.5,1);
            widget.setPosition(cc.p( ui.width*0.5, ui.height ));
            ui.removeAllChildren();
            ui.addChild(widget);

            if(d.isuse) {
                var xx = new ccui.ImageView("img/diaowen/img_dw_xx.png", 1);
                xx.setAnchorPoint(0, 1);
                xx.setPosition(2, ui.height -2);
                ui.addChild(xx);
                ui.isXX = true;
            } else {
                ui.isXX = false;
            }

            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function(sender, type){
                if(type == ccui.Widget.TOUCH_NOMOVE){
                    if(sender.isXX) {
                        var frame = G.frame.yingxiong_xxxx.dw;
                        G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[frame.curXbId]));
                        me.ajax("glyph_takeoff", [frame.curIndex, frame.curXbId], function (str, data) {
                            if(data.s == 1) {
                                G.frame.yingxiong_xxxx.emit('updateInfo');
                                frame.curDwId = undefined;
                                me.remove();
                            }
                        });
                    } else {
                        G.frame.diaowen_dwxq.data({
                            id: sender.data,
                            state: me.data().state,
                            callback: me.data().callback
                        }).show();
                    }
                }
            });
            ui.show();
        }
    });

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by LYF on 2018-12-27
 */
(function () {
    var ID = "diaowen_peiyang";

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        bindUI: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });

            me.nodes.tip_title.setString(L("DIAOWEN") + L(me.data().state));
        },
        onOpen: function () {
            var me = this;

            me.bindUI();
        },
        onShow: function () {
            var me = this;

            me.DATA = G.frame.beibao.DATA.glyph.list[me.data().id];
            me.CONF = G.class.glyph.getById(me.DATA.gid);
            me.xlArr = [];
            me.redArr = [];
            
            new X.bView("diaowen_dwxl.json", function (node) {
                me.view = node;
                me.nodes.panel_nr.addChild(node);
                me.setContents();
            });
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.view.nodes.panel_fjjn.hide();
            me.view.nodes.panel_fjsx.hide();
            me.view.nodes.panel_jbsx.hide();
            me.view.nodes.txt_xl.setString(L(me.data().state));

            if(me.data().state == "sj") me.view.nodes.panel_jbsx.show();
            if(me.data().state == "xl") me.view.nodes.panel_fjsx.show();
            if(me.data().state == "cz") me.view.nodes.panel_fjjn.show();

            me.view.nodes.btn_xl.click(function () {
                switch (me.data().state) {
                    case "sj":
                        me.ajax("glyph_lvup", [me.data().id], function (str, data) {
                            if(data.s == 1) {
                                me.DATA = G.frame.beibao.DATA.glyph.list[me.data().id];
                                var keys = X.keysOfObject(me.DATA.basebuff);
                                var buff = me.DATA.basebuff;
                                var val = keys.length < 2 ?
                                    L(keys[0]) + "+" + parseInt(0.09 * buff[keys[0]]) :
                                    L(keys[0]) + "+" + parseInt(0.09 * buff[keys[0]]) + "  " + L(keys[1]) + "+" + parseInt(0.09 * buff[keys[1]]);

                                G.tip_NB.show(val);
                                G.frame.diaowen_sx.setContents();
                                me.playAni(function () {
                                    if(me.DATA.lv >= G.class.glyph.getCom().base.lvlimit) me.remove();
                                    else {
                                        me.sj();
                                        me.setBaseInfo();
                                    }
                                });
                            }
                        });
                        break;
                    case "xl":
                        function f() {
                            me.ajax("glyph_scrutiny", [me.data().id, me.xlArr], function (str, data) {
                                if(data.s == 1) {
                                    me.playAni();
                                    me.DATA = G.frame.beibao.DATA.glyph.list[me.data().id];
                                    G.frame.diaowen_sx.setContents();

                                    for (var i = 0; i < me.xlPanel.length; i ++) {
                                        if(!X.inArray(me.xlArr, i)) {
                                            G.class.ani.show({
                                                json: "ani_diaowen_xilian",
                                                addTo: me.xlPanel[i],
                                                x: me.xlPanel[i].width / 2,
                                                y: me.xlPanel[i].height / 2,
                                                repeat: false,
                                                autoRemove: true,
                                            });
                                        }
                                    }
                                    me.xl();
                                }
                            });
                        }
                        var isNoLockRed = false;
                        for (var i in me.redArr) {
                            if(!X.inArray(me.xlArr, me.redArr[i])) {
                                isNoLockRed = true;
                                break;
                            }
                        }
                        if(isNoLockRed) {
                            if(!X.cacheByUid("todayTipRed")) {
                                G.frame.diaowen_tip.data({
                                    callback: function () {
                                        f();
                                    }
                                }).show();
                            } else {
                                f();
                            }
                        } else {
                            f();
                        }
                        break;
                    case "cz":
                        me.ajax("glyph_recast", [me.data().id], function (str, data) {
                            if(data.s == 1) {
                                G.tip_NB.show(L("CZCG"));
                                me.playAni();
                                me.DATA = G.frame.beibao.DATA.glyph.list[me.data().id];
                                me.view.nodes.panel_wzms.runActions([
                                    cc.fadeOut(0.4),
                                    cc.callFunc(function () {
                                        me.cz();
                                    }),
                                    cc.fadeIn(0.4)
                                ]);
                                G.frame.diaowen_sx.setContents();
                            }
                        });
                        break;
                }
            }, 1000);

            me.setBaseInfo();
        },
        setBaseInfo: function() {
            var me = this;
            var data = me.DATA;
            var conf = me.CONF;

            var wid = G.class.sglyph(data);
            wid.setAnchorPoint(0.5, 0.5);
            wid.setPosition(me.view.nodes.panel_dw.width / 2, me.view.nodes.panel_dw.height / 2);
            me.view.nodes.panel_dw.removeAllChildren();
            me.view.nodes.panel_dw.addChild(wid);

            me.view.nodes.txt_name.setTextColor(cc.color(G.gc.COLOR[conf.color]));
            me.view.nodes.txt_name.setString(conf.name);
            me.view.nodes.txt_jcz1.setString(G.class.glyph.getCom().base.lvdata[data.lv].addition / 10 + "%");

            var keys = X.keysOfObject(data.basebuff);
            if(keys.length == 1) {
                me.view.ui.finds("Image_sm").hide();
                me.view.nodes.txt_sm.hide();
            } else {
                me.view.ui.finds("Image_sm").show();
                me.view.nodes.txt_sm.show();
                X.setRichText({
                    str: data.basebuff.hp + " <font color=#a3806f>(" + conf.buff.hp[0] + "~" + conf.buff.hp[1] + ")</font>",
                    anchor: {x: 0, y: 0.5},
                    parent: me.view.nodes.txt_sm,
                    pos: {x: 0, y: me.view.nodes.txt_sm.height / 2}
                });
            }
            var val = keys.length > 1 ? "atk" : keys[0];
            me.view.ui.finds("Image_gj").loadTexture("img/public/ico/ico_" + (val == "atk" ? "gj" : "sm") + ".png", 1);
            X.setRichText({
                str: data.basebuff[val] + " <font color=#a3806f>(" + conf.buff[val][0] + "~" + conf.buff[val][1] + ")</font>",
                anchor: {x: 0, y: 0.5},
                parent: me.view.nodes.txt_gj,
                pos: {x: 0, y: me.view.nodes.txt_gj.height / 2}
            });

            me[me.data().state]();
        },
        sj: function () {
            var me = this;
            var data = me.DATA;

            X.setRichText({
                str: X.STR(L("DW_DJ"), data.lv),
                anchor: {x: 0, y: 0.5},
                parent: me.view.nodes.txt_dj1,
                pos: {x: 0, y: me.view.nodes.txt_dj1.height / 2}
            });

            X.setRichText({
                str: X.STR(L("DW_SX"), G.class.glyph.getCom().base.lvdata[data.lv].addition / 10),
                anchor: {x: 0, y: 0.5},
                parent: me.view.nodes.txt_sxjc1,
                pos: {x: 0, y: me.view.nodes.txt_sxjc1.height / 2}
            });

            X.setRichText({
                str: X.STR(L("DW_DJJ"), data.lv + 1),
                anchor: {x: 0, y: 0.5},
                parent: me.view.nodes.txt_dj2,
                pos: {x: 0, y: me.view.nodes.txt_dj2.height / 2}
            });

            X.setRichText({
                str: X.STR(L("DW_SXJ"), G.class.glyph.getCom().base.lvdata[data.lv + 1].addition / 10),
                anchor: {x: 0, y: 0.5},
                parent: me.view.nodes.txt_sxjc2,
                pos: {x: 0, y: me.view.nodes.txt_sxjc2.height / 2}
            });

            X.alignItems(me.view.nodes.panel_cl, G.class.glyph.getCom().base.lvdata[data.lv].need, "left",{
                scale: .75,
                touch: true,
                mapItem: function (node) {
                    if(G.class.getOwnNum(node.data.t, node.data.a) < node.data.n) {
                        node.num.setTextColor(cc.color("#ff4e4e"));
                    }
                }
            });
        },
        xl: function () {
            var me = this;
            var btnArr = [];
            var data = me.DATA;
            var textArr = [me.view.nodes.panel_pj, me.view.nodes.panel_smcz, me.view.nodes.panel_bj, me.view.nodes.panel_shjc1];

            function f(arr) {
                var need = G.class.glyph.getCom().base.need.lock[arr.length];
                X.alignItems(me.view.nodes.panel_cl, need, "left",{
                    scale: .75,
                    touch: true,
                    mapItem: function (node) {
                        if(G.class.getOwnNum(node.data.t, node.data.a) < node.data.n) {
                            node.num.setTextColor(cc.color("#ff4e4e"));
                        }
                    }
                });
            }

            me.xlPanel = [];
            me.redArr = [];
            for (var i = 0; i < 4; i ++) {
                if(data.extbuff[i]) {
                    var con = G.class.glyph.getExtra().extbuff.id[data.extbuff[i]];
                    var key = X.keysOfObject(con.buff)[0];
                    textArr[i].show();
                    textArr[i].children[1].setString(L(key) + "：+" + con.buff[key] / 10 + "%");
                    textArr[i].children[1].setTextColor(cc.color(G.gc.COLOR[con.color]));
                    btnArr.push(textArr[i].children[2]);
                    if(con.color == 5) me.redArr.push(i);
                    me.xlPanel.push(textArr[i]);
                } else {
                    textArr[i].hide();
                }
            }

            for (var i = 0; i < btnArr.length; i ++) {
                var btn = btnArr[i];
                btn.idx = i;
                (function (btn) {
                    if(btnArr.length == 1) btn.hide();
                    if(X.inArray(me.xlArr, btn.idx)) btn.setBright(false);
                    btn.click(function (sender) {
                        if(X.inArray(me.xlArr, sender.idx)) {
                            sender.setBright(true);
                            me.xlArr.splice(X.arrayFind(me.xlArr, sender.idx), 1);
                            f(me.xlArr);
                        } else {
                            if(me.xlArr.length == btnArr.length - 1) {
                                G.tip_NB.show(L("BKSDSYSXXL"));
                                return;
                            }
                            sender.setBright(false);
                            me.xlArr.push(sender.idx);
                            f(me.xlArr);
                        }
                    })
                })(btn);

                f(me.xlArr);
            }
        },
        cz: function () {
            var me = this;
            var data = me.DATA;

            if(data.extskill && G.class.glyph.getExtra().extskill.id[data.extskill]) {
                me.view.nodes.panel_wzms.show();
                me.view.nodes.panel_wzms.setString(G.class.glyph.getExtra().extskill.id[data.extskill].desc);
            } else {
                me.view.nodes.panel_wzms.hide();
            }

            X.alignItems(me.view.nodes.panel_cl, G.class.glyph.getCom().base.need.recast, "left",{
                scale: .75,
                touch: true,
                mapItem: function (node) {
                    if(G.class.getOwnNum(node.data.t, node.data.a) < node.data.n) {
                        node.num.setTextColor(cc.color("#ff4e4e"));
                    }
                }
            });
        },
        playAni: function (cb) {
            var me = this;

            G.class.ani.show({
                json: "ani_diaowen_shengji",
                addTo: me.ui.finds("panel_tip"),
                x: me.ui.finds("panel_tip").width / 2,
                y: me.ui.finds("panel_tip").height / 2,
                repeat: false,
                autoRemove: true,
                onload: function(node) {
                    node.zIndex = -1;
                },
                onend: function () {
                    cb && cb();
                }
            })
        }
    });

    G.frame[ID] = new fun('diaowen_tip.json', ID);
})();
;;/**
 * Created by LYF on 2018-12-26
 */
(function () {
    var _fun = {
        getGlyphArr: function () {
            var arr = [];
            var keys = X.keysOfObject(G.frame.beibao.DATA.glyph.list);

            for (var i in keys) {
                if(!G.frame.beibao.DATA.glyph.list[keys[i]].isuse) arr.push(keys[i]);
            }

            return arr;
        },
        getGlyphArrBySort: function () {
            var arr = this.getGlyphArr();

            arr.sort(function (a, b) {
                var dataA = G.frame.beibao.DATA.glyph.list[a];
                var dataB = G.frame.beibao.DATA.glyph.list[b];
                var confA = G.class.glyph.getById(dataA.gid);
                var confB = G.class.glyph.getById(dataB.gid);

                if (confA.color != confB.color) {
                    return confA.color > confB.color ? -1 : 1;
                } else {
                    return dataA.lv * 1 > dataB.lv * 1 ? -1 : 1;
                }
            });

            return arr;
        },
        getGlyphArrByTs: function (color, gid) {
            var colorArr = [];
            var arr = this.getGlyphArrBySort();
            var data = G.frame.beibao.DATA.glyph.list[gid];

            for (var i in arr) {
                var conf = G.class.glyph.getById(G.frame.beibao.DATA.glyph.list[arr[i]].gid);
                if(conf.color == color && arr[i] != gid && data.type == conf.type) {
                    colorArr.push(arr[i]);
                }
            }

            return colorArr;
        },
        getGlyphArrByMin: function () {
            var arr = this.getGlyphArr();

            arr.sort(function (a, b) {
                var dataA = G.frame.beibao.DATA.glyph.list[a];
                var dataB = G.frame.beibao.DATA.glyph.list[b];
                var confA = G.class.glyph.getById(dataA.gid);
                var confB = G.class.glyph.getById(dataB.gid);

                if (confA.color != confB.color) {
                    return confA.color < confB.color ? -1 : 1;
                } else {
                    return dataA.lv * 1 < dataB.lv * 1 ? -1 : 1;
                }
            });

            return arr;
        },
        getNoInArr: function (arr) {
            var list = this.getGlyphArrByMin();
            var ken = [];

            for (var i in list) {
                if(!X.inArray(arr, list[i])) ken.push(list[i]);
            }

            return ken;
        },
        getNoInArrByRed: function (arr) {
            var list = this.getGlyphArrByMin();
            var ken = [];

            for (var i in list) {
                if(!X.inArray(arr, list[i]) && G.frame.beibao.DATA.glyph.list[list[i]].color != 5) ken.push(list[i]);
            }

            return ken;
        }
    };

    G.frame.diaowen = G.frame.diaowen || {};

    for (var key in _fun) {
        G.frame.diaowen[key] = _fun[key];
    }
})();
;;/**
 * Created by LYF on 2018-12-27
 */
(function () {
    var ID = "diaowen_sx";

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        bindUI: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });

            //更换
            if(G.frame.beibao.isShow) me.nodes.btn_gh.hide();
            me.nodes.btn_gh.click(function () {
                G.frame.diaowen_dwxz.data({
                    state: "genghuan"
                }).show();
                me.remove();
            });

            //重铸
            me.nodes.btn_cz.click(function (sender) {
                if(sender.no) {
                    G.tip_NB.show(L("DWCZNEED"));
                    return;
                }
                G.frame.diaowen_peiyang.data({
                    state: "cz",
                    id: me.data()
                }).show();
            });

            //洗练
            me.nodes.btn_xl.click(function () {
                G.frame.diaowen_peiyang.data({
                    state: "xl",
                    id: me.data()
                }).show();
            });

            //升级
            me.nodes.btn_sj.click(function (sender) {
                if(sender.max) {
                    G.tip_NB.show(L("DQDWMJ"));
                    return;
                }
                G.frame.diaowen_peiyang.data({
                    state: "sj",
                    id: me.data()
                }).show();
            });

            //吞噬
            me.nodes.btn_ts.click(function () {
                G.frame.diaowen_tunshi.data({
                    state: "ts",
                    id: me.data()
                }).show();
            });
        },
        onOpen: function () {
            var me = this;

            me.bindUI();
        },
        onShow: function () {
            var me = this;

            me.setContents();
        },
        onRemove: function () {
            var me = this;

            if(G.frame.beibao.isShow) G.frame.beibao._panels.refreshPanel();
            if(G.frame.yingxiong_xxxx.dw) G.frame.yingxiong_xxxx.dw.setContents();
        },
        setContents: function () {
            var me = this;
            var data = G.frame.beibao.DATA.glyph.list[me.data()];
            var conf = G.class.glyph.getById(data.gid);

            if(data.lv >= G.class.glyph.getCom().base.lvlimit) {
                me.nodes.btn_sj.setBright(false);
                me.nodes.btn_sj.max = true;
                me.nodes.btn_sj.children[0].setTextColor(cc.color("#6c6c6c"));
            }

            if(conf.color < 5) {
                me.nodes.btn_cz.setBright(false);
                me.nodes.btn_cz.no = true;
                me.nodes.btn_cz.children[0].setTextColor(cc.color("#6c6c6c"));
            }

            var wid = G.class.sglyph(data);
            wid.setAnchorPoint(0.5, 0.5);
            wid.setPosition(me.nodes.panel_dw.width / 2, me.nodes.panel_dw.height / 2);
            me.nodes.panel_dw.removeAllChildren();
            me.nodes.panel_dw.addChild(wid);

            me.nodes.txt_name.setString(conf.name);
            me.nodes.txt_name.setTextColor(cc.color(G.gc.COLOR[conf.color]));
            me.nodes.txt_jcz.setString(G.class.glyph.getCom().base.lvdata[data.lv].addition / 10 + "%");

            var textArr = [me.nodes.panel_pj, me.nodes.panel_smcz, me.nodes.panel_bj, me.nodes.panel_shjc];
            for (var i = 0; i < 4; i ++) {
                if(data.extbuff[i]) {
                    var con = G.class.glyph.getExtra().extbuff.id[data.extbuff[i]];
                    var key = X.keysOfObject(con.buff)[0];
                    textArr[i].show();
                    textArr[i].children[1].setString(L(key) + "：+" + con.buff[key] / 10 + "%");
                    textArr[i].children[1].setTextColor(cc.color(G.gc.COLOR[con.color]));
                } else {
                    textArr[i].hide();
                }
            }

            var keys = X.keysOfObject(data.basebuff);
            if(keys.length == 1) {
                me.ui.finds("Image_sm").hide();
                me.nodes.txt_sm.hide();
            } else {
                me.ui.finds("Image_sm").show();
                me.nodes.txt_sm.show();
                X.setRichText({
                    str: data.basebuff.hp + " <font color=#a3806f>(" + conf.buff.hp[0] + "~" + conf.buff.hp[1] + ")</font>",
                    anchor: {x: 0, y: 0.5},
                    parent: me.nodes.txt_sm,
                    pos: {x: 0, y: me.nodes.txt_sm.height / 2}
                });
            }
            var val = keys.length > 1 ? "atk" : keys[0];
            me.ui.finds("Image_gj").loadTexture("img/public/ico/ico_" + (val == "atk" ? "gj" : "sm") + ".png", 1);
            X.setRichText({
                str: data.basebuff[val] + " <font color=#a3806f>(" + conf.buff[val][0] + "~" + conf.buff[val][1] + ")</font>",
                anchor: {x: 0, y: 0.5},
                parent: me.nodes.txt_gj,
                pos: {x: 0, y: me.nodes.txt_gj.height / 2}
            });

            if(data.extskill && G.class.glyph.getExtra().extskill.id[data.extskill]) {
                me.nodes.img_zw.hide();
                me.nodes.panel_wzms.show();
                me.nodes.panel_wzms.setString(G.class.glyph.getExtra().extskill.id[data.extskill].desc);
            } else {
                me.nodes.img_zw.show();
                me.nodes.panel_wzms.hide();
            }
        }
    });

    G.frame[ID] = new fun('diaowen_dwsx.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/23.
 */
(function () {
    //雕文-洗练提示
    var ID = 'diaowen_tip';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.click(function () {
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.DATA = me.data();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('tishi_nlp.json', function (view) {
                me.ui.nodes.panel_nr.addChild(view);
                me.view = view;
                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.view.finds("img_gou").setTouchEnabled(true);
            me.view.finds("img_gou").click(function () {
                if(!X.cacheByUid("todayTipRed")) {
                    X.cacheByUid("todayTipRed", 1);
                    me.view.finds("ico_gou").show();
                }else {
                    X.cacheByUid("todayTipRed", 0);
                    me.view.finds("ico_gou").hide();
                }
            });

            me.view.nodes.btn_qd.click(function () {
                me.DATA.callback && me.DATA.callback();
                me.remove();
            });

            me.view.nodes.btn_qx.click(function () {
                me.remove();
            });

            var str = L("DWTIP");
            var rh = new X.bRichText({
                size: 24,
                maxWidth: me.view.finds("txt_nlp").width,
                lineHeight: 32,
                family: G.defaultFNT,
                color: "#804326"
            });
            rh.text(str);
            rh.setAnchorPoint(0.5, 0.5);
            rh.setPosition(me.view.finds("txt_nlp").width / 2, me.view.finds("txt_nlp").height / 2);
            me.view.finds("txt_nlp").addChild(rh);
        },
    });
    G.frame[ID] = new fun('ui_tip_tishi.json', ID);
})();
;;/**
 * Created by LYF on 2018-12-27
 */
(function () {
    var ID = "diaowen_tunshi";

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        bindUI: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });

            me.nodes.tip_title.setString(L("DIAOWEN") + L(me.data().state));
        },
        onOpen: function () {
            var me = this;

            me.bindUI();
        },
        onShow: function () {
            var me = this;

            me.DATA = G.frame.beibao.DATA.glyph.list[me.data().id];
            me.CONF = G.class.glyph.getById(me.DATA.gid);

            new X.bView("diaowen_dwts.json", function (node) {
                me.view = node;
                me.nodes.panel_nr.addChild(node);
                me.setContents();
            });
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var data = me.DATA;
            var conf = me.CONF;
            me.selected = [];

            var wid = G.class.sglyph(data, true);
            wid.setAnchorPoint(0.5, 0.5);
            wid.setPosition(me.view.nodes.panel_dw.width / 2, me.view.nodes.panel_dw.height / 2);
            me.view.nodes.panel_dw.removeAllChildren();
            me.view.nodes.panel_dw.addChild(wid);

            me.setJia();

            me.view.nodes.btn_xl.click(function () {
                if(!me.view.nodes.panel_dw1.children[0]) {
                    G.tip_NB.show(L("QFRTSDDW"));
                    return;
                }
                if(me.selected.length < 1) {
                    G.tip_NB.show(L("QXZTSSX"));
                    return;
                }
                me.ajax("glyph_devoure", [me.data().id, me.tsid, me.selected], function (str, data) {
                    if(data.s == 1) {
                        G.tip_NB.show(L("TSCG"));
                        G.frame.diaowen_sx.setContents();
                        G.class.ani.show({
                            json: "ani_diaowen_tunshi",
                            addTo: me.view.ui,
                            x: me.view.ui.width / 2,
                            y: 325,
                            repeat: false,
                            autoRemove: true,
                            onend: function () {
                                if(data.d && data.d.prize && data.d.prize.length > 0) {
                                    G.frame.jiangli.data({
                                        prize: data.d.prize
                                    }).show();
                                }
                                me.remove();
                            }
                        });
                    }
                })
            }, 1000);

            me.view.nodes.panel_dw.click(function (sender) {
                G.frame.diaowen_dwxq.data({
                    id: sender.children[0].data.tid,
                    state: "ck"
                }).show();
            });

            me.view.nodes.panel_dw1.click(function (sender) {
                if(sender.children.length > 0) {
                    G.frame.diaowen_dwxq.data({
                        id: sender.children[0].data.tid,
                        state: "ck"
                    }).show();
                    return;
                }
                G.frame.diaowen_dwxz.data({
                    id: me.data().id,
                    state: me.data().state,
                    color: conf.color,
                    callback: function (id) {
                        me.setTsDw(id);
                        me.setJia();
                    }
                }).show();
            });
            var key = ["buff", "extbuff", "extskill"];
            var gou = [me.view.nodes.img_gou1, me.view.nodes.img_gou3, me.view.nodes.img_gou2];
            var gouArr = [me.view.nodes.panel_pj.finds("Image_8"), me.view.nodes.panel_smcz.finds("Image_8"), me.view.nodes.panel_bj.finds("Image_8")];

            for (var i = 0; i < gouArr.length; i ++) {
                (function (lay, i) {
                    lay.setTouchEnabled(true);
                    lay.gou = gou[i];
                    lay.key = key[i];
                    lay.gou.setTouchEnabled(false);
                    lay.click(function (sender) {
                        if(!me.view.nodes.panel_dw1.children[0]) {
                            G.tip_NB.show(L("QFRTSDDW"));
                            return;
                        }
                        if(!X.inArray(me.selected, sender.key)) {
                            me.selected.push(sender.key);
                            sender.gou.show();
                        } else {
                            me.selected.splice(X.arrayFind(me.selected, sender.key), 1);
                            sender.gou.hide();
                        }
                        me.setNeed();
                    })
                })(gouArr[i], i);
            }
            me.setNeed();
        },
        setTsDw: function (id) {
            var me = this;
            var lay = me.view.nodes.panel_dw1;
            var data = G.frame.beibao.DATA.glyph.list[id];

            var wid = G.class.sglyph(data, true);
            wid.setAnchorPoint(0.5, 0.5);
            wid.setPosition(lay.width / 2, lay.height / 2);
            lay.removeAllChildren();
            lay.addChild(wid);

            me.tsid = id;
            me.checkState();
        },
        checkState: function () {
            var me = this;
            var lay = me.view.nodes.panel_dw1.children[0];

            if(!lay.data.extskill || lay.data.extskill.length < 1) {
                me.view.nodes.panel_bj.hide();
            }
        },
        setNeed: function () {
            var me = this;
            var need = X.clone(G.class.glyph.getCom().base.need.devoured);

            if(me.selected.length < 1) {
                need[0].n = 0;
            }

            X.alignItems(me.view.nodes.panel_cl, need, "left",{
                scale: .75,
                touch: true
            });
        },
        setJia: function () {
            var me = this;

            me.view.nodes.panel_dwdh.removeAllChildren();

            if(!me.view.nodes.panel_dw1.children[0] && G.frame.diaowen.getGlyphArrByTs(me.CONF.color, me.data().id)) {
                var img = new ccui.ImageView("img/public/img_jia.png", 1);
                img.setAnchorPoint(0.5, 0.5);
                img.setPosition(me.view.nodes.panel_dwdh.width / 2, me.view.nodes.panel_dwdh.height / 2);
                me.view.nodes.panel_dwdh.addChild(img);
                img.runAction(cc.sequence(cc.fadeOut(1), cc.fadeIn(1)).repeatForever());
            }
        }
    });

    G.frame[ID] = new fun('diaowen_tip.json', ID);
})();
;;/**
 * Created by LYF on 2018-12-27
 */
(function () {
    var ID = "diaowen_dwxq";

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        bindUI: function () {
            var me = this;

            if(me.data().state == "genghuan" || me.data().state == "xiangqian") {
                me.nodes.txt_xq.setString(L("XIANGQIAN"));
            } else {
                me.nodes.txt_xq.setString(L("QD"));
            }
            
            me.nodes.btn_xq.click(function () {
                if(me.data().state == "genghuan" || me.data().state == "xiangqian") {
                    G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[G.frame.yingxiong_xxxx.curXbId]));
                    me.ajax("glyph_wear", [me.data().id, G.frame.yingxiong_xxxx.curXbId, G.frame.yingxiong_xxxx.dw.curIndex], function (str, data) {
                        if(data.s == 1) {
                            me.remove();
                            if(G.frame.diaowen_dwxz.isShow) {
                                G.frame.diaowen_dwxz.remove();
                            }
                            G.frame.yingxiong_xxxx.emit('updateInfo');
                        }
                    });
                } else {
                    me.data().callback && me.data().callback(me.data().id);
                    me.remove();
                    if(G.frame.diaowen_dwxz.isShow) {
                        G.frame.diaowen_dwxz.remove();
                    }
                }
            });

            me.nodes.mask.click(function () {
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;

            me.bindUI();
            me.fillSize();
        },
        onShow: function () {
            var me = this;

            me.setContents();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var data = G.frame.beibao.DATA.glyph.list[me.data().id];
            var conf = G.class.glyph.getById(data.gid);

            var wid = G.class.sglyph(data);
            wid.setAnchorPoint(0.5, 0.5);
            wid.setPosition(me.nodes.panel_wp.width / 2, me.nodes.panel_wp.height / 2);
            me.nodes.panel_wp.removeAllChildren();
            me.nodes.panel_wp.addChild(wid);

            me.nodes.panel_name.setString(conf.name);
            me.nodes.panel_name.setTextColor(cc.color(G.gc.COLOR[conf.color]));
            me.nodes.panel_wzns.setString(G.class.glyph.getCom().base.lvdata[data.lv].addition / 10 + "%");

            var textArr = [me.nodes.panel_pj, me.nodes.panel_smcz, me.nodes.panel_bj, me.nodes.panel_shjc];
            for (var i = 0; i < 4; i ++) {
                if(data.extbuff[i]) {
                    var con = G.class.glyph.getExtra().extbuff.id[data.extbuff[i]];
                    var key = X.keysOfObject(con.buff)[0];
                    textArr[i].show();
                    textArr[i].children[0].setString(L(key) + "：+" + con.buff[key] / 10 + "%");
                    textArr[i].children[0].setTextColor(cc.color(G.gc.COLOR[con.color]));
                } else {
                    textArr[i].hide();
                }
            }

            var keys = X.keysOfObject(data.basebuff);
            if(keys.length == 1) {
                me.ui.finds("Image_sm").hide();
                me.nodes.txt_sm.hide();
            } else {
                me.ui.finds("Image_sm").show();
                me.nodes.txt_sm.show();
                X.setRichText({
                    str: data.basebuff.hp + " <font color=#6c5739>(" + conf.buff.hp[0] + "~" + conf.buff.hp[1] + ")</font>",
                    anchor: {x: 0, y: 0.5},
                    parent: me.nodes.txt_sm,
                    pos: {x: 0, y: me.nodes.txt_sm.height / 2},
                    color: "#d9ccb1"
                });
            }
            var val = keys.length > 1 ? "atk" : keys[0];
            me.ui.finds("Image_gj").loadTexture("img/public/ico/ico_" + (val == "atk" ? "gj" : "sm") + ".png", 1);
            X.setRichText({
                str: data.basebuff[val] + " <font color=#6c5739>(" + conf.buff[val][0] + "~" + conf.buff[val][1] + ")</font>",
                anchor: {x: 0, y: 0.5},
                parent: me.nodes.txt_gj,
                pos: {x: 0, y: me.nodes.txt_gj.height / 2},
                color: "#d9ccb1"
            });

            if(data.extskill && G.class.glyph.getExtra().extskill.id[data.extskill]) {
                me.nodes.panel_fjjn.show();
                me.nodes.panel_wzms1.setString(G.class.glyph.getExtra().extskill.id[data.extskill].desc);
            } else {
                me.nodes.panel_fjjn.hide();
                me.noSkill = true;

            }
            if(me.data().state == "ck") {
                me.nodes.btn_xq.hide();
                if(me.noSkill) {
                    me.nodes.panel_bg.height = 230;
                } else {
                    me.nodes.panel_bg.height = 355;
                }
            } else {
                if(me.noSkill) {
                    me.nodes.panel_bg.height = 300;
                }
            }
            ccui.helper.doLayout(me.nodes.panel_bg);
        }
    });

    G.frame[ID] = new fun('diaowen_tip1.json', ID);
})();
;;(function () {
    var ID ='fight';
    var fun = X.bUi.extend({
        extConf:{
            //可跳过的战斗类型  有竞技场、好友boss、好友pk、每日试炼
            showSkip:['pvjjc','pvshilian','pvfb','pvfriend','pvgjjjc', 'pvfuben', "hybs", "pvywzbjf","pvywzbzb", "video", "damijing", "pvghz", "pvwz", "pvwzdld"],
            // unshowSkip:[],
            showBattleType:['pvjjc','pvgjjjc','pvwz',"pvwzdld"],
            showFriendBoss:['pvfb', "hybs"],
            changebg:{
                pvguanqia: function () {
                    var maxGqid = G.class.tanxian.getCurMaxGqid();
                    var areaid = G.class.tanxian.getAreaById(P.gud.maxmapid > maxGqid ? maxGqid : P.gud.maxmapid);
                    var fightBg = G.class.tanxian.getExtConf().base.area[areaid].fightbg;
                    return fightBg;
                },
                pvdafashita: function (obj) {
                    return G.class.dafashita.get()[obj.pvid].fightmap;
                },
                pvfriend: function (obj) {
                    return 'zhandou_09.jpg';
                },
                pvjjc: function (obj) {
                    return 'zhandou_09.jpg';
                },
                pvfb: function (obj) {
                    return obj.pvid;
                    // return 'zhandou_09';
                },
                pvshilian: function (obj) {
                    return G.class.meirishilian.get()[obj.type][obj.nandu].fightmap;
                },
                pvfuben: function (obj) {
                    return G.class.gonghui.getFubenConf().fuben[obj.pvid].fightmap;
                },
                pvshizijun: function (obj) {
                    return G.class.shizijunyuanzheng.getLevel().level[obj.pvid + 1].fightmap;
                }
            }
        },
        ctor: function (json,id, conf) {
            var me = this;
            me.fullScreen = true;
            me.preLoadRes = ['buff.png','buff.plist'];
            me._super(json,id, conf);
        },
        getData:function(ftype,fdata,callback) {
            var me = this;
            G.ajax.send(ftype,fdata||[],function(txt,data) {
                if (data.s == 1 && data.d && data.d.eventres && data.d.eventres.roles) {
                    me.DATA = data.d.eventres;
                    callback && callback();
                }else{
                    //异常数据
                    me.DATA = {"winside":1};
                    me.doFightEnd();
                    callback && callback();
                }
            },false,{"why":"fight"});
            return this;
        },
        demo : function(d){
            var me = this;
            me.once('show',function(){
                me.DATA = d;
                if (me.data()) {
                    for (var key in me.data()) {
                        me.DATA[key] = me.data()[key];
                    }
                }
                me.initFight();
            });
            me.show();
        },
        setRoleScaleByFightType : function(){
            var me = this;
            if(me.DATA && me.DATA.pvType=='damijing'){
                return 1.4;
            }
        },
        startFight: function (data, callback, type) {
            var me = this;

            G.frame.yingxiong_fight.data({
                data:data,
                type: type || "jjckz",
                callback: callback
            }).show();
        },
//         startFight : function(fightData_or_requestFightType,requestFightData){ // , test
//             var me = this;
//
// //          X.loadPlist(['skillani/zhandoutongyong.png','skillani/zhandoutongyong.plist'],function(){
// //              if(typeof(fightData_or_requestFightType)=='object'){
// //                  me.DATA = fightData_or_requestFightType;
// //                  me.show();
// //              }else{
// //                  me.requestFightType = fightData_or_requestFightType;
// //                  me.requestFightData = requestFightData;
// //                  me.DATA = null;
// //                  me.show();
// //              }
// //          });
//             return me;
//         },
//      initRoles : function(callback){
//      	var me = this;
//      	var _pos = me.getRoleDefaultPos();
//
//      	for(var rid in me.DATA.roles){
//      		X.spine.show({
//	        		json:'spine/'+ X.arrayRand(['41066','15036']) +'.json',
//	        		addTo : this.nodes.panel_gw,
//	        		cache:true,
//	        		autoRemove:false,
//	        		rid : rid,
//	        		onload : function(node){
//	        			node.setName(node.conf.rid);
//	        			node.runAni(0,X.arrayRand(['wait','atk','byatk','die']),true);
//	        			node.scale = 0.65;
//
//	        			node.x = _pos[node.conf.rid].x;
//	        			node.y = _pos[node.conf.rid].y;
//	        			node.zIndex = _pos[node.conf.rid].z;
//	        			node.scale *= _pos[node.conf.rid].s;
//	        			node.scaleX *= (me.DATA.roles[node.conf.rid].side==1?-1:1);
//
//	        		}
//	        	});
//      	}
//      },
        onShow: function () {
            var me = this;

            X.audio.playMusic("sound/fight_" + Math.floor(Math.random() * 3 + 1) + ".mp3", true);
        },
        onOpen: function () {
            var me = this;

            me.bindBTN();

            me.onnp('hide', function () {
                cc.director.getScheduler().setTimeScale(1);
            });
            me.nodes.l1.hide();
            me.nodes.l2.hide();
            me.nodes.h1.hide();
            me.nodes.h2.hide();
            me.mscore = 0;
            me.escore = 0;
            me._fightPanel = me.ui.nodes.panel_gw; //战斗角色主panel，单独提出方便tanxian中的假战斗改写
        },

        //获取role站位
        getRoleDefaultPos : function(){
        	var me = this;
        	var posConf= {
        		//Z配置作废，交由程序自动根据y值控制
        		'side0pos1':{x:210,y:568-220,z:5,s:1.05},
        		'side0pos2':{x:210,y:568+40,z:2,s:1.05},
        		'side0pos3':{x:125,y:568-370,z:6,s:1.1},
        		'side0pos4':{x:75,y:568-160,z:4,s:1.05},
        		'side0pos5':{x:75,y:568+10,z:3,s:1},
        		'side0pos6':{x:125,y:568+170,z:1,s:0.95},

        		'side1pos1':{x:640-210,y:568-220,z:5,s:1.05},
        		'side1pos2':{x:640-210,y:568+40,z:2,s:1.05},
        		'side1pos3':{x:640-125,y:568-370,z:6,s:1.1},
        		'side1pos4':{x:640-75,y:568-160,z:4,s:1.05},
        		'side1pos5':{x:640-75,y:568+10,z:3,s:1},
        		'side1pos6':{x:640-125,y:568+170,z:1,s:0.95},
        	};

        	//统计双方前后排人数
        	var nums = {side0:{front:0,back:0,frontRoles:[],backRoles:[]},side1:{front:0,back:0,frontRoles:[],backRoles:[]}}
        	for(var rid in me.DATA.roles){
        		var _info = me.DATA.roles[rid];
                if(_info['sqid']!=null)continue;
        		var _sideKey = 'side' + me.DATA.roles[rid].side;

        		if(_info.pos == '1' || _info.pos == '2'){
        			nums[ _sideKey ].front ++;
        			nums[ _sideKey ].frontRoles.push(_info);
        		}else{
        			nums[ _sideKey ].back ++;
        			nums[ _sideKey ].backRoles.push(_info);
        		}
        	}

        	//按POS排序
        	nums['side0'].frontRoles.sort(function(a,b){
        		return a.pos - b.pos;
        	});
        	nums['side0'].backRoles.sort(function(a,b){
        		return a.pos - b.pos;
        	});

        	nums['side1'].frontRoles.sort(function(a,b){
        		return a.pos - b.pos;
        	});
        	nums['side1'].backRoles.sort(function(a,b){
        		return a.pos - b.pos;
        	});

        	//根据前后排人数数量，重排队伍位置
        	var pos = {};
        	for(var s=0;s<=1;s++){
        		cc.each(nums['side'+s].frontRoles,function(v,index){
        			var _posKey = 'side'+ s +'pos'+ v.pos;
        			pos[v.rid] = posConf[_posKey];

        			if(nums['side'+s].front == 1){
        				//如果前排只有1个人，站在中间
        				pos[v.rid].y = posConf['side'+s+"pos1"].y + (posConf['side'+s+"pos2"].y - posConf['side'+s+"pos1"].y)/2;
        				//pos[v.rid].z = posConf['side'+s+"pos2"].z;
        			}
        		});

        		cc.each(nums['side'+s].backRoles,function(v,index){
        			var _posKey = 'side'+ s +'pos'+ v.pos;
        			pos[v.rid] = posConf[_posKey];

        			if(nums['side'+s].back == 1){
        				pos[v.rid] = posConf['side'+s+"pos4"];
        				//pos[v.rid].y = posConf['side'+s+"pos4"].y + (posConf['side'+s+"pos5"].y - posConf['side'+s+"pos4"].y)/2;
        			}else if(nums['side'+s].back == 2){
        				if(index==0){
        					pos[v.rid] = posConf['side'+s+'pos3'];
        				}else if(index==1){
        					pos[v.rid] = posConf['side'+s+'pos6'];
        				}
        				pos[v.rid].x = posConf['side'+s+"pos3"].x;

        			}else if(nums['side'+s].back == 3){
        				if(index==0){
        					pos[v.rid] = posConf['side'+s+'pos3'];
        				}else if(index==1){
        					pos[v.rid] = posConf['side'+s+'pos4'];
        					pos[v.rid].y = posConf['side'+s+"pos4"].y + (posConf['side'+s+"pos5"].y - posConf['side'+s+"pos4"].y)/2;
        				}else if(index==2){
        					pos[v.rid] = posConf['side'+s+'pos6'];
        				}
        			}
        		});
        	}
        	return pos;
        },

        initFight : function(){
            var me = this;
            //me.leftRolesSumHp = me._getSumHP(me.DATA.roles[0]);
            //me.rightRolesSumHp = me._getSumHP(me.DATA.roles[1]);
            me._posInfo = me.getRoleDefaultPos();
            for(var rid in me._posInfo){
            	me._posInfo[rid].z = 1400-me._posInfo[rid].y;
            }
            me._initFight();
        },
        _initFight : function(){
            var me = this;
            G.event.emit('inFight');
            me.fighting = true;
            me.timeSpeed = X.cacheByUid('fight_timeSpeed') || 1;
            me.ui.nodes.panel_gw.removeAllChildren();
            //me.initTop();
            me.changeFightBg();
            me.initRoles();

            me.setPlayer();

            this.setFightSpeed(me.timeSpeed);
            me.setZhenfa();
            me.setSkipState();
            me.battleScore(me.mscore,me.escore);
        },
        initRoles : function(callback){
            var me = this;

            me.roleList = {};
            var roles = me.DATA.roles;
            var needLoad = Object.keys(me.DATA.roles).length;

            me.onnp('fightRole_showed',function(){
                //每个role加载完毕时，会广播该事件
                needLoad--;
                if(needLoad==0){
                    //所有参战单位已加载完毕
                    me.ui.setTimeout(function(){
                        //role有入场动画，等待所有单位走进战场完毕后
                    	me.tranLog();
                    },200/me.timeSpeed);
                    me.setFightSpeed( me.timeSpeed );
                }
            },'fight_fightRole_showed');

            for(var rid in roles){
                if(roles[rid]['hid'] != null){
                    if(me.setRoleScaleByFightType()!=null){
                        roles[rid].enlargepro = me.setRoleScaleByFightType();
                    }
                    me.roleList[ rid ] = new G.class.fightRole(roles[rid]);
                }
                if(roles[rid]['sqid'] != null){
                    me.roleList[ rid ] = new G.class.fightShenQi(roles[rid]);
                    me.ui.finds('sb'+ (roles[rid].side*1+1)).show();
                }
                // me.roleList[rid].setVisible(false);
                me.nodes.panel_gw.addChild(me.roleList[rid]);
                // me.showRoles(me.roleList[rid]);
            }
        },
        showRoles: function(role) {
            var me = this;

            G.class.ani.show({
                json: "ani_guaiwushuaxin",
                addTo: me.nodes.panel_gw,
                x: role.x,
                y: role.y,
                cache: true,
                repeat: false,
                autoRemove: true,
                onend: function () {
                    role.setVisible(true);
                }
            });
        },
        tranLog : function(){
            var me = this;
            me.DATA.fightPlayLog = me.DATA.fightlog;

            me.DATA.actIndex = 0;
            me.DATA._skip = false;
            //cc.log(me.DATA.fightPlayLog);
            me.tranRound();
        },
        tranRound : function(){
            var me = this,
                flog = me.DATA.fightPlayLog,
                len = flog ? flog.length : 0,
                act;

            //战斗已经解析完毕
            //if(me.DATA.actIndex + 1 >= len){
                //me.showRes(me.DATA.winside);
                //return;
            //}

            if(me.DATA.isPause){
            	//新手指导中需要
            	return;
            }

            for(var i=me.DATA.actIndex;i<len;i++){
                act = flog[i];
                if (act.act && act.act == 'turn') {
                    me.setRoundNum(act.v); //设置回合数
                }

                var _actFunctionKey = me.DATA._skip ? 'act_skip_'+ act.act : 'act_'+ act.act; //判断是否点击了跳过
                //if(!cc.sys.isNative){
                	cc.log('==',me.DATA.actIndex,_actFunctionKey,JSON.stringify(act));
                //}
                if(me[ _actFunctionKey ]){
                    //找到一个需要处理的节点
                    //cc.log('act index',i, _actFunctionKey );
                    if(me.DATA._skip){
                        //点击了跳过，则一次循环处理完所有节点，不回调
                        me[_actFunctionKey]( act );
                        if (act.act && act.act == 'turn') {
                            me.setRoundNum(act.v); //设置回合数
                        }
                        me.showRes(me.DATA.winside);
                    }else{
                        //否则，只处理一个节点，然后回调循环处理
                        me.DATA.actIndex=i+1;
                        me[_actFunctionKey]( act , function(){
                            	me.tranRound();
                        });
                        break;
                    }
                }
                else {
                    if (me.DATA._skip) {
                        me.showRes(me.DATA.winside);
                        break;
                    }
                }
            }

            if(me.DATA._skip){
//              me.DATA.actIndex = len;
//              me.setRoundNum(me.DATA.flog.length); //设置回合数
//              me.act_f5AllHP();
//              me.tranRound();
            }
        },
        skipEnd : function(){
            //跳过
            var me = this;
            me.DATA._skip = true;
        },
        act_fightres : function(){
        	var me = this;
        	me.showRes(me.DATA.winside);
        },
        showRes:function(win) {
            var me = this;


            me.event.emit('willShowRes');
			// return;

            var data = me.data();
            if(data && data.hideRes){
                me.ui.setTimeout(function() {
                    me.doFightEnd();
                },600);
                return;
            }

            if(me.DATA.winside == '0'){
                // var _res = X.viewCache.getViewByClass(G.class.fight_win,[me.DATA]);
                if (me.data() && me.data().pvType && X.inArray(me.extConf.showBattleType, me.data().pvType)) {
                    if(me.data().isVideo && (me.DATA.headdata[1].uid && P.gud.uid == me.DATA.headdata[1].uid)){
                        G.frame.fight_fail_battle.show();
                    }else{
                        G.frame.fight_win_battle.show();
                    }
                } else if((me.data() && me.data().pvType && X.inArray(me.extConf.showFriendBoss, me.data().pvType))){
                    G.frame.fight_win_friendboss.show();
                }else{
                    G.frame.fight_win.show();
                }
                me.battleScore(me.mscore += 1,me.escore);
            }else{
                // var _res = X.viewCache.getViewByClass(G.class.fight_res_shibai,[me.DATA]);
                if (me.data() && me.data().pvType && X.inArray(me.extConf.showBattleType, me.data().pvType)) {
                    if(me.data().isVideo && (me.DATA.headdata[1].uid && P.gud.uid == me.DATA.headdata[1].uid)){
                        G.frame.fight_win_battle.show();
                    }else{
                        G.frame.fight_fail_battle.show();
                    }
                } else if((me.data() && me.data().pvType && X.inArray(me.extConf.showFriendBoss, me.data().pvType))){
                    G.frame.fight_fail_friendboss.show();
                }else{
                    G.frame.fight_fail.show();
                }
                me.battleScore(me.mscore,me.escore += 1);
            }

            me.event.emit('loadedShowRes');
            // me.ui.addChild(_res);
        },
        doFightEnd : function(node){
            var me = this;
            me.fighting = false;
            me.emit('fightEnd',me.DATA);
            me.remove();
        },
        onRemove: function () {
            var me = this;
        	//this.ui.nodes.panel_gw.removeAllChildren();
            X.audio.playMusic("sound/city.mp3", true);
            me.mscore && delete me.mscore;
            me.escore && delete me.escore;
            me.emit("hide");
        },
        bindBTN : function(){
            var me = this;

            //跳过
            me.nodes.btn_tg.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var obj = {
                        lv: 50,
                        vip: 2
                    };
                    if((P.gud.lv >= obj.lv || P.gud.vip >= obj.vip) || me.DATA.pvType == "video"){
                        me.skipEnd();
                    }else{
                        G.tip_NB.show(X.STR(L("FIGHT_TG"), obj.lv, obj.vip));
                    }
                }
            });
            // 快进   加速
            me.nodes.btn_js.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (me.timeSpeed == 1) {
                        var obj = {
                            vip:1,
                            lv:30,
                            speed:2
                        };

                        if (P.gud && P.gud.vip < obj.vip && P.gud.lv < obj.lv) {
                            G.tip_NB.show(X.STR(L('FIGHT_JS_TIP'),obj.vip,obj.lv,obj.speed));
                            return;
                        }
                    }
                    me.timeSpeed++;
                    if (me.timeSpeed > 2) {
                        me.timeSpeed = 1;
                    }
                    me.setFightSpeed(me.timeSpeed);
                    X.cacheByUid('fight_timeSpeed',me.timeSpeed);
                }
            });
        }


        ,_shake : function(shakeLevel){
            //场景震动
            var me = this;
            if(!shakeLevel || shakeLevel=="" || shakeLevel*1 == 0)return;

            //记录初始位置
            if(!me.ui.nodes.ground.__initPos){
                me.ui.nodes.ground.__initPos = me.ui.nodes.ground.getPosition();
            }
            //防止动作重复执行
            me.ui.nodes.ground.setPosition( me.ui.nodes.ground.__initPos );
            me.ui.nodes.ground.stopActionByTag(65421747);

            shakeLevel = shakeLevel*1;

            var acts = [];
            for(var i=0; i < shakeLevel*2; i++){
                acts.push( cc.moveBy(0.03, 0, shakeLevel*5 ) );
                acts.push( cc.moveBy(0.03, 0, shakeLevel*-5 ) );
            }
            acts.push(cc.callFunc(function(){
                me.ui.nodes.ground.setPosition( me.ui.nodes.ground.__initPos );
            },me));

            me.ui.nodes.ground.runActions(acts,65421747);
        }

        ,_addSkillAni : function(fromPosition,toPosition,skillAniconf,callback,extData){
            //解析skillani的配置，决定动画的展现形式
            var me = this;
            var _class;

            var _cacheID = skillAniconf.ani;
            if(extData && _cacheID.indexOf('{side}')!=-1){
                _cacheID = _cacheID.replace('{side}', extData.from.data.side == '1' ? 'z' : 'f');
            }

//          if(skillAniconf.ani.endsWith('.png')){
//              //如果是以png结束
//               _class = G.class.skillAniPNG;
//          }else{
                //默认cocos csb动画
                _class = G.class.skillAniCSB;
//          }

            cc.log('skillAniconf',_cacheID,skillAniconf);

            var _view = X.viewCache.getViewByClass(_class, [skillAniconf,function(){

                //技能音效
//              if(skillAniconf.sound && skillAniconf.sound!=""){
//                  var _sound = 'skillsound/'+ skillAniconf.sound +'.mp3';
//                  cc.log('_sound',_sound);
//                  X.audio.playEffect(_sound,false);
//              }
//                 this.setSpeed(me.timeSpeed || 1);
                //开始处理技能位置
                var _that = this;

                //技能倍速控制
                if(me.timeSpeed==1){
                	//1倍速时，动画为实际速度的2倍
                	this.action.setTimeSpeed(2);
                }else if(me.timeSpeed==2){
                	//2倍速时，动画为实际速度的3倍
                	this.action.setTimeSpeed(6);
                }


                this.startMove( fromPosition,toPosition ,function(){
                    callback && callback();
                });
            }] , _cacheID );

            _view.zIndex = 1400-toPosition.y+10;
            //注意：此方法会在tanxian的模拟战斗中被复用
            me._fightPanel.addChild( _view );
            return _view;
        }

         //击中动画
		,hit_ani: function(from,topos,skillAni){
			var me = this;
			me._shake(skillAni.shake);
		    if(!skillAni.hitani || skillAni.hitani=="")return;

		    me._addAniAt(topos,skillAni.hitani,function(node,action){
		    	if(from.data.side == 1){
	        		node.scaleX = -1;
	        	}else{
	        		node.scaleX = 1;
	        	}
		    });
		}

		,_addAniAt : function(pos,aniFile,callback){
			var me = this;
			G.class.ani.show({
		        json : "skillani/" + aniFile,
		        x: pos.x,
		        y: pos.y,
		        z:1400-pos.y,
		        addTo:me._fightPanel,
		        cache:true,
		        onload : function(node,action){
		        	callback && callback(node,action);
		        }
		    });
		}

        ,_parseSkillAni : function(data,skillAniconf,callback){
            var me = this;

            var fromID = data.from,
                toIDS = Object.keys(data.to);

            var from = me.roleList[fromID],
                to = me.roleList[ toIDS[0] ];
            if(!from || !to){
                //兼容错误
                me.ui.setTimeout(function(){
                    callback && callback();
                },500);
                return;
            }
            var toPos;
            //攻击和受击方显示血条
            from.showHPBar && from.showHPBar();

            for(var i=0;i<toIDS.length;i++){
                me.roleList[ toIDS[i] ] && me.roleList[ toIDS[i] ].showHPBar && me.roleList[ toIDS[i] ].showHPBar();
            }
            var _playSound = true;
            if(data._isTanXianSimularFight && !G.frame.tanxian.isTop){
            	//如果是探险里调用的本方法，则判断探险是否处于顶端，否则不播放音乐
            	_playSound=false;
            }

            var _showSkillANIFun = function(ifEmitCallback){
                if(ifEmitCallback==null)ifEmitCallback=true;

                if(skillAniconf.pos=='2'){
                    //放置在to身上加动画
                    if(toIDS.length==0){
                        //目标数组为空，兼容异常
                        from.ui.setTimeout(function(){
                            ifEmitCallback && callback && callback();
                        },500);
                    }else{
                        //在所有目标身上叠加技能效果
                        var _hits=0;
                        var allLen = toIDS.length;
                        _playSound && skillAniconf.sound && X.audio.playEffect('skillsound/'+skillAniconf.sound+'.mp3',false);

                        for(var i=0;i<allLen;i++){
                            (function(index){
                                to = me.roleList[ toIDS[index] ];
                                if(!to){
                                	allLen--;
                                	return;
                                }
                                var _topos = to.getPosition();

                                if (skillAniconf.ani) {
                                    var _view = me._addSkillAni( from.getPosition() , _topos , skillAniconf , function(){
                                        _hits++;
                                        //所有子弹已命中
                                        me.hit_ani(from,_topos,skillAniconf);
                                        if(_hits==allLen){
                                            ifEmitCallback && callback && callback();
                                        }
                                    }, { from: from, to: to});

									if(skillAniconf.animovetype!='shape' && skillAniconf.animovetype!='bullet'){
										//此模式不用翻转，startMove里会控制缩放和角度
										if( from.data.side == 1 ){
	                                        _view.scaleX = -1;
	                                    }else{
	                                        _view.scaleX = 1;
	                                    }
									}
                                } else {
                                    ifEmitCallback && callback && callback();
                                }
                                // var _view = me._addSkillAni( from.getPosition() , _topos , skillAniconf , function(){
                                 //    _hits++;
                                 //    //所有子弹已命中
                                 //    if(_hits==toIDS.length){
                                 //    	me.hit_ani(from,_topos,skillAniconf);
                                 //        callback && callback();
                                 //    }
                                // }, { from: from, to: to});
                                //
                                // if( from.data.side == 1 ){
			                	// 	_view.scaleX = -1;
			                	// }else{
			                	// 	_view.scaleX = 1;
			                	// }
                            })(i);
                        }
                    }
                }else if(skillAniconf.pos=='3'){
                	//放置在from身上
                    if (skillAniconf.ani) {
                    	_playSound && skillAniconf.sound && X.audio.playEffect('skillsound/'+skillAniconf.sound+'.mp3',false);
                        var _view = me._addSkillAni( from.getPosition() , from.getPosition() , skillAniconf , function(){
                            //增加受击动画
                            for(var i=0;i<toIDS.length;i++){
                                (function(index){
                                    var to = me.roleList[ toIDS[index] ];
                                    if(to){
                                    	var _topos = to.getPosition();
                                    	me.hit_ani(from,_topos,skillAniconf);
                                    }
                                })(i);
                            }

                            ifEmitCallback && callback && callback();
                        },{from:from,to:from});

                        if( from.data.side == 1 ){
                            _view.scaleX = -1;
                        }else{
                            _view.scaleX = 1;
                        }
                    } else {
                        ifEmitCallback && callback && callback();
                    }

                }else{
                	cc.log('未被支持的pos字段，请确认配置' , skillAniconf);
                }
            };

            if(data.atkType == 'realinjury'){
                //神器攻击特殊处理，需要先播放一个入场效果
                from.setTimeout(function(){
                    from.atk({
                        actname:'atk',
                        hitCallback : function(){
                            from.hide();
                            me._showShenQiInFightAni(data,from.data,function(){
                                _showSkillANIFun();
                                //callback && callback();
                            },function(){
                                from.show();
                            });
                        }
                    });
                },100);
            }else if(skillAniconf.moveto=='99'){
                //99特殊值，不移动&无攻击动作
                _showSkillANIFun();
            }else if(skillAniconf.moveto=='3'){
            	//移动到目标的前方
            	var _topos = to.getPosition();
            	var movetoPos = cc.p(_topos.x + 150 * (from.data.side==0?-1:1) , _topos.y);

            	//if(me.ID()=='fight'){
            	//	from.zIndex = 1400; //探险界面假战斗会复用该方法
            	//}else{
            		from.zIndex = 1400-movetoPos.y;
            	//}

            	//from.setPosition( movetoPos );
            	from.runActions([
            		cc.moveTo(0.1,movetoPos)
            	]);
            	from.setTimeout(function(){
            		from.atk({
	                    actname:'atk',
	                    hitCallback : function(){
                            _showSkillANIFun();
	                    }
	                });
            	},200);
            }else{
            	from.setTimeout(function(){
	                from.atk({
	                    actname:'atk',
	                    hitCallback : function(){
	                        _showSkillANIFun();
	                    }
	                });
                },100);
            }
        }
        ,act_buff : function(data,callback){
            //普通攻击
            var me = this;
            var toid = data.t,
                to = me.roleList[toid];
            if(!to)return callback();

            to.addBuff(data);
            callback && callback();
        }
        ,act_buffdel : function(data,callback){
            //普通攻击
            var me = this;
            var toid = data.t,
                to = me.roleList[toid];
            if(!to)return callback();

            to.delBuff(data);
            callback && callback();
        }
        ,act_afatk : function(data,callback){
            callback && callback();
        }
        ,act_atk : function(data,callback){
            //普通攻击
            var me = this;
            var fromID = data.from,
                from = me.roleList[fromID],
                toIDS = Object.keys(data.to);
            if(!from || toIDS.length==0)return callback();

            var skillani = G.gc.skillani[ data.skillid ]; //

            if(skillani == null){
                cc.log('act_atk时，json/skillani.json中缺少配置' + data.skillid );
                return callback();
            }

            //if(data.atkType == "xpskill"){
            //    me._showBlackMatrix(data);
            //}

            return me._parseSkillAni(data,skillani,function(){
                //if(data.atkType == "xpskill"){
                //    me._hideBlackMatrix(data);
                //}
                callback && callback();
            });
        },
        _showShenQiInFightAni : function(data,fromdata,hitcallback,endcallback){
            var me = this;
            //播放神器开始攻击前的入场动画
            var _conf = G.gc.shenqicom.shenqi[ fromdata.sqid ];
            me._showBlackMatrix(data);

            _conf.skillsound && X.audio.playEffect('skillsound/'+ _conf.skillsound + '.mp3',false);
            G.class.ani.show({
                json:_conf.skillshow,
                addTo:me._fightPanel,
                z:999,
                repeat:false,
                autoRemove:true,
                onload : function(node, action){
                    action.setTimeSpeed(1);
                    node.scaleX *= (fromdata.side==1?-1:1);
                },
                onkey : function(node, action, event){
                    if(event=='hit'){
                        hitcallback && hitcallback();
                        me._hideBlackMatrix(data);
                    }
                },
                onend : function(node, action){
                    endcallback && endcallback();
                }
            });


            //G.class.ani.show({
            //    json:'ani_shenbing_tongyong',
            //    addTo:me.nodes.ground,
            //    onload : function(node,action){
            //        action.setTimeSpeed(2);
            //
            //        //增加神器动画
            //        var _shenQiLayer = node.finds('shenqi');
            //        _shenQiLayer.removeAllChildren();
            //        var _conf = G.gc.shenqicom.shenqi[ data.sqid ];
            //        G.class.ani.show({
            //            json:_conf.skillshow,
            //            addTo:_shenQiLayer,
            //            repeat:true,
            //            autoRemove:false,
            //            onload : function(_node, _action){
            //                _action.setTimeSpeed(2);
            //                node.scaleX *= (data.side==1?-1:1);
            //            }
            //        });
            //    },
            //    onend : function(){
            //
            //    },
            //    onkey: function(node, action, event) {
            //        if(event == "gongji"){
            //            callback && callback();
            //        }
            //    },
            //    autoRemove:true,
            //    repeat:false
            //});
        }
        ,_showBlackMatrix : function(data){
            var me = this;
            var layer = me._fightPanel.finds('blackmatrix');
            if(!cc.isNode(layer)){
                layer = new ccui.Layout();
                layer.setBackGroundColor( cc.color('#000000') );
                layer.setBackGroundColorOpacity(180);
                layer.setBackGroundColorType(ccui.Layout.BG_COLOR_SOLID);
                layer.setContentSize( me._fightPanel.getContentSize() );
                layer.setName('blackmatrix');
                layer.zIndex = 5;
                layer.setAnchorPoint(0,0);
                layer.setPosition(cc.p(0,0));
                me._fightPanel.addChild(layer);
            }
            layer.show();

            //把和本次节点无关的角色zindex降低
            for(var rid in me.roleList){
                if(rid == data.from || data.to[rid] )continue;
                if(!cc.isNode(me.roleList[rid]))continue;
                me.roleList[rid]._bbzIndex = me.roleList[rid].zIndex;
                me.roleList[rid].zIndex = 1;
            }
        }

        ,_hideBlackMatrix : function(data){
            var me = this;
            var _node = me._fightPanel.finds('blackmatrix');
            if(cc.isNode(_node)){
                _node.hide();
            }
            //还原无关的角色zindex
            for(var rid in me.roleList){
                if(rid == data.from || data.to[rid] )continue;
                if(!cc.isNode(me.roleList[rid]))continue;
                if(me.roleList[rid]._bbzIndex==null)continue;
                me.roleList[rid].zIndex = me.roleList[rid]._bbzIndex;
                delete me.roleList[rid]._bbzIndex;
            }
        }
        ,act_fanji : function(data,callback){
            //反击
            var me = this;
            var from = me.roleList[data.from];
            if(!from){
            	//cc.log('0000');
            	me.ui.setTimeout(function(){
            		callback && callback();
            	},100);
            	return;
            }
            me.ui.setTimeout(function(){
            	//cc.log('1111');
            	from && from.resetPos(false);
            	from.role.stopAllAni();

            	me.act_atk(data,function(){
            		//cc.log('2222');
	                var from = me.roleList[data.from];
	                from && from.resetPos(true);
	            	me.ui.setTimeout(function(){
	            		callback && callback();
	            	},100);
	            });
            },200/me.timeSpeed);
        }
        ,act_stopAct : function(data,callback){
        	var me = this;
            if(data.from.indexOf('artifact')!=-1){
                me.ui.setTimeout(function(){
                    callback && callback();
                },1000)
                return;
            }
        	me.ui.setTimeout(function(){
        		me.roleList[ data.from ] && me.roleList[ data.from ].resetPos(true);
        		me.ui.setTimeout(function(){
        			callback && callback();
        		},200/me.timeSpeed);
        	},500/me.timeSpeed)
        }
        ,act_dead : function(data,callback){
        	var me = this;
        	var to = me.roleList[data.to];

        	if(!cc.isNode(to)){
        		return callback && callback();
        	}

    		to.data.dead = true;
    		to.hideInfo && to.hideInfo();
    		to.delAllBuffANI && to.delAllBuffANI();
    		to.die();

        	me.ui.setTimeout(function(){
        		callback && callback();
        	},0);

        	if (!data.canFuHuo) {
        		to.role.runActions([
        			cc.fadeOut(1.5)
        		]);
	        	me.ui.setTimeout(function(){
					cc.isNode(to) && to.removeFromParent();
	    		},1500);
    		}else{
    			to.addBuffANI('mubei'); //加墓碑
    		}
        }
        ,act_fuhuo : function(data,callback){
        	var me = this;
        	//{"to": "role_5", "v": 101159, "nv": 101159, "act": "fuhuo"}
        	var to = me.roleList[data.to];
        	if(!cc.isNode(to)){
        		return callback && callback();
        	}
        	to.showInfo && to.showInfo();
        	to.delBuffANI('mubei'); //删墓碑
        	to.data.dead = false;
        	me._addAniAt(to.getPosition(),G.gc.skillani['fuhuo'].ani); //复活动画
        	to.wait();
        	callback && callback();
        }
        ,act_hp : function(data,callback){
        	//{"dps": -361, "jz": false, "act": "hp", "bj": false, "r": "role_1", "at": "xp", "v": -361, "nv": 14949}  //被人攻击
        	//{"r": "role_0", "v": -2745, "nv": 13079, "act": "hp"} buff等其他导致掉血
            var me = this;
            var fromID = data.r,
                num = data.v*1;
            var from = me.roleList[fromID];
            if(!from)return callback();

          	from.data.hp = data.nv*1;
            from.f5Bar();

            //from.hmpChange(num,'hp');
            from.hmpChange(data);
            from.showHPBar();
            if(num<0 && data.at){
            	from.byatk();
            }
            //me.f5Top();
            callback && callback();
        }
        ,act_nuqi : function(data,callback){
            var me = this;
            var fromID = data.r,
                num = data.v*1;
            var from = me.roleList[fromID];
            if(!from)return callback();

          	from.data.nuqi = data.nv*1;
            from.f5Bar();
            callback && callback();
        },
        //玩家信息
        setPlayer: function () {
            var me = this;

            var data = me.DATA.headdata || [];

            for (var i = 0; i < data.length; i++) {
                var pData = data[i];
                var txtName = me.nodes['txt_name' + (i + 1)];
                var txtLv = me.nodes['txt_dj' + (i + 1)];
                var layIco = me.nodes['panel_head' + (i + 1)];

                txtName.setString(pData.name);
                txtLv.setString(pData.lv);
                var conf = G.class.zaoxing.getHeadById(pData.head);
                var ico = conf ? conf.img : '15036.png';
                layIco.setBackGroundImage('ico/itemico/' + G.class.fmtItemICON(ico),0);
                // var wid = G.class.shead(pData.head);
                // wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
                // layIco.removeAllChildren();
                // layIco.addChild(wid);

                if(i == 1) {
                    txtLv.x += 5;
                    layIco.setAnchorPoint(1,0);
                    layIco.setFlippedX(true);
                }
            }
        },
        // 角色速度信息
        setFightSpeed: function (speed) {
            var me = this;
            me.nodes.txt_js.setString('x' + speed);

            if(speed == 1) {
                me.nodes.btn_js.loadTextureNormal("img/zhandou/btn_zhandou_js.png", 1);
            }else {
                me.nodes.btn_js.loadTextureNormal("img/zhandou/btn_zhandou_js2.png", 1);
            }

            for(var rid in me.roleList) {
                if(speed==2){
                    me.roleList[rid].speed(3); //加速后的速度
                }else{
                    me.roleList[rid].speed(2); //默认速度
                }

            }

            //角色倍速控制
            //for(var rid in me.roleList){
            //	var spineSpeed = 2; //默认为实际速度的2倍
            //	if(speed==3){
            //		//点击了2倍速后，速度为实际速度的3倍
            //		spineSpeed = 4;
            //	}
            //	me.roleList[rid].speed(spineSpeed);
            //}
        },
        // 阵法信息
        setZhenfa: function () {
            var me = this;

            var zfData = me.DATA.zhenfa || [];

            for (var i = 0; i < zfData.length; i++) {
                var zData = zfData[i];
                var layZf = me.nodes['panel_xg' + (i + 1)];
                layZf.removeBackGroundImage();
                layZf.removeAllChildren();
                if (zData && zData != '') {
                    var ico = G.class.zhenfa.getIcoById(zData);
                    layZf.setBackGroundImage('img/zhenfa/' + ico + '.png',1);

                    layZf.data = {
                        id:zData
                    };
                    G.class.ani.show({
                        json: "ani_zhenyingbuff16",
                        addTo: me.nodes['panel_xg' + (i + 1)],
                        x: me.nodes['panel_xg' + (i + 1)].width/2,
                        y: me.nodes['panel_xg' + (i + 1)].height/2,
                        repeat: true,
                        autoRemove: false,
                    });
                } else {
                    layZf.setBackGroundImage('img/zhenfa/zhenfa_1_h.png', 1);
                }
                layZf.setTouchEnabled(true);
                layZf.click(function (sender, type) {
                    G.frame.fight_zzkezhi.data((sender.data && sender.data.id) || "").show();
                });

            }
        },
        //设置回合数
        setRoundNum: function (round) {
            var me = this;

            if(round >15){
                me.showRes(1);
                return;
            }

            X.render({
                txt_hhs: function (node) {
                    var str = X.STR(L('X_ROUND'), round);
                    var rh = new X.bRichText({
                        size:20,
                        maxWidth:node.width,
                        lineHeight:32,
                        color:G.gc.COLOR.n5,
                        family:G.defaultFNT
                    });
                    rh.text(str);
                    rh.setPosition(cc.p(node.width / 2 - rh.trueWidth() / 2,node.height - rh.trueHeight()));
                    node.removeAllChildren();
                    node.addChild(rh);
                }
            },me.nodes);
        },
        //冠军竞技场-设置比分
        battleScore:function(mscore,escore){
            var me = this;
            var m1 = me.nodes.l1;
            var m2 = me.nodes.l2;
            var e1 = me.nodes.h1;
            var e2 = me.nodes.h2;
            if(me.DATA.pvType == 'pvgjjjc' || me.DATA.pvType == 'pvwz' || me.DATA.pvType == 'pvwzdld'){
                me.nodes.p1.show();
                me.nodes.p2.show();
                if(mscore == 0){
                    m1.hide();
                    m2.hide();
                }else if(mscore == 1){
                    m1.show();
                    m2.hide();
                }else if(mscore == 2){
                    m1.show();
                    m2.show();
                }
                if(escore == 0){
                    e1.hide();
                    e2.hide();
                }else if(mscore == 1){
                    e1.show();
                    e2.hide();
                }else if(mscore == 2){
                    e1.show();
                    e2.show();
                }
            }
        },
        //
        setSkipState: function () {
            var me = this;

            //如果是录像，允许跳过
            if (me.data() && me.data().isVideo) {
                return;
            }

            if (!X.inArray(me.extConf.showSkip, me.DATA.pvType)) {
                me.nodes.btn_tg.hide();
                me.nodes.btn_js.setPositionX(cc.director.getWinSize().width / 2);
            }else {
                me.nodes.btn_js.setPositionX(cc.director.getWinSize().width / 4 + 70);
                me.nodes.btn_tg.setPositionX(502.45 - 70);
            }

            if(me.DATA.pvType == "pvguanqia" && P.gud.maxmapid <= 4) {
                me.nodes.btn_js.hide();
            }
            // if (X.inArray(me.extConf.unshowSkip, me.DATA.pvType)) {
            //     me.nodes.btn_tg.hide();
            //     me.nodes.btn_js.setPositionX(cc.director.getWinSize().width / 2);
            // }
        },
        //修改战斗背景
        changeFightBg: function () {
            var me = this;

            var bg = me.ui.finds('bg');
            var pvtype2bg = me.extConf.changebg;

            if (me.DATA) {
                if (pvtype2bg[me.DATA.pvType]) {
                    var img = pvtype2bg[me.DATA.pvType](me.DATA) || 'zhandou_01.jpg';
                    bg.loadTexture('img/bg/' + img,0);
                }
            } else {
                bg.loadTexture('img/bg/zhandou_01.png',0);
            }

        }

        ,test : function(){
        	var me = this;
        	X.loadJSON('__js.json',function(err,json){
        		me.demo( json );
        	})
        }
    });

    G.frame[ID] = new fun('zhandou.json', ID);
})();

;;(function(){
    //战斗相关
    var me = G.frame.fight;

    //子弹飞行
    function bullet_move(target,from,to,callback){
        var _dist = 200;//cc.pDistance(from,to);
        var _needTime = _dist / target.getSpeed();
        var _vec = cc.pSub(to,from),
            _angle= cc.pToAngle(_vec);
        target.setRotation(cc.radiansToDegrees(-1 * _angle));
        target.setVisible(true);
        target.setPosition(from);
        target.setAnchorPoint(cc.p(0,0.5));
        target.runActions([
            cc.moveTo( _needTime ,to),
            cc.callFunc(function(){
                cc.log('bullet_move_end...');
                target.stopAllActions();
                cc.callLater(function(){
                    callback();
                });
            },target),
            cc.removeSelf()
        ]);
        return _needTime;
    }
    //激光模式
    function shape_move(target,from,to){
        var ui = target.finds('ui') || target.finds('Node_1');
        var _width = ui.width;
        var _dist = cc.pDistance(from,to);

        //缩放
        target.setVisible(true);
        target.setPosition(from);
        target.setAnchorPoint(cc.p(0,0.5));
        target.setScaleX(_dist/_width);

        //旋转
        var _vec = cc.pSub(to,from),
            _angle= cc.pToAngle(_vec);
        target.setRotation(cc.radiansToDegrees(-1 * _angle));
    }
    
    //普通技能动画
    G.class.skillAniCSB = X.bView.extend({
        ctor : function(){
            this._ctorSuper = this._super;
            this.reuse.apply(this,arguments);
            delete this._ctorSuper;
        },
        reuse : function(skillAni , callback){
            this.skillAni = skillAni;
            this._speed = 1200 * (me.timeSpeed||1);
            this.tmp = {};
            this._createCallback = callback;
            this._ctorSuper && this._ctorSuper((skillAni.releaseAni || ("skillani/"+ skillAni.ani) ) +'.json',null,{
                "action":true,
                autoFillSize:false,
                releaseRes:false
            });
        },
        setSpeed : function(v){
            this._speed = 1200*v;
        },
        getSpeed : function(v){
            return this._speed;
        },
        onShow : function(){
            this.hide();
            this.action.gotoFrameAndPause(0);
            this.setRotation(0);
            this.setScale(1);
            this._createCallback && this._createCallback.call(this);
        },
        onRemove : function(){
            this.tmp = {};
        },
        startMove : function(fromPosition,toPosition,callback){
            var _that = this;

            /*
            *******************
            *对应配置在json/skillani.json，如果战斗莫名暂停，请检查配置所填写的字段是否正确
            *@param
            *@returns {}
            *******************
            */
            cc.log('this.skillAni.animovetype======', this.skillAni.animovetype);
            if(this.skillAni.animovetype=='bullet'){
                //子弹
                _that.action.gotoFrameAndPlay(0, true);
                
                var fp = cc.p(fromPosition.x,fromPosition.y+50);
                if(toPosition.x > fp.x){
                	//目标在右侧
                	fp.x += 100;
                }else{
                	fp.x -= 100;
                }
                
                bullet_move(this,fp,cc.p(toPosition.x,toPosition.y+50),function(){
                    callback();
                    //hit_ani(toPosition,_that.skillAni);
                });
            }else if(this.skillAni.animovetype=='none'){
                //原地
                var _emitHit = false;
                _that.show();
                _that.setPosition(toPosition);
                _that.action.setFrameEventCallFunc(function (e) {
                    if (e.getEvent() == 'hit') {
                        cc.log('noneAnihit.....');
                        _that.action.clearFrameEventCallFunc();
                        _emitHit = true;
                        callback && callback();
                        //hit_ani(toPosition,_that.skillAni);
                    }
                });
                _that.action.setLastFrameCallFunc(function () {
                    this.clearLastFrameCallFunc();
                    _that.removeFromParent();
                    cc.log('noneAniLastFrame........');
                    if(!_emitHit){
                    	callback && callback();
                    	//hit_ani(toPosition,_that.skillAni);
                    }
                });
                _that.action.gotoFrameAndPlay(0, false);
            }else if(this.skillAni.animovetype=='shape'){
                //激光
                _that.action.setFrameEventCallFunc(function (e) {
                    if (e.getEvent() == 'hit') {
                        _that.action.clearFrameEventCallFunc();
                        callback && callback();
                        //hit_ani(toPosition,_that.skillAni);
                    }
                });
                _that.action.setLastFrameCallFunc(function () {
                    this.clearLastFrameCallFunc();
                    _that.removeFromParent();
                });
                _that.action.gotoFrameAndPlay(0, false);
                
                var fp = cc.p(fromPosition.x,fromPosition.y+50);
                if(toPosition.x > fp.x){
                	//目标在右侧
                	fp.x += 100;
                }else{
                	fp.x -= 100;
                }
                shape_move(_that, fp ,cc.p(toPosition.x,toPosition.y+50));
            }
        }
    });
    
})();
;;/**
 * Created by wfq on 2018/6/28.
 */
(function () {
    //战斗-数据对比
    var ID = 'fight_datacompare';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            // me.singleGroup = "f3";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            X.radio([me.nodes.btn_sc,me.nodes.btn_zl], function (sender) {
                var name = sender.getName();

                var name2type = {
                    btn_sc$:0,
                    btn_zl$:1
                };
                me.changeType(name2type[name]);
            }, {color: ["#7b513a", "#6c6c6c"],
                no_enableOutline: true,});
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.DATA = me.data();
            me.nodes.btn_sc.triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        onHide: function () {
            var me = this;
        },
        changeType: function (type) {
            var me = this;

            if (me.curType == type) return;

            me.curType = type;
            me.setContents();
        },
        setContents: function () {
            var me = this;

            var listview = me.nodes.listview_zdxx;
            listview.removeAllChildren();
            cc.enableScrollBar(listview);
            me.nodes.panel_list.hide();

            me.effect = {
                0:'dps',
                1:'addhp'
            }[me.curType];

            me.leftArr = [];
            me.rightArr = [];
            for (var id in me.DATA.roles) {
                var rData = me.DATA.roles[id];
                if(id.split("_")[0] != "role") continue;
                rData.role = id;
                if (rData.side == 1) {
                    me.rightArr.push(rData);
                } else {
                    me.leftArr.push(rData);
                }
            }

            //数据排序
            var sort = function (a,b) {
                return a.pos * 1 < b.pos * 1 ? -1 : 1;
            };
            me.rightArr.sort(sort);
            me.leftArr.sort(sort);

            me.maxLeftValue = me.getMaxValue(me.leftArr,me.effect);
            me.maxRightValue = me.getMaxValue(me.rightArr,me.effect);
            me.maxValue = me.maxLeftValue > me.maxRightValue ? me.maxLeftValue : me.maxRightValue;

            // for (var i = 0; i < 6; i++) {
            //     var item = me.nodes.panel_list.clone();
            //     item.idx = i;
            //     me.setItem(item);
            //     listview.pushBackCustomItem(item);
            //     item.show();
            // }

            var i = 0;
            var addItem = function () {
                var item = me.nodes.panel_list.clone();
                item.idx = i;
                me.setItem(item);
                listview.pushBackCustomItem(item);
                item.show();
                if (6 - i > 1) {
                    i++;
                    addItem();
                }
            };

            addItem();
        },
        getMaxValue: function (d,effect) {
            var me = this;

            var data = me.DATA.signdata;
            var value = 0;
            for (var i = 0; i < d.length; i++) {
                var id = d[i].role;
                if (data[id][effect] > value) {
                    value = data[id][effect];
                }
            }

            return value;
        },
        setItem: function (ui) {
            var me = this;

            X.autoInitUI(ui);
            X.render({
                panel1: function (node) {
                    node.removeAllChildren();

                    if (!me.leftArr[ui.idx]) {
                        return;
                    }

                    var item = me.nodes.list_wjxx.clone();
                    item.data = me.leftArr[ui.idx];
                    item.maxValue = me.maxLeftValue;
                    me.setItem2(item);
                    item.setPosition(cc.p(0,0));
                    node.addChild(item);
                },
                panel2: function (node) {
                    node.removeAllChildren();

                    if (!me.rightArr[ui.idx]) {
                        return;
                    }

                    var item = me.nodes.list_wjxx.clone();
                    item.data = me.rightArr[ui.idx];
                    item.maxValue = me.maxRightValue;
                    me.setItem2(item);
                    item.setPosition(cc.p(0,0));
                    node.addChild(item);
                }
            },ui.nodes);
            ui.show();

            if (ui.idx % 2) {
                ui.setOpacity(0);
            } else {
                ui.setOpacity(255);
                ui.setBackGroundColor(cc.color('#3E281D'));
            }
        },
        setItem2: function (ui) {
            var me = this;

            X.autoInitUI(ui);
            X.render({
                ico_tx: function (node) {
                    var wid = G.class.shero(ui.data);
                    wid.setPosition(cc.p(node.width / 2,node.height / 2));
                    node.removeAllChildren();
                    node.addChild(wid);
                },
                txt_sz:me.DATA.signdata[ui.data.role][me.effect],
                img_zdxq_jdt: function (node) {
                    var value = me.DATA.signdata[ui.data.role][me.effect] || 0;

                    var n = 0,
                        maxPer = Math.floor(value / me.maxValue * 100) || 0;
                    node.setTimeout(function () {
                        node.setPercent(n);
                        n += 1;
                    }, 10, maxPer);
                    node.setPercent(0);
                    // node.setPercent(Math.floor(value / ui.maxValue * 100) || 0);
                },
                img_mvp: function (node) {
                    if(me.DATA.signdata[ui.data.role][me.effect] == me.getMaxDps()) node.show();
                }
            },ui.nodes);
            ui.show();
        },
        getMaxDps: function () {
            var me = this;
            var arr = [];

            for (var i in me.DATA.signdata) {
                arr.push(me.DATA.signdata[i].dps);
            }

            arr.sort(function (a, b) {
                return a > b ? -1 : 1;
            });

            return arr[0];
        }
    });

    G.frame[ID] = new fun('zhandou_top_zdxq.json', ID);
})();

;;/**
 * Created by wfq on 2018/6/6.
 */
(function () {
    //战斗-失败
    var ID = 'fight_fail';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            cc.isNode(me.ui.nodes.mask) && me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                    G.frame.fight.remove();
                }
            });

            cc.isNode(me.ui.nodes.btn_zl) && me.ui.nodes.btn_zl.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.fight_datacompare.data(G.frame.fight.DATA || me.DATA).show();
                }
            });

            me.nodes.btn_next2.click(function () {
                if(G.frame.dafashita.isShow && !G.frame.dafashita_jxtg.isShow) {
                    G.frame.dafashita.fightCall();
                } else {
                    me.DATA.callback && me.DATA.callback();
                }
            }, 1000);

            me.nodes.btn_confirm2.click(function () {
                me.remove();
                G.frame.fight.remove();
            });

            me.nodes.btn.click(function () {
                G.frame.woyaobianqiang.show();
                G.frame.fight.remove();
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.DATA = G.frame.fight.data() || G.frame.fight.DATA ||me.data();
            X.audio.playEffect("sound/battlelose.mp3");
            var lose = me.ui.finds("top_sb");
            lose.removeAllChildren();

            if(me.DATA.pvType == "pvfuben"){
                me.nodes.btn.hide();
                me.ui.finds("bg_zhandou_sb").loadTexture("img/zhandou/zhandoushengli/bg_zhandou_sl.png", 1);
                G.class.ani.show({
                    json: "ani_zhandoushengli",
                    addTo: lose,
                    x: lose.width / 2,
                    y: lose.height / 2,
                    repeat: false,
                    autoRemove: false,
                    onload: function(node, action) {
                        node.finds("zi1").setSpriteFrame("img/public/zhandoujieshu.png");
                    },
                    onend: function(node, action) {
                        action.play("changtai", true);
                    }
                });
            }else {
                me.ui.finds("bg_zhandou_sb").loadTexture("img/zhandou/zhandoushibai/bg_zhandou_sb.png", 1);
                G.class.ani.show({
                    json: "ani_zhandoushibai",
                    addTo: lose,
                    x: lose.width / 2,
                    y: lose.height / 2,
                    repeat: false,
                    autoRemove: false,
                    onend: function (node, action) {
                        action.play("xunhuan", true);
                    }
                });
            }
            if(me.DATA.pvType == "pvfuben"){
                me.setfb();
            }else{
                me.setContents();
            }
            if(me.DATA.pvType == "hybs") {
                me.nodes.panel_btn.show();
            }
            if(me.DATA.pvType == "pvguanqia") {
                if(P.gud.mapid == 10) {
                    if(!X.cacheByUid("yindaotanxian")) {
                        X.cacheByUid("yindaotanxian", false);
                        G.event.emit("needOpenWoYaoBianQiang");
                    }
                }
            }
            if(me.DATA.pvType == "damijing") {
                me.setDMJ();
            }
            if(G.frame.dafashita.isShow && !G.frame.dafashita_jxtg.isShow) {
                me.nodes.btn.hide();
                me.nodes.panel_btn.show();
                me.nodes.btn_next2.setTitleText(L("ZCTZ"));
            }
            me.ui.setTimeout(function () {
                me.event.emit('in_over');
                me.emit("show")
            }, 100);
        },
        setDMJ: function () {
            var me = this;
            me.nodes.damijing.show();
            me.nodes.btn.hide();
            // me.nodes.btn_zl.hide();
            me.nodes.listview_ico.hide();
            me.ui.finds("img_zhandou_sb2").hide();
            for(var i in me.DATA.pv) {
                var layout = me.nodes["mingji_rw" + i];
                var wid = G.class.shero(me.DATA.pv[i]);
                wid.setAnchorPoint(0.5, 0.5);
                wid.setPosition(layout.width / 2, layout.height / 2);
                i == 1 ? wid.setEnabled(me.DATA.winside ? false : true) : wid.setEnabled(me.DATA.winside ? true : false);
                layout.addChild(wid);
            }
        },
        setfb: function(){
            var me = this;
            me.ui.finds("img_zhandou_sb2").hide();
            X.alignCenter(me.nodes.panel_nr, me.DATA.prize, {
                touch: true
            })
        },
        onHide: function () {
            var me = this;
            me.emit("hide");
        },
        setContents: function () {
            var me = this;

            var panel = me.ui;
            var listview = panel.nodes.listview_ico;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();
            var list = panel.nodes.list_bqff;
            list.hide();

            // var data = me.DATA.prize;
            var callback = function () {
                cc.isNode(me.ui) && cc.isNode(me.ui.nodes.mask) && me.ui.nodes.mask.triggerTouch(ccui.Widget.TOUCH_ENDED)
            };

            var data = [
                {id:'tiejiangpu',callback:callback},
                {id:'yingxiong',callback:callback},
                {id:'chouka',callback:callback}
            ];
            for (var i = 0; i < data.length; i++) {
                var p = data[i];
                var item = list.clone();
                me.setItem(item,p);
                listview.pushBackCustomItem(item);
                item.show();
            }
        },
        setItem: function (ui, data) {
            var wid = G.class.stiaozhuan(data,true);
            wid.setPosition(cc.p(ui.width / 2,ui.height / 2 + 8));
            ui.removeAllChildren();
            ui.addChild(wid);
            wid.setTouchEnabled(false);
            wid.icon.setTouchEnabled(true);
            wid.icon.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var callback = data.callback;
                    callback && callback();
                    X.tiaozhuan(wid.id);
                }
            });
        }
    });

    G.frame[ID] = new fun('zhandoushibai.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/22.
 */
(function () {
    //战斗失败-对战
    var ID = 'fight_fail_battle';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            cc.isNode(me.ui.nodes.mask) && me.ui.nodes.mask.touch(function (sender, type) {
                // if (type == ccui.Widget.TOUCH_ENDED) {
                //     me.remove();
                //     G.frame.fight.remove();
                // }
            });
            cc.isNode(me.ui.nodes.btn_confirm) && me.ui.nodes.btn_confirm.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.DATA.endcallback && me.DATA.endcallback();
                    me.remove();
                    G.frame.fight.remove();
                }
            });
            cc.isNode(me.ui.nodes.btn_zl) && me.ui.nodes.btn_zl.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.fight_datacompare.data(G.frame.fight.DATA).show();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            X.audio.playEffect("sound/battlelose.mp3");
            me.DATA = G.frame.fight.data();

            me.ui.nodes.btn.hide();

            me.ui.nodes.btn_confirm.setTitleColor(cc.color(G.gc.COLOR.n12));
            cc.isNode(me.nodes.btn_confirm) && me.nodes.btn_confirm.hide();

            me.ui.finds('img_zhandou_sb2').hide();
            var lose = me.ui.finds("top_sb");
            lose.removeAllChildren();

            if(me.DATA.pvType == "pvwz"){
                // me.nodes.btn.hide();
                me.ui.finds("bg_zhandou_sb").loadTexture("img/zhandou/zhandoushengli/bg_zhandou_sl.png", 1);
                G.class.ani.show({
                    json: "ani_zhandoushengli",
                    addTo: lose,
                    x: lose.width / 2,
                    y: lose.height / 2,
                    repeat: false,
                    autoRemove: false,
                    onload: function(node, action) {
                        node.finds("zi1").setSpriteFrame("img/public/zhandoujieshu.png");
                    },
                    onend: function(node, action) {
                        action.play("changtai", true);
                    }
                });
            }else{
                G.class.ani.show({
                    json: "ani_zhandoushibai",
                    addTo: lose,
                    x: lose.width / 2,
                    y: lose.height / 2,
                    repeat: false,
                    autoRemove: false,
                    onend: function (node, action) {
                        action.play("xunhuan", true);

                    }
                });
            }

            new X.bView('ui_jiesuan.json', function (view) {
                me._view = view;

                me.nodes.panel_nr.removeAllChildren();
                me.nodes.panel_nr.addChild(view);
                me.setContents();
                me.ui.setTimeout(function () {
                    me.event.emit('in_over');
                    me.emit("show")
                }, 1000);
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var panel = me._view;
            var layLeft = panel.nodes.panel_rw;
            var layRight = panel.nodes.panel_rw1;

            var fightData = (G.frame.fight.data() && G.frame.fight.data().fightData) || G.frame.fight.DATA;

            // fightData.headdata = [P.gud,P.gud];
            // fightData.jifenchange = [{jifen:100,add:10},{jifen:100,add:-10}];
            setItem(layLeft,0);
            setItem(layRight,1);
            me.setGjjjc(layLeft,layRight);
            function setItem(ui,idx) {
                X.autoInitUI(ui);

                var headData = G.frame.fight.DATA.headdata[idx];
                var jifenchange = fightData.jifenchange;
                X.render({
                    text_mz: function(node){
                        node.setString((headData && headData.name) || P.gud.name);
                        X.enableOutline(node, '#66370e', 1);
                    },
                    panel_tx: function(node) {
                        node.removeAllChildren();
                        var wid = G.class.shead(headData || P.gud);
                        wid.setPosition(cc.p(node.width / 2, node.height / 2));
                        node.addChild(wid);
                    },
                    panel_df: function(node) {
                        if(!jifenchange) return;
                        node.removeAllChildren();
                        // var jifen = idx == 0? jifenchange.jifen : jifenchange.rivaljifen;
                        // // var add = idx == 0? jifenchange.add : jifenchange.reduce;
                        // if((G.frame.fight.data().isVideo && fightData.headdata && P.gud.uid == fightData.headdata.uid) || G.frame.fight.data().isVideo){
                        //     jifen = idx == 1? jifenchange.rivaljifen : jifenchange.jifen ;
                        // }
                        var jifen, add;
                        if(headData.uid == jifenchange.win_uid) {
                            jifen = jifenchange.jifen;
                            add = jifenchange.add;
                        } else {
                            jifen = jifenchange.rivaljifen;
                            add = jifenchange.reduce;
                        }

                        if(me.DATA.pvType == 'pvwzdld'){
                            jifen = jifenchange.jifen;
                            add = jifenchange.add > 0 ? jifenchange.add : 0;
                        }

                        var str = X.STR('<font size=20>{1}</font>(<font color={3}>{2}</font>)', jifen, add, G.gc.COLOR[add > 0 ? 'n34' : 'n36']);
                        var rh = new X.bRichText({
                            size: 20,
                            maxWidth: node.width,
                            lineHeight: 32,
                            color: G.gc.COLOR.n5,
                            eachText: function (node) {
                                X.enableOutline(node,'#000000',1);
                            },
                            family: G.defaultFNT
                        });
                        rh.text(str);
                        rh.setPosition(cc.p(node.width / 2 - rh.trueWidth() / 2, node.height / 2 - rh.trueHeight() / 2));
                        node.addChild(rh);
                    }

                }, ui.nodes);
            }


            //比分  待完成
            panel.nodes.text_bf.setString(fightData.bifen ? '' : '');
        },
        setGjjjc:function(left,right){
            var me = this;

            me.ui.nodes.mask.setTouchEnabled(false);
            if (me.DATA.pvType == 'pvgjjjc' || me.DATA.pvType == 'pvwz' || me.DATA.pvType == 'pvwzdld') {
                left.nodes.panel_df.hide();
                right.nodes.panel_df.hide();
                left.finds('text_df').hide();
                right.finds('text_df').hide();
                // me.ui.nodes.btn_confirm.hide();
                me.ui.nodes.btn_next.show();
            } else {
                left.nodes.panel_df.show();
                right.nodes.panel_df.show();
                left.finds('text_df').show();
                right.finds('text_df').show();
                me.once('in_over', function () {
                    me.ui.nodes.btn_confirm.show();
                    me.ui.nodes.btn.show();
                    me.ui.nodes.btn_confirm.setPositionX(me.ui.nodes.mask.width * 0.3);
                    me.ui.nodes.btn.setPositionX(me.ui.nodes.mask.width * 0.7);
                });

                me.ui.nodes.btn_next.hide();
                me.ui.nodes.mask.setTouchEnabled(true);
                me.event.emit('loadedRes');
            }

            if(me.DATA.session == me.DATA.fightlength - 1){
                left.nodes.panel_df.show();
                right.nodes.panel_df.show();
                me.ui.nodes.btn_next.hide();
                // me.ui.nodes.btn_confirm.show();
                me.once('in_over', function () {
                    me.ui.nodes.btn_confirm.show();
                    me.ui.nodes.btn.show();
                    me.ui.nodes.btn_confirm.setPositionX(200);
                    me.ui.nodes.btn.setPositionX(440);
                });
                me.event.emit('loadedRes');
                if(me.DATA.pvType == 'pvwzdld'){
                    left.nodes.panel_df.show();
                    right.nodes.panel_df.hide();
                    left.finds('text_df').show();
                    right.finds('text_df').hide();
                }else{
                    left.nodes.panel_df.show();
                    right.nodes.panel_df.show();
                    left.finds('text_df').show();
                    right.finds('text_df').show();
                }
            }else{
                me.ui.nodes.btn_next.touch(function(sender,type){
                    if(type == ccui.Widget.TOUCH_ENDED){
                        me.DATA.callback(me.DATA.session += 1);
                    }
                });
            }
            if(me.DATA.pvType == 'pvwz' && me.DATA.isVideo){
                left.finds('text_df').hide();
                right.finds('text_df').hide();
            }

            me.nodes.btn.click(function () {
                G.frame.woyaobianqiang.show();
                G.frame.fight.remove();
                me.remove();
            })
        }
    });

    G.frame[ID] = new fun('zhandoushibai.json', ID);
})();

;;/**
 * Created by lsm on 2018/6/28.
 */
(function() {
    //战斗-失败
    var ID = 'fight_fail_friendboss';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id);
        },
        initUi: function() {
            var me = this;
        },
        bindBtn: function() {
            var me = this;

            // cc.isNode(me.ui.nodes.mask) && me.ui.nodes.mask.touch(function(sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         me.remove();
            //         G.frame.fight.remove();
            //     }
            // });

            cc.isNode(me.ui.nodes.btn_confirm) && me.ui.nodes.btn_confirm.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.DATA.endcallback && me.DATA.endcallback();
                    me.remove();
                    G.frame.fight.remove();
                }
            });

            cc.isNode(me.ui.nodes.btn_confirm2) && me.ui.nodes.btn_confirm2.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.DATA.endcallback && me.DATA.endcallback();
                    me.remove();
                    G.frame.fight.remove();
                }
            });
            
            cc.isNode(me.ui.nodes.btn_next2) && me.ui.nodes.btn_next2.click(function(sender, type) {
                me.DATA.callback && me.DATA.callback();
                me.nodes.btn.hide();
            }, 1000);

            cc.isNode(me.ui.nodes.btn_zl) && me.ui.nodes.btn_zl.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.fight_datacompare.data(G.frame.fight.DATA).show();
                }
            });

            me.nodes.btn.click(function () {
                G.frame.woyaobianqiang.show();
                G.frame.fight.remove();
                me.remove();
            })
        },
        onOpen: function() {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
            me.ui.finds("bg_zhandou_sb").loadTexture("img/zhandou/zhandoushengli/bg_zhandou_sl.png", 1);
        },
        onAniShow: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;
            me.DATA = G.frame.fight.data();
            cc.isNode(me.nodes.btn_confirm) && me.nodes.btn_confirm.hide();

            me.ui.nodes.btn.hide();
            me.ui.nodes.btn_next2.setAnchorPoint(1,0);
            me.ui.nodes.btn_confirm2.setAnchorPoint(0,0);
            me.ui.nodes.btn_next2.setPositionY(0);
            me.ui.nodes.btn_confirm2.setPositionY(0);

            X.audio.playEffect("sound/battlelose.mp3");
            var lose = me.ui.finds("top_sb");
            lose.removeAllChildren();

            me.ui.finds("bg_zhandou_sb").loadTexture("img/zhandou/zhandoushengli/bg_zhandou_sl.png", 1);
            G.class.ani.show({
                json: "ani_zhandoushengli",
                addTo: lose,
                x: lose.width / 2,
                y: lose.height / 2,
                repeat: false,
                autoRemove: false,
                onload: function(node, action) {
                    node.finds("zi1").setSpriteFrame("img/public/zhandoujieshu.png");
                },
                onend: function(node, action) {
                    action.play("changtai", true);
                }
            });

            me.setContents();
            me.ui.setTimeout(function () {

                me.emit("show")
            }, 1000);

            me.event.emit('in_over');
        },
        onHide: function() {
            var me = this;
        },
        setContents: function() {
            var me = this;
            var conf = {
                0: 'jifen',
                1: 'dps'
            };
            me.ui.finds('img_zhandou_sb2').hide();
            if (G.frame.gonghui_tanbao.DATA.myinfo.tiliinfo.num > 1) {
                me.once('in_over', function () {
                    me.nodes.panel_btn.show();
                });
            } else {
                me.once('in_over', function () {
                    me.nodes.panel_btn.hide();
                    me.ui.nodes.btn_confirm.show();
                });
            }
            me.nodes.panel_nr.removeAllChildren();
            for (var i = 0; i < 2; i++) {
                var list = me.nodes.list_fs.clone();
                X.autoInitUI(list);
                list.nodes.txt_prefix.setString(L(conf[i]));
                list.nodes.txt_number.setString(me.DATA[conf[i]]);
                list.nodes.txt_prefix.setTextColor(cc.color('#fdd464'));
                list.nodes.txt_number.setTextColor(cc.color('#f6ebcd'));
                X.enableOutline(list.nodes.txt_prefix, '#2a1cof');
                X.enableOutline(list.nodes.txt_number, '#2a1cof');
                list.setAnchorPoint(0, 0);
                list.setPosition((me.nodes.panel_nr.width - list.width) / 2 + 25, i * list.height + 30);
                list.show();
                me.nodes.panel_nr.addChild(list);
            }
        },

    });

    G.frame[ID] = new fun('zhandoushibai.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/6.
 */
(function () {
    //战斗-胜利
    var ID = 'fight_win';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id);
        },
        initUi: function () {
            var me = this;

            me.ui.finds('bg_zhandou_sl').setTouchEnabled(true);
        },
        bindBtn: function () {
            var me = this;

            cc.isNode(me.ui.nodes.mask) && me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                    G.frame.fight.remove();
                }
            });

            cc.isNode(me.ui.nodes.btn_zl) && me.ui.nodes.btn_zl.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if(G.frame.damijing.isShow) {
                        G.frame.fight_datacompare.data(G.frame.fight.DATA || me.data() || (me.data() && me.data().fightres) || me.DATA).show();
                    } else {
                        G.frame.fight_datacompare.data(G.frame.fight.DATA || (me.data() && me.data().fightres) || me.data() || me.DATA).show();
                    }

                }
            });

            me.nodes.btn_confirm2.click(function (sender, type) {
                me.remove();
                if(G.frame.fight.isShow) {
                    G.frame.fight.remove();
                }
            });

            me.nodes.btn_next2.click(function (sender, type) {
                if(me.DATA.type1) {
                    switch (me.DATA.type1){
                        case "pvshilian":
                            G.frame.fight.remove();
                            G.ajax.send("mrsl_fight", [me.DATA.type, me.DATA.nandu, me.DATA.data, me.DATA.npc], function (d) {
                                if (!d) return;
                                var d = JSON.parse(d);
                                if (d.s == 1) {
                                    X.cacheByUid('fight_ready', me.DATA.data);
                                    G.frame.fight.data({
                                        prize: d.d.prize,
                                        pvType: "pvshilian",
                                        type1: me.DATA.type1,
                                        nandu: me.DATA.nandu,
                                        data: me.DATA.data,
                                        npc: me.DATA.npc,
                                        type: me.DATA.type
                                    }).once('show', function () {
                                        me.remove();
                                    }).demo(d.d.fightres);
                                    if (!d.d.fightres.winside) {
                                        G.frame.meirishilian.nodes.text_sycs.setString(d.d.lessnum);
                                    }
                                    G.hongdian.getData("mrsl", 1, function () {
                                        G.frame.meirishilian.checkRedPoint();
                                    })
                                }
                            });
                            break;
                        default:
                            break;
                    }
                }else {
                    if(G.frame.dafashita.isShow && !G.frame.dafashita_jxtg.isShow) {
                        me.isNoFstAni = true;
                        me.remove();
                        G.frame.dafashita.fightCall();
                    }
                }
            }, 1000);
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            cc.isNode(me.nodes.btn_confirm2) && me.nodes.btn_confirm2.hide();
            var win = me.ui.finds("top_sl");
            X.audio.playEffect("sound/battlewin.mp3");
            win.removeAllChildren();
            G.class.ani.show({
                json: "ani_zhandoushengli",
                addTo: win,
                x: win.width / 2,
                y: win.height / 2,
                repeat: false,
                autoRemove: false,
                onload: function (node, action) {

                },
                onend: function (node, action) {
                    action.play("changtai", true);
                    cc.isNode(me.nodes.btn_confirm2) && me.nodes.btn_confirm2.show();
                }
            });

            if(G.frame.meirishilian.isShow && G.frame.meirishilian.nodes.text_sycs.getString() > 0){
                me.nodes.panel_btn.show();
                me.nodes.btn_confirm2.show();
            }
            me.DATA = G.frame.fight.data() || G.frame.fight.DATA ||me.data();
            me.setContents();
            me.ui.setTimeout(function () {
                me.event.emit('in_over');
                me.emit("show");
                me.event.emit("shizijun");
            }, 100);

            me.ui.setTimeout(function () {
                G.guidevent.emit('fightWin_showOver');
            }, 1000);
            if(me.DATA.pvType == "damijing") {
                me.setDMJ();
            }
            if(G.frame.dafashita.isShow  
                && G.frame.dafashita.DATA.layernum % 10 != 0 
                && G.frame.dafashita.DATA.layernum + 1 <= X.keysOfObject(G.class.dafashita.get()).length
                && !G.frame.dafashita_jxtg.isShow) {
                me.nodes.panel_btn.show();
                me.nodes.btn_confirm2.show();
            }
            if(me.DATA.pvType == "pvghz") {
                me.nodes.list_fs.show();
                me.nodes.txt_prefix.setString(L("JF"));
                me.nodes.txt_number.setString("+" + me.DATA.jifen);
                me.nodes.txt_prefix.x = 34;
                me.nodes.txt_number.x = 215;
            }
        },
        onHide: function () {
            var me = this;
            me.emit("hide");
            if(G.frame.dafashita.isShow && !G.frame.dafashita_jxtg.isShow) {
                if(!me.isNoFstAni) {
                    G.frame.dafashita.playLevelAni();
                }else {
                    G.frame.dafashita.refreshPanel();
                }
            }
        },
        setContents: function () {
            var me = this;
            var prize = me.data() && me.data().prize;
			if(!prize && me.DATA && me.DATA.prize)prize=me.DATA.prize;
			
			if(!prize)return;

            X.lengthChangeByPanel(prize, me.nodes.panel_ico, me.nodes.listview_ico, {
                touch: true
            });
        },
        setDMJ: function () {
            var me = this;
            me.nodes.damijing.show();
            for(var i in me.DATA.pv) {
                var layout = me.nodes["mingji_rw" + i];
                var wid = G.class.shero(me.DATA.pv[i]);
                wid.setAnchorPoint(0.5, 0.5);
                wid.setPosition(layout.width / 2, layout.height / 2);
                i == 1 ? wid.setEnabled(me.DATA.winside ? false : true) : wid.setEnabled(me.DATA.winside ? true : false);
                layout.addChild(wid);
            }
        }

    });

    G.frame[ID] = new fun('zhandoushengli.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/22.
 */
(function() {
    //fight_win_battle
    var ID = 'fight_win_battle';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;

            me.singleGroup = "f4";
            me._super(json, id);
        },
        initUi: function() {
            var me = this;

            cc.isNode(me.ui.nodes.mask) && me.ui.nodes.mask.touch(function(sender, type) {
                // if (type == ccui.Widget.TOUCH_ENDED) {
                //     me.remove();
                //     G.frame.fight.remove();
                // }
            });
            cc.isNode(me.ui.nodes.btn_confirm) && me.ui.nodes.btn_confirm.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.DATA.endcallback && me.DATA.endcallback();
                    me.remove();
                    G.frame.fight.remove();
                }
            });
            cc.isNode(me.ui.nodes.btn_zl) && me.ui.nodes.btn_zl.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.fight_datacompare.data(G.frame.fight.DATA).show();
                }
            });

            me.ui.finds('bg_zhandou_sl').setTouchEnabled(true);
        },
        bindBtn: function() {
            var me = this;
        },
        onOpen: function() {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;

            cc.isNode(me.nodes.btn_confirm) && me.nodes.btn_confirm.hide();

            me.DATA = G.frame.fight.data();
            X.audio.playEffect("sound/battlewin.mp3");
            var win = me.ui.finds("top_sl");
            win.removeAllChildren();

            if(me.DATA.pvType == "pvwz"){
                // me.nodes.btn.hide();
                // me.ui.finds("bg_zhandou_sb").loadTexture("img/zhandou/zhandoushengli/bg_zhandou_sl.png", 1);
                G.class.ani.show({
                    json: "ani_zhandoushengli",
                    addTo: win,
                    x: win.width / 2,
                    y: win.height / 2,
                    repeat: false,
                    autoRemove: false,
                    onload: function(node, action) {
                        node.finds("zi1").setSpriteFrame("img/public/zhandoujieshu.png");
                    },
                    onend: function(node, action) {
                        action.play("changtai", true);
                    }
                });
            }else{
                G.class.ani.show({
                    json: "ani_zhandoushengli",
                    addTo: win,
                    x: win.width / 2,
                    y: win.height / 2,
                    repeat: false,
                    autoRemove: false,
                    onload: function (node, action) {

                    },
                    onend: function (node, action) {
                        action.play("changtai", true);

                    }
                });
            }

            new X.bView('ui_jiesuan.json', function(view) {
                me._view = view;

                me.nodes.panel_nr.removeAllChildren();
                me.nodes.panel_nr.addChild(view);
                me.setContents();
                me.ui.setTimeout(function () {
                    me.event.emit('in_over');
                    me.emit("show")
                }, 1000);
            });
        },
        onHide: function() {
            var me = this;
        },
        setContents: function() {
            var me = this;

            var panel = me._view;
            var layLeft = panel.nodes.panel_rw;
            var layRight = panel.nodes.panel_rw1;

            var fightData = G.frame.fight.data().fightData || G.frame.fight.DATA;

            setItem(layLeft, 0);
            setItem(layRight, 1);
            me.setGjjjc(layLeft,layRight);

            function setItem(ui, idx) {
                X.autoInitUI(ui);

                var headData = G.frame.fight.DATA.headdata[idx];
                var jifenchange = fightData.jifenchange;
                X.render({
                    text_mz: function(node){
                        node.setString((headData && headData.name) || P.gud.name);
                        X.enableOutline(node, '#66370e', 1);
                    },
                    panel_tx: function(node) {
                        node.removeAllChildren();
                        var wid = G.class.shead(headData || P.gud);
                        wid.setPosition(cc.p(node.width / 2, node.height / 2));
                        node.addChild(wid);
                    },
                    panel_df: function(node) {
                        if(!jifenchange){
                            return;
                        }
                        node.removeAllChildren();

                        var jifen, add;
                        if(headData.uid == jifenchange.win_uid) {
                            jifen = jifenchange.jifen;
                            add = jifenchange.add;
                        } else {
                            jifen = jifenchange.rivaljifen;
                            add = jifenchange.reduce;
                        }
                        
                        if(me.DATA.pvType == 'pvwzdld'){
                            jifen = jifenchange.jifen;
                            add = idx == 0? jifenchange.add : 0;
                        }

                        var str = X.STR('<font size=20>{1}</font>(<font color={3}>{2}</font>)',jifen,add, G.gc.COLOR[add >= 0 ? 'n34' : 'n36']);
                        var rh = new X.bRichText({
                            size: 20,
                            maxWidth: node.width,
                            lineHeight: 32,
                            color: G.gc.COLOR.n5,
                            eachText: function (node) {
                                X.enableOutline(node,'#000000',1);
                            },
                            family: G.defaultFNT
                        });
                        rh.text(str);
                        rh.setPosition(cc.p(node.width / 2 - rh.trueWidth() / 2, node.height / 2 - rh.trueHeight() / 2));
                        node.addChild(rh);
                    }

                }, ui.nodes);
            }


            //比分  待完成
            panel.nodes.text_bf.setString(fightData.bifen ? '' : '');
        },

        setGjjjc:function(left,right){
            var me = this;
            me.ui.nodes.mask.setTouchEnabled(false);
            if (me.DATA.pvType == 'pvgjjjc' || me.DATA.pvType == 'pvwz' || me.DATA.pvType == 'pvwzdld') {
                left.nodes.panel_df.hide();
                right.nodes.panel_df.hide();
                left.finds('text_df').hide();
                right.finds('text_df').hide();
                // me.ui.nodes.btn_confirm.hide();
                me.ui.nodes.btn_next.show();

            } else {
                left.nodes.panel_df.show();
                right.nodes.panel_df.show();
                left.finds('text_df').show();
                right.finds('text_df').show();
                // me.ui.nodes.btn_confirm.show();
                me.once('in_over', function () {
                    me.ui.nodes.btn_confirm.show();
                });
                me.ui.nodes.btn_next.hide();
                me.ui.nodes.mask.setTouchEnabled(true);
                me.event.emit('loadedRes');
            }
            if(me.DATA.session == me.DATA.fightlength - 1){
                me.ui.nodes.btn_next.hide();
                // me.ui.nodes.btn_confirm.show();
                me.once('in_over', function () {
                    me.ui.nodes.btn_confirm.show();
                });
                me.event.emit('loadedRes');
                if(me.DATA.pvType == 'pvwzdld'){
                    left.nodes.panel_df.show();
                    right.nodes.panel_df.hide();
                    left.finds('text_df').show();
                    right.finds('text_df').hide();
                }else{
                    left.nodes.panel_df.show();
                    right.nodes.panel_df.show();
                    left.finds('text_df').show();
                    right.finds('text_df').show();
                }
            }else{
                me.ui.nodes.btn_next.touch(function(sender,type){
                    if(type == ccui.Widget.TOUCH_ENDED){
                        me.DATA.callback(me.DATA.session += 1);
                    }
                });
            }
            if(me.DATA.pvType == 'pvwz' && me.DATA.isVideo){
                left.finds('text_df').hide();
                right.finds('text_df').hide();
            }
        }
    });

    G.frame[ID] = new fun('zhandoushengli.json', ID);
})();

;;/**
 * Created by lsm on 2018/6/28.
 */
(function () {
    //战斗-胜利
    var ID = 'fight_win_friendboss';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id);
        },
        initUi: function () {
            var me = this;

            me.ui.finds('bg_zhandou_sl').setTouchEnabled(true);
        },
        bindBtn: function () {
            var me = this;

            cc.isNode(me.ui.nodes.mask) && me.ui.nodes.mask.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    // me.remove();
                    // G.frame.fight.remove();
                }
            });

            cc.isNode(me.ui.nodes.btn_confirm) && me.ui.nodes.btn_confirm.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.DATA.endcallback && me.DATA.endcallback();
                    me.remove();
                    G.frame.fight.remove();
                }
            });

            cc.isNode(me.ui.nodes.btn_confirm2) && me.ui.nodes.btn_confirm2.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.DATA.endcallback && me.DATA.endcallback();
                    me.remove();
                    G.frame.fight.remove();
                }
            });
            
            cc.isNode(me.ui.nodes.btn_next2) && me.ui.nodes.btn_next2.click(function(sender, type) {
                me.DATA.callback && me.DATA.callback();
            }, 1000);

            cc.isNode(me.ui.nodes.btn_zl) && me.ui.nodes.btn_zl.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.fight_datacompare.data(G.frame.fight.DATA).show();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            cc.isNode(me.nodes.btn_confirm) && me.nodes.btn_confirm.hide();
            X.audio.playEffect("sound/battlewin.mp3");
            var win = me.ui.finds("top_sl");
            win.removeAllChildren();
            G.class.ani.show({
                json: "ani_zhandoushengli",
                addTo: win,
                x: win.width / 2,
                y: win.height / 2,
                repeat: false,
                autoRemove: false,
                onload: function (node, action) {

                },
                onend: function (node, action) {
                    action.play("changtai", true);

                }
            });

            me.DATA = G.frame.fight.data();
            me.setContents();
            me.ui.setTimeout(function () {
                me.event.emit('in_over');
                me.emit("show")
            }, 1000);
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var conf = {
                0:'jifen',
                1:'dps'
            };
            //me.ui.finds('img_zhandou_sb2').hide();
            // if (G.frame.friend.DATA.tiliinfo.num > 0) {
            //     me.nodes.panel_btn.show();
            // } else {
                
            // }
            me.nodes.panel_btn.hide();
            me.once('in_over', function () {
                me.ui.nodes.btn_confirm.show();
            });
            for(var i = 0;i<2; i++){
                var list = me.nodes.list_fs.clone();
                X.autoInitUI(list);
                list.nodes.txt_prefix.setString(L(conf[i]));
                list.nodes.txt_number.setString(me.DATA[conf[i]]);
                list.nodes.txt_prefix.setTextColor(cc.color('#fdd464'));
                list.nodes.txt_number.setTextColor(cc.color('#f6ebcd'));
                X.enableOutline(list.nodes.txt_prefix,'#2a1cof');
                X.enableOutline(list.nodes.txt_number,'#2a1cof');
                list.setAnchorPoint(0,0);
                list.setPosition((me.nodes.panel_nr.width - list.width) / 2 + 25,i*list.height + 30);
                list.show();
                me.nodes.panel_nr.addChild(list);
            }
        }
    });

    G.frame[ID] = new fun('zhandoushengli.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/6.
 */
(function () {
    //战斗-种族克制
    var ID = 'fight_zzkezhi';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
            
            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
            
            me.nodes.txt_djgb.setTouchEnabled(true);
            me.nodes.txt_djgb.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.zf = me.data() || "";
            cc.enableScrollBar(me.nodes.listview);
        },
        onAniShow: function () {
            var me = this;
            G.guidevent.emit('fight_zzkezhiOpenOver');
        },
        onShow: function () {
            var me = this;

            me.nodes.list.hide();
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var zf = [];
            var conf = G.class.zhenfa.get();
            var keys = X.keysOfObject(conf.zhenfa);

            for (var i = 0; i < keys.length; i ++) {
                var obj = {
                    id: keys[i],
                    active: me.zf == keys[i] ? 1 : 0
                };
                zf.push(obj);
            }
            zf.sort(function (a, b) {
                if(a.active !== b.active) {
                    return a.active > b.active ? -1 : 1;
                }else{
                    return a.id * 1 < b.id * 1 ? -1 : 1;
                }
            });
            for (var i = 0; i < zf.length; i ++) {
                me.nodes.listview.pushBackCustomItem(me.setItem(zf[i]));
            }
        },
        setItem: function (conf) {
            var me = this;
            var buffArr = [];
            var data = G.class.zhenfa.getById(conf.id);
            var list = me.nodes.list.clone();

            list.show();

            list.finds("panel_1").setBackGroundImage('img/zhenfa/' + G.class.zhenfa.getIcoById(conf.id) + '.png',1);
            // G.class.ani.show({
            //     json: parseInt(conf.id) < 10 ? "ani_zhenyingbuff_0" + conf.id : "ani_zhenyingbuff_" + conf.id,
            //     addTo: list.finds("panel_1"),
            //     x: list.finds("panel_1").width / 2,
            //     y: list.finds("panel_1").height / 2,
            //     repeat: true,
            //     autoRemove: false
            // });

            if(conf.active == 1) list.finds("Image_3").show();

            var buffKeys = X.keysOfObject(data.buff);
            buffKeys.sort(function (a,b) {
                return a < b ? -1 : 1;
            });

            for (var i = 0; i < buffKeys.length; i++) {
                var key = buffKeys[i];
                var obj = {};
                obj[key] = data.buff[key];
                var tip = X.fmtBuff(obj,'<font color='+ G.gc.COLOR.n5 +'>{1}</font>+{2}')[0].tip;
                buffArr.push(tip);
            }

            for (var i = 0; i < buffArr.length; i ++) {
                var rt = new X.bRichText({
                    size: 20,
                    lineHeight: 20,
                    color: G.gc.COLOR.n7,
                    maxWidth: list.finds("panel_3").width,
                    family: G.defaultFNT,
                });
                rt.text(buffArr[i]);
                rt.setAnchorPoint(0, 1);
                rt.setPosition(50, list.finds("panel_3").height - 4 - i * (rt.trueHeight() + 5));
                list.finds("panel_3").addChild(rt);
            }

            var zzImg = [];
            for (var i in data.cond) {
                var img = new ccui.ImageView('img/public/ico/ico_zz' + (i * 1 + 1) + '.png', 1);
                if(data.cond[i] > 1) {
                    for(var j = 1; j < data.cond[i]; j ++) {
                        zzImg.push(img.clone());
                    }
                }
                zzImg.push(img.clone());
            }
            X.center(zzImg, list.finds("panel_2"), {
                scale: .86
            });
            
            return  list;
        }
    });

    G.frame[ID] = new fun('zhandou_top_zzkz.json', ID);
})();
;;(function(){
	
	testRole=null;
	G.class.testRole = function(id,ifChangeNewSpine){
		if(ifChangeNewSpine){
			G.gc.ifChangeModels = function(){return true};
		}else{
			G.gc.ifChangeModels = function(){return false};
		}
		cc.isNode(testRole) && testRole.removeFromParent();
		var spine = testRole = new G.class.Role({
			spinejson:id,
			rid:id
		});
		spine.x = 320;
		spine.y = 500;
		spine.zIndex = 999999;
		spine.role.setTimeScale(3);
		spine.wait();

		function _play(){
			spine.wait();
			spine.setTimeout(function(){
				spine.atk();
			},1000);
			spine.setTimeout(function(){
				spine.byatk();
			},2000);
			spine.setTimeout(function(){
				spine.die();
			},3000);
			spine.setTimeout(function(){
				spine.shihua();
			},4000);
			spine.setTimeout(function(){
				_play();
			},5000);
		}
		_play();		
		cc.director.getRunningScene().addChild(spine);
	};
	
	
	G.class.Role = ccui.Layout.extend({
		ctor : function(data){
			this.data = data;
			this._super.apply(this,arguments);
			this.setName(data.rid);
			this.showRole();
			return this;
		},
		onExit : function(){
			if(cc.isNode(this.role)){
				//cc.log('重置角色动画到wait...');
				this.role.stopAllAni();
        		this.role.runAni(0,'wait',true);
			}
			this._super.apply(this,arguments);
		},
		showRole : function(){
			var me = this;
			var data = this.data;

            var model = data.hid?G.class.hero.getModel(data):'';
			X.spine.show({
                json:'spine/'+ (data.spinejson||model) +'.json',
        		addTo : me,
        		cache:true,x:0,y:0,z:0,
        		autoRemove:false,
        		rid : data.rid,
        		onload : function(node){
					node.setVisible(false);
        			me.role = node;
					me.role.stopAllAni();
					node.setTimeScale(this.__speedVal || 1);
					node.opacity = 255;
					node.setScale(1);
        			node.setEndListener(null);
        			node.setCompleteListener(null);
        			node.setEventListener(null);
        			
        			node.setName(node.conf.rid);
        			me.wait();

					cc.callLater(function(){
						node.setVisible(true);
						me.data.loadRoleOver && me.data.loadRoleOver(node);
						me.loadRoleOver && me.loadRoleOver(node);
					});
        		}
        	});
        	me.willLoadRole && me.willLoadRole();
        	return this;
		},
		speed : function(v){
			this.__speedVal = v;
			this.role && this.role.setTimeScale(v);
		},
		// 显示掉血的动画文本 飘字
        hmpChange : function(data){
        	//{"dps": -361, "jz": false, "act": "hp", "bj": false, "r": "role_1", "at": "xp", "v": -361, "nv": 14949}
			if(!cc.isNode(this))return;
            var that = this;
            var label;
            var aniType=1; //1=常规伤害 2=暴击 3=加血
            var num = data.v;
            
            var geDangImg = "";
            if(num>0){
                label = new cc.LabelBMFont("+"+num, "img/fnt/sz_zd5.fnt"); //加血
                aniType=3;
            }else{
            	if(data.at==null || data.at=='nm'){
            		if(data.bj){
            			label = new cc.LabelBMFont(num, "img/fnt/sz_zd3.fnt"); //普通攻击暴击
            			geDangImg = "img/zhandou/wz_zd_gd3.png";
            			aniType=2;
            		}else{
            			label = new cc.LabelBMFont(num, "img/fnt/sz_zd1.fnt"); //普通攻击
            			geDangImg = "img/zhandou/wz_zd_gd1.png";
            			aniType=1;
            		}
            		
            	}else if(data.at=='xp'){
            		if(data.bj){
            			label = new cc.LabelBMFont(num, "img/fnt/sz_zd4.fnt"); //技能攻击暴击
            			geDangImg = "img/zhandou/wz_zd_gd4.png";
            			aniType=2;
            		}else{
            			label = new cc.LabelBMFont(num, "img/fnt/sz_zd2.fnt"); //技能攻击
            			geDangImg = "img/zhandou/wz_zd_gd2.png";
            			aniType=1;
            		}
            	}else if(data.at=='realinjury'){
					label = new cc.LabelBMFont(num, "img/fnt/sz_zd4.fnt"); //神器攻击掉血
					aniType=2;
				}
            }
            
            
            if(geDangImg!="" && data.jz===false){
            	var geDang = new cc.Sprite('#'+geDangImg);
            	geDang.runActions([
	            	[
	                    cc.scaleTo(0.07,2,2),
	                    cc.moveBy(0.05,cc.p(0,30))
	                ],
	                cc.scaleTo(0.1,1,1),
	            	cc.fadeOut(0.7),
	            	cc.removeSelf()
	            ]);
	            geDang.y = this.y  + X.rand(100,150);
            	geDang.x = this.x + X.rand(-30,30);
            	geDang.zIndex = 1400;
            	that.getParent().addChild(geDang);
            }
            
            
            label.y = this.y  + X.rand(80,100);
            label.x = this.x + X.rand(-30,30);
            label.zIndex = 1400;
            that.getParent().addChild(label);
            
            var xfx=1;
            if(this.data.side==0){
            	xfx = -1; 	
            }
            
            if(aniType==1){
            	label.runActions([
	            	cc.jumpBy(0.3,cc.p(
	            		X.rand(30,50) * xfx,
	            		X.rand(20,60)
	            	), 50, 1),
	            	
	            	cc.jumpBy(0.15,cc.p(
	            		20 * xfx,
	            		10
	            	), 10, 1),
	            	
	            	cc.fadeOut(0.7),
	            	cc.removeSelf()
	            ]);
            }else if(aniType==2){
            	//暴击冒血设置
            	label.setScale(1.2); //初始值大小
            	label.runActions([
	            	[
	                    cc.scaleTo(0.1,1.4,1.4), //用0.07秒，缩放到2倍
	                    cc.moveBy(0.05,cc.p(0,20)) //上移30px
	                ],
	                cc.delayTime(0.2), //暂停0.2
	                cc.scaleTo(0.2,1,1), //用0.05缩放到1
	            	cc.fadeOut(0.5), //0.7s秒渐隐
	            	cc.removeSelf()
	            ]);
            }else if(aniType==3){
            	label.x = this.x + X.rand(-60,60);
            	label.y = this.y  + X.rand(80,150);
	            label.opacity = 0;
	            label.setScale(0.1);
	            label.runActions([
	                [
	                    cc.fadeIn(0.2),
	                    cc.scaleTo(0.2,1,1),
	                    cc.moveBy(.2,cc.p(that.data.side==1?40:-40,40))
	                ],
	                cc.moveBy(.4,cc.p(0,10)),
	                cc.callFunc(function(){
	                    label.runActions([
	                        [
	                            cc.fadeOut(0.2),
	                            cc.scaleTo(0.2,0.1,0.1),
	                            cc.moveBy(.2,cc.p(0,40))
	                        ],
	                        cc.removeSelf()
	                    ]);
	                })
	            ]);
            }
        },
        ifShiHua : function(){
        	if(this.data.buff && this.data.buff['shihua'] && this.data.buff['shihua'].length>0){
				return true;
			}else{
				return false;
			}
        },
        ifBingDong : function(){
        	if(this.data.buff && this.data.buff['bingdong'] && this.data.buff['bingdong'].length>0){
				return true;
			}else{
				return false;
			}
        },
        wait : function(){
        	var me = this;
        	if(this.ifShiHua())return;
        	if(me.ifBingDong()){
        		return me.role.stopAllAni();
        	}
        	me.role.stopAllAni();
        	me.role.runAni(0,'wait',true);
        },
        shihua : function(){
        	var me = this;
        	me.role.stopAllAni();
        	me.role.runAni(0,'shihua',true);
        },
        
        byatk : function(callback){
            var me = this;
            if(this.ifShiHua())return;
            if(me.ifBingDong()){
        		return me.role.stopAllAni();
        	}
            me.setAct('byatk',false,function(){
            	me.role.runAni(0,'wait',true);
                callback && callback();
            });
        },
        die : function(callback){
        	this.role.stopAllAni();
            this.setAct('die',false,callback);
        },
        atk : function(conf){
            var me = this;
            if(this.ifShiHua())return;
            conf = conf || {};
            
            var _actName = "atk";
            if(conf && conf.actname)_actName = conf.actname;
			
			me.role.setEventListener(function(traceIndex, event){
				if(event.data.name == 'hit'){
					conf.hitCallback && conf.hitCallback();
				}
	        });
			
            me.setAct(_actName,false,function(){
                me.role.runAni(0,'wait',true);
                conf.endCallback && conf.endCallback();
            });
        },
        setAct : function(actName,repeat,callback){
            var me = this;

			me.role.stopAllAni();
            me._currAct = actName;
            
        	me.role.setEndListener(function(traceIndex){
        		delete me._currAct;
				cc.callLater(function(){
					me.role.stopAllAni();
					callback && callback.call(me);
				});
			});
			
            me.role.runAni(0,actName,repeat);
            return true;
        },
	});
	
	var fight = G.frame.fight;
	//神器处理类
	G.class.fightShenQi = G.class.Role.extend({
		ctor : function(data){
			if(data.sqid!=null && data.spinejson==null){
				var _conf = G.gc.shenqicom.shenqi[ data.sqid ];
				data.spinejson = _conf.fightshow; //'shengbinga_1';//
			}
			this._super.apply(this,arguments);

			var _sqpos = {
				"0":cc.p(60,800),
				"1":cc.p(600,800)
			};
			this.setPosition( _sqpos[ data.side ] );
			this.zIndex = 1400-this.y;
			return this;
		},
		loadRoleOver : function(node){
			var me = this;
			var data = me.data;
			node.scale = 1;//0.65;
			node.scaleX *= (data.side==1?-1:1);
			fight.emit('fightRole_showed',me);
		},
		f5Bar : function(ani){
			var that = this;
			if(ani==null)ani=true;
			var bar = fight.ui.finds('sb'+ (that.data.side*1+1)).finds('jdt');
			var per = parseInt(that.data.nuqi/that.data.maxnuqi*100);
			bar.setPercentAni(per);
		},
		resetPos : function(ani) {

		}
	});

	G.class.fightRole = G.class.Role.extend({
		ctor : function(data){
			this._super.apply(this,arguments);
			this.data.buff = {};
			this.data.buffAni = {};
			this.resetPos();
			this.f5Bar(false);
			this.showInfo();
			return this;
		},
		addBuff : function(data){
			//data = {"f": "role_0", "bid": "baojipro", "bt": "baojipro", "r": 15, "t": "role_0", "act": "buff", "_id": "buff_0"}
			var me = this;
			var _buffType = data.bt;
			if(!me.data.buff[ _buffType ] ){
				me.data.buff[ _buffType ] = [];
			}
			me.data.buff[ _buffType ].push( data );
			
			if(!cc.isNode(this.info))return;
			if(this.data.dead)return;
			
			if( !this.info.finds('buff_'+ _buffType) ){
				//新增1个图标，设定为1层
				var bico = fight.nodes.buff_ico.clone();
				X.enableOutline(bico.finds('txt_number$'),cc.color('#000000'),1);
				bico.setName( 'buff_'+ _buffType );
				bico.finds('txt_number$').setString('1');
				bico.finds('img_buff').loadTexture('img/buff/'+ G.gc.buff[data.bid].icon,1);
				bico.show();
				this.info.finds('buff_panel$').addChild( bico );
				me._reOrderBuffICON();
				me.addBuffANI(data.bid);
				
				if(me.ifShiHua()){
					me.shihua();
				}
				if(me.ifBingDong()){
					me.role.stopAllAni();
				}
			}else{
				//只修改buff层数
				this.info.finds('buff_'+ _buffType).finds('txt_number$').setString(''+ me.data.buff[ _buffType ].length);
			}
		},
		addBuffANI : function(buffid,callback){
			var me = this;
			if(!G.gc.skillani[buffid])return;
			if(!cc.isNode(this))return;
			if(cc.isNode(this.data.buffAni[buffid]))return;
			if(this.data.dead)return;
			
			var skillAni = G.gc.skillani[buffid];
			G.class.ani.show({
		        json : "skillani/" + skillAni.ani,
		        x: 0,
		        y: 0,
		        z:5,
		        addTo:me,
		        cache:true,
		        autoRemove:false,
		        repeat:true,
		        onload : function(node,action){
		        	me.data.buffAni[buffid] = node;
		        	
		        	if(me.data.side==0){
		        		node.setScaleX(1);
		        	}else{
		        		node.setScaleX(-1);
		        	}
		        	callback && callback(node,action);
		        }
		    });
		},
		delBuff : function(data){
			//{"bid": "pojiapro", "bt": "pojiapro", "r": 0, "t": "role_0", "act": "buffdel", "_id": "buff_9"}
			var me = this;
			if(!cc.isNode(this.info))return;
			var _buffType = data.bt;
			if(!me.data.buff[ _buffType ] )return;
			for(var i=0;i<me.data.buff[ _buffType ].length;i++){
				if( me.data.buff[ _buffType ][i]._id == data._id){
					me.data.buff[ _buffType ].splice(i,1);
					break;
				}
			}
			if(me.data.buff[ _buffType ].length==0){
				//如果此type的buff已全部失效，则删除图标
				delete me.data.buff[ _buffType ];
				var _bufficon = this.info.finds('buff_'+ _buffType);
				cc.isNode(_bufficon) && _bufficon.removeFromParent();
				me._reOrderBuffICON();
				me.delBuffANI(data.bid);
				
				if(_buffType=='shihua' || _buffType=='bingdong')me.wait();
			}else{
				//只修改数字
				if(!cc.isNode(this.info))return;
				if(!cc.isNode(this.info.finds('buff_'+ _buffType)))return;
				if(!cc.isNode(this.info.finds('buff_'+ _buffType).finds('txt_number$')))return;
				this.info.finds('buff_'+ _buffType).finds('txt_number$').setString(''+ me.data.buff[ _buffType ].length);
			}
		},
		delBuffANI : function(buffid){
			if(!cc.isNode(this))return;
			if(!cc.isNode(this.data.buffAni[buffid]))return;
			this.data.buffAni[buffid].removeFromParent();
			delete this.data.buffAni[buffid];
		},
		delAllBuffANI : function(){
			for(var buffid in this.data.buffAni){
				this.delBuffANI(buffid);
			}
		},
		_reOrderBuffICON : function(){
			//重新排序bufficon图标
			var me = this;
			if(!cc.isNode(this.info))return;
			
			var children = this.info.finds('buff_panel$').getChildren();
			for(var i=0;i<children.length;i++){
				children[i].x = i*18;
				children[i].y = 0;
			}
		},
		resetPos : function(ani){
			var data = this.data;
			
			this.zIndex = fight._posInfo[data.rid].z;
			if(ani){
				this.runActions([
					cc.moveTo(0.1,cc.p(fight._posInfo[data.rid].x,fight._posInfo[data.rid].y))
				]);
			}else{
				this.x = fight._posInfo[data.rid].x;
				this.y = fight._posInfo[data.rid].y;
			}
		},
		showInfo : function(){
			this.info.show();
			if(this.data.enlargepro!=null && this.data.enlargepro!="1"){
				this.info.y = 190; //BOSS血条位置
			}else{
				this.info.y = 150;//普通怪血条位置
			}			
			this.info.x = -10;
			this.info.zIndex = 10;
		},
		hideInfo : function(){
			cc.isNode( this.info ) && this.info.hide();
		},
		willLoadRole : function(){
			var me = this;
			this.info = fight.nodes.list_gw.clone();
			this.addChild(this.info);
			X.autoInitUI(this);

			me.nodes.txt_dj.setString(me.data.lv);
			X.enableOutline(me.nodes.txt_dj,cc.color('#000000'),1);
            me.nodes.txt_dj.setFontName(G.defaultFNT);
			me.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (me.data.zhongzu + 1) + '_s.png', 1);
		},
		loadRoleOver : function(node){
			var me = this;
			var data = me.data;
			node.scale = 0.65; //先缩小，再按照透视缩一次
			node.scale *= fight._posInfo[node.conf.rid].s;
			// npc中的boss需要有一定的放大倍数
            if (this.data.enlargepro) {
                node.scaleX *= data.enlargepro;
                node.scaleY *= data.enlargepro;
            }
			node.scaleX *= (data.side==1?-1:1);
			fight.emit('fightRole_showed',me);
		},
        showHPBar : function(allways){
            var that = this;
        },
        f5Bar : function(ani){
            var that = this;
            if(ani==null)ani=true;
            
            if (!cc.isNode(that.nodes.jdt_hp)) {
                return;
            }

            var per=0;
            //刷新血条
            if(that.data.hp != null){
                per = parseInt(that.data.hp/that.data.maxhp*100);
            }
            if(ani){
            	that.nodes.jdt_hp_d.setPercentAni(per);
            	that.nodes.jdt_hp.setPercent(per);
            }else{
            	that.nodes.jdt_hp_d.setPercent(per);
            	that.nodes.jdt_hp.setPercent(per);
            }
          	
          	
            if (!cc.isNode(that.nodes.jdt_sp)) {
                return;
            }
          	//刷新怒气条
          	var per=0;
            if(that.data.nuqi != null){
                per = parseInt(that.data.nuqi/that.data.maxnuqi*100);
            }
            
            if(per>=100)G.guidevent.emit('sp_is_full');
            
            //满怒气动画
            if(per>=100){
            	if(!cc.isNode(that.data.maxNuQiAni)){
            		G.class.ani.show({
		                json: "ani_xuetiaobaoqi",
		                addTo: that.info,
		                x: 45,
		                y: 10,
		                repeat: true,
		                autoRemove: false,
		                cache:true,
		                zIndex:1000,
						onload : function (node, action) {
		                	node.setScaleX(1.25);
		                    that.data.maxNuQiAni = node;
		                }
					});
            	}
            }else{
            	if(cc.isNode(that.data.maxNuQiAni)){
            		that.data.maxNuQiAni.removeFromParent();
            		delete that.data.maxNuQiAni;
            	}
            }
           
            if(ani){
            	that.nodes.jdt_sp.setPercentAni(per);
            }else{
            	that.nodes.jdt_sp.setPercent(per);
            }
        }
	});
})();

;;/**
 * Created by lsm on 2018/6/27.
 */
(function () {
    //聊天
    var ID = 'friend';

    G.event.on("addfriend", function () {
        G.DATA.addfriend = true;
        G.setNewIcoImg(G.view.mainView.nodes.btn_hy);
    });

    var fun = X.bUi.extend({
        extConf: {
            maxnum: 30
        },
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            me.topMenu = new G.class.topMenu(me, {
                btns: X.clone(G.class.menu.get('friend'))
            });
            me.nodes.listview.setTouchEnabled(true);
        },
        changeType: function (sender) {
            var me = this;
            if(sender.data){
                var type = sender.data.id;
            }else{
                var type = sender;
            }


            if(sender.disable) {
                G.tip_NB.show(sender.show);
                return;
            }

            me.curType = type;

            var viewConf = {
                "1": G.class.friend_list,
                "2": G.class.friend_search,
                "3": G.class.friend_application,
                "4": G.class.friend_treasure
            };
            me._panels = me._panels || {};
            for (var _type in me._panels) {
                cc.isNode(me._panels[_type]) && me._panels[_type].hide();
            }
            if (!cc.isNode(me._panels[type])) {
                me._panels[type] = new viewConf[type](type);
                me.ui.nodes.panel_nr.addChild(me._panels[type]);
            }
            me._panels[type].isShow = true;
            for(var i in me._panels){
                if(i != type){
                    me._panels[i].isShow = false;
                }
            }
            me._panels[type].show();
        },
        bindBtn: function () {
            var me = this;
            me.ui.nodes.mask.click(function(){
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
            me.checkRedPoint();
        },
        checkRedPoint: function(){
            var me = this;
            var arr = ["friend"];
            var btns = [me.nodes.listview.children[0]];
            for(var i = 0; i < arr.length; i ++){
                if(G.DATA.hongdian[arr[i]] > 0){
                    G.setNewIcoImg(btns[i]);
                    btns[i].getChildByName("redPoint").setPosition(111, 61);
                }else{
                    G.removeNewIco(btns[i]);
                }
            }
            if(G.DATA.addfriend){
                G.setNewIcoImg(me.nodes.listview.children[2]);
                me.nodes.listview.children[2].getChildByName("redPoint").setPosition(111, 61);
            }else{
                G.removeNewIco(me.nodes.listview.children[2]);
            }
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            var type = (me.data() && me.data().tztype) || 1;
            me.topMenu.changeMenu(1);
        },
        onHide: function () {
            var me = this;
            me.event.emit('hide');
            G.hongdian.getHongdian(1, function () {
                G.hongdian.checkFriend();
            })
        },

        setContents: function () {
            var me = this;

        },
        getData: function(callback, errCall) {
            var me = this;
            G.ajax.send('friend_open', [], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                } else {
                    errCall && errCall();
                }
            }, true);
        },
        setFriendNum: function () {
            var me = this;
        }
    });

    G.frame[ID] = new fun('friend.json', ID);
})();

;;/**
 * Created by lsm on 2018/6/27
 */
(function() {
    //好友添加 
    G.class.friend_application = X.bView.extend({
        ctor: function(type) {
            var me = this;
            G.frame.friend.qq = me;
            me._type = type;
            me._super('friend_apply.json');
        },
        refreshPanel: function() {
            var me = this;
            me.getData(function() {
                me.ui_table.data(me.DATA.applylist.reverse());
                me.ui_table.reloadDataWithScroll(true);
                me.setApplyNum();
                if(me.DATA.applylist.length == 0){
                    me.nodes.img_zwnr.show();
                    G.DATA.addfriend = false;
                    G.frame.friend.checkRedPoint();
                }else{
                    me.nodes.img_zwnr.hide();
                }
            });
        },
        bindBTN: function() {
            var me = this;
            me.nodes.btn_delall.click(function() {
                G.ajax.send('friend_refuse', [1], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.DATA.addfriend = false;
                        G.frame.friend.checkRedPoint();
                        me.refreshPanel();
                    }
                }, true);
            });

            me.ui.finds("Button_1").click(function () {
                if(me.DATA.applylist.length < 1) {
                    G.tip_NB.show(L("SQLBWK"));
                    return;
                }
                G.ajax.send("friend_yjagree", [], function (d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.DATA.addfriend = false;
                        G.frame.friend.checkRedPoint();
                        me.refreshPanel();
                    }
                })
            })
        },
        setApplyNum:function(){
            var me = this;
            me.nodes.txt_number.setString(me.DATA.applylist.length);
        },
        onOpen: function() {
            var me = this;

            me.bindBTN();
        },
        onShow: function() {
            var me = this;
            me.initScrollView();
            me.refreshPanel();
        },
        onRemove: function() {
            var me = this;

        },
        setContents: function() {
            var me = this;

        },
        initScrollView: function() {
            var me = this;
            cc.enableScrollBar(me.nodes.scrollview, false);
            me.nodes.scrollview.removeAllChildren();
            var table = new cc.myTableView({
                rownum: 1,
                type: 'fill',
                lineheight: me.nodes.list_lb.height + 10,
                paddingTop: 10
            });
            me.ui_table = table;
            table.setDelegate(this);
            me.ui_table.data([]);
            table.bindScrollView(me.nodes.scrollview);
            me.ui_table.reloadDataWithScroll(true);
        },
        setItem: function(ui, data) {
            var me = this;
            X.autoInitUI(ui)
            var head = G.class.shead(data);
            head.setAnchorPoint(0, 0);
            ui.nodes.panel_tx.addChild(head);
            head.data = data;
            ui.nodes.btn_accept.data = data;
            ui.nodes.btn_refuse.data = data;
            head.setTouchEnabled(true);
            head.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.wanjiaxinxi.data({
                        pvType: 'zypkjjc',
                        uid: sender.data.uid
                    }).checkShow();
                }
            });
            ui.nodes.txt_player_name.setString(data.name);
            ui.nodes.btn_accept.click(function(sender) {
                G.ajax.send('friend_agree', [sender.data.uid], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.tip_NB.show(L("TJCG"));
                        me.refreshPanel();
                        G.frame.friend._panels[1].refreshPanel();
                    }else {
                        me.refreshPanel();
                    }
                }, true);
            }, 1000);
            ui.nodes.btn_refuse.click(function(sender) {
                G.ajax.send('friend_refuse', [0, sender.data.uid], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.tip_NB.show(L("SCCG"));
                        me.refreshPanel();
                    }
                }, true);
            });
        },
        /**
         * 数据模板
         * @returns {*}
         */
        cellDataTemplate: function() {
            return this.nodes.list_lb.clone();
        },
        /**
         * 数据初始化
         * @param ui
         * @param data
         */
        cellDataInit: function(ui, data) {
            if (!data) {
                ui.hide();
                return;
            }
            this.setItem(ui, data);
            ui.show();
        },
        getData: function(callback, errCall) {
            var me = this;
            G.ajax.send('friend_applylist', [], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                } else {
                    errCall && errCall();
                }
            }, true);
        }
    });
})();
;;/**
 * Created by lsm on 2018/6/28.
 */
(function () {
    //伤害-排行榜
    var ID = 'friend_dps_phb';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
            me.nodes.text_zdjl.setString(L("DPSPHB"));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("rank_open", [6], function (d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1){
                    me.DATA = d.d;
                    callback && callback();
                }
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            new X.bView("ui_paihangbang.json", function (view) {
                me.view = view;
                me.nodes.panel_nr.addChild(view);
                me.view.nodes.panel_rank.height -= 103;
                cc.enableScrollBar(me.view.nodes.scrollview);
                cc.enableScrollBar(me.view.nodes.listview);
                ccui.helper.doLayout(me.view.nodes.panel_rank);
                X.viewCache.getView('ui_list3.json', function (node) {
                    me.list = node.nodes.list_rank;
                    me.getData(function () {
                        me.setContents();
                    });
                });
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var scrollview = me.view.nodes.scrollview;
            scrollview.removeAllChildren();
            var listview = me.view.nodes.listview;

            var data = me.DATA;
            me.setMyRank();
            if (data.ranklist.length < 1) {
                cc.isNode(me.view.nodes.img_zwnr) && me.view.nodes.img_zwnr.show();
                return;
            } else {
                cc.isNode(me.view.nodes.img_zwnr) && me.view.nodes.img_zwnr.hide();
            }
            // data.dps.sort(function(a,b){
            //     return a.dps > b.dps;
            // });
            me.maxDps = data.ranklist[0].dps;
            for (var i = 0; i < data.ranklist.length; i++) {
                data.ranklist[i].rank = i + 1;
            }

            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,10,10);
            table.setData(data.ranklist);
            table.reloadDataWithScroll(true);
            scrollview.getChildren()[0].getChildren()[0].x = -1;
        },
        setItem: function (ui, data) {
            var me = this;
            X.autoInitUI(ui);
            var layPh = ui.nodes.img_rank;
            var txtPh = ui.nodes.sz_phb;
            var layIco = ui.nodes.panel_tx;
            var txtName = ui.nodes.txt_name;
            var pre;
            layPh.hide();
            txtPh.setString('');
            layIco.removeAllChildren();
            if (data.rank < 0) {
                txtPh.setString(0);
            } else if (data.rank < 4) {
                layPh.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                layPh.show();
            } else {
                txtPh.setString(data.rank);
                txtPh.show();
            }

            var wid = G.class.shead(data.headdata);
            wid.data = data;
            wid.setTouchEnabled(true);
            wid.icon.setTouchEnabled(false);
            wid.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    G.frame.wanjiaxinxi.data({
                        pvType: 'zypkjjc',
                        uid: sender.data.headdata.uid
                    }).checkShow();
                }
            });
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);
            txtName.setString(data.headdata.name);

            if(data.dps == me.maxDps){
                pre = 100;
                ui.nodes.img_jdt.setPercent(pre);
                ui.nodes.txt_jdt.setString(data.dps);
            }else{
                pre = data.dps / me.maxDps * 100;
                ui.nodes.img_jdt.setPercent(pre.toFixed(2));
                ui.nodes.txt_jdt.setString(data.dps);
            }
            X.enableOutline(ui.nodes.txt_jdt, '#66370e', 1);

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            layPh.setTouchEnabled(false);
        },
        setMyRank: function () {
            var me = this;

            var rank = me.DATA.myrank;
            var list = me.view.nodes.panel_player;
            var txtPh = me.view.nodes.fnt_player;

            X.autoInitUI(list);
            if (rank < 0) {
                txtPh.setString("");
                me.view.finds('wsb_player').show();
            } else{
                txtPh.setString(rank);
            }
            list.finds('txt_level').setString(L("SH"));
            list.finds("txt_level_0").setString(me.DATA.dps);
            list.show();
        }
    });
    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by lsm on 2018-07-09
 */
(function() {
    //好友助阵
    var ID = 'friend_help';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        refreshPanel: function() {
            var me = this;
            me.getData(function() {
                me.setContents();
            });
        },
        bindUI: function() {
            var me = this;
            setPanelTitle(me.nodes.txt_title, L('DIREN'));

            me.nodes.mask.click(function() {
                me.remove();
            });
        },
        onOpen: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;
            me.bindUI();

            new X.bView('friend_tip2_battle.json', function(view) {
                me._view = view;
                me.ui.nodes.panel_nr.removeAllChildren();

                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
            });
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            me.cuiUid = me.data();
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        getData: function(callback, errCall) {
            var me = this;
            G.ajax.send('friend_treasureopen', [me.cuiUid], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                } else {
                    errCall && errCall();
                }
            }, true);
        },
        setContents: function() {
            var me = this;
            var panel = me._view;
            me.setBoss();
            panel.nodes.btn_battle.click(function(sender) {
                G.frame.fight.startFight({}, function(node) {
                    var selectedData = me.selectedData = node.getSelectedData();
                    Fight(me.cuiUid, selectedData);
                }, "hybs")
            });

            function Fight(uid, seleted) {
                G.ajax.send('friend_fight', [uid, seleted], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        if (d.d.fightres.winside == 0 && d.d.flop) {
                            G.frame.fight_win_friendboss.once('in_over', function () {
                                G.frame.fanpai.data(d.d.flop).show();
                            });
                        }else if(d.d.flop){
                            G.frame.fight_fail_friendboss.once('in_over', function () {
                                G.frame.fight_fail_friendboss.ui.nodes.panel_btn.hide();
                                G.frame.fanpai.data(d.d.flop).show();
                            });
                        }
                        X.cacheByUid('fight_hybs', seleted);
                        G.frame.fight.data({
                            pvType: 'pvfb',
                            prize: d.d.prize,
                            dps: d.d.dps,
                            jifen: d.d.jifen,
                            callback: function() {
                                G.frame.fight_fail_friendboss.ui.nodes.panel_btn.hide();
                                G.frame.friend.getData(function() {
                                    Fight(uid, seleted);
                                });
                            },
                            endcallback: function() {
                                G.frame.friend._panels[1].refreshPanel();
                                me.remove();
                            },
                        }).once('show', function() {
                            G.frame.yingxiong_fight.remove();
                        }).demo(d.d.fightres);
                    }else{
                        X.uiMana.closeAllFrame();
                    }
                }, true);
            }
        },
        setBoss: function() {
            var me = this;
            var data = me.DATA.bossdata;
            var panel = me._view;
            var head = G.class.shead(data.fightdata.headdata, false);
            head.setAnchorPoint(0.5, 0.5);
            head.setPosition(head.width / 2, head.height / 2);
            panel.nodes.ico_player.addChild(head);
            if (data.curhp == data.maxhp) {
                panel.nodes.img_jdt.setPercent(100);
                panel.nodes.time_jdt.setString('100%');
            } else {
                var per = data.curhp / data.maxhp * 100;
                panel.nodes.img_jdt.setPercent(per);
                panel.nodes.time_jdt.setString(per.toFixed(2) + '%');
            }
            G.frame.friend.getData(function() {
                panel.nodes.txt_number.setString(G.frame.friend.DATA.tiliinfo.num + '/' + 10);
                if (G.frame.friend.DATA.tiliinfo.num < 10) {
                    panel.nodes.txt_countdown.show();
                    me.tiemr = X.timeout(panel.nodes.txt_countdown, G.frame.friend.DATA.tiliinfo.freetime, function() {
                        G.frame.friend_help.isShow && me.refreshPanel();
                    }, null, null);
                } else {
                    if(me.tiemr) delete me.tiemr;
                    panel.nodes.txt_countdown.hide();
                }
            })


        },

        onRemove: function() {
            var me = this;
        },
    });

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by lsm on 2018/6/28.
 */
(function () {
    //积分-排行榜
    var ID = 'friend_jifen_phb';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
            me.nodes.text_zdjl.setString(L("JIFENPHB"));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("rank_open", [5], function (d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1){
                    me.DATA = d.d;
                    callback && callback();
                }
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            new X.bView("ui_paihangbang.json", function (view) {
                me.view = view;
                me.nodes.panel_nr.addChild(view);
                me.view.nodes.panel_rank.height -= 103;
                ccui.helper.doLayout(me.view.nodes.panel_rank);
                X.viewCache.getView('ui_list2.json', function (node) {
                    me.list = node.nodes.list_rank;
                    me.getData(function () {
                        me.setContents();
                    });
                });
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var scrollview = me.view.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            var listview = me.view.nodes.listview;
            cc.enableScrollBar(listview);
            scrollview.removeAllChildren();

            var data = me.DATA;
            me.setMyRank();
            if (data.ranklist.length < 1) {
                cc.isNode(me.view.nodes.img_zwnr) && me.view.nodes.img_zwnr.show();
                return;
            } else {
                cc.isNode(me.view.nodes.img_zwnr) && me.view.nodes.img_zwnr.hide();
            }
            for (var i = 0; i < data.ranklist.length; i++) {
                data.ranklist[i].rank = i + 1;
            }

            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,10,12);
            table.setData(data.ranklist);
            table.reloadDataWithScroll(true);
            scrollview.getChildren()[0].getChildren()[0].x = -1;
        },
        setItem: function (ui, data) {
            X.autoInitUI(ui);
            var layPh = ui.nodes.img_rank;
            var txtPh = ui.nodes.sz_phb;
            var layIco = ui.nodes.panel_tx;
            var txtName = ui.nodes.txt_name;
            var txtGuanqia = ui.nodes.txt_number;
            ui.nodes.txt_title.setString(L('jifenphb'));

            layPh.hide();
            txtPh.setString('');
            layIco.removeAllChildren();
            if (data.rank < 0) {
                txtPh.setString(0);
            } else if (data.rank < 4) {
                layPh.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                layPh.show();
            } else {
                txtPh.setString(data.rank);
                txtPh.show();
            }

            var wid = G.class.shead(data.headdata);
            wid.data = data;
            wid.setTouchEnabled(true);
            wid.icon.setTouchEnabled(false);
            wid.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    G.frame.wanjiaxinxi.data({
                        pvType: 'zypkjjc',
                        uid: sender.data.headdata.uid
                    }).checkShow(); 
                }
            });
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);

            txtName.setString(data.headdata.name);
            txtGuanqia.setString(data.jifen);

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            layPh.setTouchEnabled(false);
        },
        setMyRank: function () {
            var me = this;

            var rank = me.DATA.myrank.rank;
            var list = me.view.nodes.panel_player;
            var txtPh = me.view.nodes.fnt_player;
            X.autoInitUI(list);
            if (rank < 0) {
                txtPh.setString("");
                me.view.finds('wsb_player').show();
            } else{
                txtPh.setString(rank);
            }
            list.finds('txt_level').setString(L("JF"));
            list.finds("txt_level_0").setString(me.DATA.myrank.jifen);
            list.show();
        }
    });
    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by lsm on 2018/6/28.
 */
(function () {
    //积分-排行榜
    var ID = 'friend_jifen_pmjl';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
            me.nodes.text_zdjl.setString(L("jifenjiangli"));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            new X.bView("ui_paihangbang.json", function (view) {
                me.view = view;
                me.nodes.panel_nr.addChild(view);
                me.view.nodes.panel_rank.height -= 103;
                me.view.nodes.panel_refresh.hide();
                me.view.nodes.panel_player.hide();
                ccui.helper.doLayout(me.view.nodes.panel_rank);
                X.viewCache.getView('ui_list4.json', function (node) {
                    me.list = node.nodes.list_rank;
                    me.setContents();
                });
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var scrollview = me.view.nodes.scrollview;
            var listview = me.view.nodes.listview;
            var data = G.class.friend.getWeekprize();
            cc.enableScrollBar(scrollview);
            cc.enableScrollBar(listview);
            scrollview.removeAllChildren();
            // scrollview.y -= me.view.nodes.panel_player.height/2;
            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,10,10);
            table.setData(data.prize);
            table.reloadDataWithScroll(true);
            scrollview.getChildren()[0].getChildren()[0].x = -1;
            // me.view.nodes.panel_refresh.show();
            var zeroTime = X.getLastMondayZeroTime();
            X.timeout(me.view.nodes.txt_time,zeroTime + 7 * 24 * 60 * 60,null,null,null);
        },
        setItem: function (ui, data) {
            X.autoInitUI(ui);
            var layPh = ui.nodes.img_rank;
            var txtPh = ui.nodes.sz_phb;
            txtPh.removeAllChildren();
            layPh.removeAllChildren();
            var rank = data[0];
            if (rank[0] < 4) {
                layPh.setBackGroundImage('img/public/img_paihangbang_' + rank[0] + '.png', 1);
                layPh.show();
                txtPh.hide();
            }else if(rank[0] > 100){
                layPh.show();
                txtPh.hide();
                rank[0] == 101 && layPh.setBackGroundImage('img/public/img_paihangbang_4.png',1);
                rank[0] == 201 && layPh.setBackGroundImage('img/public/img_paihangbang_5.png',1);
                rank[0] == 501 && layPh.setBackGroundImage('img/public/img_paihangbang_6.png',1);
                rank[0] == 1001 && layPh.setBackGroundImage('img/public/img_paihangbang_7.png',1);
            } else {
                txtPh.setString(rank[0] + '-' +rank[1] );
                txtPh.show();
                layPh.hide();
            }
            ui.nodes.panel_item.setPositionX(520);
            X.alignItems(ui.nodes.panel_item,data[1],'left',{touch:true});
            ui.show();
        },
    });
    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by lsm on 2018/6/27
 */
(function() {
    //好友列表
    G.class.friend_list = X.bView.extend({
        ctor: function(type) {
            var me = this;
            G.frame.friend.list = me;
            me._type = type;
            me._super('friend_list.json');
        },
        refreshPanel: function() {
            var me = this;
            G.frame.friend.getData(function() {
                me.DATA = G.frame.friend.DATA;
                me.setContents();
            });
        },
        bindBTN: function() {
            var me = this;
            if(!me.nodes.btn_lazy.data) me.nodes.btn_lazy.data = [];
            me.nodes.btn_lazy.click(function() {
                if(me.DATA.friend.length < 1) {
                    G.tip_NB.show(L("ZW") + L("HY"))
                }
                X.audio.playEffect("sound/lingquaixin.mp3");
                G.ajax.send('friend_yijian', [], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        if(d.d.prize.length > 0 ){
                           G.tip_NB.show(X.createPrizeInfo(d.d.prize, 1, 1)); 
                        }
                        G.hongdian.getData("friend", 1, function () {
                            G.frame.friend.checkRedPoint();
                        });
                        me.refreshPanel();
                    }else {
                        G.tip_NB.show(L('heartError_' + d.d.act));
                    }
                }, true);
            })
        },
        onOpen: function() {
            var me = this;
            me.bindBTN();
            me.isNew = true;
        },
        onShow: function() {
            var me = this;
            me.refreshPanel();
            me.initScorllView();
        },
        onNodeShow: function() {
            var me = this;
            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        onRemove: function() {
            var me = this;

        },
        setContents: function() {
            var me = this;

            G.frame.friend.setFriendNum();
            me.setPanelUp();
        },
        setPanelUp: function() {
            var me = this;
            var data = me.DATA;
            var imprint = me.nodes.txt_sz1;
            var tili = me.nodes.txt_sz2;
            var friend = me.nodes.text_sj;
            me.boss = data.boss;
            imprint.setString(G.class.getOwnNum(2013,'item'));
            tili.setString(data.tiliinfo.num + '/' + 10);
            friend.setString(data.friend.length + "/" +G.class.friend.get().base.friendmaxnum);
            if(data.friend.length < 1){
                me.nodes.img_zwnr.show();
            }else{
                me.nodes.img_zwnr.hide();
            }
            me.ui_table.data(me.filterData(data.friend));
            me.ui_table.reloadDataWithScroll(me.isNew);
            me.isNew = false;
        },
        initScorllView: function(data) {
            var me = this;
            cc.enableScrollBar(me.nodes.scrollview, false);
            me.nodes.scrollview.removeAllChildren();
            var table = new cc.myTableView({
                rownum: 1,
                type: 'fill',
                lineheight: me.nodes.list_friend.height + 8,
                paddingTop: 10
            });
            me.ui_table = table;
            table.setDelegate(this);
            me.ui_table.data([]);
            table.bindScrollView(me.nodes.scrollview);
            me.ui_table.reloadDataWithScroll(false);
            G.table = table;
        },
        filterData:function(data){
            var me = this;
            var d = data;
            d.sort(function(a,b){
                if(!X.inArray(me.boss,a.headdata.uid) && !X.inArray(me.boss,b.headdata.uid)){
                    return a.lasttime < b.lasttime
                }else if(X.inArray(me.boss,b.headdata.uid)){
                    return 1
                }else if(X.inArray(me.boss,a.headdata.uid)){
                    return 0
                }
            });
            return d;
        },
        setItem: function(ui, data) {
            var me = this;
            X.autoInitUI(ui);
            var tx = ui.nodes.panel_tx;
            var name = ui.nodes.txt_player_name;
            var time = ui.nodes.txt_player_time;
            var boss = ui.nodes.btn_boss;
            var pk = ui.nodes.btn_pk;
            var send = ui.nodes.btn_send;
            var receive = ui.nodes.btn_receive;
            var uid = data.headdata.uid;
            var head = G.class.shead(data.headdata, false);
            // head.setAnchorPoint(0, 0);
            head.setPosition(cc.p(tx.width / 2,tx.height / 2));
            tx.removeAllChildren();
            tx.addChild(head);
            name.setString(data.headdata.name);
            
            var interval = 60;
            if (data.lasttime + interval > G.time) {
                time.setString(L('ZAIXIAN'));
            } else {
                time.setString(X.moment(data.lasttime - G.time));
            }
            // time.setString(X.moment(-(G.time - data.lasttime)));

            send.uid = uid;
            receive.uid = uid;
            head.data = data;
            pk.data = data;
            boss.uid = uid;
            head.setTouchEnabled(true);
            head.icon.setTouchEnabled(false);
            head.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    G.frame.wanjiaxinxi.data({
                        pvType: 'zypkjjc',
                        uid: sender.data.headdata.uid
                    }).checkShow();
                }
            });
            //助战
            if (X.inArray(me.DATA.boss, uid)) {
                boss.hide();
            } else {
                boss.hide();
            }
            //赠送
            if (X.inArray(me.DATA.gift, uid)) {
                send.setBright(false);
                send.setTouchEnabled(false);
            } else {
                send.setBright(true);
                send.setTouchEnabled(true);
            }
            //领取
            if (X.inArray(me.DATA.accept, uid)) {
                while (receive.getChildByTag(889977)) {
                    receive.getChildByTag(889977).removeFromParent();
                }
                if (X.inArray(me.DATA.received, uid)) {
                    receive.setBright(false);
                    receive.setTouchEnabled(false);
                } else {
                    receive.setTouchEnabled(true);
                    G.class.ani.show({
                        json: 'ani_haoyouyouqingdian',
                        addTo:receive,
                        y: receive.height/2 + 3,
                        repeat:true,
                        autoRemove:false,
                        onload: function (node, action) {
                            node.setTag(889977);
                        }
                    });
                }
                receive.show();
            } else {
                receive.hide();
            }

            boss.click(function(sender) {
                G.frame.friend_help.data(sender.uid).show();
            });
            pk.click(function(sender) {
                G.frame.fight.startFight({}, function(node) {
                    var selectedData = node.getSelectedData();
                    G.ajax.send('friend_discuss', [sender.data.headdata.uid, selectedData], function(d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            X.cacheByUid('fight_hypk', selectedData);
                            G.frame.fight.data({
                                    pvType: 'pvfriend',
                                    prize: d.d.prize
                                }).once('show', function() {
                                    G.frame.yingxiong_fight.remove();

                                }).demo(d.d.fightres);
                            }
                    }, true);
                }, "hypk");
            });
            send.click(function(sender) {
                G.ajax.send('friend_gift', [sender.uid], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.tip_NB.show(L('sendsuccess'));
                        me.refreshPanel();
                    }
                }, true);
            });
            receive.click(function(sender) {
                G.ajax.send('friend_accept', [sender.uid], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.tip_NB.show(X.createPrizeInfo(d.d.prize, 1, 1));
                        me.refreshPanel();
                        G.hongdian.getData("friend", 1, function () {
                            G.frame.friend.checkRedPoint();
                        })
                    }
                }, true);
            });
        },
        cellDataTemplate: function() {
            return this.nodes.list_friend.clone();
        },
        /**
         * 数据初始化
         * @param ui
         * @param data
         */
        cellDataInit: function(ui, data) {
            if (!data) {
                ui.hide();
                return;
            }
            this.setItem(ui, data);
            ui.show();
        }
    });
})();
;;/**
 * Creat
ed by lsm on 2018/6/27
 */
(function() {
    //好友查找
    G.class.friend_search = X.bView.extend({
        ctor: function(type) {
            var me = this;
            me._type = type;
            G.frame.friend.cz = me;
            me._super('friend_search.json');
        },
        refreshPanel: function(isref) {
            var me = this;
        },
        initUi: function() {
            var me = this;
            var btns = [me.nodes.btn_search, me.nodes.btn_blacklist]
            me.sendList = [];
            X.radio(btns, function(sender) {
                var name = sender.getName();
                var name2type = {
                    btn_search$: 1,
                    btn_blacklist$: 2,
                };
                me.changeType(name2type[name]);
            }, {
                color: ['#E8FDFF', '#edbb82']
            });
        },
        bindBTN: function() {
            var me = this;

            function f(sender, time) {
                sender.setTouchEnabled(false);
                sender.setBright(false);
                me.nodes.txt_djs.setString(time + "s");
                me.nodes.txt_djs.setTextColor(cc.color(G.gc.COLOR.n15));
                me.ui.setTimeout(function () {
                    time --;
                    sender.setTouchEnabled(true);
                    sender.setBright(true);
                    if(time <= 0) {
                        me.nodes.txt_djs.setString("");
                        me.ui.setTimeout(function () {
                            delete me.isRefres;
                        }, 200);
                        return;
                    }else {
                        f(sender, time);
                    }
                }, 1000);
            }


            me.nodes.btn_refresh.click(function(sender) {
                if(!me.isRefres) {
                    me.isRefres = true;
                    me.getTuijian(1, function() {
                        for (var i in me.nodes.listview[i]) {
                            var chr = me.nodes.listview.children[i];
                            G.class.ani.show({
                                json: "ani_qicailiuguang",
                                addTo: chr,
                                x: chr.width/2,
                                y: chr.height/2,
                                repeat: false,
                                autoRemove: true,
                                onload : function (node) {
                                    node.setScaleX(1.25);
                                }
                            });
                        }
                        me.ui.setTimeout(function () {
                            me.setTuijian();
                        });
                    });
                    f(sender, 3);
                }
            });
            me.nodes.btn_search2.click(function() {
                var text = me.nodes.txt_input.getString()
                if (text.trim().length == 0) {
                    G.tip_NB.show(L('SRFRIEND'));
                    return;
                }
                text = text.substr(0, 40);
                if (text.length > 6) {
                    G.tip_NB.show(L('TEXT_ALERT'));
                    return;
                }
                G.ajax.send('friend_find', [text], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.ajax.send('friend_apply', [d.d.headdata.uid], function(d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                G.tip_NB.show(L('applyChengong'));
                                me.nodes.txt_input.setString('');
                            }
                        })
                    }
                })
            })
        },
        onOpen: function() {
            var me = this;
            me.initUi();
            me.bindBTN();
            me.initScrollView();
        },
        onShow: function() {
            var me = this;

            me.nodes.btn_search.triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        changeType: function(type) {
            var me = this;
            if (me.curType && me.curType == type) {
                return;
            }
            me.curType = type;
            if (type == 1) {
                me.nodes.panel_content.show();
                me.nodes.panel_content1.hide();
                me.showTuijian();
                X.editbox.create(me.nodes.txt_input);
            } else {
                me.showBlackList();
                me.nodes.panel_content1.show();
                me.nodes.panel_content.hide();
            }
        },
        onRemove: function() {
            var me = this;
            if (me.isrefres) G.ajax.send('friend_tuijian', [1]);
        },
        initScrollView: function() {
            var me = this;
            cc.enableScrollBar(me.nodes.scrollview1, false);
            me.nodes.scrollview1.removeAllChildren();
            var table = new cc.myTableView({
                rownum: 1,
                type: 'fill',
                lineheight: me.nodes.list_friend1.height + 10,
                paddingTop: 12
            });
            me.ui_table = table;
            table.setDelegate(this);
            me.ui_table.data([]);
            table.bindScrollView(me.nodes.scrollview1);
            me.ui_table.reloadDataWithScroll(true);

        },
        /**
         * 数据模板
         * @returns {*}
         */
        cellDataTemplate: function() {
            return this.nodes.list_friend1.clone();
        },
        /**
         * 数据初始化
         * @param ui
         * @param data
         */
        cellDataInit: function(ui, data) {
            if (!data) {
                ui.hide();
                return;
            }
            this.setItem(ui, data);
            ui.show();
        },
        setItem: function(ui, data) {
            var me = this;
            X.autoInitUI(ui);
            var d = data;
            var head = G.class.shead(d);
            // head.setAnchorPoint(0, 0);
            head.setPosition(cc.p(ui.nodes.panel_tx1.width / 2, ui.nodes.panel_tx1.height / 2));
            ui.nodes.panel_tx1.addChild(head);
            head.data = d;
            head.setTouchEnabled(true);
            head.icon.setTouchEnabled(false);
            head.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.wanjiaxinxi.data({
                        pvType: 'zypkjjc',
                        uid: sender.data.uid
                    }).checkShow();
                }
            });
            ui.nodes.txt_player_name1.setString(d.name);
            ui.nodes.btn_remove1.uid = d.uid;
            ui.nodes.btn_remove1.show();
            ui.nodes.btn_remove1.click(function(sender) {
                G.ajax.send('friend_shield', [sender.uid,1], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        me.showBlackList();
                        G.tip_NB.show(L('shieldsuccess'));
                    }
                }, true);
            })
        },
        showTuijian: function() {
            var me = this;
            if (!me.tuijian) {
                me.getTuijian(0, function() {
                    me.setTuijian();
                })
            }
        },
        showBlackList: function() {
            var me = this;
            me.getBlackList(function() {
                me.ui_table.data(me.blacklist.blacklist);
                me.ui_table.reloadDataWithScroll(true);
                me.ui_table.scrollToCell(0);
            })
        },
        setTuijian: function(guang) {
            var me = this;
            var data = me.tuijian.userlist;
            var listview = me.nodes.listview;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();
            for (var i in data) {
                var d = data[i];
                if (X.inArray(me.sendList, d.headdata.uid)) continue;
                var list = me.nodes.list_friend.clone();
                X.autoInitUI(list);
                var head = G.class.shead(d.headdata);
                head.setAnchorPoint(0, 0);
                list.nodes.panel_tx.addChild(head);
                head.data = d;
                head.setTouchEnabled(true);
                head.icon.setTouchEnabled(false);
                head.touch(function(sender, type) {
                    if (type == ccui.Widget.TOUCH_ENDED) {
                        G.frame.wanjiaxinxi.data({
                            pvType: 'zypkjjc',
                            uid: sender.data.headdata.uid
                        }).checkShow();
                    }
                });
                if (data.lasttime + 60 > G.time) {
                    list.nodes.txt_player_time.setString(L('ZAIXIAN'));
                } else {
                    list.nodes.txt_player_time.setString(X.moment(data.lasttime - G.time));
                }
                list.nodes.txt_player_name.setString(d.headdata.name);
                if (d.guildname != '') {
                    list.nodes.txt_player_name.setString(d.headdata.name + '(' + d.guildname + ')');
                } else {
                    list.nodes.txt_player_name.setString(d.headdata.name);
                }
                list.nodes.text_zdl2.setString(d.zhanli);
                list.nodes.btn_apply.uid = d.headdata.uid;
                list.nodes.btn_apply.touch(function(sender, type) {
                    if (type == ccui.Widget.TOUCH_NOMOVE) {
                        G.ajax.send('friend_apply', [sender.uid], function(d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                G.tip_NB.show(L('applyChengong'));
                                me.isrefres = 1;
                                me.sendList.push(sender.uid);
                                me.setTuijian(true);
                            }
                        }, true);
                    }
                });
                list.nodes.img_dk.setColor(cc.color('#EDE4D0'));
                list.show();
                listview.pushBackCustomItem(list);
            }
            me.ui.setTimeout(function () {
                listview.jumpToTop();
            },5)
        },
        getTuijian: function(isref, callback) {
            var me = this;
            G.ajax.send('friend_tuijian', [isref], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.tuijian = d.d;
                    callback && callback();
                }
            }, true);
        },
        getBlackList: function(callback) {
            var me = this;
            G.ajax.send('friend_blacklist', [], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.blacklist = d.d;
                    callback && callback();
                }
            }, true);
        }
    });
})();
;;/**
 * Created by lsm on 2018/6/27
 */
(function() {
    //好友探宝
    G.class.friend_treasure = X.bView.extend({
        ctor: function(type) {
            var me = this;
            me._type = type;
            me._super('friend_assist.json');
        },
        refreshPanel: function(first) {
            var me = this;
            me.getData(function() {
                me.setContents();
            });
            if(me.curType == 1 && !first) {
                me.ui.setTimeout(function () {
                    me.getRankData(function () {
                        me.nodes.listview1.removeAllChildren();
                        me.nodes.listview2.removeAllChildren();
                        me.setRank();
                    })
                }, 4000);
            }
        },
        bindBTN: function() {
            var me = this;
            me.nodes.btn_search.click(function() {
                if(P.gud.lv < G.class.opencond.getLvById("friendhelp")) {
                    G.tip_NB.show(X.STR(L("XJKQ"), G.class.opencond.getLvById("friendhelp")));
                    return;
                }
                G.ajax.send('friend_treasure', [], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.removeNewIco(me.nodes.btn_search);
                        G.class.ani.show({
                            json: "ani_haoyouboss",
                            addTo: me.nodes.panel_searching,
                            x: me.nodes.panel_searching.width / 2,
                            y: me.nodes.panel_searching.height / 2,
                            repeat: false,
                            autoRemove: true,
                            onend: function () {
                                if (d.d.treasure && d.d.treasure.prize && d.d.treasure.prize.length > 0) {
                                    G.frame.jiangli.data({
                                        prize: [].concat(d.d.treasure.prize)
                                    }).show();
                                }
                                me.refreshPanel();
                                G.hongdian.getData("treature", 1, function () {
                                    G.frame.friend.checkRedPoint();
                                })
                            }
                        })
                    }
                }, true);
            });

            me.nodes.btn_battle.click(function(sender) {
                G.frame.fight.startFight({}, function(node) {
                    var selectedData = me.selectedData = node.getSelectedData();
                    G.ajax.send('friend_fight', [P.gud.uid, selectedData], function(d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            me.refreshPanel();
                            if (d.d.fightres.winside == 0) {
                                G.frame.fight_win_friendboss.once('in_over', function () {
                                    G.frame.fanpai.data(d.d.flop).show();
                                });
                            }else {
                                G.frame.fight_fail_friendboss.once('in_over', function () {
                                    G.frame.fanpai.data(d.d.flop).show();
                                });
                            }
                            X.cacheByUid('fight_hybs', selectedData);
                            G.frame.fight.data({
                                pvType: 'hybs',
                                pvid: me.DATA.bossdata.fightmap,
                                prize: d.d.prize,
                                dps: d.d.dps,
                                jifen: d.d.jifen,
                                callback: function() {
                                    me.nextFight();
                                },
                                endcallback: function() {

                                }
                            }).once('show', function() {
                                G.frame.yingxiong_fight.remove();
                            }).demo(d.d.fightres);
                        }else{
                            X.uiMana.closeAllFrame();
                        }
                    }, true);
                }, "hybs")
            });

            // me.nodes.btn_rank.click(function() {
            //     G.frame.friend_jifen_phb.show();
            // });
            //
            // me.nodes.btn_reward.click(function() {
            //     G.frame.friend_jifen_pmjl.show();
            // });

            X.radio([me.nodes.btn_rank, me.nodes.btn_reward], function (sender) {
                var name = sender.getName();
                var name2type = {
                    btn_rank$: 1,
                    btn_reward$: 2
                };
                me.changeType(name2type[name]);
            });

            me.nodes.btn_damage_rank.click(function() {
                G.frame.friend_dps_phb.show();
            });

            me.ui.finds('btn_info').touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.help.data({
                        intr:L('TS13')
                    }).show();
                }
            });
        },
        changeType: function(type) {
            var me = this;

            if(me.curType && me.curType == type) return;

            me.curType = type;

            me.nodes.listview1.removeAllChildren();
            me.nodes.listview2.removeAllChildren();
            me.nodes.listview1.setTouchEnabled(false);
            me.nodes.listview2.setTouchEnabled(false);

            if(type == 1) {
                me.nodes.listview1.setTouchEnabled(true);
                me.getRankData(function () {
                    me.setRank();
                });
                me.nodes.panel_jifenph.show();
            } else {
                me.nodes.listview2.setTouchEnabled(true);
                me.setRankPrize();
                me.nodes.panel_jifenph.hide();
            }
        },
        setRank: function() {
            var me = this;

            function f(ui, data) {
                X.autoInitUI(ui);
                var layPh = ui.nodes.img_rank;
                var txtPh = ui.nodes.sz_phb;
                var layIco = ui.nodes.panel_tx;
                var txtName = ui.nodes.txt_name;
                var txtGuanqia = ui.nodes.txt_number;
                ui.nodes.txt_title.setString(L('jifenphb'));

                layPh.hide();
                txtPh.setString('');
                layIco.removeAllChildren();
                if (data.rank < 0) {
                    txtPh.setString(0);
                } else if (data.rank < 4) {
                    layPh.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                    layPh.show();
                } else {
                    txtPh.setString(data.rank);
                    txtPh.show();
                }

                var wid = G.class.shead(data.headdata);
                wid.data = data;
                wid.setTouchEnabled(true);
                wid.icon.setTouchEnabled(false);
                wid.touch(function(sender, type) {
                    if (type == ccui.Widget.TOUCH_NOMOVE) {
                        G.frame.wanjiaxinxi.data({
                            pvType: 'zypkjjc',
                            uid: sender.data.headdata.uid
                        }).checkShow();
                    }
                });
                wid.setScale(.9);
                wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
                layIco.addChild(wid);

                txtName.setString(data.headdata.name);
                txtGuanqia.setString(data.jifen);

                ui.setTouchEnabled(false);
                layIco.setTouchEnabled(false);
                layPh.setTouchEnabled(false);
                return ui;
            }

            if (me.rankData.myrank.rank < 0) {
                me.nodes.fnt_jifenph.setString("");
                me.ui.finds('wsb_jifenph').show();
            } else{
                me.nodes.fnt_jifenph.setString(me.rankData.myrank.rank);
                me.ui.finds('wsb_jifenph').hide();
            }

            me.ui.finds("txt_jifenph1").setString(me.rankData.myrank.jifen);

            if(me.rankData.ranklist.length < 1) {
                me.nodes.bg_zw.show();
                return;
            }else me.nodes.bg_zw.hide();

            me.maxDps = me.rankData.ranklist[0].dps;

            for (var i = 0; i < me.rankData.ranklist.length; i ++) {
                me.rankData.ranklist[i].rank = i + 1;
                me.nodes.listview1.pushBackCustomItem(f(me.list_1.clone(), me.rankData.ranklist[i]));
            }
            me.nodes.listview1.jumpToTop();
        },
        setRankPrize: function() {
            var me = this;
            var data = G.class.friend.getWeekprize().prize;

            function f(ui, data) {
                X.autoInitUI(ui);
                var layPh = ui.nodes.img_rank;
                var txtPh = ui.nodes.sz_phb;
                txtPh.removeAllChildren();
                layPh.removeAllChildren();
                var rank = data[0];
                if (rank[0] < 4) {
                    layPh.setBackGroundImage('img/public/img_paihangbang_' + rank[0] + '.png', 1);
                    layPh.show();
                    txtPh.hide();
                }else if(rank[0] > 100){
                    layPh.show();
                    txtPh.hide();
                    rank[0] == 101 && layPh.setBackGroundImage('img/public/img_paihangbang_4.png',1);
                    rank[0] == 201 && layPh.setBackGroundImage('img/public/img_paihangbang_5.png',1);
                    rank[0] == 501 && layPh.setBackGroundImage('img/public/img_paihangbang_6.png',1);
                    rank[0] == 1001 && layPh.setBackGroundImage('img/public/img_paihangbang_7.png',1);
                } else {
                    txtPh.setString(rank[0] + '-' +rank[1] );
                    txtPh.show();
                    layPh.hide();
                }
                ui.show();
                ui.nodes.panel_item.setPositionX(520);
                X.alignItems(ui.nodes.panel_item,data[1],'left',{touch:true});
                ui.show();

                return ui;
            }

            if(data.length < 1) {
                me.nodes.bg_zw.show();
                return;
            }else me.nodes.bg_zw.hide();

            for (var i = 0; i < data.length; i ++) {
                me.nodes.listview2.pushBackCustomItem(f(me.list_2.clone(), data[i]));
            }
            me.nodes.listview2.jumpToTop();
        },
        getRankData: function(callback) {
            var me = this;

            me.ajax("rank_open", [5], function (str, data) {
                if(data.s == 1) {
                    me.rankData = data.d;
                    callback && callback();
                }
            })
        },
        nextFight: function() {
            var me = this;
            G.frame.friend.getData(function() {
                G.ajax.send('friend_fight', [P.gud.uid, me.selectedData], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    cc.log('----------------->friend_fight',d.s);
                    if (d.s == 1) {
                        if (d.d.fightres.winside == 0) {
                            G.frame.fight_win_friendboss.once('in_over', function () {
                                G.frame.fanpai.data(d.d.flop).show();
                            });
                        }else{
                            G.frame.fight_fail_friendboss.once('in_over', function () {
                                G.frame.fanpai.data(d.d.flop).show();
                            });
                        }
                        X.cacheByUid('fight_hybs', me.selectedData);
                        G.frame.fight.data({
                            pvType: 'hybs',
                            pvid: me.DATA.bossdata.fightmap,
                            prize: d.d.prize,
                            dps: d.d.dps, 
                            jifen: d.d.jifen,
                            callback: function() {
                                me.nextFight();
                            },
                            endcallback: function() {
                                me.refreshPanel();
                            }
                        }).once('show', function() {
                            G.frame.yingxiong_fight.remove();
                        }).demo(d.d.fightres);
                        me.refreshPanel();
                    }else {
                        cc.log('----------------------->close');
                        X.uiMana.closeAllFrame();
                    }
                }, true);
            })
        },
        onOpen: function() {
            var me = this;
            
            X.viewCache.getView("ui_list5.json", function (list_1) {
                me.ui.addChild(list_1);
                list_1.hide();
                me.list_1 = list_1.nodes.list_rank;
                X.viewCache.getView("ui_list4.json", function (list_2) {
                    me.ui.addChild(list_2);
                    list_2.hide();
                    me.list_2 = list_2.nodes.list_rank;
                    me.bindBTN();
                    me.nodes.btn_rank.triggerTouch(ccui.Widget.TOUCH_ENDED);
                })
            });
            cc.enableScrollBar(me.nodes.listview1);
            cc.enableScrollBar(me.nodes.listview2);
            cc.enableScrollBar(me.nodes.scrollview);
            me.nodes.scrollview.hide();
            me.ui.finds("txt_level").setString(L("JF"));
        },
        onShow: function() {
            var me = this;

            me.refreshPanel(true);
            me.nodes.txt_search.y = 506;
            me.nodes.txt_search.x = 432;
            me.nodes.txt_next.hide();
            me.nodes.txt_time.setTextColor(cc.color("#ffd460"));
        },
        onRemove: function() {
            var me = this;

        },
        setContents: function() {
            var me = this;
            if (JSON.stringify(me.DATA.bossdata) != '{}') {
                me.showBoss();
            } else {
                if (G.time < me.DATA.freetime) {
                    X.timeout(me.nodes.txt_time, me.DATA.freetime, function() {
                        me.refreshPanel();
                    }, null,null);
                    G.removeNewIco(me.nodes.btn_search);
                    me.nodes.txt_search.show();
                    me.nodes.btn_search.setBright(false);
                    me.nodes.btn_search.setTouchEnabled(false);
                    me.nodes.btn_search.finds('img_zhuzhan').loadTexture('img/public/img_zhuzhan_h.png', 1);
                    me.nodes.btn_search.finds('txt_battle').setTextColor(cc.color(G.gc.COLOR.n15));
                } else {
                    G.setNewIcoImg(me.nodes.btn_search, .9);
                    me.nodes.btn_search.setBright(true);
                    me.nodes.btn_search.setTouchEnabled(true);
                    me.nodes.txt_search.hide();
                    me.nodes.btn_search.finds('img_zhuzhan').loadTexture('img/public/img_zhuzhan.png', 1);
                    me.nodes.btn_search.finds('txt_battle').setTextColor(cc.color(G.gc.COLOR.n12));
                }
                me.showTreasure();
            }
            // var txt_jl = me.nodes.panel_reward.finds('txt_reward');
            // txt_jl.setPositionY(65);

        },
        showTreasure: function() {
            var me = this;
            me.nodes.panel_searched.hide();
            me.nodes.panel_content.show();
            me.nodes.btn_search.show();
            me.nodes.btn_battle.hide();
            me.nodes.panel_reward.hide();
            me.nodes.panel_searching.show();
            me.ui.finds("bg_ditu").loadTexture("img/bg/bg_hydt.png");
            // me.nodes.panel_searching.removeAllChildren();
        },
        showBoss: function() {
            var me = this;
            me.nodes.panel_searching.hide();
            me.nodes.panel_searched.show();
            me.nodes.panel_content.show();
            me.nodes.btn_search.hide();
            me.nodes.btn_battle.show();
            me.nodes.panel_reward.show();
            me.setBoss();
        },
        setBoss: function() {
            var me = this;
            var data = me.DATA.bossdata;
            var head = G.class.shead(data.fightdata.headdata, false);
            head.setAnchorPoint(0, 0);
            head.setPositionX(-15);
            me.nodes.ico_player.addChild(head);
            me.nodes.ico_player.setPositionX(15);
            me.ui.finds("txt_name￥").setString(data.fightdata.headdata.name);
            if (data.curhp == data.maxhp) {
                me.nodes.panel_searched.finds("img_jdt$").setPercent(100);
                me.nodes.jdt_time.setString('100%');
            } else {
                var per = data.curhp / data.maxhp * 100;
                me.nodes.panel_searched.finds("img_jdt$").setPercent(per);
                me.nodes.jdt_time.setString(per.toFixed(2) + '%');
            }
            G.frame.friend.getData(function() {
                me.nodes.panel_content.finds("txt_number$").setString(G.frame.friend.DATA.tiliinfo.num + '/' + 10);
                me.nodes.panel_content.finds("txt_number$").setPositionX(30);
            });

            me.nodes.panel_reward.show();
            var item = G.class.sitem(data.prize[0]);
            item.setAnchorPoint(0, 0);
            item.setScale(.8);
            me.nodes.ico_item.addChild(item);
        },
        getData: function(callback, errCall) {
            var me = this;
            G.ajax.send('friend_treasureopen', [P.gud.uid], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                } else {
                    errCall && errCall();
                }
            }, true);
        }
    });
})();
;;/**
 * Created by liusimin on 2018-07-6
 */
(function () {
    //公告
    var ID = 'gonggao';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action:true});
        },

        getData : function (callback) {
            var me = this;

            if(!G.gonggaoUrl || G.gonggaoUrl=="")return;
            var url = G.gonggaoUrl+"&channel="+ (G.CHANNEL||"") +"&owner="+ (G.owner||"") +"&gamename="+ (G.gameName||"") + "&channelid="+ (G.channelId||"");
            X.ajax.get(url,{},function(txt) {
                var d = X.toJSON(txt);
                me.DATA = d;
                callback && callback(d);
            });

            // if (me.DATA) {
            //     callback && callback.call(me);
            //     return;
            // }
            // G.ajax.send('gonggao_getlist',null,function(data){
            //     data = X.toJSON(data);
            //     if (data.s == 1) {
            //         me.DATA = data.d;
            //         // me.DATA =  [{title:'测试',stype:'1',content:'暂无公告暂无公告暂无公告暂无公告暂无公告暂无公告暂无公告暂无公告暂无公告暂无公告暂无公告暂无公告'},{title:'测试',stype:'1',content:'暂无公告'},{title:'测试',stype:'1',content:'暂无公告'},{title:'测试',stype:'1',content:'暂无公告'}];
            //         callback && callback.call(me);
            //     }
            // },true);
        },

        setContents: function () {
            var me = this;
            var listview = me.nodes.listview;
            me.btns = [];
            var list = me.nodes.list;
            me.posy = 0;
            if(me.DATA.length < 1) {
                if(cc.isNode(me.ui.finds("zwnr"))) {
                    me.ui.finds("zwnr").show();
                }
                return;
            }else{
                if(cc.isNode(me.ui.finds("zwnr"))) {
                    me.ui.finds("zwnr").hide();
                }
            }
            for(var i in me.DATA){
                var item = list.clone();
                item.idx = i;
                me.setItem(item);
                listview.pushBackCustomItem(item);
                item.show();
            }
            me.btns[0].triggerTouch(ccui.Widget.TOUCH_NOMOVE);
        },


        // setItem: function (item) {
        //     var me = this;
        //     X.autoInitUI(item);
        //     me.setItemContent(item);
        //     item.isExt = true;
        //     me.defBtnPos = item.nodes.btn_list.getPosition();
        //     me.defInfoPos = item.nodes.panel_info.getPosition();
        //     item.setContentSize(item.width,item.height + me.richHeight);
        //     item.nodes.btn_list.setPositionY(item.height);
        //     item.nodes.panel_info.setPositionY(item.height - item.nodes.btn_list.height + 10);
        //     item.nodes.btn_list.setTouchEnabled(true);
        //     item.nodes.btn_list.setSwallowTouches(false);
        //     item.nodes.btn_list.touch(function (sender, type) {
        //         if (type == ccui.Widget.TOUCH_NOMOVE){
        //             var item = this;
        //             item.isExt = !item.isExt;
        //             if (item.isExt) {
        //                 me.showContent(item);
        //             }else{
        //                 me.hideContent(item,true);
        //             }
        //         }
        //     },item);
        // },
        setItem: function (item) {
            var me = this;
            X.autoInitUI(item);
            // me.setItemContent(item);
            var idx = item.idx;
            var data = me.DATA[idx];
            me.defBtnPos = item.nodes.btn_list.getPosition();
            me.defInfoPos = item.nodes.panel_info.getPosition();
            item.nodes.txt_title.setString(data.title);
            X.enableOutline(item.nodes.txt_title,'#7b531a',2);
            item.nodes.btn_list.setPositionY(item.height);
            item.nodes.btn_list.setTouchEnabled(true);
            item.nodes.btn_list.setSwallowTouches(false);
            item.isExt = false;
            item.nodes.img_arrow_off.show();
            me.btns.push(item.nodes.btn_list);
            item.nodes.btn_list.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE){
                    var item = sender.parent;
                    for (var i = me.btns.length - 1; i >= 0; i--) {
                        if(me.btns[i].parent.isExt && me.btns[i].parent != item){
                            me.btns[i].parent.isExt = !me.btns[i].parent.isExt;
                            if (me.btns[i].parent.isExt) {
                                me.showContent(me.btns[i].parent);
                            }else{
                                me.hideContent(me.btns[i].parent,true);
                            }
                            // me.hideContent(me.btns[i].parent,true);
                            // return;
                        }
                    }
                    item.isExt = !item.isExt;
                    if (item.isExt) {
                        me.showContent(item);
                    }else{
                        me.hideContent(item,true);
                    }
                }
            });
        },
        showContent: function (item) {
            var me = this;
            var idx = item.idx;
            X.autoInitUI(item);
            me.setItemContent(item);
            // item.nodes.btn_list.setPositionY(me.richHeight - 68 - 12);
            item.setContentSize(item.width,item.height + me.richHeight);
            item.nodes.btn_list.setPositionY(item.height);
            item.nodes.panel_info.setPositionY(item.height - item.nodes.btn_list.height + 10);
            me.updateListViewSize(me.richHeight,idx);
        },
        setItemContent:function(item){
            var me = this;
            var idx = item.idx;
            var data = me.DATA[idx];
            var rt =new X.bRichText({
                size: 22,
                maxWidth:item.nodes.btn_list.width - 30,
                lineHeight:36,
                color:'#804326',
                family: G.defaultFNT
            });
            rt.text(data.content);
            rt.setAnchorPoint(0,0);

            me.richHeight = rt.trueHeight() + 30;
            me.defWidth =  item.nodes.btn_list.width;
            rt.setPosition(14,me.richHeight * 0.6);
            item.nodes.panel_info.removeAllChildren();
            item.nodes.panel_info.addChild(rt);
            item.nodes.panel_info.setContentSize(cc.size(me.defWidth - 10, me.richHeight));
            item.nodes.panel_info.setBackGroundImage('img/public/bg_xinxi12.png',1);
            rt.setPosition(7,(item.nodes.panel_info.height - rt.trueHeight()) / 2);
            item.nodes.img_arrow_on.show();
            item.nodes.img_arrow_off.hide();
            item.nodes.txt_title.setString(data.title);
            item.nodes.txt_title.setFontName(G.defaultFNT);
            X.enableOutline(item.nodes.txt_title,'#7b531a',2);
        },
        hideContent: function (item,isUpdate) {
            var me = this;
            var idx = item.idx;
            var h = item.height;
            item.nodes.img_arrow_on.hide();
            item.nodes.img_arrow_off.show();
            item.nodes.panel_info.removeAllChildren();
            item.nodes.btn_list.setPosition(me.defBtnPos);
            item.nodes.panel_info.setPosition(me.defInfoPos);
            item.nodes.panel_info.setContentSize(item.nodes.btn_list.width,0);
            item.nodes.panel_info.removeBackGroundImage();
            item.setContentSize(item.nodes.btn_list.getContentSize());
            if (isUpdate) {
                me.updateListViewSize(-h, idx);
            }
        },
        updateListViewSize: function (h, startIdx) {
            var me = this;
            var listView = me.nodes.listview;
            var y = listView.getInnerContainer().y;
            var children = listView.getChildren();
            var allH = 0;
            for (var i = 0; i < children.length; i++){
                var child = children[i];
                allH += child.height;
            }
            var size = listView.getInnerContainerSize();
            if (allH < listView.getContentSize().height){
                listView.setInnerContainerSize(listView.getContentSize());
                //listView.getInnerContainer().setPositionY(0);
                var ah = 0;
                for (var i = 0; i < children.length; i++){
                    var child = children[i];
                    child.setPositionY(listView.getContentSize().height - ah);
                    ah += child.height;
                }

                me.ui.setTimeout(function () {
                    // listView.scrollToTop(0.1,true);
                },0,0,0.01);
            }else{
                size.height = allH;
                listView.setInnerContainerSize(size);
                y -= h;
                //listView.getInnerContainer().setPositionY(y > 0 ? 0 : y);
                var ah = 0;
                for (var i = startIdx; i > -1; i--){
                    var child = children[i];
                    child.setPositionY(child.y + h);
                }

                me.ui.setTimeout(function () {
                    if (y >= 0) {
                        // listView.scrollToBottom(0.1, true);
                    }else{
                        var minY = listView.getContentSize().height - listView.getInnerContainerSize().height;
                        var per = (y - minY)/-minY;
                        // listView.scrollToPercentVertical(per,0.1,true);
                    }
                },0,0,0.01);
            }
        },

        bindUI: function () {
            var me = this;

        },
        
        bindBtn: function () {
            var me = this;
            me.nodes.btn_gonggao_qr.click(function () {
                me.data().okCall();
            });
        },

        onOpen: function () {
            var me = this;
            cc.enableScrollBar(me.nodes.listview);
            me.bindBtn();
        },

        onAniShow:function() {
            var me = this;
        },

        show : function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },

        onShow: function () {
            var me = this;
            me.setContents();
            cc.isNode(G.frame.login.zhezhao) && G.frame.login.zhezhao.removeFromParent();
        },

        checkShow: function (callback) {
            var me = this;
            if(G.__quanfugonggaoShowed){
                return;
            }
            me.getData(function () {
                if (G.frame.login.isShow && me.DATA.length>0) {
                    G.__quanfugonggaoShowed = true;
                    me.show();
                }
                else{
                    callback && callback();
                }
            });
        },
        onRemove: function () {
            var me = this;
        }
    });

    G.frame[ID] = new fun('gonggao.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/18.
 */
(function () {
    //公会-宝箱
    var ID = 'gonghui_box';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
            me.preLoadRes = ["gonghui1.png", "gonghui1.plist"]
        },
        initUi: function () {
            var me = this;

            me.nodes.tip_title.setString(L("GHBK"));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("gonghui_baokuopen", [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if(d.s == 1){
                    me.DATA = d.d;
                    if(me.DATA.buynum < 0) {
                        me.DATA.buynum = 0;
                    }
                    callback && callback();
                }
            })
        },
        show: function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me, arguments);
            })
        },
        onShow: function () {
            var me = this;

            new X.bView('gonghui_gubk.json', function (view) {
                me._view = view;
                me.ui.nodes.panel_nr.addChild(view);
                me._view.nodes.list.setTouchEnabled(false);
                me._view.nodes.panel_list.setTouchEnabled(false);
                me._view.nodes.panel_list.finds("img_shelf").setTouchEnabled(false);
                me._view.nodes.panel_1.setTouchEnabled(false);
                me._view.nodes.panel_2.setTouchEnabled(false);
                me._view.nodes.panel_3.setTouchEnabled(false);
                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setTop();
            me.setBottom();
            me.setBoxNum();
        },
        setBoxNum: function() {
            var me = this;
            var text = me._view.finds("txt_geshu");

            var str = X.STR(L("GHBXSY"), me.DATA.buynum);
            var rh = new X.bRichText({
                size: 18,
                maxWidth: text.width,
                lineHeight: 32,
                color: "#ffffff",
                family: G.defaultFNT
            });
            rh.text(str);
            rh.setAnchorPoint(0.5, 0.5);
            rh.setPosition(text.width / 2, text.height / 2);
            text.removeAllChildren();
            text.addChild(rh);

            me._view.nodes.btn_vip.setTouchEnabled(me.DATA.buynum ? true : false);
            me._view.nodes.btn_vip.setBright(me.DATA.buynum ? true : false);

            G.hongdian.getData("gonghui", 1, function() {
                G.frame.gonghui_main.checkRedPoint();
            });
        },
        setTop: function () {
            var me = this;
            var arr = [];
            // var box = G.class.sitem({a: "item", t: "box"});
            // arr.push(box);

            X.alignItems(me._view.nodes.listv1, [{ a: "item", t: "box" }],'left', {
                scale: .7,
                touch:true,
                callback: function (node) {
                    var box = G.class.sitem({ a: "item", t: "box" });
                    node.data = box.data;
                    node.children[0].icon.setTouchEnabled(true);
                    node.children[0].icon.setSwallowTouches(false);
                    node.click(function () {
                        G.frame.iteminfo.showItemInfo(box);
                    })
                }
            });
            X.alignCenter(me._view.nodes.listv, G.class.gonghui.get().base.boxbuyprize, {
                touch: true,
                scale: .7
            });

            me._view.nodes.btn_bz.click(function () {
                G.frame.help.data({
                    intr:L("TS17")
                }).show();
            });
            
            me._view.nodes.btn_vip.click(function () {
                G.event.once('paysuccess', function() {
                    me.getData(function () {
                        me.setBoxNum();
                        me.setBottom();
                    })
                });
                G.event.emit('doSDKPay', {
                    pid: me.DATA.con.proid,
                    logicProid: me.DATA.con.proid,
                    money: me.DATA.con.unitPrice,
                });
            }, 3000)
        },
        setBottom: function () {
            var me = this;
            var arr = [];
            var data = me.DATA.boxdata;

            me.setData(data);

            me._view.nodes.listview.removeAllChildren();
            cc.enableScrollBar(me._view.nodes.listview);
            var data_length = 6;
            if(data.length < 6){
                data_length = 6;
            }else{
                data_length = data.length;
            }

            for (var i = 0; i < data_length; i++) {
                arr.push(me.setItem(me._view.nodes.panel_list.clone(), data[i], i < data.length ? false : true));
                if ((i + 1) % 3 == 0) {
                    var layout = me._view.nodes.list.clone();
                    me.addItem(layout, arr);
                    me._view.nodes.listview.pushBackCustomItem(layout);
                    arr = [];
                }
            }
            if(arr.length > 0) {
                var layout = me._view.nodes.list.clone();
                me.addItem(layout, arr);
                me._view.nodes.listview.pushBackCustomItem(layout);
            }
        },
        setItem: function(item, data, fake) {
            var me = this;
            var suo = item.finds("img_suo");
            var bg = item.finds("img_shelf");
            var name = item.finds("txt_name$");
            var box = item.finds("panel_treasure$");
            var time = item.finds("txt_shijian$");
            var light = item.finds("bg_hei");
            var img_wz = item.finds("img_ygq$");
            var state;

            light.hide();
            item.setAnchorPoint(0.5, 0.5);
            if (fake) {
                var bg = item.finds("img_shelf");
                var suo = item.finds("img_suo");
                var time = item.finds("txt_shijian$");
                item.setAnchorPoint(0.5, 0.5);
                bg.setBackGroundImage("img/gonghui/bg_baoxiang3.png", 1);
                time.setString(L("WJH"));
                bg.show();
                suo.show();
                return item;
            }

            suo.hide();
            if(!data) {
                suo.show();
                time.setString(L("BXW"));
                bg.setBackGroundImage("img/gonghui/bg_baoxiang3.png", 1);
                return item;
            }

            data.uidArr = [];

            for (var i = 0; i < data.reclist.length; i ++) {
                data.uidArr.push(data.reclist[i].uid);
            }

            name.setString(data.buyer.name);

            if(data.ctime + 24 * 3600 < G.time) {
                //已过期
                light.show();
                img_wz.show();
                img_wz.loadTexture("img/gonghui/img_ygq.png", 1);
                time.setString(L("BXYGQ"));
                // time.setTextColor(cc.color(G.gc.COLOR.n1));
                // X.enableOutline(time, '#9d3b10', 2);
                bg.setBackGroundImage("img/gonghui/bg_baoxiang3.png", 1);
            }else if(X.inArray(data.uidArr, P.gud.uid)) {
                //已领取
                state = "get";
                time.setString(L("YLQ"));
                light.show();
                img_wz.hide();
                time.setTextColor(cc.color(G.gc.COLOR.n1));
                X.enableOutline(time, '#008103', 2);
                bg.setBackGroundImage("img/gonghui/bg_baoxiang4.png", 1);
            }else if(!X.inArray(data.uidArr, P.gud.uid) && data.uidArr.length < 10) {
                //可领取
                state = "can";
                bg.setBackGroundImage("img/gonghui/bg_baoxiang.png", 1);
                X.timeout(time, data.ctime + 24 * 3600, function () {
                    me.setItem(item, data);
                })
            }else {
                //被领完
                state = "all";
                light.show();
                img_wz.show();
                img_wz.loadTexture("img/gonghui/img_yqw.png", 1);
                bg.setBackGroundImage("img/gonghui/bg_baoxiang2.png", 1);
                time.setString(L("YQW"));
                time.setTextColor(cc.color(G.gc.COLOR.n1));
                X.enableOutline(time, '#9d3b10', 2);
            }

            if(state == "can") {
                box.setBackGroundImage("img/gonghui/ico_gonghui_bx3.png", 1);
            }else {
                box.setBackGroundImage("img/gonghui/ico_gonghui_bx2.png", 1);
            }
            data.state = state;
            box.setTouchEnabled(true);
            box.click(function () {
                if(!state || state == "get") {
                    G.frame.gonghui_getinfo.data(data).show();
                }else {
                    G.frame.gonghui_openbox.data(data).show();
                }
            });
            return item;
        },
        setData: function (data) {

            for (var i = 0; i < data.length; i ++) {
                data[i].uidArr = [];
                for (var j = 0; j < data[i].reclist.length; j++) {
                    data[i].uidArr.push(data[i].reclist[j].uid);
                }
                if(data[i].uidArr.length < 10 && !X.inArray(data[i].uidArr, P.gud.uid) && (data[i].ctime + 24 * 3600 > G.time)) {
                    data[i].rank = 1;
                }else {
                    data[i].rank = 2;
                }
            }
            data.sort(function (a, b) {
                if(a.rank != b.rank) {
                    return a.rank < b.rank ? -1 : 1;
                }else {
                    return a.ctime > b.ctime ? -1 : 1;
                }
            })
        },
        addItem: function (target, arr) {
            for (var i = 0; i < arr.length; i ++) {
                arr[i].setPosition(target.children[i].width - target.children[i].width / 2, target.children[i].height / 2);
                target.children[i].addChild(arr[i]);
            }
        }
    });
    G.frame[ID] = new fun('ui_tip1.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/25.
 */
(function () {
    //公会-创建
    G.class.gonghui_create = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('gonghui_ghjl.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
        },
        bindBTN: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;

            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            //设置输入过高上移
            //X.editbox.create(me.nodes.text_ghnr);
            X.editbox.create(me.nodes.text_ghmc);

            me.nodes.text_ghmc.addEventListener(me.setName, me.nodes.text_ghmc);

            me.objData = {};
            X.render({
                panel_qz: function (node) {
                    var flagId = me.getRandFlag();

                    me.setFlag(flagId);
                },
                btn_xz: function (node) {
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.gonghui_selectflag.data({
                                flag:me.objData.flag,
                                callback: function (data) {
                                    me.setFlag(data);
                                }
                            }).show();
                        }
                    });
                },
                text_ghmc: function (node) {
                    // node.addEventListener(function (sender, type) {
                    //     if (type == ccui.TextField.EVENT_DETACH_WITH_IME) {
                    //         me.objData.ghname = sender.getString();
                    //     }
                    // },node);
                    node.setPlaceHolder(L('GONGHUI_NAME_INFO'));
                    node.setPlaceHolderColor(cc.color(G.gc.COLOR.n11));
                },
                text_ghnr: function (node) {
                    // node.addEventListener(function (sender, type) {
                    //     if (type == ccui.TextField.EVENT_DETACH_WITH_IME) {
                    //         me.objData.info = sender.getString();
                    //     }
                    // },node);
                    node.setTouchEnabled(false);
                    node.setPlaceHolder(L('GHMRNR'));
                    node.setPlaceHolderColor(cc.color(G.gc.COLOR.n11));
                },
                btn_jl: function (node) {
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            me.objData.info = me.nodes.text_ghnr.getString();
                            me.objData.ghname = me.nodes.text_ghmc.getString();

                            // cc.log('me.objData======', me.objData);
                            // return;


                            G.ajax.send('gonghui_create',[me.objData],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    G.tip_NB.show(L('CHUANGJIAN') + L('SUCCESS'));
                                    G.frame.gonghui_main.once('show', function () {
                                        if (me.isShow) {
                                            me.remove();
                                        }
                                    }).checkShow();
                                }
                            },true);
                        }
                    });
                },
                text_sl: function (node) {
                    var need = G.class.gonghui.get().base.createghneed;
                    var ownNum = G.class.getOwnNum(need[0].t,need[0].a);
                    setTextWithColor(node,need[0].n,G.gc.COLOR[ownNum >= need[0].n ? 'n1' : "n16"]);
                }
            },me.nodes);
        },
        getRandFlag: function () {
            var me = this;

            var conf = G.class.gonghui.get().base.flags;
            var keys = X.keysOfObject(conf);

            return X.arrayRand(keys);
        },
        setName: function(sender, type) {

            switch (type) {
                case ccui.TextField.EVENT_INSERT_TEXT:
                    if(sender.getString().length > 6) {
                        sender.setString(sender.getString().substring(0, 6));
                    }
                    break;
            }
        },
        setFlag: function (flagId) {
            var me = this;

            var node = me.nodes.panel_qz;
            node.removeBackGroundImage();

            var conf = G.class.gonghui.get().base.flags[flagId];
            node.setBackGroundImage('img/gonghui/' + conf.img,1);

            me.objData.flag = flagId;
        }
    });

})();
;;/**
 * Created by wfq on 2018/6/25.
 */
(function () {
    //大厅
    var ID = 'gonghui_dating';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            me.nodes.btn_gl.hide();

            var btnArr = [];
            var power = G.frame.gonghui_main.getMyPower();
            btnArr.push(me.nodes.btn_zy,me.nodes.btn_rz);
            if (power <= G.frame.gonghui_main.extConf.power.guanyuan) {
                btnArr.push(me.nodes.btn_gl);
                me.nodes.btn_gl.show();
            }

            me.nodes.btn_zy.setBright(false);
            me.nodes.txt_zy.setTextColor(cc.color('#fffbd8'));

            X.radio(btnArr, function (sender) {
                var name = sender.getName();

                var name2type = {
                    btn_zy$:'1',
                    btn_rz$:'2',
                    btn_gl$:'3'
                };

                me.changeType(name2type[name]);
            }, {
                color: ['#fffbd8', '#5b3110'],
                no_enableOutline: true,
            });

        },


        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            // me.nodes.btn_zy.triggerTouch(ccui.Widget.TOUCH_ENDED);
            me.changeType(1);
        },
        onHide: function () {
            var me = this;
            if(P.gud.ghid != ""){
                G.frame.gonghui_main.setDTdata();
            }
        },
        changeType: function (type) {
            var me = this;

            if (me.curType == type) return;

            me.curType = type;

            var viewConf = {
                "1": G.class.gonghui_dating_zy,
                "2": G.class.gonghui_dating_rz,
                "3": G.class.gonghui_dating_gl
            };
            me._panels = me._panels || {};
            for (var _type in me._panels) {
                cc.isNode(me._panels[_type]) && me._panels[_type].hide();
            }
            if (!cc.isNode(me._panels[type])) {
                me._panels[type] = new viewConf[type](type);
                me.ui.nodes.panel_nr.addChild(me._panels[type]);
            }
            me._panels[type].show();
        },
        setContents: function () {
            var me = this;


        },
        getMemberData: function (callback) {
            var me = this;

            G.ajax.send('gonghui_userlist',[],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            },true);
        }

    });

    G.frame[ID] = new fun('gonghui_tip1.json', ID);
})();

;;/**
 * Created by wfq on 2018/6/25.
 */
(function () {
    //公会-大厅-申请列表
    var ID = 'gonghui_dating_applylist';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            setPanelTitle(me.nodes.text_zdjl, L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('gonghui_sqlb.json', function (view) {
                me._view = view;

                me.needScroll = true;
                me.nodes.panel_nr.removeAllChildren();
                me.nodes.panel_nr.addChild(view);

                me.getData(function () {
                    me.setContents();
                });
            });
        },
        onHide: function () {
            var me = this;

            if (me.needRefresh && G.frame.gonghui_dating.isShow) {
                G.frame.gonghui_main.getData(function () {
                    G.frame.gonghui_dating.emit('updateInfo');
                });
            }
            
            G.hongdian.getData("gonghui", 1, function () {
                G.frame.gonghui_main.checkRedPoint();
                G.frame.gonghui_dating.zy.checkRedPoint();
            })
        },
        refreshData: function () {
            var me = this;

            me.needScroll = true;
            me.getData(function () {
                me.setContents();
            });
        },
        getData: function (callback) {
            var me = this;

            // me.DATA = {
            //     applylist:[
            //         {name:1,lv:1,head:P.gud.head,ctime:-1}
            //     ]
            // };
            // callback && callback();

            G.ajax.send('gonghui_applylist', [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;

            var panel = me._view;
            var scrollview = panel.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            var listview = panel.nodes.listview;
            cc.enableScrollBar(listview);
            scrollview.removeAllChildren();

            var data = me.DATA.applylist;

            if (data.length < 1) {
                cc.isNode(panel.nodes.img_zwnr) && panel.nodes.img_zwnr.show();
                return;
            } else {
                cc.isNode(panel.nodes.img_zwnr) && panel.nodes.img_zwnr.hide();
            }

            var table = me.table = new X.TableView(scrollview,panel.nodes.list_lb,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,8);
            table.setData(data);
            table.reloadDataWithScroll(me.needScroll);
        },
        setItem: function (ui, data) {
            var me = this;

            var zdl_bg = ui.finds('img_zdlbg');
            zdl_bg.setColor(cc.color('#EDE4D0'));

            X.autoInitUI(ui);
            var func = function () {
                X.render({
                    img:X.STR
                })
            };
            X.render({
                panel_tx: function (node) {
                    node.removeAllChildren();
                    var wid = G.class.shead(data.headdata);
                    wid.setPosition(cc.p(node.width / 2,node.height / 2));
                    node.addChild(wid);
                },
                txt_player_name:data.name,
                txt_join_time:X.moment(data.ctime - G.time),
                txt_zdl1:data.maxzhanli,
                btn_accept: function (node) {
                    node.hide();
                    if (G.frame.gonghui_main.getMyPower() <= G.frame.gonghui_main.extConf.power.guanyuan) {
                        node.show();
                    }
                    node.data = data;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.ajax.send('gonghui_join',[sender.data.uid],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    G.tip_NB.show(L('CAOZUO') + L('SUCCESS'));
                                    me.refreshData();
                                    me.needRefresh = true;
                                } else {
                                    me.refreshData();
                                    me.needRefresh = true;
                                }
                            },true);
                        }
                    });
                },
                btn_refuse: function (node) {
                    node.hide();
                    if (G.frame.gonghui_main.getMyPower() <= G.frame.gonghui_main.extConf.power.guanyuan) {
                        node.show();
                    }
                    node.data = data;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.ajax.send('gonghui_refuse',[sender.data.uid],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    G.tip_NB.show(L('CAOZUO') + L('SUCCESS'));
                                    me.refreshData();
                                }
                            },true);
                        }
                    });
                }
            },ui.nodes);
        }
    });

    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/26.
 */
(function () {
    //公会-大厅-设置
    var ID = 'gonghui_dating_ghsz';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            me.nodes.txt_title.setString(L("SHEZHI"));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('gonghui_ghsz.json', function (view) {
                me._view = view;

                me.nodes.panel_nr.removeAllChildren();
                me.nodes.panel_nr.addChild(view);
                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.objData = {};
            var panel = me._view;

            me.setFlag(G.frame.gonghui_main.DATA.ghdata.flag);
            X.render({
                txt_name:P.gud.ghname,
                btn_modify: function (node) {
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.edit.data({
                                type:0,
                                title:L('XIUGAI') + L('MINGZI'),
                                info:L('GONGHUI_NAME_INFO'),
                                placeholder:L('GONGHUI_NAME_TIP'),
                                need:G.class.gonghui.get().base.changenameneed,
                                callback: function (data) {
                                    // me.setGhName(data);
                                    // G.frame.edit.remove();

                                    G.ajax.send('gonghui_rename',[data],function(d) {
                                        if(!d) return;
                                        var d = JSON.parse(d);
                                        if(d.s == 1) {
                                            G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                                            me.setGhName(data);
                                            G.frame.edit.remove();
                                        }
                                    },true);
                                }
                            }).show();
                        }
                    });
                },
                btn_choice: function (node) {
                    node.touch(function (sender, type) {
                        G.frame.gonghui_selectflag.data({
                            flag:me.objData.flag,
                            callback: function (data) {
                                me.setFlag(data);
                            }
                        }).show();
                    });
                },
                img_flag: function(node) {
                    node.setTouchEnabled(true);
                    node.touch(function (sender, type) {
                        G.frame.gonghui_selectflag.data({
                            flag:me.objData.flag,
                            callback: function (data) {
                                me.setFlag(data);
                            }
                        }).show();
                    });
                },
                txt_input: function (node) {
                    node.setPlaceHolder(L('ZHAOMU_CONTENT'));
                    node.setPlaceHolderColor(cc.color(G.gc.COLOR.n11));
                    var notice = G.frame.gonghui_main.DATA.ghdata.notice;

                    if (notice && notice != '') {
                        node.setString(notice);
                    }
                },
                txt_field: function (node) {
                    node.setPlaceHolder('0');
                    node.setString(G.frame.gonghui_main.DATA.ghdata.joinlv || 0);
                },
                btn_confirm: function (node) {
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            var joinlv = panel.nodes.txt_field.getString().trim() || 0;
                            var info = panel.nodes.txt_input.getString().trim() || '';

                            me.objData.joinlv = joinlv;
                            me.objData.notice = info;

                            // cc.log('data======', me.objData);
                            // G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                            // me.remove();
                            // G.frame.gonghui_main.getData(function () {
                            //     G.frame.gonghui_dating.emit('updateInfo');
                            // });
                            G.ajax.send('gonghui_changedata',[me.objData],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                                    me.remove();
                                    G.frame.gonghui_main.getData(function () {
                                        G.frame.gonghui_dating.emit('updateInfo');
                                    });
                                }
                            },true);
                        }
                    });
                }
            },panel.nodes);
        },
        setGhName: function (name) {
            var me = this;

            var txtName = me._view.nodes.txt_name;
            txtName.setString(name);
        },
        setFlag: function (id) {
            var me = this;

            var imgFlag = me._view.nodes.img_flag;
            imgFlag.setBackGroundImage(G.class.gonghui.getFlagImgById(id), 1);

            me.objData.flag = id;
        }
    });

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/25.
 */
(function () {
    //公会-大厅-管理
    G.class.gonghui_dating_gl = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('gonghui_tip1_gl.json');
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        bindBTN: function () {
            var me = this;

            // 招募
            me.nodes.btn_zm.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.edit.data({
                        type:1,
                        title:L('ZHAOMU'),
                        info:L('ZHAOMU_INFO'),
                        // need:[{a:'attr',t:'rmbmoney',n:100}],
                        callback: function (data) {
                            G.ajax.send('chat_send',[data,1,'','','',''],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    G.tip_NB.show(L('FASONG') + L('SUCCESS'));
                                    G.frame.edit.remove();
                                }
                            },true);
                        }
                    }).show();
                }
            });

            // 公告
            me.nodes.btn_yj.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.edit.data({
                        type:1,
                        title:L('GONGGAO'),
                        info:L('XGGG'),
                        placeholder:G.frame.gonghui_main.DATA.ghdata.notice || L('ZHAOMU_CONTENT'),
                        callback: function (data) {
                            var obj = {
                                joinlv: G.frame.gonghui_main.DATA.ghdata.joinlv,
                                notice: data,
                                flag: G.frame.gonghui_main.DATA.ghdata.flag
                            };
                            G.ajax.send('gonghui_changedata',[obj],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                                    G.frame.edit.remove();
                                    G.frame.gonghui_main.getData(function () {
                                        G.frame.gonghui_dating.emit('updateInfo');
                                    });
                                }
                            },true);
                        }
                    }).show();
                }
            });
            // 设置
            me.nodes.btn_sz.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (P.gud.ghpower !== 0) {
                        G.tip_NB.show(L('GONGHUI_ONLY_HZ'));
                        return;
                    }
                    
                    G.frame.gonghui_dating_ghsz.show();
                }
            });

            me.nodes.btn_js.click(function (sender, type) {
                if (P.gud.ghpower !== 0) {
                    G.tip_NB.show(L('GONGHUI_ONLY_HZ'));
                    return;
                }
                G.frame.alert.data({
                    title: L("TISHI"),
                    cancelCall: null,
                    okCall: function () {
                        G.ajax.send('gonghui_disband', [], function (d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                X.uiMana.closeAllFrame();
                            }
                        }, true);
                    },
                    richText: L("TSJSGH"),
                }).show();
                
            }, 1000);
        },
        onOpen: function () {
            var me = this;
            cc.enableScrollBar(me.nodes.listview);
            cc.enableScrollBar(me.nodes.scrollview);
            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();

            G.frame.gonghui_dating.onnp('updateInfo', function (d) {
                if(G.frame.gonghui_dating.curType == me._type){
                    me.refreshPanel();
                }else{
                    me._needRefresh = true;
                }
            }, me.getViewJson());
        },
        onRemove: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            G.frame.gonghui_dating.getMemberData(function () {
                callback && callback();
            });
        },
        setContents: function () {
            var me = this;

            me.setPeoples();
        },
        setPeoples: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            var listview = me.nodes.listview;
            cc.enableScrollBar(listview);
            scrollview.removeAllChildren();

            var data = G.frame.gonghui_dating.DATA.userlist;

            data = G.frame.gonghui_main.sortData(data);

            var table = me.table = new X.TableView(scrollview,me.nodes.list_lb,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,8);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            X.render({
                panel_tx: function (node) {
                    node.removeAllChildren();
                    var wid = G.class.shead(data.headdata);
                    wid.setPosition(cc.p(node.width / 2,node.height / 2));
                    node.addChild(wid);
                    wid.setTouchEnabled(true);
                    wid.data = data;
                    wid.click(function (sender, type) {
                        if (P.gud.uid == sender.data.headdata.uid) {
                            return;
                        }

                        G.frame.wanjiaxinxi.data({
                            pvType: 'zypkjjc',
                            uid: sender.data.headdata.uid,
                            btnsCall: function (node) {
                                G.frame.wanjiaxinxi.setDefaultBtns(false);

                                var btnsArr = [];
                                var power = sender.data.power;
                                var myPower = P.gud.ghpower;
                                var obj = {
                                    0:{
                                        1:['btn_rmhz','btn_jwcy','btn_qlgh'],
                                        3:['btn_rmhz','btn_swgy','btn_qlgh'],
                                    },
                                    1:{
                                        3:['btn_qlgh']
                                    }
                                };

                                btnsArr = [].concat(obj[myPower] && obj[myPower][power] || []);
                                for (var i = 0; i < btnsArr.length; i++) {
                                    var btnName = btnsArr[i];
                                    var btn = node.nodes[btnName];
                                    btn.show();
                                    btn.data = sender.data;
                                }

                                //任命会长
                                node.nodes.btn_rmhz.touch(function (sender, type) {
                                    if (type == ccui.Widget.TOUCH_ENDED) {
                                        var power = 0;
                                        var str = X.STR(L('GONGHUI_RENMING_X'),sender.data.headdata.name,L('GONGHUI_POWER_' + power));
                                        G.frame.alert.data({
                                            sizeType:3,
                                            cancelCall:null,
                                            okCall: function () {
                                                me.changePower(sender.data.uid,power);
                                            },
                                            richText:str
                                        }).show();
                                    }
                                });
                                // 将为成员
                                node.nodes.btn_jwcy.touch(function (sender, type) {
                                    if (type == ccui.Widget.TOUCH_ENDED) {
                                        me.changePower(sender.data.uid,3);
                                    }
                                });
                                // 升为官员
                                node.nodes.btn_swgy.touch(function (sender, type) {
                                    if (type == ccui.Widget.TOUCH_ENDED) {
                                        me.changePower(sender.data.uid,1);
                                    }
                                });
                                // 清理公会
                                node.nodes.btn_qlgh.touch(function (sender, type) {
                                    if (type == ccui.Widget.TOUCH_ENDED) {

                                        var str = X.STR(L('GONGHUI_QINGLI_X'),sender.data.headdata.name);
                                        G.frame.alert.data({
                                            sizeType:3,
                                            cancelCall:null,
                                            okCall: function () {
                                                G.ajax.send('gonghui_kick',[sender.data.uid],function(d) {
                                                    if(!d) return;
                                                    var d = JSON.parse(d);
                                                    if(d.s == 1) {
                                                        G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                                                        G.frame.gonghui_main.getData(function () {
                                                            G.frame.gonghui_dating.emit('updateInfo');
                                                        });
                                                        if (G.frame.wanjiaxinxi.isShow) {
                                                            G.frame.wanjiaxinxi.remove();
                                                        }
                                                    }
                                                },true);
                                            },
                                            richText:str
                                        }).show();
                                    }
                                });
                            }
                        }).checkShow();
                    })
                },
                txt_player_name:data.headdata.name,
                txt_player_class:L('GONGHUI_POWER_' + data.power),
                txt_online_time: function (node) {
                    var interval = 60;

                    if (data.hearttime + interval > G.time) {
                        node.setString(L('ZAIXIAN'));
                    } else {
                        node.setString(X.moment(data.hearttime - G.time));
                    }
                }
            },ui.nodes);

            ui.data = data;
        },
        changePower: function () {
            var me = this;

            var uid = arguments[0];
            var power = arguments[1];

            G.ajax.send('gonghui_renzhi',[uid,power],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    G.tip_NB.show(L('RENMING') + L('SUCCESS'));
                    G.frame.gonghui_main.getData(function () {
                        G.frame.gonghui_dating.emit('updateInfo');
                    });
                    if (G.frame.wanjiaxinxi.isShow) {
                        G.frame.wanjiaxinxi.remove();
                    }
                }
            },true);
        }
    });

})();
;;/**
 * Created by wfq on 2018/6/25.
 */
(function () {
    //公会-大厅-日志
    G.class.gonghui_dating_rz = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('gonghui_sqlb.json');
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        bindBTN: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;
            cc.enableScrollBar(me.nodes.listview);
            cc.enableScrollBar(me.nodes.scrollview);
            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            // me.DATA = {
            //     list:[
            //         {ctype:1,args:['w'],ctime:G.time - 10}
            //     ]
            // };
            // callback && callback();

            G.ajax.send('gonghui_loglist',[],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            },true);
        },
        setContents: function () {
            var me = this;

            var panel = me;
            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            var listview = me.nodes.listview;
            cc.enableScrollBar(listview);
            cc.enableScrollBar(scrollview);

            var data = me.DATA.list;

            if (data.length < 1) {
                cc.isNode(panel.nodes.img_zwnr) && panel.nodes.img_zwnr.show();
                return;
            } else {
                cc.isNode(panel.nodes.img_zwnr) && panel.nodes.img_zwnr.hide();
            }

            var table = me.table = new X.TableView(scrollview,panel.nodes.list_lb2,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,8);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);

            ui.setTouchEnabled(false);
            X.render({
                txt_join_year1: X.timetostr(data.ctime,'y-m-d'),
                txt_join_time2: X.timetostr(data.ctime,'h:mm'),
                txt_content: function (node) {
                    node.setTouchEnabled(false);
                    var conf = G.class.gonghui.getRizhiConfById(data.ctype);
                    var str = X.STR(conf.intr,data.args);
                    var rh = new X.bRichText({
                        size:18,
                        maxWidth:node.width,
                        lineHeight:32,
                        color:G.gc.COLOR.n4,
                        family:G.defaultFNT
                    });
                    rh.text(str);
                    rh.setPosition(cc.p(0,node.height - rh.trueHeight()));
                    node.removeAllChildren();
                    node.addChild(rh);
                }
            },ui.nodes);
        }
    });

})();
;;/**
 * Created by wfq on 2018/6/25.
 */
(function () {
    //公会-大厅-主页
    G.class.gonghui_dating_zy = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('gonghui_tip1_zy.json');
            G.frame.gonghui_dating.zy = me;
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        checkRedPoint: function() {
            var me = this;
            var data = G.DATA.hongdian.gonghui.apply;

            if(data > 0) {
                G.setNewIcoImg(me.nodes.btn_sqlb, .95);
            }else {
                G.removeNewIco(me.nodes.btn_sqlb);
            }
        },
        bindBTN: function () {
            var me = this;

            me.nodes.btn_help.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.help.data({
                        intr:L('TS10')
                    }).show();
                }
            });

            //申请列表
            cc.isNode(me.nodes.btn_sqlb) && me.nodes.btn_sqlb.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.gonghui_dating_applylist.show();
                }
            });
            // 退出公会
            cc.isNode(me.nodes.btn_tcgh) && me.nodes.btn_tcgh.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (P.gud.ghpower == 0) {
                        G.tip_NB.show(L('GONGHUI_TIP_1'));
                        return;
                    }

                    var str = L('GONGHUI_TIP_2');
                    G.frame.alert.data({
                        sizeType:3,
                        cancelCall:null,
                        okCall: function () {
                            G.ajax.send('gonghui_exit',[],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    G.tip_NB.show(L('TUICHU') + L('SUCCESS'));
                                    X.uiMana.closeAllFrame();
                                }
                            },true);
                        },
                        richText:str
                    }).show();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.if = false;
            me.DATA = G.frame.gonghui_main.DTDATA;
            me.bindBTN();
            me.setContents();
            me.checkRedPoint();
            cc.enableScrollBar(me.nodes.listview);
            cc.enableScrollBar(me.nodes.scrollview);
        },
        onShow: function () {
            var me = this;



            G.frame.gonghui_dating.onnp('updateInfo', function (d) {
                if(G.frame.gonghui_dating.curType == me._type){
                    me.refreshPanel();
                }else{
                    me._needRefresh = true;
                }
            }, me.getViewJson());
        },
        onNodeShow: function () {
            var me = this;

            if (!cc.isNode(me.ui)) {
                return;
            }

            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            G.frame.gonghui_dating.getMemberData(function () {
                callback && callback();
            });
        },
        setContents: function () {
            var me = this;

            me.setPeoples();
            me.setBaseInfo();
        },
        setPeoples: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            var listview = me.nodes.listview;
            cc.enableScrollBar(listview);
            cc.enableScrollBar(scrollview);

            me.nodes.list_lb.hide();

            var data = me.if ? G.frame.gonghui_dating.DATA.userlist : me.DATA.userlist;
            me.if = true;
            data = G.frame.gonghui_main.sortData(data);

            var table = me.table = new X.TableView(scrollview,me.nodes.list_ghth,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,8);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;
            ui.show();
            X.autoInitUI(ui);
            X.render({
                panel_tx: function (node) {
                    node.removeAllChildren();
                    var wid = G.class.shead(data.headdata);
                    wid.setPosition(cc.p(node.width / 2,node.height / 2));
                    node.addChild(wid);
                    wid.setTouchEnabled(true);
                    wid.data = data;
                    wid.click(function (sender, type) {
                        if (P.gud.uid == sender.data.headdata.uid) {
                            return;
                        }
                        G.frame.wanjiaxinxi.data({
                            pvType: 'zypkjjc',
                            uid: sender.data.headdata.uid,
                            btnsCall: function (node) {
                                var btnsArr = [];

                            },
                            from:'gonghui'
                        }).checkShow();
                    })
                },
                txt_player_name:data.headdata.name,
                txt_player_class:L('GONGHUI_POWER_' + data.power),
                txt_time: function (node) {
                    var interval = 60;
                    node.setPositionY(61);
                    if (data.hearttime + interval > G.time) {
                        node.setString(L('ZAIXIAN'));
                    } else {
                        node.setString(X.moment(data.hearttime - G.time));
                    }
                    node.setTextColor(cc.color("#BE5E30"));
                },
                btn_tanhe: function (node) {
                    node.hide();
                }
            },ui.nodes);
            if(data.power == 0 && P.gud.uid != data.headdata.uid
                && (G.time - data.hearttime ) >3600 *24 * 3 ){
                ui.nodes.txt_time.setPositionY(86);
                ui.nodes.btn_tanhe.show();
                ui.nodes.btn_tanhe.click(function(sender,type){
                    G.frame.gonghui_tanhe.checkShow();
                })
            } else {
                ui.nodes.txt_time.setPositionY(61);
                ui.nodes.btn_tanhe.hide();
            }
            ui.data = data;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
        },
        setBaseInfo: function () {
            var me = this;

            var data = G.frame.gonghui_main.DATA.ghdata;
            X.render({
                img_flag: function (node) {
                    node.setBackGroundImage(G.class.gonghui.getFlagImgById(data.flag), 1);
                },
                txt_name:function (node) {
                    var str = X.STR(L('GONGHUI_NAME') + '：' + '<font color=#be5e30> {1} </font>',P.gud.ghname);
                    var rh = new X.bRichText({
                        size:18,
                        maxWidth:node.width,
                        lineHeight:20,
                        color:G.gc.COLOR.n4,
                        family: G.defaultFNT
                    });
                    rh.text(str);
                    rh.setPosition(cc.p(0,node.height - rh.height));
                    node.removeAllChildren();
                    node.addChild(rh);
                },
                txt_numble: function (node) {
                    var str = X.STR(L('BIANHAO') + '：' + '<font color=#be5e30> {1} </font>',data.codeid);
                    var rh = new X.bRichText({
                        size:18,
                        maxWidth:node.width,
                        lineHeight:20,
                        color:G.gc.COLOR.n4,
                        family: G.defaultFNT
                    });
                    rh.text(str);
                    rh.setPosition(cc.p(0,node.height - rh.height));
                    node.removeAllChildren();
                    node.addChild(rh);
                },
                txt_count: function (node) {
                    var str = X.STR(L('RENSHU') + '：' + '<font color=#be5e30> {1}/{2} </font>',data.usernum , data.maxusernum);
                    var rh = new X.bRichText({
                        size:18,
                        maxWidth:node.width,
                        lineHeight:20,
                        color:G.gc.COLOR.n4,
                        family: G.defaultFNT
                    });
                    rh.text(str);
                    rh.setPosition(cc.p(0,node.height - rh.height));
                    node.removeAllChildren();
                    node.addChild(rh);
                },
                wz_introdue: function (node) {
                    var str = data.notice ? data.notice : L('ZHAOMU_CONTENT');

                    var rh = new X.bRichText({
                        size:18,
                        maxWidth:node.width,
                        lineHeight:20,
                        color:G.gc.COLOR.n4,
                        family: G.defaultFNT
                    });
                    rh.text(str);
                    rh.setPosition(cc.p(0,node.height - rh.height));
                    node.removeAllChildren();
                    node.addChild(rh);
                }
            },me.nodes);
        }
    });

})();
;;/**
 * Created by LYF on 2018/12/5.
 */
(function () {
    //公会-段位宝箱
    var ID = 'gonghui_dwbx';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;

            me.nodes.tip_title.setString(L("GHSJDWJL"))
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView("gonghui_ghzf_dwbx.json", function (node) {
                me.view = node;
                me.nodes.panel_nr.addChild(node);
                me.setContents();
            });
        },
        getData: function(callback) {
            var me = this;

            me.ajax("ghcompeting_openprize", [me.type], function (str, data) {
                if(data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            })
        },
        onHide: function () {
            var me = this;
            G.hongdian.getData("gonghui", 1, function () {
                if(G.frame.gonghui_ghz.isShow) {
                    G.frame.gonghui_ghz.checkRedPoint();
                }
                if(G.frame.gonghui_zhengfeng.isShow) {
                    G.frame.gonghui_zhengfeng.checkRedPoint();
                }
            });
        },
        setContents: function () {
            var me = this;

            me.dw = G.frame.gonghui_zhengfeng.DATA.segmentdata.topsegment || G.frame.gonghui_zhengfeng.DATA.segmentdata.segment;
            me.view.nodes.txt_dw.setString(L("GHZ_DW" + me.dw));

            me.view.nodes.list.hide();
            cc.enableScrollBar(me.view.nodes.scrollview);

            me.data = [];
            for (var i = 0; i < G.frame.gonghui_main.DATA.ghdata.maxusernum; i ++) {
                me.data.push(i);
            }

            X.radio([me.view.nodes.page1, me.view.nodes.page2, me.view.nodes.page3], function (sedner) {
                var type = {
                    page1$: 2,
                    page2$: 3,
                    page3$: 4,
                };
                me.changeType(type[sedner.getName()]);
            });
            me.view.nodes.page1.triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        changeType: function (type) {
            var me = this;

            me.type = type;
            me.getData(function () {
                me.setTable(true);
            })
        },
        setTable: function (bool) {
            var me = this;

            bool = bool || false;

            if(!me.table) {
                var table = me.table = new X.TableView(me.view.nodes.scrollview, me.view.nodes.panel_list, 3, function (ui, data, pos) {
                    me.setItem(ui, data);
                }, null, null, 1, 3);
                table.setData(me.data);
                table.reloadDataWithScroll(bool);
            } else {
                me.table.setData(me.data);
                me.table.reloadDataWithScroll(bool);
            }
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            ui.nodes.panel_bx.removeBackGroundImage();
            ui.nodes.panel_wp.removeAllChildren();
            ui.nodes.panel_wp.setTouchEnabled(false);
            ui.nodes.txt_name.setString("");

            if(me.dw >= me.type) {
                if(me.DATA.prizedata && me.DATA.prizedata[data]) {
                    ui.nodes.panel_bx.setTouchEnabled(false);
                    var item = G.class.sitem(me.DATA.prizedata[data].prize[0]);
                    item.setAnchorPoint(0.5, 0.5);
                    item.setPosition(ui.nodes.panel_wp.width / 2, ui.nodes.panel_wp.height / 2);
                    if(me.DATA.prizedata[data].prize[0].t == "2003" && me.DATA.prizedata[data].prize[0].n >= 1000) {
                        G.class.ani.show({
                            json: "ani_wupingkuang",
                            addTo: item,
                            x: 50,
                            y: 50,
                            repeat: true,
                            autoRemove: false,
                        });
                    }
                    G.frame.iteminfo.showItemInfo(item);
                    ui.nodes.panel_wp.addChild(item);
                    ui.nodes.txt_name.setString(me.DATA.prizedata[data].headdata.name);
                    if(P.gud.uid == me.DATA.prizedata[data].headdata.uid) {
                        ui.nodes.txt_name.setTextColor(cc.color("#25891c"));
                    } else {
                        ui.nodes.txt_name.setTextColor(cc.color("#804326"));
                    }
                    ui.nodes.img_dwbxdi.show();
                } else {
                    ui.nodes.img_dwbxdi.hide();
                    ui.nodes.panel_bx.setTouchEnabled(true);
                    ui.nodes.panel_bx.setSwallowTouches(false);
                    ui.nodes.panel_bx.setBackGroundImage("img/gonghui/img_dwbx" + (me.type - 1) + ".png", 1);
                    ui.nodes.panel_bx.idx = data;
                    ui.nodes.panel_bx.touch(function (sender, type) {
                        if(type == ccui.Widget.TOUCH_NOMOVE) {
                            me.view.nodes.panel_mask.show();
                            me.ajax("ghcompeting_recsegmentprize", [me.type, sender.idx], function (str, data) {
                                if(data.s == 1) {
                                    ui.nodes.panel_bx.removeBackGroundImage();
                                    G.class.ani.show({
                                        json: "ani_gonghuizhenfen_baoxiang",
                                        addTo: ui.nodes.panel_bx,
                                        x: ui.nodes.panel_bx.width / 2,
                                        y: ui.nodes.panel_bx.height / 2,
                                        repeat: false,
                                        autoRemove: true,
                                        onload: function (node, action) {
                                            action.play("bx" + (me.type - 1), false);
                                        },
                                        onend: function () {
                                            G.frame.jiangli.data({
                                                prize: data.d.prize
                                            }).show();
                                            me.getData(function () {
                                                me.setTable();
                                                me.view.nodes.panel_mask.hide();
                                            });
                                        }
                                    });
                                } else {
                                    me.getData(function () {
                                        me.setTable();
                                        me.view.nodes.panel_mask.hide();
                                    });
                                }
                            })
                        }
                    })
                }
            } else {
                ui.nodes.img_dwbxdi.hide();
                ui.nodes.panel_bx.setBackGroundImage("img/gonghui/img_dwbx_suo" + (me.type - 1) + ".png", 1);
                ui.nodes.panel_bx.setTouchEnabled(true);
                ui.nodes.panel_bx.setSwallowTouches(false);
                ui.nodes.panel_bx.touch(function (sender, type) {
                    if(type == ccui.Widget.TOUCH_NOMOVE) {
                        G.tip_NB.show(L("WDDDW"));
                    }
                })
            }

            ui.show();
        }
    });
    G.frame[ID] = new fun('gonghui_tip2.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/27.
 */
(function() {
    //公会-副本
    var ID = 'gonghui_fuben';

    var fun = X.bUi.extend({
        extConf: {
            num: 5
        },
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f3";
            me.fullScreen = true;
            me._super(json, id, {
                action: true
            });
        },
        initUi: function() {
            var me = this;
        },
        bindBtn: function() {
            var me = this;

            me.nodes.btn_fh.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            me.nodes.btn_help.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.help.data({
                        intr: L('TS11')
                    }).show();
                }
            });

            me.nodes.btn_zuo1.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (me.curType > 1) {
                        me.curType--;
                        me.setContents();
                    }
                }
            });
            me.nodes.btn_you1.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if(me.DATA.fuben * 1 <= me.curType * 5) {
                        G.tip_NB.show(L("QXTGDQZJ"))
                        return;
                    }
                    if (me.curType < me.getMaxPage()) {
                        me.curType++;
                        me.setContents();
                    }
                }
            });
        },
        onOpen: function() {
            var me = this;

            me.fillSize();
            me.showToper();
            me.nodes.panel_list.show();
        },
        onAniShow: function() {
            var me = this;
        },
        show: function(conf) {
            var me = this;
            var _super = this._super;
            this.getData(function() {
                me.curType = me.getPageByFbid(me.DATA.fuben);
                _super.apply(me, arguments);
            });
        },
        onShow: function() {
            var me = this;

            me.initUi();
            me.bindBtn();
            me.setContents();
        },
        onHide: function() {
            var me = this;

            G.hongdian.getData("gonghui", 1, function () {
                G.frame.gonghui_main.checkRedPoint();
            })
        },
        getData: function(callback) {
            var me = this;

            G.ajax.send('gonghuifuben_open', [], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        refreshData: function(callback) {
            var me = this;

            me.getData(function() {
                me.curType = me.getPageByFbid(me.DATA.fuben);
                me.setContents();
                callback && callback();
            });
        },
        setContents: function() {
            var me = this;
            var startId = me.getStartFbidByPage(me.curType);
            me.setPageNum(me.curType);
            me.setArrowsState();

            var idx = 1;
            for (var i = startId - 1; i < startId - 1 + me.extConf.num; i ++) {
                var conf = G.class.gonghui.getFubenById(i + 1);

                me.setItem(conf, i + 1, idx);
                idx ++;
            }
        },
        setItem: function(conf, level, index) {
            var me = this;
            var list = me.nodes.list_instance.clone();

            X.autoInitUI(list);

            X.setHeroModel({
                parent: list.nodes.rw,
                data: {
                    hid: conf.hid
                },
                callback: function (node) {
                    node.runAni(0, me.DATA.fuben * 1 > level ? "shihua" : "wait", true);
                }
            });

            if(me.DATA.fuben * 1 > level) list.nodes.img_complete.show();

            list.nodes.txt_name.setString(X.STR(L("DJG"), level));
            X.enableOutline(list.nodes.txt_name, "#000000", 2);

            if(me.DATA.fuben == level) {
                G.class.ani.show({
                    json: 'ani_gonghuiboss',
                    addTo: list,
                    x: list.width / 2,
                    y: list.height / 2,
                    repeat: true,
                    autoRemove: false
                });
            }

            if(me.timer) {
                list.nodes.txt_time.clearTimeout(me.timer);
                delete me.timer;
            }
            X.enableOutline(list.nodes.txt_time, "#000000", 2);
            if(me.DATA.fuben * 1 == level && me.DATA.pknum) {
                me.timer = X.timeout(list.nodes.txt_time, X.getTodayZeroTime() + 24 * 60 * 60, function() {
                    me.refreshData();
                });
            }

            list.nodes.rw.data = level;
            list.nodes.rw.setTouchEnabled(true);
            list.nodes.rw.click(function (sender) {
                if(me.DATA.fuben * 1 < sender.data) {
                    G.tip_NB.show(L('GONGHUI_FUBEN_TIP1'));
                }else {
                    if(me.DATA.fuben == sender.data) {
                        G.frame.gonghui_fuben_xq.data({
                            fbid: sender.data
                        }).show();
                    }else {
                        G.frame.gonghui_fuben_shph.data({
                            fbid: sender.data
                        }).show();
                    }
                }
            });

            me.nodes["panel_" + index].removeAllChildren();
            me.nodes["panel_" + index].addChild(list);
            list.setPosition(0, 0);
            list.show();
        },
        setPageNum: function(page) {
            var me = this;

            me.nodes.text_ys.setString(X.STR(L('D_X_PAGE'), page));
        },
        //根据副本id获得对应页码
        getPageByFbid: function(id) {
            var me = this;
            var max = me.getMaxPage();

            if(id * 1 > max * me.extConf.num) {
                return max
            } else {
                return Math.ceil((id * 1) / me.extConf.num);
            }
        },
        // 当前页开始的副本id
        getStartFbidByPage: function(page) {
            var me = this;

            return (page - 1) * me.extConf.num + 1;
        },
        //最大页数
        getMaxPage: function() {
            var me = this;

            var fbConf = G.class.gonghui.getFubenConf().fuben;

            return X.keysOfObject(fbConf).length / me.extConf.num;
        },
        setArrowsState: function() {
            var me = this;

            me.nodes.btn_zuo1.setEnableState(false);
            me.nodes.btn_you1.setEnableState(false);

            if (me.curType != 1) {
                me.nodes.btn_zuo1.setEnableState(true);
            }
            if (me.curType != me.getMaxPage()) {
                me.nodes.btn_you1.setEnableState(true);
            }
        }
    });

    G.frame[ID] = new fun('gonghui_tip2_ghxfb.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/27.
 */
(function () {
    //公会-副本-击杀奖励
    var ID = 'gonghui_fuben_prize';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            // me.singleGroup = "f5";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;

            // me._view.nodes.txt_title.setString(L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.fbid = G.frame.gonghui_fuben_xq.data().fbid;
            new X.bView('gonghui_top_jsjl.json', function (view) {
                me._view = view;

                me.nodes.panel_nr.removeAllChildren();
                me.nodes.panel_nr.addChild(view);

                me.initUi();
                me.bindBtn();

                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var panel = me._view;
            var listview = panel.nodes.listview;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();

            var conf = G.class.gonghui.getFubenPrizeByFbid(me.fbid);
            var prize = conf.pmprize;

            for (var i = 0; i < prize.length + 1; i++) {
                var list = panel.nodes.list.clone();
                list.idx = i;
                me.setItem(list);
                listview.pushBackCustomItem(list);
                list.show();
            }
        },
        setItem: function (ui) {
            var me = this;

            var panel = me._view;

            X.autoInitUI(ui);
            X.render({
                txt_list: function (node) {
                    node.setString(ui.idx ? L('JISHA') + L('JIANGLI') : L('PER_FIGHT') + L('JIANGLI'));
                    // if (ui.idx == 1) {
                    //     ui.idx.y = 100;
                    // }
                    if (ui.idx > 1) {
                        node.hide();
                    }
                },
                panel_item: function (node) {
                    node.removeAllChildren();
                    node.setTouchEnabled(false);

                    var item;
                    if (ui.idx == 0) {
                        item = panel.nodes.list_item.clone();
                        me.setItem2(item);
                        item.setPosition(cc.p(node.width / 2,0));
                        node.addChild(item);
                        item.show();
                    } else {
                        var conf = G.class.gonghui.getFubenPrizeByFbid(me.fbid);
                        var prize = conf.pmprize;

                        var p = prize[ui.idx - 1];
                        item = panel.nodes.list_item.clone();
                        item.data = p;
                        me.setItem3(item);
                        item.setPosition(cc.p(node.width / 2,ui.idx > 1 ? 90 + (ui.height - 25) * (ui.idx - 2) : 0));
                        node.addChild(item);
                        item.show();

                        // var sumHeight = 0;
                        // for (var i = 0; i < prize.length; i++) {
                        //     sumHeight += panel.nodes.list_item.height + 10;
                        // }
                        // aaa = ui;
                        // node.height = sumHeight;
                        // ccui.helper.doLayout(node);

                        // node.height += sumHeight;
                        // ccui.helper.doLayout(node);
                        // ui.height += sumHeight;
                        // ccui.helper.doLayout(ui);

                        // for (var i = 0; i < prize.length; i++) {
                        //     var p = prize[i];
                        //     item = panel.nodes.list_item.clone();
                        //     item.data = p;
                        //     me.setItem3(item);
                        //     item.setPosition(cc.p(node.width / 2,0 - item.height - (item.height + 10) * i));
                        //     node.addChild(item);
                        //     item.show();
                        // }

                    }
                }
            },ui.nodes);
        },
        setItem2: function (ui) {
            var me = this;

            var conf = G.class.gonghui.getFubenPrizeByFbid(me.fbid);
            ui.setTouchEnabled(false);
            X.autoInitUI(ui);
            X.render({
                txt_rank: function (node) {
                    node.hide();
                },
                panel_flag: function (node) {
                    node.hide();
                },
                reward_item: function (node) {
                    node.x = 0;

                    node.removeAllChildren();
                    var prize = conf.fightprize;
                    X.alignItems(node,prize,'left',{
                        touch:true,
                        interval:15
                    });
                }
            },ui.nodes);
        },
        setItem3: function (ui) {
            var me = this;

            var prize = ui.data;
            ui.setTouchEnabled(false);
            X.autoInitUI(ui);
            X.render({
                txt_rank: function (node) {
                    node.hide();
                    var str = '';
                    var pm = prize[0];
                    if (pm[0] > 3) {
                        if (pm[0] == pm[1]) {
                            str = pm[0];
                        } else {
                            str = pm[0] + '-' + pm[1];
                        }
                        node.setString(str);
                        node.show();
                    }
                },
                panel_flag: function (node) {
                    node.hide();

                    var pm = prize[0];
                    if (pm[0] <= 3) {
                        node.setBackGroundImage('img/public/img_paihangbang_' + pm[0] + '.png',1);
                        node.show();
                    }
                },
                reward_item: function (node) {
                    node.removeAllChildren();

                    X.alignItems(node,prize[1],'left',{
                        touch:true,
                        interval:15
                    });
                }
            },ui.nodes);

        },
    });

    G.frame[ID] = new fun('ui_top6.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/27.
 */
(function () {
    //公会-副本-伤害排行
    var ID = 'gonghui_fuben_shph';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            setPanelTitle(me.nodes.text_zdjl, L('UI_TITLE_SHPH'));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('gonghui_shph.json', function (view) {
                me._view = view;

                me.nodes.panel_nr.removeAllChildren();
                me.nodes.panel_nr.addChild(view);
                me._view.nodes.panel_show.hide();
                me.initUi();
                me.bindBtn();

                me.getData(function () {
                    me.setContents();
                });
            });
        },
        onHide: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            // me.DATA = {
            //     ranklist:[
            //         {maxzhanli:10000,dps:1000000,showhead:P.gud,prize:[{a:'attr',t:'rmbmoney',n:100}]}
            //     ]
            // };
            // callback && callback();

            G.ajax.send('gonghuifuben_fbdata', [me.data().fbid], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;

            me.setTable();
            me.setMyRank();
        },
        setTable: function () {
            var me = this;

            var panel = me._view;
            var scrollview = panel.nodes.scrollview_rank;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            //高度自适应调整
            panel.nodes.panel_listview.height = 615;
            ccui.helper.doLayout(panel.nodes.panel_listview);

            panel.nodes.panel_listview.show();

            var data = [].concat(me.DATA.ranklist);

            if (data.length < 1) {
                panel.nodes.img_zwnr.show();
                return;
            } else {
                panel.nodes.img_zwnr.hide();
            }

            for (var i = 0; i < data.length; i++) {
                var dd = data[i];
                dd.rank = i + 1;
                if (i == 0) {
                    me.maxAtk = dd.dps;
                }
            }

            var table = me.table = new X.TableView(scrollview,panel.nodes.list_rank1,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,10);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;

            ui.setTouchEnabled(false);

            X.autoInitUI(ui);
            X.render({
                panel_tx: function (node) {
                    var wid = G.class.shead(data.showhead);
                    wid.setPosition(cc.p(node.width / 2,node.height / 2));
                    node.removeAllChildren();
                    node.addChild(wid);
                    wid.setTouchEnabled(true);
                    wid.data = data;
                    wid.click(function (sender, type) {
                        G.frame.wanjiaxinxi.data({
                            pvType: 'zypkjjc',
                            uid: sender.data.showhead.uid,
                        }).checkShow();
                    })
                },
                txt_player_name:data.showhead.name,
                panel_jdt: function (node) {
                    node.show();

                },
                img_jdt: function (node) {
                    node.setPercent(Math.floor(data.dps / me.maxAtk * 100));
                    X.enableOutline(ui.finds('txt_time$'),'#66370e',2);
                },
                // txt_time:Math.floor(data.dps / me.maxAtk * 100) + '%',
                txt_time:X.fmtValue(data.dps),
                //排名
                wz_fnt: function (node) {
                    node.hide();
                    if (data.rank > 3) {
                        node.setString(data.rank);
                        node.show();
                    }
                },
                panel_pm: function (node) {
                    node.hide();
                    if (data.rank < 4) {
                        node.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png',1);
                        node.show();
                    }
                },
                ico_item: function (node) {
                    node.hide();
                },
                panel_item: function (node) {
                    node.show();
                    node.setTouchEnabled(false);

                    var prize = G.class.gonghui.getPMPrizeByRank(me.data().fbid,data.rank);
                    X.alignItems(node,prize,'left',{
                        touch:true,
                        scale:0.8
                    })
                }
            },ui.nodes);
        },
        setMyRank: function () {
            var me = this;
            var is = false;
            var wsb = me._view.finds("wsb_player");
            var rank = me._view.nodes.fnt_player;
            var dps = me._view.finds("txt_level_0");
            var data = me.DATA.ranklist;

            for(var i = 0; i < data.length; i ++) {
                if(data[i].showhead.uid == P.gud.uid) {
                    rank.setString(i + 1);
                    dps.setString(X.fmtValue(data[i].dps));
                    is = true;
                    break;
                }
            }

            if(!is) {
                rank.hide();
                wsb.show();
            }
        }
    });

    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/27.
 */
(function () {
    //公会-副本-详情
    var ID = 'gonghui_fuben_xq';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            // setPanelTitle(me.ui.finds('text_zdjl'), L('UI_TITLE_SHPH'));
            me.nodes.text_zdjl.setString(L("FBSL"));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();

            me.ui.finds("panel_zsy").y += 23;
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('gonghui_shph.json', function (view) {
                me._view = view;

                me.nodes.panel_nr.removeAllChildren();
                me.nodes.panel_nr.addChild(view);

                me.initUi();
                me.bindBtn();

                me.getData(function () {
                    me.setContents();
                });
            });
        },
        onHide: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            // me.DATA = {
            //     pknum:1,
            //     hp:10,
            //     maxhp:100,
            //     ranklist:[
            //         {maxzhanli:10000,dps:1000000,showhead:P.gud}
            //     ]
            // };
            // callback && callback();

            G.ajax.send('gonghuifuben_fbdata', [me.data().fbid], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        refreshData: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        setContents: function () {
            var me = this;

            me.setBoss();
            me.setTable();
        },
        setBoss: function () {
            var me = this;

            var panel = me._view;

            var conf = G.class.gonghui.getFubenById(me.data().fbid);

            X.render({
                //战斗
                btn_battle: function (node) {
                    node.hide();
                    if (me.DATA.pknum == 0) {
                        node.show();
                    } else {
                        var conf = G.class.gonghui.getFubenConf().pkneed[me.DATA.pknum];
                        if (!conf) {
                            node.show();
                            node.setTouchEnabled(false);
                            node.setEnableState(false);
                        }
                    }

                    node.data = me.data().fbid;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.fight.startFight({}, function (node) {
                                var selectedData = node.getSelectedData();

                                G.ajax.send('gonghuifuben_fight', [sender.data, selectedData], function (d) {
                                    if (!d) return;
                                    var d = JSON.parse(d);
                                    if (d.s == 1) {
                                        X.cacheByUid('fight_ghfb', selectedData);
                                        G.frame.fight.data({
                                            pvType:'pvfuben',
                                            prize: d.d.prize,
                                            pvid:sender.data
                                        }).once('show', function () {
                                            G.frame.yingxiong_fight.remove();

                                            // 不论胜负，都需要刷新界面
                                            //刷新
                                            G.frame.gonghui_fuben.refreshData();

                                        }).demo(d.d.fightres);
                                    }
                                }, true);
                            }, "ghfb");
                        }
                    });
                },
                //复活
                btn_resurrection: function (node) {
                    node.hide();
                    if (me.DATA.pknum > 0) {
                        var conf = G.class.gonghui.getFubenConf().pkneed[me.DATA.pknum];
                        if (conf) {
                            node.finds('txt_sl$').setString(conf[0].n);
                            node.show();

                            var ownNum = G.class.getOwnNum(conf[0].t,conf[0].a);
                            setTextWithColor(node.finds('txt_sl$'),conf[0].n,G.gc.COLOR[ownNum >= conf[0].n ? 'n1' : 'n16']);
                            ownNum < conf[0].n && X.enableOutline(node.finds('txt_sl$'),cc.color('#740000'),1)
                        }
                    }
                    node.data = me.data().fbid;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if (sender.isOver) {
                                G.tip_NB.show(L('GONGHUI_FUBEN_FIGHT_MAX'));
                                return;
                            }

                            if (ownNum < conf[0].n) {
                                G.tip_NB.show(G.class.getItem(conf[0].t,conf[0].a).name + L('buzu'));
                                return;
                            }

                            G.frame.fight.startFight({}, function (node) {
                                var selectedData = node.getSelectedData();

                                G.ajax.send('gonghuifuben_fight', [sender.data, selectedData], function (d) {
                                    if (!d) return;
                                    var d = JSON.parse(d);
                                    if (d.s == 1) {

                                        X.cacheByUid('fight_ghfb',selectedData);
                                        G.frame.fight.data({
                                            pvType:'pvfuben',
                                            prize: d.d.prize,
                                            pvid: sender.data
                                        }).once('show', function () {
                                            G.frame.yingxiong_fight.remove();

                                            // 不论胜负，都需要刷新界面
                                            //刷新
                                            G.frame.gonghui_fuben.refreshData();
                                        }).demo(d.d.fightres);
                                    }
                                }, true);
                            }, "ghfb");
                        }
                    });
                },
                img_jdt1: function (node) {
                    var per;
                    if (!me.DATA.maxhp) {
                        per = 100;
                    } else {
                        per = me.DATA.hp / me.DATA.maxhp * 100;
                    }
                    node.setPercent(per);

                    panel.nodes.txt_jdt.setString(per.toFixed(2) + '%');
                },
                // txt_jdt:per + '%',
                btn_instance: function (node) {
                    node.setTouchEnabled(false); 
                },
                //头像
                panel_character: function (node) {
                    node.setScale(1);
                    node.setBackGroundImage('ico/heroicon/' + G.class.fmtItemICON(conf.bossimg) + '.png',0);
                },
                txt_name:me.data().fbid,
                //奖励
                btn_reward: function (node) {
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.gonghui_fuben_prize.show();
                        }
                    });
                },
                //背景
                zz_bg:function(node){
                    var boss = G.class.hero.getById(conf.hid);
                    node.setBackGroundImage('ico/ghbossico/zhongzu_' + boss.zhongzu + '.png',0);
                },
                //倒计时
                panel_countdown: function (node) {
                    node.hide();

                    if (me.timer) {
                        node.clearTimeout(me.timer);
                        delete me.timer;
                    }

                    if (me.DATA.pknum > 0 ) {
                        me.timer = X.timeout(node.finds('txt_countdown$'),X.getTodayZeroTime() + 24 * 60 * 60, function () {
                            me.refreshData();
                        });
                        node.show();
                    }
                }
            },panel.nodes);

            me.setMyRank();

            me._view.nodes.panel_show.show();
        },
        setTable: function () {
            var me = this;

            var panel = me._view;
            var scrollview = panel.nodes.scrollview_rank;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            panel.nodes.panel_listview.show();

            var data = [].concat(me.DATA.ranklist);

            if (data.length < 1) {
                panel.nodes.img_zwnr.show();
                return;
            } else {
                panel.nodes.img_zwnr.hide();
            }

            for (var i = 0; i < data.length; i++) {
                var dd = data[i];
                dd.rank = i + 1;
            }

            var table = me.table = new X.TableView(scrollview,panel.nodes.list_rank,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8, 10);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;

            ui.setTouchEnabled(false);

            X.autoInitUI(ui);
            X.render({
                panel_tx: function (node) {
                    var wid = G.class.shead(data.showhead);
                    wid.setPosition(cc.p(node.width / 2,node.height / 2));
                    node.removeAllChildren();
                    node.addChild(wid);
                    wid.setTouchEnabled(true);
                    wid.data = data;
                    wid.click(function (sender, type) {
                        G.frame.wanjiaxinxi.data({
                            pvType: 'zypkjjc',
                            uid: sender.data.showhead.uid,
                        }).checkShow();
                    })
                },
                txt_player_name:data.showhead.name,
                // txt_job:L('GONGHUI_POWER_' + (data.power || 3)),
                //排名
                wz_fnt:function (node) {
                    node.setString(data.rank > 3 ? data.rank : "");
                },
                //伤害
                txt_zsh:X.fmtValue(data.dps || 0),
                panel_pm: function (node) {
                    node.removeBackGroundImage();
                    if(data.rank < 4){
                        node.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                    }
                }
            },ui.nodes);
        },
        setMyRank: function () {
            var me = this;
            var is = false;
            var wsb = me._view.finds("wsb_player");
            var rank = me._view.nodes.fnt_player;
            var dps = me._view.finds("txt_level_0");
            var data = me.DATA.ranklist;

            for(var i = 0; i < data.length; i ++) {
                if(data[i].showhead.uid == P.gud.uid) {
                    rank.setString(i + 1);
                    dps.setString(X.fmtValue(data[i].dps));
                    is = true;
                    break;
                }
            }

            if(!is) {
                rank.hide();
                wsb.show();
            }
        }
    });

    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/19.
 */
(function () {
    //公会-领奖记录
    var ID = 'gonghui_getinfo';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.DATA = me.data();
            cc.enableScrollBar(me.nodes.listview_1);
            cc.enableScrollBar(me.nodes.scrollview_);
            me.nodes.scrollview_.hide();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var tx = me.ui.finds("ico_tx");

            var head = G.class.shead(me.DATA.buyer);
            head.setPosition(tx.width / 2, tx.height / 2);
            tx.addChild(head);

            me.nodes.txt_js.setString(me.DATA.buyer.name);
            me.ui.finds("txt_lqwz").setString(L("YLQ") + " " + me.DATA.reclist.length + "/" +10);

            for (var i = 0; i < me.DATA.reclist.length; i ++) {
                if(me.DATA.reclist[i].uid == P.gud.uid){
                    me.nodes.listview_1.pushBackCustomItem(me.setItem(me.DATA.reclist[i], me.DATA.prizelist[i], me.DATA.timelist[i]));
                }
            }
            for (var i = 0; i < me.DATA.reclist.length; i++) {
                if (me.DATA.reclist[i].uid != P.gud.uid) {
                    me.nodes.listview_1.pushBackCustomItem(me.setItem(me.DATA.reclist[i], me.DATA.prizelist[i], me.DATA.timelist[i]));
                }
            }
        },
        setItem: function (data, atn, times) {
            var me = this;
            var list = me.nodes.list_flag.clone();
            X.autoInitUI(list);

            var tx = list.nodes.panel_tx;
            var name = list.finds("txt_name");
            var time = list.finds("txt_sj");
            var item = list.finds("ico_wp");

            var head = G.class.shead(data);
            head.setScale(.5);
            head.setPosition(tx.width / 2, tx.height / 2);
            tx.addChild(head);

            name.setString(data.name);
            if(data.uid == P.gud.uid) {
                name.setTextColor(cc.color("#c80000"));
            }

            time.setString(X.timetostr(times));

            var prize = G.class.sitem(atn);
            prize.setScale(.5);
            prize.setPosition(item.width / 2, item.height / 2);
            item.addChild(prize);

            list.show();
            return list;
        }
    });
    G.frame[ID] = new fun('gonghui_top_bx.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/25.
 */
(function () {
    //公会-排行列表
    G.class.gonghui_ghph = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('gonghui_ghph.json');
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            })
        },
        bindBTN: function () {
            var me = this;

            // 加5
            me.nodes.btn_you.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (me.curType < me.DATA.maxpage) {
                        if (me.curType + 5 <= me.DATA.maxpage) {
                            me.curType += 5;
                        } else {
                            me.curType = me.DATA.maxpage;
                        }
                        me.refreshPanel();
                    }

                }
            });

            // 加2
            me.nodes.btn_you1.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (me.curType < me.DATA.maxpage) {
                        me.curType++;
                        me.refreshPanel();
                    }
                }
            });

            // 减5
            me.nodes.btn_zuo.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (me.curType > 1) {
                        if (me.curType - 5 >= 1) {
                            me.curType -= 5;
                        } else {
                            me.curType = 1;
                        }
                        me.refreshPanel();
                    }
                }
            });

            // 减1
            me.nodes.btn_zuo1.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (me.curType > 1) {
                        me.curType--;
                        me.refreshPanel();
                    }

                }
            });
        },
        onOpen: function () {
            var me = this;
            me.bindBTN();
            me.DATA = G.frame.gonghui_list.data() || G.frame.gonghui_paihangbang.data();
            me.curType = 1;
            me.setContents();
        },
        onShow: function () {
            var me = this;
            
            me.ui.setTimeout(function(){
            	G.guidevent.emit('gonghui_ghphOpenOver');
            },200);

        },
        onRemove: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            // me.DATA = me.DATA || {};
            //
            // me.DATA = {
            //     maxpage:12,
            //     0:[
            //         {ghname:1,lv:1,member:1,cond:1,id:111,flag:1}
            //     ]
            // };
            // callback && callback();

            G.ajax.send('gonghui_getlist',[me.curType],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    me.DATA = me.DATA || {};
                    me.DATA.applylist = [];
                    if (d.d.maxpage) {
                        me.DATA.maxpage = d.d.maxpage;
                    }
                    if (d.d.applylist) {
                        me.DATA.applylist = d.d.applylist;
                    }
                    me.DATA[me.curType] = d.d.list;

                    callback && callback();
                }
            },true);
        },
        setContents: function () {
            var me = this;

            me.setPageNum(me.curType);

            var listview = me.nodes.listview;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();

            var data = [].concat(me.DATA[me.curType]);

            if (data.length < 1) {
                cc.isNode(me.nodes.img_zwnr) && me.nodes.img_zwnr.show();
                return;
            } else {
                cc.isNode(me.nodes.img_zwnr) && me.nodes.img_zwnr.hide();
            }

            var maxNumPerPage = G.class.gonghui.getMaxNumPerPage();
            for (var i = 0; i < data.length; i++) {
                var d = data[i];
                d.rank = maxNumPerPage * (me.curType - 1) + (i + 1);
            }

            for (var i = 0; i < data.length; i++) {
                var dd = data[i];
                var list = me.nodes.list_lb.clone();
                me.setItem(list,dd);
                listview.pushBackCustomItem(list);
                list.show();
            }
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            
            X.render({
                sz_ph: function (node) {
                    node.show();
                    node.setString(data.rank);
                },
                //旗帜
                panel_qz: function (node) {
                    node.setBackGroundImage(G.class.gonghui.getFlagImgById(data.flag),1);
                },
                text_dj:data.lv,
                text_mz:data.name,
                // 申请
                btn_sq: function (node) {
                    node.hide();
                    if (me._type == 'phb') {
                        return;
                    }

                    if (!X.inArray(me.DATA.applylist, data.ghid)) {
                        node.show();
                    }

                    node.data = data;
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if(P.gud.lv < data.joinlv) {
                                G.tip_NB.show(L('DJBZ'));
                                return;
                            }
                            G.frame.gonghui_main.gonghuiApply(sender.data.ghid,function(){
                                me.DATA.applylist.push(sender.data.ghid);
                                me.setItem(sender.getParent(), data);
                            });
                        }
                    });
                },
                //成员数量
                text_rs1: function (node) {
                    node.setString(data.usernum + '/' + data.maxusernum);
                },
                //限制等级
                text_mz2: function (node) {
                    node.hide();
                    if (me._type == 'phb') {
                        node.setString('等级:');
                        node.show();
                        return;
                    }

                    node.show();
                },
                text_rs2: function (node) {
                    node.setString('');
                    if (me._type == 'phb') {
                        node.setString(data.lv);
                        return;
                    }

                    node.setString(data.joinlv);
                },
                //已申请
                img_ysq: function (node) {
                    node.hide();

                    if (me._type == 'phb') {
                        return;
                    }

                    if (X.inArray(me.DATA.applylist, data.ghid)) {
                        node.show();
                    }
                }
            },ui.nodes);

            if(me._type == "phb") {
                ui.finds("text_huizhang").show();
                ui.nodes.text_huizhang.show();
                ui.nodes.text_huizhang.setString(data.hzname);
            }

            ui.show();
        },
        setPageNum: function (page) {
            var me = this;

            me.nodes.text_ys.setString(X.STR(L('D_X_YE'),page));

            me.nodes.btn_you.setTouchEnabled(false);
            me.nodes.btn_you.setEnableState(false);
            me.nodes.btn_you1.setTouchEnabled(false);
            me.nodes.btn_you1.setEnableState(false);
            me.nodes.btn_zuo.setTouchEnabled(false);
            me.nodes.btn_zuo.setEnableState(false);
            me.nodes.btn_zuo1.setTouchEnabled(false);
            me.nodes.btn_zuo1.setEnableState(false);
            if (me.curType !== 1) {
                me.nodes.btn_zuo.setTouchEnabled(true);
                me.nodes.btn_zuo.setEnableState(true);
                me.nodes.btn_zuo1.setTouchEnabled(true);
                me.nodes.btn_zuo1.setEnableState(true);
            }
            if (me.curType < me.DATA.maxpage) {
                me.nodes.btn_you.setTouchEnabled(true);
                me.nodes.btn_you.setEnableState(true);
                me.nodes.btn_you1.setTouchEnabled(true);
                me.nodes.btn_you1.setEnableState(true);
            }
        }
    });

})();
;;/**
 * Created by LYF on 2018/12/4.
 */
(function () {
    //公会-争锋
    var ID = 'gonghui_ghz';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
            me.preLoadRes = ["gonghui4.png", "gonghui4.plist"];
        },
        initUi: function () {
            var me = this;

            me.nodes.wz_saiji.setString(X.STR(L("GHZ_SJ"), me.DATA.season));
            me.nodes.wz_shuoming.setString( X.STR(L("GHZ_SC"), me.DATA.round, 6, L("GHZ_DW" + me.DATA.segmentdata.segment)));
            me.ui.finds("vs_dengji").setBackGroundImage("img/gonghui/img_dw" + me.DATA.segmentdata.segment + ".png", 1);
        },
        checkRedPoint: function() {
            var me = this;

            if(G.DATA.hongdian.gonghui.competing == 3) {
                G.setNewIcoImg(me.nodes.btn_duanweibaoxiang);
            } else {
                G.removeNewIco(me.nodes.btn_duanweibaoxiang);
            }
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_bz.click(function () {
                G.frame.help.data({
                    intr:L("TS23")
                }).show();
            });

            me.nodes.btn_fanhui.click(function () {
                me.remove();
            });

            me.nodes.btn_duanweibaoxiang.click(function () {
                //段位宝箱
                G.frame.gonghui_dwbx.show();
            });

            me.nodes.btn_paimingjiangli.click(function () {
                //排名奖励
                G.frame.gonghui_pmjl.show();
            });

            me.nodes.btn_lijiewangzhe.click(function () {
                //历届王者
                if(G.frame.gonghui_zhengfeng.DATA.season == 1) {
                    G.tip_NB.show(L("SJWZZWDS"));
                    return;
                }
                G.frame.gonghui_ljwz.show();
            });

            me.nodes.btn_zdxx.click(function () {
                //战斗信息
                if(!G.frame.gonghui_zhengfeng.isFight) {
                    G.tip_NB.show(L("GHZ_ZWZDXX"));
                    return;
                }
                G.frame.gonghui_zdxx.show();
            });

            me.nodes.btn_saiqupaihang.click(function () {
                //赛区排行
                G.frame.gonghui_sqph.show();
            });

            G.class.ani.show({
                json: "ani_gonghuizhenfeng_xuanzhong",
                addTo: me.nodes.qizhi_1.finds("xuanzhong_1"),
                x: me.nodes.qizhi_1.finds("xuanzhong_1").width / 2,
                y: 124,
                repeat: true,
                autoRemove: false,
            });

            G.class.ani.show({
                json: "ani_gonghuizhenfeng_xuanzhong2",
                addTo: me.nodes.qizhi_2.finds("xuanzhong_1"),
                x: me.nodes.qizhi_2.finds("xuanzhong_1").width / 2,
                y: 19,
                repeat: true,
                autoRemove: false,
            });
            
            X.radio([me.nodes.qizhi_1, me.nodes.qizhi_2], function (sender) {
                me.changeType(sender.getName().split("_")[1][0]);
            }, {
                callback1: function (sender) {
                    sender.finds("xuanzhong_1").show();
                },
                callback2: function (sender) {
                    sender.finds("xuanzhong_1").hide();
                },
                noTextColor: true
            })
        },
        changeType: function(type) {
            var me = this;

            if(type == 1) {
                me.nodes.bg_hong.show();
                me.nodes.bg_lan.hide();
                me.nodes.qizhi_1.finds("zhandou_cishu").hide();
            } else {
                me.nodes.bg_hong.hide();
                me.nodes.bg_lan.show();
                !me.nodes.qizhi_1.finds("zhandou_cishu").isShow &&me.nodes.qizhi_1.finds("zhandou_cishu").show();
            }

            me.type = type;
            me.setTable(true);
        },
        getData: function(callback) {
            var me = this;

            me.ajax("ghcompeting_open", [], function (str, data) {
                if(data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            })
        },
        onOpen: function () {
            var me = this;

            me.DATA = me.data();
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.showToper();
            me.setContents();
            me.checkRedPoint();
            me.nodes.qizhi_2.triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        setCloseTime: function() {
            var me = this;

            X.timeout(me.nodes.txt_sj, X.getTodayZeroTime() + 22 * 3600, function () {
                me.remove();
            })
        },
        onHide: function () {
            var me = this;
            G.hongdian.getData("gonghui", 1, function () {
                G.frame.gonghui_main.checkRedPoint();
            });
        },
        setContents: function () {
            var me = this;

            me.setGh();
            me.setCloseTime();
        },
        setGh: function () {
            var me = this;

            var f = function (target, type) {
                var data = me.getGhData(type);

                if(!data) return;

                target.finds("wz_zdl$").setString(X.fmtValue(data.zhanli));
                target.finds("z_sz$").setString(data.rank);
                target.finds("wz_fenshu$").setString(data.jifen);
                target.finds("wz_gonghuimingzi$").setString(data.guildinfo.name);
                target.finds("qizhi$").loadTexture(G.class.gonghui.getFlagImgById(data.guildinfo.flag),1);

                if(type == 1) {
                    if(me.getAtkNum() == "noPlayer" || P.gud.lv < 30) {
                        target.finds("zhandou_cishu").hide();
                        target.finds("zhandou_cishu").isShow = true;
                    } else {
                        for (var i = 1; i < 4; i ++) {
                            if(i <= me.getAtkNum()) {
                                target.finds("zhandou_cishu").children[i].setBright(true);
                            } else {
                                target.finds("zhandou_cishu").children[i].setBright(false);
                            }
                        }
                    }
                }

                if(!data.advance) {
                    target.finds("biaoqian$").setBackGroundImage("img/gonghui/biaoqian_2.png", 1);
                } else {
                    if(data.advance == 1) target.finds("biaoqian$").setBackGroundImage("img/gonghui/biaoqian_1.png", 1);
                    else target.finds("biaoqian$").setBackGroundImage("img/gonghui/biaoqian_3.png", 1);
                }
            };

            f(me.nodes.qizhi_1, 1);
            f(me.nodes.qizhi_2, 2);
        },
        setTable: function (bool) {
            var me = this;
            var data = me.getGhData(me.type).player;

            for (var i in data) {
                if(data[i].life_num <= 0) {
                    data[i].isLive = 0;
                } else {
                    data[i].isLive = 1;
                }
            }

            data.sort(function (a, b) {
                if(a.isLive != b.isLive) {
                    return a.isLive > b.isLive ? -1 : 1;
                } else {
                    return a.maxzhanli > b.maxzhanli ? -1 : 1;
                }
            });

            bool = bool || false;

            if(!me.table) {
                var table = me.table = new X.TableView(me.nodes.scrollview, me.nodes.list, 1, function (ui, data, pos) {
                    me.setItem(ui, data);
                }, null, null, 1, 3);
                table.setData(data);
                table.reloadDataWithScroll(bool);
            } else {
                me.table.setData(data);
                me.table.reloadDataWithScroll(bool);
            }
        },
        setItem: function (ui, data) {
            var me = this;

            ui.setTouchEnabled(false);
            ui.finds("wz_wanjia").setString(data.headdata.name);
            ui.finds("fenshu_wz").setString(data.lose_jifen);
            ui.finds("txt_zdl$").setString(data.maxzhanli);
            ui.finds("ico_1").removeAllChildren();
            ui.finds("ico_1").setTouchEnabled(false);
            ui.finds("neirong$").setTouchEnabled(false);

            var head = G.class.shead(data.headdata);
            head.setAnchorPoint(0.5, 0.5);
            head.setPosition(ui.finds("ico_1").width / 2, ui.finds("ico_1").height / 2);
            ui.finds("ico_1").addChild(head);

            if(me.type == 1) {
                ui.finds("btn_tiaozhan").hide();
            } else {
                if(!data.life_num) {
                    ui.finds("btn_tiaozhan").setBright(false);
                    ui.finds("wz_tiaozhan").setTextColor(cc.color("#6c6c6c"));
                } else {
                    ui.finds("btn_tiaozhan").setBright(true);
                    ui.finds("wz_tiaozhan").setTextColor(cc.color("#2f5719"));
                }
                ui.finds("btn_tiaozhan").show();
                ui.finds("panel_zdl").y = 135;
                ui.finds("btn_tiaozhan").num = data.life_num;
                ui.finds("btn_tiaozhan").uid = data.uid;
                ui.finds("btn_tiaozhan").click(function (sender) {
                    if(P.gud.lv < 30) {
                        G.tip_NB.show(L("ERR_LV"));
                        return;
                    } else if(me.getLiveNum() == "noPlayer") {
                        G.tip_NB.show(L("ERR_NO"));
                        return;
                    } else if(!me.getAtkNum()) {
                        G.tip_NB.show(L("ERR_NUM"));
                        return;
                    } else if(!sender.num) {
                        G.tip_NB.show(L("ERR_HEALTH"));
                        return;
                    }
                    var obj = {
                        pvType: "pvghz",
                        data: {
                            ghid: me.enemyId,
                            uid: sender.uid
                        }
                    };
                    G.frame.yingxiong_fight.data(obj).show();
                })
            }

            if(data.life_num < 1) {
                ui.finds("jdt$").setPercent(0);
            } else {
                if(me.type == 1) {
                    ui.finds("jdt$").setPercent(100);
                } else {
                    if(!data.fightless) {
                        ui.finds("jdt$").setPercent(100)
                    } else {
                        var maxNum = 0;
                        var curNum = 0;
                        for (var i in data.fightdata) {
                            maxNum += (data.fightdata[i].maxhp ? data.fightdata[i].maxhp : 0);
                        }
                        for (var i in data.fightless) {
                            if(data.fightless[i] <= 0) {
                                curNum += 0;
                            } else {
                                curNum += data.fightless[i];
                            }
                        }
                        ui.finds("jdt$").setPercent(curNum / maxNum * 100);
                    }
                }
            }

            for (var i = 1; i < 4; i ++) {
                var chr = ui.finds("panel_1").children[i + 2];
                var chr1 = ui.finds("panel_2").children[i + 2];

                if(data.atk_num >= i) {
                    chr.show();
                } else {
                    chr.hide();
                }

                if(data.life_num >= i) {
                    chr1.show();
                } else  {
                    chr1.hide();
                }
            }

            for (var i = 1; i < 7; i ++) {
                ui.finds("ico" + i).setTouchEnabled(false);
                ui.finds("ico" + i).removeAllChildren();
                ui.finds("ico" + i).removeBackGroundImage();
            }

            var heroList = [];
            var sqid = "";
            for (var i in data.fightdata) {
                if(!data.fightdata[i].sqid) {
                    heroList.push(data.fightdata[i]);
                } else {
                    sqid = data.fightdata[i].sqid;
                }
            }

            for (var i = 0; i < 6; i ++) {
                var lay = ui.finds("ico" + (i + 1));
                if(heroList[i]) {
                    if(i == heroList.length - 1 && me.type == 2) {
                        lay.setBackGroundImage("img/gonghui/ico_kong2.png", 1);
                    } else {
                        var hero = G.class.shero(heroList[i]);
                        hero.setArtifact(sqid);
                        hero.setAnchorPoint(0.5, 0.5);
                        hero.setPosition(lay.width / 2, lay.height / 2);
                        lay.addChild(hero);
                        if(me.type == 2) {
                            if(data.fightless && data.fightless[heroList[i].pos] <= 0) {
                                hero.setEnabled(false);
                            }
                        }
                    }
                }else {
                    lay.setBackGroundImage("img/gonghui/ico_kong1.png", 1);
                }
            }

            ui.show();
        },
        getGhData: function (type) {
            var me = this;
            
            for (var i in me.DATA.guild) {
                if(P.gud.ghid == i && type == 1) {
                    return me.DATA.guild[i];
                }
                if(P.gud.ghid !== i && type == 2) {
                    me.enemyId = i;
                    return me.DATA.guild[i];
                }
            }
        },
        getLiveNum: function () {
            var me = this;
            var data = me.getGhData(1).player;

            for (var i in data) {
                if(P.gud.uid == data[i].uid) {
                    return data[i].life_num;
                }
            }

            return "noPlayer";
        },
        getAtkNum: function() {
            var me = this;
            var data = me.getGhData(1).player;

            for (var i in data) {
                if(P.gud.uid == data[i].uid) {
                    return data[i].atk_num;
                }
            }

            return "noPlayer";
        },
        refresh: function () {
            var me = this;

            me.getData(function () {
                me.setGh();
                me.setTable();
            })
        }
    });
    G.frame[ID] = new fun('gonghui_ghzxinxi.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/26.
 */
(function() {
    //公会-捐献
    var ID = 'gonghui_juanxian';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id, {
                action: true
            });
        },
        initUi: function() {
            var me = this;

            me.nodes.tip_title.setString(L('GHJX'));
        },
        bindBtn: function() {
            var me = this;

            me.nodes.mask.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function() {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;

            new X.bView('gonghui_tip2_ghjx.json', function(view) {
                me._view = view;

                me.nodes.panel_nr.removeAllChildren();
                me.nodes.panel_nr.addChild(view);

                me.setContents();
            });
        },
        onHide: function() {
            var me = this;
        },
        refreshData: function() {
            var me = this;

            me.setContents();
        },
        setContents: function() {
            var me = this;

            me.setExp();
            me.setGongxian();
        },
        setExp: function() {
            var me = this;

            var panel = me._view;

            var exp = G.frame.gonghui_main.DATA.ghdata.exp;

            var arr = G.class.gonghui.getLvByExp(exp) || [50, 0];
            var maxExp = G.class.gonghui.getMaxExpBylv(arr[0]);
            var per = Math.floor(arr[1] / maxExp * 100);

            if (G.class.gonghui.checkIsMaxLv(arr[0])) {
                per = 100;
            }

            X.render({
                txt_lv: L('lv') + arr[0],
                img_jdt: function(node) {
                    node.setPercent(per);
                },
                time_jdt: per + '%'
            }, panel.nodes);
        },
        setGongxian: function() {
            var me = this;

            var panel = me._view;

            for (var i = 0; i < 3; i++) {
                var lay = panel.nodes['panel_' + (i + 1)];
                lay.removeAllChildren();

                var item = panel.nodes.panel_donate.clone();
                item.idx = i;
                me.setItem(item, i + 1);
                item.setPosition(cc.p(lay.width / 2, lay.height / 2));
                lay.addChild(item);
                item.show();
                item.nodes.txt_contribution.setTextColor(cc.color('#FFE9CD'));
                X.enableOutline(item.nodes.txt_contribution, '#711100', 2);
            }
        },
        setItem: function(ui, idx) {
            var me = this;

            X.autoInitUI(ui);

            var conf = G.class.gonghui.get().base.juanxian[ui.idx];

            X.render({
                bg_donate: function(node) {
                    node.loadTexture('img/gonghui/' + conf.img, 1);
                },
                img_treasure: function(node) {
                    node.loadTexture('img/gonghui/' + conf.icon, 1);
                    if(idx > 1) {
                        G.class.ani.show({
                            json: "ani_gonghui_juanzen_" + idx + "dang",
                            addTo: node,
                            x: node.width / 2,
                            y: node.height / 2 + 40,
                            repeat: true,
                            autoRemove: false,
                        })
                    }
                },
                txt_contribution: conf.name,
                img_received: function(node) {
                    node.hide();

                    if (G.frame.gonghui_main.DATA.juanxian == ui.idx) {
                        node.show();
                    }
                },
                btn_buy: function(node) {
                    node.setTouchEnabled(true);
                    node.setBright(true);
                    node.hide();
                    if (G.frame.gonghui_main.DATA.juanxian != undefined) {
                        if (G.frame.gonghui_main.DATA.juanxian != ui.idx) {
                            node.setTouchEnabled(false);
                            node.setBright(false);
                            node.finds('txt_buy').setTextColor(cc.color(G.gc.COLOR.n15));
                            node.show();
                        }
                    } else {
                        node.finds('txt_buy').setTextColor(cc.color(G.gc.COLOR.n12));
                        node.show();
                    }

                    var need = conf.need[0];
                    var ownNum = G.class.getOwnNum(need.t, need.a);
                    var num = need.n;
                    if(need.n == 10000){
                        num = '1万';
                    }
                    setTextWithColor(node.finds('txt_sl$'), num, G.gc.COLOR[ownNum >= need.n ? 'n1' : 'n16']);
                    X.enableOutline(node.finds('txt_sl$'), ownNum >= need.n ? '#272727' : '#740000', 1);
                    conf.name == '1' && node.finds('token_zs').loadTexture(G.class.getItemIco('jinbi'), 1);
                    node.data = ui.idx;
                    node.click(function(sender, type) {
                        G.frame.alert.data({
                            title: L("TS"),
                            cancelCall: null,
                            okCall: function () {
                                G.ajax.send('gonghui_juanxian', [sender.data], function(d) {
                                    if (!d) return;
                                    var d = JSON.parse(d);
                                    if (d.s == 1) {
                                        G.frame.jiangli.data({
                                            prize: [].concat(d.d.prize)
                                        }).show();
                                        G.frame.gonghui_main.DATA.ghdata.exp = d.d.exp || 0;
                                        G.frame.gonghui_main.DATA.juanxian = sender.data;
                                        G.hongdian.getData("gonghui", 1, function () {
                                            G.frame.gonghui_main.checkRedPoint();
                                        });
                                        me.refreshData();
                                        me.changeToperAttr({
                                            attr2:{a:'item',t:'2003'}
                                        });
                                    }
                                }, true);
                            },
                            richText: L("GHJXYC"),
                        }).show();
                    });
                }
            }, ui.nodes);
            var str = X.STR(L('gonghui_juanxian'),conf.prize[0].n);
            var img = new ccui.ImageView(G.class.getItemIco(2003),1);
            var rh = new X.bRichText({
                size: 18,
                maxWidth: ui.nodes.txt_number.width,
                lineHeight:10,
                color: '#BE5E30',
                family: G.defaultFNT
            });
            rh.text(str, [img]);
            rh.setPositionX((ui.nodes.txt_number.width - rh.trueWidth()) / 2);
            ui.nodes.txt_number.addChild(rh);
        }
    });

    G.frame[ID] = new fun('gonghui_tip2.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/27.
 */
(function () {
    //公会-科技
    var ID = 'gonghui_keji';

    var fun = X.bUi.extend({
        extConf:{
            skillnum:8
        },
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            me.nodes.tip_title.setString(L('GHKJ'));

            me.createMenu();
        },
        bindBtn: function () {
            var me = this;



            var panel = me._view;
            panel.nodes.btn_refresh.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                   G.frame.alert_gm.data({
                       title:L('CHONGZHI'),
                       intr:L('GONGHUI_KEJI_TIP1'),
                       need:me.DATA.resetnum[me.curType] ? G.class.gonghui.get().base.kejiresetneed : [{"a":"attr","t":"rmbmoney","n":0}],
                       callback: function () {
                           G.ajax.send('ghkeji_clear',[me.curType],function(d) {
                               if(!d) return;
                               var d = JSON.parse(d);
                               if(d.s == 1) {
                                   G.tip_NB.show(L('JIESU') + L('SUCCESS'));
                                   G.frame.alert_gm.remove();
                                   delete me.idx;
                                   me.getData(function () {
                                       me.setSkillLayout(me.selectPanel, me.curType);
                                   });
                               }
                           },true);
                       }
                   }).show();

                }
            });

            var layout = new ccui.Layout();
            layout.setContentSize(640, 50);
            layout.zIndex = 10;
            layout.setAnchorPoint(0.5, 0.5);
            layout.setName("zz");
            layout.setTouchEnabled(true);
            layout.setPosition(me.ui.width / 2, me.ui.height / 2 + 430);
            me.ui.addChild(layout);

        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            new X.bView('gonghui_tip2_ghkj2.json', function (view) {
                me._view = view;
                me.nodes.panel_nr.removeAllChildren();
                me.nodes.panel_nr.addChild(view);
                me.initUi();
                me.bindBtn();
                me._view.nodes.btn_zhanshi.triggerTouch(ccui.Widget.TOUCH_ENDED);
            });
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onHide: function () {
            var me = this;
        },
        refreshData: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        getData: function (callback) {
            var me = this;
            G.ajax.send('ghkeji_open', [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        createMenu: function () {
            var me = this;

            X.radio([me._view.nodes.btn_zhanshi, me._view.nodes.btn_fashi, me._view.nodes.btn_mushi, me._view.nodes.btn_cike, me._view.nodes.btn_youxia], function (sender) {

                var name = sender.getName();
                var name2type = {
                    btn_zhanshi$: "zs",
                    btn_fashi$: "fs",
                    btn_mushi$: "ms",
                    btn_cike$: "ck",
                    btn_youxia$: "yx"
                };

                me.changeType(name2type[name]);
            });

            me.skillLayout = [
                me._view.finds("panel_skill_zs"),
                me._view.finds("panel_skill_fs"),
                me._view.finds("panel_skill_ms"),
                me._view.finds("panel_skill_ck"),
                me._view.finds("panel_skill_yx")
            ];

            me.jobArr = {
                zs: 1,
                fs: 2,
                ms: 3,
                ck: 4,
                yx: 5
            }
        },
        changeType: function (type) {
            var me = this;
            var idx;
            if (me.curType == me.jobArr[type]) return;
            me.curType = me.jobArr[type];

            for (var i in me.skillLayout) {
                var nameArr = me.skillLayout[i].getName().split("_");
                if(nameArr[2] !== type) {
                    me.skillLayout[i].hide();
                }else {
                    idx = i;
                    me.selectPanel = me.skillLayout[i];
                    me.skillLayout[i].show();
                    me.setSkillLayout(me.skillLayout[i], me.jobArr[type]);
                }
            }
        },
        setSkillLayout: function(layout, type) {
            var me = this;

            var skillArr = G.class.gonghui.get().base.keji[type].skill;
            for (var i = 0; i < skillArr.length; i ++) {
                var skillid = skillArr[i];
                var lay = layout.finds("jn" + (i + 1));
                var conf = G.class.gonghui.getSkillConfById(skillid);
                var item = G.class.sskill(conf,me.DATA.kejidata[skillid] || 0, null, i + 1);

                item.setName('item');
                item.setPosition(cc.p(lay.width / 2,lay.height / 2));
                lay.data = item.data = skillid;
                lay.idx = i + 1;
                me.setItem(item);
                lay.removeAllChildren();
                lay.addChild(item);
                lay.setTouchEnabled(true);
                lay.touch(function (sender, type) {
                    if (type == ccui.Widget.TOUCH_ENDED) {
                        me.setXuanZhong(sender);
                        me.setDetail(sender);
                    }
                });
            }
            if(!me.idx) {
                layout.finds("jn1").triggerTouch(ccui.Widget.TOUCH_ENDED);
            }else {
                layout.finds("jn" + me.idx).triggerTouch(ccui.Widget.TOUCH_ENDED);
            }
        },
        setItem: function (item) {
            var me = this;

            var skillid = item.data;
            var skillArr = G.class.gonghui.get().base.keji[me.curType].skill;
            var idx = X.arrayFind(skillArr,skillid);

            if (!skillArr[idx - 1]) {
                item.setHighLight(true);
            } else if (skillArr[idx - 1] && (me.DATA.kejidata[skillArr[idx - 1]] >= 10)) {
                //上一个存在并且等级大于等于10
                item.setHighLight(true);
            } else {
                item.setHighLight(true);
            }

        },
        setXuanZhong: function (sender) {
            var me = this;

            var panel = me._view;

            var skillArr = G.class.gonghui.get().base.keji[me.curType].skill;
            for (var i = 0; i < skillArr.length; i++) {
                var lay = me.selectPanel.finds("jn" + (i + 1));

                if (lay.data == sender.data) {
                    lay.getChildren()[0].setXuanzhong(true);
                } else {
                    lay.getChildren()[0].setXuanzhong(false);
                }
            }
        },
        setDetail: function (sender) {
            var me = this;
            var panel = me._view;
            var skillid = me.curSkillid = sender.data;
            var lv = me.DATA.kejidata[skillid] || 0;
            var conf = G.class.gonghui.getSkillConfById(skillid);

            me.idx = sender.idx;

            X.render({
                btn_lvup: function (node) {
                    node.setTouchEnabled(false);
                    node.setEnableState(false);
                    node.setTitleColor(cc.color("#6c6c6c"));
                    node.hide();

                    //满级后隐藏按钮
                    if (!me.DATA.kejidata[skillid] || me.DATA.kejidata[skillid] < conf.maxlv) {
                        node.show();
                    } 

                    if (sender.finds('item').isHighLight) {
                        node.setEnableState(true);
                        node.setTouchEnabled(true);
                        node.setTitleColor(cc.color("#2f5719"));
                    }
                    if(!node.data) node.data = [];
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            X.audio.playEffect("sound/kejishengji.mp3");
                            G.ajax.send('ghkeji_lvup',[me.curType,me.curSkillid],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    me.DATA.kejidata[me.curSkillid] = me.DATA.kejidata[me.curSkillid] || 0;
                                    me.DATA.kejidata[me.curSkillid]++;
                                    if (me.DATA.kejidata[me.curSkillid] > conf.maxlv) {
                                        me.DATA.kejidata[me.curSkillid] = conf.maxlv;
                                    }
                                    me.setSkillLayout(me.selectPanel, me.curType);
                                }
                            },true);
                        }
                    });
                },
                txt_lv2: function (node) {
                    var str = lv + '/' + conf.maxlv;
                    node.setString(str);
                },
                txt_now: conf.name,
                show_ico_skill: function (node) {
                    node.removeAllChildren();

                    var conf = G.class.gonghui.getSkillConfById(skillid);
                    var item = G.class.sskill(conf,me.DATA.kejidata[skillid] || 0);
                    item.setPosition(cc.p(node.width / 2,node.height / 2));
                    node.addChild(item);
                },
                listview_attribute: function (node) {
                    cc.enableScrollBar(node);
                    node.removeAllChildren();

                    var buffFmt = conf.buff;
                    var buff = {},
                        nextBuff = {};
                    for (var key in buffFmt) {
                        var value = G.class.formula.compute(buffFmt[key],{lv:lv});
                        var nextValue = G.class.formula.compute(buffFmt[key],{lv:lv + 1});
                        buff[key] = value;
                        nextBuff[key] = nextValue;
                    }

                    var buffList =  X.fmtBuff(buff,false,{nofilterZero:true});
                    for (var i = 0; i < buffList.length; i++) {
                        var bl = buffList[i];
                        var item = panel.nodes.panel_attribute.clone();
                        setItem(item,bl);
                        node.pushBackCustomItem(item);
                        item.show();
                    }

                    //等级开放
                    if (!sender.finds('item').isHighLight) {
                        var item = panel.nodes.panel_attribute.clone();
                        setTextWithColor(item.finds('wz1$'),L('GONGHUI_KEJI_OPEN'),G.gc.COLOR[5]);
                        item.finds('wz_dq$').hide();
                        item.finds('Image_32').hide();
                        item.finds('wz_zz$').hide();
                        node.pushBackCustomItem(item);
                        item.show();
                    }

                    function setItem(ui,data) {
                        X.autoInitUI(ui);

                        X.render({
                            wz1:L('JOB_' + me.curType) + L(data.k) + ((data.k == "pvpdpspro" || data.k == "pvpundpspro") ? "" : L('ZENGJIA')),
                            wz_dq:'+' + data.sz,
                            wz_zz: function (node) {
                                var obj = {};
                                obj[data.k] = nextBuff[data.k];
                                var listcmp = X.fmtBuff(obj,false,{nofilterZero:true});

                                node.setString( '+' + listcmp[0].sz);
                                if (lv == conf.maxlv) {
                                    ui.finds('Image_32').hide();
                                    ui.nodes.wz_zz.hide();
                                }
                                // lv == conf.maxlv && ui.finds('panel_numerical').hide();
                            }
                        },ui.nodes);
                    }

                },
                txt_gold: function (node) {
                    var need = G.class.formula.compute(conf.need[0].n,{lv:me.DATA.kejidata[me.curSkillid] || 0});
                    var ownNum = G.class.getOwnNum(conf.need[0].t,conf.need[0].a);
                    // var str = X.fmtValue(ownNum) + '/' + X.fmtValue(need);
                    var str = X.fmtValue(need);
                    setTextWithColor(node,str,G.gc.COLOR[ownNum >= need ? 'n4' : 'n16']);
                    if(ownNum < need ) {
                        X.enableOutline(node, cc.color('#740000'), 1);
                    }else{
                        X.disableOutline(node);
                    }
                },
                txt_contribution: function (node) {
                    var need = G.class.formula.compute(conf.need[1].n, {lv: me.DATA.kejidata[me.curSkillid] || 0});
                    var ownNum = G.class.getOwnNum(conf.need[1].t, conf.need[1].a);
                    // var str = X.fmtValue(ownNum) + '/' + X.fmtValue(need);
                    var str = X.fmtValue(need);
                    setTextWithColor(node, str, G.gc.COLOR[ownNum >= need ? 'n4' : 'n16']);
                    if(ownNum < need ) {
                        X.enableOutline(node, cc.color('#740000'), 1);
                    }else{
                        X.disableOutline(node);
                    }

                }
            },panel.nodes);

            panel.finds("txt_lv").setString(me.DATA.kejidata[skillid] == conf.maxlv ? L('MAX_LV') : L('CUR_LV') + '：');

            //满级消耗隐藏
            panel.finds('panel_gold').hide();
            panel.finds('panel_contribution').hide();

            if (!me.DATA.kejidata[skillid] || me.DATA.kejidata[skillid] < conf.maxlv) {
                panel.finds('panel_gold').show();
                panel.finds('panel_contribution').show();
            }
        }
    });

    G.frame[ID] = new fun('gonghui_tip2.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/25.
 */
(function () {
    //公会-列表界面
    var ID = 'gonghui_list';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f2";
            me._super(json, id,{action:true});
            me.preLoadRes = ['jingjichang.plist','jingjichang.png'];
        },
        initUi: function () {
            var me = this;

            X.render({
                btn_zyjj: function (node) {
                    node.finds('text_zzjjc$').setString(L('LIEBAO'));
                    node.finds('img_zyjjc$').loadTexture('img/jingjichang/img_jjc_pmjl.png',1);

                },
                btn_phb:function (node) {
                    node.finds('text_zzjjc$').setString(L('CHUANGJIAN'));
                    node.finds('img_zyjjc$').loadTexture('img/gonghui/img_gonghui_jlgh.png',1);
                }
            },me.nodes);
            X.radio([me.nodes.btn_zyjj,me.nodes.btn_phb], function (sender) {
                var name = sender.getName();
                var name2type = {
                    btn_zyjj$:1,
                    btn_phb$:2
                };

                me.changeType(name2type[name]);
            });

            me.ui.finds("bg2").setBackGroundImage("img/bg/bg_gonghui22.png", 0);
        },
        bindBtn: function () {
            var me = this;

            //返回
            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                    G.removeNewIco(G.view.mainMenu.nodes.btn_haoyou);
                    G.view.mainMenu.checkGonghuiRed();
                    G.view.mainMenu.set_fhzc(3);
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.nodes.btn_zyjj.triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        onHide: function () {
            var me = this;
        },
        // setContents: function () {
        //     var me = this;
        //
        //
        // },
        changeType: function (type) {
            var me = this;

            if (me.curType && me.curType == type) {
                return;
            }

            me.curType = type;

            var viewConf = {
                "1": G.class.gonghui_ghph,
                "2": G.class.gonghui_create,
            };
            me._panels = me._panels || {};
            for (var _type in me._panels) {
                cc.isNode(me._panels[_type]) && me._panels[_type].hide();
            }
            if (!cc.isNode(me._panels[type])) {
                me._panels[type] = new viewConf[type](type);
                me.ui.nodes.panel_nr.addChild(me._panels[type]);
            }
            me._panels[type].show();
        },
    });

    G.frame[ID] = new fun('jingjichang_bg2.json', ID);
})();
;;/**
 * Created by LYF on 2018/12/5.
 */
(function () {
    //公会-赛区排行
    var ID = 'gonghui_ljwz';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_fanhui.click(function () {
                me.remove();
            });

            me.nodes.btn_xsl1.click(function () {
                me.changeType(false);
            });

            me.nodes.btn_xsl2.click(function () {
                me.changeType(true);
            })
        },
        setState: function() {
            var me = this;

            me.nodes.txt_ljwz.setString("S" + me.cur + L("JIE"));
            me.nodes.btn_xsl2.setTouchEnabled(true);
            me.nodes.btn_xsl1.setTouchEnabled(true);

            if(me.cur <= 1) me.nodes.btn_xsl1.setTouchEnabled(false);
            if(me.cur >= me.max) me.nodes.btn_xsl2.setTouchEnabled(false);
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        changeType: function(bool) {
            var me = this;

            if(bool) me.cur ++;
            else me.cur --;

            me.setState();

            me.getData(function () {
                me.setContents();
            })
        },
        onShow: function () {
            var me = this;

            me.showToper();
            me.addAni();

            me.max = G.frame.gonghui_zhengfeng.DATA.season;
            me.cur = G.frame.gonghui_zhengfeng.DATA.season - 1;

            me.setState();

            me.getData(function () {
                me.setContents();
            });
        },
        addAni: function() {
            var me = this;
            var obj = {
                1: "hong",
                2: "zi",
                3: "lan"
            };

            for (var i = 1; i < 4; i++) {
                var lay = me.nodes["panel_dh" + i];

                G.class.ani.show({
                    x: lay.width / 2,
                    y: lay.height / 2,
                    json: "ani_gonghuizhenfeng_" + obj[i],
                    addTo: lay,
                    repeat: true,
                    autoRemove: false
                })
            }
        },
        getData: function (callback) {
            var me = this;

            me.ajax("ghcompeting_toplog", [me.cur], function (str, data) {
                if(data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            })
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            function f(ui, data) {
                X.autoInitUI(ui);

                if(data) {
                    ui.children[0].hide();

                    for (var i = 1; i < ui.children.length; i ++) {
                        ui.children[i].show();
                    }

                    ui.nodes.txt_fuq.setString(data.guildinfo.svrname);
                    ui.nodes.txt_gh.setString(data.guildinfo.name);
                    ui.nodes.txt_name.setString(L("HUIZHANG") + data.guildinfo.chairman);
                    ui.nodes.txt_zdl.setString(L("ZHANLI") + "：" + data.zhanli);
                    ui.nodes.img_hz.setBackGroundImage(G.class.gonghui.getFlagImgById(data.guildinfo.flag), 1);
                    ui.nodes.img_hz.setScale(.25);
                } else {
                    ui.children[0].show();

                    for (var i = 1; i < ui.children.length; i ++) {
                        ui.children[i].hide();
                    }
                }
            }

            for (var i = 1; i < 4; i ++) {
                f(me.nodes["panel_ms" + i], me.DATA[i - 1]);
            }
        },
    });
    G.frame[ID] = new fun('gonghui_ghzf_ljwz.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/25.
 */
(function () {
    //公会-主界面
    var ID = 'gonghui_main';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f2";
            me.fullScreen = true;
            me._super(json, id, {action: true});
            me.preLoadRes = ["gonghui.png", "gonghui.plist"];
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
            me.nodes.btn_fh && me.nodes.btn_fh.hide();
            // me.nodes.btn_fh.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         me.remove();
            //     }
            // });
            me.nodes.btn_bx.click(function () {
                G.frame.gonghui_box.show();
            });

            //排行榜
            me.nodes.btn_ph.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.ajax.send('gonghui_getlist', [1], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            if (!d.d.applylist) d.d.applylist = [];
                            d.d[1] = d.d.list;
                            G.frame.gonghui_paihangbang.data(d.d).show();
                        }
                    }, true);
                }
            });
            //公会副本
            G.class.ani.show({
                json: "ani_gonghuifuben",
                addTo: me.nodes.ani_ghfb,
                x: 119,
                y: 55,
                repeat: true,
                autoRemove: false
            });
            me.nodes.panel_ghfb.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.gonghui_fuben.show();
                }
            });
            //公会捐献
            G.class.ani.show({
                json: "ani_gonghuijuanxian",
                addTo: me.nodes.ani_ghjx,
                x: 137,
                y: 17,
                repeat: true,
                autoRemove: false
            });
            me.nodes.panel_ghjx.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.gonghui_juanxian.show();
                }
            });
            //公会商店
            me.nodes.panel_ghsd.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.shop.data({
                        type: "5",
                        name: "ghsd"
                    }).show();
                }
            });
            //公会科技
            G.class.ani.show({
                json: "ani_gonghuikeji",
                addTo: me.nodes.ani_ghkj,
                x: 119,
                y: 85,
                repeat: true,
                autoRemove: false
            });
            me.nodes.panel_ghkj.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.gonghui_keji.show();
                }
            });
            //公会战
            G.class.ani.show({
                json: "ani_gonghuizhan",
                addTo: me.nodes.ani_ghz,
                x: 155,
                y: 66,
                repeat: true,
                autoRemove: false
            });
            me.nodes.panel_ghz.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.gonghui_zhengfeng.checkShow();
                }
            });
            //大厅
            me.nodes.panel_dt.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.gonghui_dating.show();
                }
            });

            if(G.view.mainView.nodes.btn_lt.getChildByName("redPoint")) {
                G.setNewIcoImg(me.nodes.btn_lt);
            }
            me.nodes.btn_lt.click(function (sender, type) {
                G.frame.liaotian.show();
            });

            if(G.view.mainView.nodes.btn_yj.getChildByName("redPoint")) {
                G.setNewIcoImg(me.nodes.btn_yj);
            }
            me.nodes.btn_yj.click(function (sender, type) {
                G.frame.youjian.show();
            });

            G.class.ani.show({
                json: "ani_gonghuitabbao.csd",
                addTo: me.nodes.panel_ghtb,
                x: 137.5,
                y: 135,
                repeat: true,
                autoRemove: false
            });
            me.nodes.panel_ghtb.click(function () {
                if(P.gud.lv < G.class.opencond.getLvById("friendhelp")) {
                    G.tip_NB.show(X.STR(L("XJKQ"), G.class.opencond.getLvById("friendhelp")));
                    return;
                }
                G.frame.gonghui_tanbao.show();
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
            me.setDTdata();
        },
        onAniShow: function () {
            var me = this;

            me.ui.setTimeout(function () {
                G.guidevent.emit('gonghuiOpenOver');
            }, 200);
        },
        setDTdata: function () {
            var me = this;

            G.ajax.send('gonghui_userlist', [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DTDATA = d.d;
                }
            }, true);
        },
        onShow: function () {
            var me = this;

            me.showMainMenu();
            me.showToper();

            me.changeToperAttr({
                attr2: {a: 'item', t: '2003'}
            });
            me.setBaseInfo();
            me.checkRedPoint();
            me.emit("showOver");
            G.view.mainMenu.set_fhzc(4);
            G.view.mainMenu.checkRedPoint('gonghui');
        },
        onHide: function () {
            var me = this;
            me.event.emit('hide');
            me.changeToperAttr();
            G.hongdian.getData("gonghui", 1);
        },
        setBaseInfo: function () {
            var me = this;

            // var layGhz = me.nodes.panel_ghz;
            //
            // //公会战，暂不开启，不需要做。
            // layGhz.finds('panel_bq').hide();
        },
        checkRedPoint: function () {
            var me = this;
            var data = G.DATA.hongdian.gonghui;
            var arr = ["apply", "donate", "fuben", "box", "treasure", "competing"];
            if(data[arr[0]] > 0) {
                G.setNewIcoImg(me.nodes.panel_dt.finds("panel_bq"), .7);
                me.nodes.panel_dt.finds("panel_bq").getChildByName("redPoint").setPosition(133, 44);
            }else {
                G.removeNewIco(me.nodes.panel_dt.finds("panel_bq"));
            }

            if(data[arr[1]] > 0) {
                G.setNewIcoImg(me.nodes.panel_ghjx.finds("panel_bq"), .7);
                me.nodes.panel_ghjx.finds("panel_bq").getChildByName("redPoint").setPosition(133, 44);
            }else {
                G.removeNewIco(me.nodes.panel_ghjx.finds("panel_bq"));
            }

            if(data[arr[2]] > 0) {
                G.setNewIcoImg(me.nodes.panel_ghfb.finds("panel_bq"), .7);
                me.nodes.panel_ghfb.finds("panel_bq").getChildByName("redPoint").setPosition(133, 44);
            }else {
                G.removeNewIco(me.nodes.panel_ghfb.finds("panel_bq"));
            }

            if (data[arr[3]] > 0) {
                G.setNewIcoImg(me.nodes.btn_bx);
            } else {
                G.removeNewIco(me.nodes.btn_bx);
            }

            if(data[arr[4]] > 0) {
                G.setNewIcoImg(me.nodes.panel_ghtb.finds("panel_bq"), .7);
                me.nodes.panel_ghtb.finds("panel_bq").getChildByName("redPoint").setPosition(133, 44);
            }else {
                G.removeNewIco(me.nodes.panel_ghtb.finds("panel_bq"));
            }

            if(data[arr[5]] > 0) {
                G.setNewIcoImg(me.nodes.panel_ghz.finds("panel_bq"), .7);
                me.nodes.panel_ghz.finds("panel_bq").getChildByName("redPoint").setPosition(133, 44);
            }else {
                G.removeNewIco(me.nodes.panel_ghz.finds("panel_bq"));
            }
        },
        getData: function (callback, errCall) {
            var me = this;

            G.ajax.send('gonghui_open', [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                } else if (d.s == -3) {
                    errCall && errCall();
                }
            });
        },
        checkShow: function (data) {
            var me = this;

            if (!P.gud.ghid || P.gud.ghid == '') {
                G.frame.gonghui_list.data(data).show();
            } else {
                me.getData(function () {
                    me.show();
                });
            }
        }
    });

    G.frame[ID] = new fun('gonghui.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/19.
 */
(function () {
    //公会-开宝箱
    var ID = 'gonghui_openbox';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });


            function open_bx(){
                if (me.DATA.state == "can") {
                    me.ajax("gonghui_recboxprize", [me.DATA._id], function(str, data) {
                        if (data.s == 1) {
                            G.frame.gonghui_box.getData(function() {
                                G.frame.gonghui_box.setBottom();
                                me.DATA.state = "get";
                                me.setButton();
                                var info = G.frame.gonghui_box.DATA.boxdata;
                                for (var i = 0; i < info.length; i++) {
                                    var dd = info[i];
                                    if (me.DATA._id == dd._id) {
                                        G.frame.gonghui_getinfo.data(dd).show();
                                        break;
                                    }
                                }
                                G.frame.jiangli.data({
                                    prize: data.d.prize
                                }).show();
                                G.frame.gonghui_openbox.remove();
                                G.hongdian.getData("gonghui", 1, function() {
                                    G.frame.gonghui_main.checkRedPoint();
                                });
                            });
                        } else {
                            G.frame.gonghui_box.getData(function() {
                                G.frame.gonghui_box.setBottom();
                                me.DATA.state = "all";
                                me.setButton();
                            })
                        }
                    });
                } else {
                    var info = G.frame.gonghui_box.DATA.boxdata;
                    for (var i = 0; i < info.length; i++) {
                        var dd = info[i];
                        if (me.DATA._id == dd._id) {
                            G.frame.gonghui_getinfo.data(dd).show();
                            break;
                        }
                    }
                }
            }

            me.ui.finds("btn_bx").click(function () {
                open_bx();
            })

            me.ui.finds("img_bx").setTouchEnabled(true);
            me.ui.finds("img_bx").click(function () {
                open_bx();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.DATA = me.data();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.setContents();
            me.setButton();
            // G.class.ani.show({
            //     json: 'spine/' + 'xiangzi' + '.json',
            //     addTo: me.ui.finds("img_bx"),
            //     x: me.ui.finds("img_bx").width / 2,
            //     y: me.ui.finds("img_bx").height / 2,
            //     z: 0,
            //     autoRemove: false,
            //     onload: function (node) {
            //         node.stopAllAni();
            //         node.setTimeScale(1);
            //         node.opacity = 255;
            //         node.runAni(0, me.DATA.state == "can" ? "baoxiang_daiji" : "baoxiang_")
            //     }
            // })
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var tx = me.ui.finds("ico_tx");

            var head = G.class.shead(me.DATA.buyer);
            head.setPosition(tx.width / 2, tx.height / 2);
            tx.addChild(head);

            me.ui.finds("nema").setString(me.DATA.buyer.name);
        },
        setButton: function () {
            var me = this;
            var btn = me.ui.finds("btn_bx");

            if(me.DATA.state == "can") {
                btn.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                me.nodes.txt_wz.setString(L("DK"));
                me.nodes.txt_wz.setTextColor(cc.color("#2f5719"));
                me.ui.finds("img_bx").setBackGroundImage("img/gonghui/ico_gonghui_bx3.png", 1);
            }else {
                btn.loadTextureNormal("img/public/btn/btn2_on.png", 1);
                me.nodes.txt_wz.setString(L("CKLQXQ"));
                me.nodes.txt_wz.setTextColor(cc.color("#7b531a"));
                me.nodes.bg_hei.show();
                me.ui.finds("img_bx").setBackGroundImage("img/gonghui/ico_gonghui_bx2.png", 1);
                if(me.DATA.state !== "get") {
                    me.nodes.yqw.show();
                }
            }
        }
    });
    G.frame[ID] = new fun('gonghui_baoxiang.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/25.
 */
(function () {
    //公会-排行榜
    var ID = 'gonghui_paihangbang';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            me.nodes.text_zdjl.setString(L("GHPHB"));
            setPanelTitle(me.ui.finds('text_zdjl'), L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var panel = new G.class.gonghui_ghph('phb');
            me.nodes.panel_nr.removeAllChildren();
            me.nodes.panel_nr.addChild(panel);
            panel.show();
        },
    });

    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by LYF on 2018/12/5.
 */
(function () {
    //公会-排名奖励
    var ID = 'gonghui_pmjl';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });

            me.nodes.btn_bz.click(function () {
                G.frame.help.data({
                    intr:L("TS7")
                }).show();
            });

            X.radio([me.nodes.btn_wzpm, me.nodes.btn_sjjl], function (sender) {
                var type = {
                    btn_wzpm$: 1,
                    btn_sjjl$: 2
                };
                me.changeType(type[sender.getName()]);
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.panles = {};
            if(G.frame.gonghui_zhengfeng.DATA.hadking) {
                me.nodes.btn_wzpm.triggerTouch(ccui.Widget.TOUCH_ENDED);
            } else {
                me.nodes.btn_sjjl.triggerTouch(ccui.Widget.TOUCH_ENDED);
            }

        },
        onHide: function () {
            var me = this;
        },
        changeType: function (type) {
            var me = this;
            var view = {
                2: G.class.wzpm,
                1: G.class.sjjl
            };

            for (var i in me.panles) {
                me.panles[i].hide();
            }

            if(!me.panles[type]) {
                me.panles[type] = new view[type];
                me.nodes.panel_nr.addChild(me.panles[type]);
            } else {
                me.panles[type].show();
            }
        }
    });
    G.frame[ID] = new fun('gonghui_ghzf_bg.json', ID);
})();

(function () {
    G.class.wzpm = X.bView.extend({
        ctor: function () {
            var me = this;
            me._super("gonghui_ghzf_wzpm.json");
        },
        setData: function(conf) {
            var arr = [];
            var keys = X.keysOfObject(conf);

            keys.sort(function (a, b) {
                return a > b ? -1 : 1;
            });

            for (var i = 0; i < keys.length; i ++) {
                for (var j = 0; j < conf[keys[i]].length; j ++) {
                    var con = conf[keys[i]][j];
                    con.push(keys[i]);
                    arr.push(con);
                }
            }

            return arr;
        },
        onShow: function () {
            var me = this;
            var conf = G.class.getConf("gonghuizhengfeng").base.season_prize;
            var data = me.setData(conf);

            cc.enableScrollBar(me.nodes.scrollview);

            var table = new X.TableView(me.nodes.scrollview, me.nodes.list_rank, 1, function (ui, data) {
                me.setItem(ui, data);
            }, null, null, 1, 3);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            X.autoInitUI(ui);

            X.alignItems(ui.nodes.img_wp, data[1], "left", {
                touch: true,
                scale: .6
            });

            var info = data[2] == 4 ? (data[0][1] >= 201 ?
                X.STR(L("GHZ_QB"), data[0][0]) :
                (data[0][0] == data[0][1] ? X.STR(L("GHZ_PMJL"), L("DI") + data[0][0]) : X.STR(L("GHZ_PMJL"),data[0][0] + "-" + data[0][1]))) :
                X.STR(L("GHZ_YH"), L("QB"));
            var str = L("GHZ_DW" + data[2]) + info;

            ui.nodes.txt_wzjl.setString(str);

            ui.show();
        }
    });
})();

(function () {
    G.class.sjjl = X.bView.extend({
        ctor: function () {
            var me = this;
            me._super("gonghui_ghzf_sjjl.json");
        },
        onShow: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            })
        },
        getData: function (callback) {
            var me = this;

            me.ajax("rank_open", [18], function (str, data) {
                if(data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            })
        },
        setContents: function () {
            var me = this;

            me.setPlayer();
            me.setTable();
        },
        setPlayer: function () {
            var me = this;

            me.nodes.txt_dw.setString(L("GHZ_DW" + G.frame.gonghui_zhengfeng.DATA.segmentdata.segment));
            if(me.DATA.myrank > 0) {
                me.ui.finds("txt_level_0").setString(me.DATA.myrank);
            } else {
                me.ui.finds("txt_level_0").setString(L("WRWZ"));
            }
        },
        setTable: function () {
            var me = this;

            if(me.DATA.ranklist.length < 1) {
                me.nodes.img_zwnr.show();
            } else {
                me.nodes.img_zwnr.hide();
            }

            for (var i = 0; i < me.DATA.ranklist.length; i ++) {
                me.DATA.ranklist[i].rank = i + 1;
            }

            var data = me.DATA.ranklist;
            var table = new X.TableView(me.nodes.scrollview, me.nodes.list_sjjl, 1, function (ui, data) {
                me.setItem(ui, data);
            }, null, null, 1, 3);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;

            ui.setName("ui_" + data.rank);
            X.autoInitUI(ui);
            ui.nodes.panel_tx.setScale(.6);
            ui.nodes.panel_tx.setBackGroundImage(G.class.gonghui.getFlagImgById(data.flag), 1);
            ui.nodes.txt_name.setString(data.name);
            if(P.gud.ghname == data.name) {
                ui.nodes.txt_name.setTextColor(cc.color("#25891c"));
            } else {
                ui.nodes.txt_name.setTextColor(cc.color("#804326"));
            }
            ui.nodes.txt_number.setString(data.jifen);
            ui.nodes.text_zdl2.setString(data.zhanli);
            ui.nodes.sz_phb.setString(data.rank);
            if(data.rank > 3) {
                ui.nodes.img_rank.hide();
                ui.nodes.sz_phb.show();
            }else {
                ui.nodes.img_rank.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                ui.nodes.img_rank.show();
                ui.nodes.sz_phb.hide();
            }
        }
    });
})();
;;/**
 * Created by wfq on 2018/6/26.
 */
(function() {
    var me = G.frame.gonghui_main;

    var fun = {
        extConf: {
            power: {
                huizhang: 0,
                guanyuan: 1,
                chengyuan: 3
            }
        },
        //获得官职等级
        getMyPower: function() {
            var me = this;

            return P.gud.ghpower;
        },
        sortData: function(data) {
            var me = this;

            var func = function(a, b) {
                if (a.power != b.power) {
                    return a.power < b.power ? -1 : 1;
                } else if (a.hearttime != b.hearttime) {
                    return a.hearttime > b.hearttime ? -1 : 1;
                } else if (a.headdata.lv != b.headdata.lv) {
                    return a.headdata.lv > b.headdata.lv ? -1 : 1;
                } else {
                    return a.headdata.uuid * 1 < b.headdata.uuid * 1 ? -1 : 1;
                }
            };

            data.sort(func);

            return data;
        },
        //申请公会
        gonghuiApply: function(ghid,callback){
            var me = this;
            G.ajax.send('gonghui_apply', [ghid], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    G.tip_NB.show(L('SHENQING') + L('SUCCESS'));
                    callback && callback();
                }
            }, true);
        }
    };

    cc.mixin(me, fun, true);
})();
;;/**
 * Created by wfq on 2018/6/25.
 */
(function () {
    //公会-选择旗帜
    var ID = 'gonghui_selectflag';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f6";
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;

            setPanelTitle(me.nodes.panel_bt, L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function(){
                me.remove();
            });

            // me._view.nodes.btn_xz.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         var callback = me.data().callback;
            //         callback && callback(me.flagId);
            //
            //         me.remove();
            //     }
            // });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.flagId = me.data().flag;
            // new X.bView('ui_tip_xuanze.json',function(view){
            //     me._view = view;
            //
            //     me.ui.nodes.panel_nr.removeAllChildren();
            //     me.ui.nodes.panel_nr.addChild(view);
                me.bindBtn();
                me.setContents();
            // });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var panel = me.ui;

            var scrollview = panel.nodes.scrollview_;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var conf = G.class.gonghui.get().base.flags;
            var data = X.keysOfObject(conf);
            data.sort(function (a,b) {
                return a * 1 < b * 1 ? -1 : 1;
            });

            var table = me.table = new X.TableView(scrollview,panel.nodes.list_flag,5, function (ui, data) {
                me.setItem(ui, data);
            },null,null,1);
            table.setData(data);
            table.reloadDataWithScroll(true);

        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);

            X.render({
                panel_flag: function (node) {
                    node.removeBackGroundImage();
                    node.setBackGroundImage(G.class.gonghui.getFlagImgById(data),1);
                },
                img_confirm: function (node) {
                    node.hide();

                    if (me.flagId == data) {
                        node.show();
                    }
                },
            },ui.nodes);

            ui.data = data;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (sender.data == me.flagId) {
                        return;
                    }

                    me.flagId = sender.data;

                    var callback = me.data().callback;
                    callback && callback(me.flagId);

                    G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                    me.remove();

                    // me.handleItems(sender);
                }
            });
        },
        // handleItems: function () {
        //     var me = this;
        //
        //     var children = me.table.getAllChildren();
        //     for (var i = 0; i < children.length; i++) {
        //         var child = children[i];
        //         if (child.data == me.flagId) {
        //             child.nodes.img_gou.show();
        //         } else {
        //             child.nodes.img_gou.hide();
        //         }
        //     }
        // }
    });

    G.frame[ID] = new fun('ui_top5.json', ID);
})();
;;/**
 * Created by LYF on 2018/12/5.
 */
(function () {
    //公会-赛区排行
    var ID = 'gonghui_sqph';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;

            me.nodes.tip_title.setString(L("GHZ_DW" + me.DATA.segment) + L("ZPM"));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;


            me.bindBtn();
            me.fillSize();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView("gonghui_ghzfpm.json", function (node) {
                me.view = node;
                me.nodes.panel_nr.addChild(node);
                cc.enableScrollBar(me.view.nodes.scrollview);
                me.getData(function () {
                    me.setContents();
                    me.initUi();
                });
            });
        },
        getData: function (callback) {
            var me = this;

            me.ajax("rank_open", [19], function (str, data) {
                if(data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            })
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setTable();
        },
        setPlayer: function () {
            var me = this;

            if(me.DATA.segment == 4) {
                me.view.nodes.txt_dw.setString(L("GHZ_DW" + me.DATA.segment) + L("ZU"));
            } else {
                me.view.nodes.txt_dw.setString(L("GHZ_DW" + me.DATA.segment) + L("JJ_" + me.state));
            }
            me.view.finds("txt_level_0").setString(me.DATA.myrank);
        },
        setTable: function () {
            var me = this;
            var data = me.DATA.ranklist;

            if(me.DATA.ranklist.length < 1) {
                me.view.nodes.img_zwnr.show();
            } else {
                me.view.nodes.img_zwnr.hide();
            }

            for (var i = 0; i < data.length; i ++) {
                data[i].rank = i + 1;
            }
            var state = 1;
            var conf  = G.class.getConf("gonghuizhengfeng").base.segment[me.DATA.segment].jinji;

            for (var i = 0; i < conf.length; i ++) {
                if(conf[i].length > 0) {
                    for (var j in data) {
                        if (data[j].rank >= conf[i][0] && data[j].rank <= conf[i][1]) {
                            data[j].state = state;
                            if(data[j].name == P.gud.ghname) {
                                me.state = state;
                            }
                        }
                    }
                }
                state --;
            }

            me.setPlayer();

            var table = new X.TableView(me.view.nodes.scrollview, me.view.nodes.list_rank, 1, function (ui, data) {
                me.setItem(ui, data);
            }, null, null, 1, 3);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            ui.show();
            ui.nodes.panel_tx.setScale(.6);
            ui.nodes.panel_tx.setBackGroundImage(G.class.gonghui.getFlagImgById(data.flag), 1);
            ui.nodes.txt_name.setString(data.name);
            ui.nodes.txt_number.setString(data.jifen);
            ui.nodes.text_zdl2.setString(data.zhanli);
            ui.nodes.sz_phb.setString(data.rank);
            if(data.rank > 3) {
                ui.nodes.img_rank.hide();
                ui.nodes.sz_phb.show();
            }else {
                ui.nodes.img_rank.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                ui.nodes.img_rank.show();
                ui.nodes.sz_phb.hide();
            }
            if(me.DATA.segment == 4) {
                ui.nodes.panel_qw.hide();
            }
            if(data.state == 1) {
                ui.nodes.panel_qw.setBackGroundImage("img/gonghui/img_ghzf_jjq.png", 1);
            } else if(data.state == 0) {
                ui.nodes.panel_qw.setBackGroundImage("img/gonghui/img_ghzf_bjq.png", 1);
            } else {
                ui.nodes.panel_qw.setBackGroundImage("img/gonghui/img_ghzf_jjq1.png", 1);
            }
        }
    });
    G.frame[ID] = new fun('gonghui_tip2.json', ID);
})();
;;/**
 * Created by LYF on 2018/11/16.
 */
(function () {
    //公会-探宝
    var ID = 'gonghui_tanbao';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;

            me.nodes.tip_title.setString(L("GHTB"));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        show: function(conf) {
            var me = this;
            var _super = this._super;
            this.getData(function() {
                _super.apply(me, arguments);
            });
        },
        onShow: function () {
            var me = this;

            new X.bView("gonghui_tip2_ghtb.json", function (node) {
                me.nodes.panel_nr.addChild(node);
                me.view = node;
                me.setContents();
            })
        },
        onHide: function () {
            var me = this;

            G.hongdian.getData("gonghui", 1, function() {
                G.frame.gonghui_main.checkRedPoint();
            });
        },
        getData: function(callback) {
            var me = this;

            G.ajax.send('friend_treasureopen', [], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;

            me.setBtn();
            me.setList();
            me.setViewBtn();
            me.setStamina();
        },
        setBtn: function() {
            var me = this;

            if(G.time < me.DATA.myinfo.freetime) {
                me.view.nodes.btn_tx.setBright(false);
                me.view.nodes.btn_tx.setTouchEnabled(false);
                me.view.nodes.txt_sxsj.show();
                X.timeout(me.view.nodes.txt_sxsj, me.DATA.myinfo.freetime, function () {
                    me.view.nodes.btn_tx.setBright(true);
                    me.view.nodes.btn_tx.setTouchEnabled(true);
                    me.view.nodes.txt_sxsj.hide();
                })
            } else {
                me.view.nodes.txt_sxsj.hide();
                if(me.DATA.myinfo.boss && JSON.stringify(me.DATA.myinfo.boss) != "{}") {
                    me.view.nodes.btn_tx.setBright(false);
                    me.view.nodes.btn_tx.setTouchEnabled(false);
                } else {
                    me.view.nodes.btn_tx.setBright(true);
                    me.view.nodes.btn_tx.setTouchEnabled(true);
                }

            }
        },
        setViewBtn: function () {
            var me = this;

            me.view.nodes.btn_damage_rank.click(function () {
                G.frame.friend_jifen_phb.show();
            });

            me.view.nodes.btn_help.click(function () {
                G.frame.help.data({
                    intr:L('TS13')
                }).show();
            });

            me.view.nodes.btn_damage_jifenjiangli.click(function () {
                G.frame.friend_jifen_pmjl.show();
            });

            me.view.nodes.btn_tx.click(function () {

                me.ajax("friend_treasure", [], function (str, data) {
                    if(data.s == 1) {
                        if(me.getListData().length < 1) {
                            G.class.ani.show({
                                json: "ani_haoyouboss",
                                addTo: me.view.finds("diban"),
                                x: me.view.finds("diban").width / 2,
                                y: me.view.finds("diban").height / 2,
                                repeat: false,
                                autoRemove: true,
                                onend: function () {
                                    if (data.d.treasure && data.d.treasure.prize && data.d.treasure.prize.length > 0) {
                                        G.frame.jiangli.data({
                                            prize: [].concat(data.d.treasure.prize)
                                        }).show();
                                        me.setBtn();
                                    } else {
                                        me.getData(function () {
                                            G.tip_NB.show(L("SXDBS"));
                                            me.setList();
                                            me.setBtn();
                                        })
                                    }
                                }
                            })
                        } else {
                            if (data.d.treasure && data.d.treasure.prize && data.d.treasure.prize.length > 0) {
                                G.frame.jiangli.data({
                                    prize: [].concat(data.d.treasure.prize)
                                }).show();
                                me.setBtn();
                            } else {
                                me.getData(function () {
                                    G.tip_NB.show(L("SXDBS"));
                                    me.setList();
                                    me.setBtn();
                                })
                            }
                        }

                    }
                });
            }, 1500);
        },
        setStamina: function () {
            var me = this;
            var data = me.DATA.myinfo.tiliinfo;

            me.view.nodes.txt_number.setString(data.num + "/10");

            if(data.num < 10) {
                me.view.nodes.txt_tbsj.show();
                X.timeout(me.view.nodes.txt_tbsj, data.freetime, function () {
                    data.num += 1;
                    me.setStamina();
                });
            }else {
                me.view.nodes.txt_tbsj.hide();
            }
        },
        setList: function () {
            var me = this;
            var data = me.getListData();

            if (data.length < 1) {
                me.view.finds("diban").show();
            } else {
                me.view.finds("diban").hide();
            }

            if(!me.table) {
                var table = me.table = new X.TableView(me.view.nodes.scrollview, me.view.nodes.list_instance, 1, function (ui, data) {
                    me.setItem(ui, data);
                }, null, null, 8,12);
                table.setData(data);
                table.reloadDataWithScroll(true);
            } else {
                me.table.setData(data);
                me.table.reloadDataWithScroll(false);
            }
        },
        setItem: function(ui, data) {
            var me = this;

            X.autoInitUI(ui);

            ui.show();
            ui.nodes.txt_fxz.setString(L("FXZ") + data.headdata.name);
            ui.nodes.txt_name.setString(data.boss.headdata.name);
            ui.nodes.img_jdt.setPercent(data.boss.curhp / data.boss.maxhp * 100);
            ui.nodes.jdt_time.setString((data.boss.curhp / data.boss.maxhp * 100).toFixed(2) + "%");
            X.enableOutline(ui.nodes.jdt_time, "#895105", 2);

            if(P.gud.uid == data.headdata.uid) {
                ui.nodes.img_wdfx.show();
                ui.nodes.bg_wdfx.show();
            } else {
                ui.nodes.img_wdfx.hide();
                ui.nodes.bg_wdfx.hide();
            }

            var head = G.class.shero(data.boss.headdata);
            head.setAnchorPoint(0.5, 0.5);
            head.setPosition(ui.nodes.panel_tx.width / 2, ui.nodes.panel_tx.height / 2);
            ui.nodes.panel_tx.removeAllChildren();
            ui.nodes.panel_tx.addChild(head);

            var conf = G.class.friend.getPrizeByLv(data.boss.headdata.lv);
            var item = G.class.sitem(P.gud.uid == data.headdata.uid ? conf.prize[0] : conf.killprize[0]);
            item.setScale(.6);
            item.setAnchorPoint(0.5, 0.5);
            item.setPosition(ui.nodes.panel_jb.width / 2, ui.nodes.panel_jb.height / 2);
            G.frame.iteminfo.showItemInfo(item);
            ui.nodes.panel_jb.addChild(item);

            ui.nodes.btn_tz.f = function(sender) {
                G.ajax.send('friend_fight', [G.frame.gonghui_tanbao._uid, sender.selectedData], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        if (d.d.fightres.winside == 0) {
                            G.frame.fight_win_friendboss.once('in_over', function () {
                                G.frame.fanpai.data(d.d.flop).show();
                            });
                        }else{
                            G.frame.fight_fail_friendboss.once('in_over', function () {
                                G.frame.fanpai.data(d.d.flop).show();
                            });
                        }
                        me.getData(function () {
                            me.setList();
                            me.setStamina();
                            me.setBtn();
                        });
                        G.frame.fight.data({
                            pvType: 'hybs',
                            pvid: sender.fightMap,
                            prize: d.d.prize,
                            dps: d.d.dps,
                            jifen: d.d.jifen,
                            callback: function() {
                                sender.f(sender);
                            },
                        }).once('show', function() {
                            G.frame.yingxiong_fight.remove();
                        }).demo(d.d.fightres);
                    }else {
                        me.getData(function () {
                            me.setList();
                        })
                    }
                }, true);
            };
            ui.nodes.fightMap = G.class.friend.getPrizeByLv(data.boss.headdata.lv).fightmap;
            ui.nodes.btn_tz.uid = data.headdata.uid;
            ui.nodes.btn_tz.click(function (sender) {
                G.frame.fight.startFight({}, function(node) {
                    var selectedData = sender.selectedData = node.getSelectedData();
                    G.frame.gonghui_tanbao._uid = sender.uid;
                    G.ajax.send('friend_fight', [G.frame.gonghui_tanbao._uid, selectedData], function(d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            if (d.d.fightres.winside == 0) {
                                G.frame.fight_win_friendboss.once('in_over', function () {
                                    G.frame.fanpai.data(d.d.flop).show();
                                });
                            }else {
                                G.frame.fight_fail_friendboss.once('in_over', function () {
                                    G.frame.fanpai.data(d.d.flop).show();
                                });
                            }
                            me.getData(function () {
                                me.setList();
                                me.setStamina();
                                me.setBtn();
                            });
                            X.cacheByUid('fight_hybs', selectedData);
                            G.frame.fight.data({
                                pvType: 'hybs',
                                pvid: sender.fightMap,
                                prize: d.d.prize,
                                dps: d.d.dps,
                                jifen: d.d.jifen,
                                callback: function() {
                                    sender.f(sender);
                                },
                            }).once('show', function() {
                                G.frame.yingxiong_fight.remove();
                            }).demo(d.d.fightres);
                        }else{
                            me.getData(function () {
                                me.setList();
                            })
                        }
                    }, true);
                }, "hybs")
            });
        },
        getListData: function () {
            var me = this;
            var arr = [];

            if(me.DATA.myinfo.boss && JSON.stringify(me.DATA.myinfo.boss) != "{}") {
                arr.push(me.DATA.myinfo);
            }
            for (var i = 0; i < me.DATA.data.length; i ++) {
                arr.push(me.DATA.data[i]);
            }

            return arr;
        }
    });
    G.frame[ID] = new fun('ui_tip4.json', ID);
})();
;;/**
 * Created by llx on 2018/11/30.
 */

(function(){
    var ID='gonghui_tanhe';
    var fun = X.bUi.extend({
        ctor: function(json,id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        setContents: function() {
            var me = this;
            var scrollview = me.nodes.scrollview;
            var data = me.DATA.impeach;
            
            data.sort(function (a, b) {
               if(a.maxzhanli  != b.maxzhanli){
                   return a.maxzhanli > b.maxzhanli? -1 : 1;
               }else if (a.ghpower != b.ghpower){
                   return a.ghpoer < b.ghpower ? -1:1;
               }
            });
            for(var i=0; i<data.length ;i++){
                data[i].rank=i+1;
            }
            me.ui.finds('list_nr').setTouchEnabled(false);
            if(!me.table) {
                var table = me.table = new  X.TableView(scrollview, me.ui.finds('list_nr'),1, function (ui,data){
                    me.setItem(ui,data);
                },null,null,8,11);
                table.setData(data);
                table.reloadDataWithScroll(true);
            } else {
                me.table.setData(data);
                me.table.reloadDataWithScroll(false);
            }
            for(var i = 0; i < data.length; i ++){
                if(data[i].uid == P.gud.uid){
                    me.nodes.btn_th.setBright(false);
                    me.nodes.txt_th.setString(L("YTH"));
                    me.nodes.txt_th.setTextColor(cc.color("#6c6c6c"));
                }else{
                    me.nodes.txt_th.setString(L("CYTH"));
                }
            }
        },
        setItem: function(ui,data){
            var me =this;
            X.autoInitUI(ui);
            X.render({
                txt_name:data.name,
                txt_name2:L('GONGHUI_POWER_' + data.ghpower),
                sz_zdl:data.maxzhanli,
                ph_sz:data.rank,

            },ui.nodes);
            ui.data = data;
        },
        setBanner: function(){
            var me = this;
            X.render({
                txt_time:function(node) {
                     X.timeout(node, me.DATA.time+24* 3600 ,function(){
                         G.frame.gonghui_dating.zy.refreshPanel();
                         me.remove();
                     })
                }
            },me.nodes)
        },
        bindBIN: function(){
            var me = this;
            me.nodes.txt_th.setString(L("CYTH"));
            me.nodes.btn_th.touch(function (sender, type){
                if(type == ccui.Widget.TOUCH_ENDED) {
                    G.ajax.send('gonghui_impeach',[],function(d){
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1){
                            me.DATA.impeach.push(d.d.impeach[0]);
                            me.getData(function(){
                                me.setContents();
                            })
                        }
                    }, true);

                }
            });
        },
        onOpen: function () {
            var me = this;
            me.bindBIN();
            me.nodes.mask.click(function(){
                me.remove();
            })
        },

        onShow: function () {
            var me = this;
            me.getData();
            me.setContents();
            me.setBanner();
        },
        checkShow: function () {
            var me  = this;

            G.ajax.send('gonghui_getimpeach',[],function(d){
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1){
                    me.DATA = d.d;
                    if(d.d.impeach.length == 0 ){
                        G.frame.alert.data({
                            title: L('TS'),
                            cancelCall: null,
                            okCall: function () {
                                G.ajax.send('gonghui_impeach',[],function(d){
                                    if(!d) return;
                                    var d = JSON.parse(d);
                                    if(d.s == 1){
                                        me.DATA.impeach.push(d.d.impeach[0]);
                                        me.getData(function(){
                                            me.show();
                                            me.setContents();
                                        })
                                    }
                                }, true);

                                //setTimeout(function(){
                                //    me.show();
                                //},200)
                            },
                            richText: L('GONGHUI_TANHE')
                        }).show();
                    }else{
                        me.show();
                    }
                }
            }, true);
        },
        getData: function(callback){
            var me= this;
            G.ajax.send('gonghui_getimpeach',[],function(d){
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1){
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        onAniShow: function(){
            var me = this;
        },
        onRemove: function () {
            var me = this;
        }
    });

    G.frame[ID] = new fun('gonghui_tip2_huizhangtanhe.json', ID);
})();
;;/**
 * Created by LYF on 2018/12/5.
 */
(function () {
    //公会-段位宝箱
    var ID = 'gonghui_zdxx';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
            cc.enableScrollBar(me.nodes.listview_zdxx);
        },
        getData: function(callback) {
            var me = this;

            me.ajax("ghcompeting_fightinfo", [], function (str, data) {
                if(data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            })
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            for (var i in [me.nodes.btn_jgxx, me.nodes.btn_fsxx]) {
                [me.nodes.btn_jgxx, me.nodes.btn_fsxx][i].click(function (sender) {
                    var type = {
                        btn_jgxx$: "mygh",
                        btn_fsxx$: "rival"
                    };
                    me.changeType(type[sender.getName()]);
                })
            }
            me.nodes.btn_jgxx.triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        changeType: function (type) {
            var me = this;

            me.type = type;

            if(type == "mygh") {
                me.nodes.btn_jgxx.setBright(true);
                me.nodes.btn_jgxx.setTouchEnabled(true);
                me.nodes.btn_jgxx.children[0].setTextColor(cc.color("#7b531a"));

                me.nodes.btn_fsxx.setBright(false);
                me.nodes.btn_fsxx.setTouchEnabled(true);
                me.nodes.btn_fsxx.children[0].setTextColor(cc.color("#6c6c6c"));
            } else {
                me.nodes.btn_fsxx.setBright(true);
                me.nodes.btn_fsxx.setTouchEnabled(true);
                me.nodes.btn_fsxx.children[0].setTextColor(cc.color("#7b531a"));

                me.nodes.btn_jgxx.setBright(false);
                me.nodes.btn_jgxx.setTouchEnabled(true);
                me.nodes.btn_jgxx.children[0].setTextColor(cc.color("#6c6c6c"));
            }

            me.setListView();
        },
        setListView: function () {
            var me = this;
            var data = me.DATA[me.type];
            var listView = me.nodes.listview_zdxx;

            if(data.length < 1) {
                me.ui.finds("img_zw").show();
            } else {
                me.ui.finds("img_zw").hide();
            }

            listView.removeAllChildren();
            for (var i = 0; i < data.length; i ++) {
                listView.pushBackCustomItem(me.setList(data[i]));
            }
        },
        setList: function (data) {
            var me = this;
            var list = me.nodes.list_zdxx.clone();

            X.autoInitUI(list);

            var str = X.STR(L(me.type), data.name, data.rival_name, data.dps) + (data.winside == 0 ?
                (me.type == "mygh" ? X.STR(L(me.type + "_win"), data.jifen) : L(me.type + "_win")) : "");
            var rh = new X.bRichText({
                size: 20,
                lineHeight: 32,
                color: "#f6ebcd",
                family: G.defaultFNT,
                maxWidth: list.nodes.txt_zdxx.width
            });
            rh.text(str);
            rh.setAnchorPoint(0, 1);
            rh.setPosition(0, list.nodes.txt_zdxx.height);
            list.nodes.txt_zdxx.addChild(rh);

            list.nodes.txt_sj.setString(X.timetostr(data.ctime));

            list.show();
            list.finds("pan1").show();

            return list;
        }
    });
    G.frame[ID] = new fun('gonghui_ghzf_zdxx.json', ID);
})();
;;/**
 * Created by LYF on 2018/12/3.
 */
(function () {
    //公会-争锋
    var ID = 'gonghui_zhengfeng';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
            me.preLoadRes = ["gonghui3.png", "gonghui3.plist", "gonghui5.png", "gonghui5.plist"];
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_bz.click(function () {
                G.frame.help.data({
                    intr:L("TS23")
                }).show();
            });

            me.nodes.btn_fanhui.click(function () {
                me.remove();
            });

            me.ui.finds("btn_baoming").click(function () {
                if(me.jiesuan) {
                    G.frame.gonghui_sqph.show();
                } else {
                    if(P.gud.ghpower > 1) {
                        G.tip_NB.show(L("GHZ_BMSB"));
                        return;
                    }
                    me.ajax("ghcompeting_signup", [], function (str, data) {
                        if(data.s == 1) {
                            G.tip_NB.show(X.STR(L("GHZ_BMCG"), me.DATA.season));
                            me.getData(function () {
                                me.setContents()
                            });
                        } else {
                            me.getData(function () {
                                me.setContents()
                            });
                        }
                    })
                }
            });

            me.nodes.btn_duanweibaoxiang.click(function () {
                //段位宝箱
                G.frame.gonghui_dwbx.show();
            });

            me.nodes.btn_paimingjiangli.click(function () {
                //排名奖励
                G.frame.gonghui_pmjl.show();
            });

            me.nodes.btn_lijiewangzhe.click(function () {
                //历届王者
                if(G.frame.gonghui_zhengfeng.DATA.season == 1) {
                    G.tip_NB.show(L("SJWZZWDS"));
                    return;
                }
                G.frame.gonghui_ljwz.show();
            });

            me.nodes.btn_zdxx.click(function () {
                //战斗信息
                if(!me.isFight) {
                    G.tip_NB.show(L("GHZ_ZWZDXX"));
                    return;
                }
                G.frame.gonghui_zdxx.show();
            });
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;



            me.nodes.ding_jy.show();
            me.nodes.panel_dh.show();
            G.class.ani.show({
                json: "ani_gonghuizhenfeng_baoming",
                addTo: me.nodes.panel_dh,
                x: me.nodes.panel_dh.width / 2,
                y: 145,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    action.play("xunhuan", true);
                }
            });

            me.showToper();
            me.setContents();
            me.checkRedPoint();
        },
        getData: function(callback) {
            var me = this;

            me.ajax("ghcompeting_open", [], function (str, data) {
                if(data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            })
        },
        onHide: function () {
            var me = this;
            G.hongdian.getData("gonghui", 1, function () {
                G.frame.gonghui_main.checkRedPoint();
            });
        },
        setContents: function () {
            var me = this;
            var title = me.ui.finds("jy_jy");
            var num = me.ui.finds("wz_3");
            var cond = me.ui.finds("wz_4");
            var btn = me.ui.finds("btn_baoming");
            var ybm = me.nodes.img_ybm;
            var huizhang = me.nodes.panel_hz;
            var top = me.nodes.wz_shuoming;
            var saiji = me.nodes.wz_saiji;

            top.hide();
            num.hide();
            btn.hide();
            ybm.hide();
            cond.hide();
            title.hide();
            saiji.hide();
            huizhang.hide();
            huizhang.removeAllChildren();
            huizhang.removeBackGroundImage();
            btn.finds("wz_baoming").setFontSize(24);

            function  jiesuan(num) {
                if(me.DATA.segmentdata.segment == 4 && !me.isLK) {
                    G.class.ani.show({
                        json: "ani_gonghuizhenfeng_jiesuan",
                        x: huizhang.width / 2,
                        y: huizhang.height / 2 - 100,
                        addTo: huizhang,
                        repeat: true,
                        autoRemove: false,
                        onload: function (node, action) {
                            action.playWithCallback("in", false, function () {
                                action.play("xunhuan", true);
                            });
                            G.class.ani.show({
                                json: "ani_gonghuizhenfeng" + me.DATA.segmentdata.segment,
                                addTo: node.finds("xunzhang"),
                                x: node.finds("xunzhang").width / 2,
                                y: node.finds("xunzhang").height / 2,
                                repeat: true,
                                autoRemove: false,
                                onload: function (node, action) {
                                    action.play("xunhuan", true);
                                }
                            });
                            if(num != 6) {
                                node.finds("Text_1").setString(X.STR(L("GHZ_WZRANK"), me.DATA.segmentdata.rank));
                            } else {
                                node.finds("Text_1").setString(L("GHZ_LKJF") + G.class.getConf("gonghuizhengfeng").base.segment[4].lunk_integral);
                            }
                        }
                    });
                } else {
                    G.class.ani.show({
                        json: "ani_gonghuizhenfeng" + me.DATA.segmentdata.segment,
                        addTo: huizhang,
                        x: huizhang.width / 2,
                        y: huizhang.height / 2,
                        repeat: true,
                        autoRemove: false,
                        onload: function (node, action) {
                            if(me.DATA.advance == 1) {
                                action.playWithCallback("in", false, function () {
                                    action.play("xunhuan", true);
                                })
                            } else {
                                action.play("xunhuan", true);
                            }
                            if(!me.xiuzhan) {
                                G.class.ani.show({
                                    json: "ani_gonghuizhenfeng_jinji",
                                    addTo: huizhang,
                                    x: huizhang.width / 2,
                                    y: huizhang.height / 2 - 100,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node1, action1) {
                                        if(me.DATA.advance == 1) {
                                            action1.playWithCallback("jinji", false, function () {
                                                action1.play("jinjixunhuan", true);
                                            })
                                        } else if(me.DATA.advance == 0) {
                                            action1.playWithCallback("baoji", false, function () {
                                                action1.play("baojixunhuan", true);
                                            })
                                        } else {
                                            action1.playWithCallback("jiangji", false, function () {
                                                action1.play("jiangjixunhuan", true);
                                            });
                                        }
                                    }
                                })
                            }
                        }
                    });
                }
            }

            if(me.xunhuan && G.time > X.getTodayZeroTime() + 22 * 3600 && G.time <= X.getTodayZeroTime() + 22 * 3600 + 3) {
                //结算中
                me.nodes.panel_dh.hide();
                me.ui.finds("img_bg").loadTexture("img/bg/bg_ghzf.png");
                title.show();
                huizhang.show();
                btn.children[0].setString(L("GHZ_SLSQPM"));
                title.children[0].setString(L("GHZ_SQJSZ"));
                huizhang.setBackGroundImage("img/gonghui/img_huizhang5.png", 1);
                saiji.show();
                saiji.setString(X.STR(L("GHZ_SJ"), me.DATA.season));
                top.setString(X.STR(L("GHZ_SLJS"), me.DATA.round - 1, L("GHZ_DW" + me.DATA.segmentdata.segment)));
                return;
            }
            if(me.xiuzhan) {
                //周末休战
                top.show();
                num.show();

                if(me.DATA.season == 1) {
                } else {
                    saiji.show();
                    saiji.setString(X.STR(L("GHZ_SJ"), me.DATA.season));
                    top.setString(L("GHZ_SJJS"));
                }
                num.setString(X.STR(L("GHZ_BMGH"), me.DATA.guildnum || 0));
                if(me.DATA.status == 1) {
                    btn.children[0].setString(X.STR(L("GHZ_BMSJ"), me.DATA.season));
                    btn.show();
                    cond.show();
                    cond.setString(L("GHZ_TJ"));
                    if(P.gud.ghpower > 1) {
                        btn.setBright(false);
                        btn.finds("wz_baoming").setTextColor(cc.color("#6c6c6c"));
                    } else {
                        btn.setBright(true);
                        btn.finds("wz_baoming").setTextColor(cc.color("#2f5719"));
                    }
                    saiji.show();
                    saiji.setString(X.STR(L("GHZ_SJ"), me.DATA.season));
                    top.setString(L("GHZ_WBM"));
                }

                if(me.DATA.guildnum >= G.class.getConf("gonghuizhengfeng").base.cond.guild_num) {
                    me.addCountdown(num);
                }

                if(me.DATA.segmentdata.isjoin) {
                    huizhang.show();
                    title.show();
                    jiesuan();
                    title.children[0].setString(X.STR(L("SJJG"), me.DATA.season - 1));
                    me.ui.finds("img_bg").loadTexture("img/bg/bg_ghzf.png");
                    me.nodes.panel_dh.hide();
                }

                if(me.DATA.status == 2) {
                    ybm.show();
                    saiji.show();
                    saiji.setString(X.STR(L("GHZ_SJ"), me.DATA.season));
                    top.setString(L("GHZ_YBM1"));
                }
                return;
            }
            switch (me.DATA.status) {
                case 1:
                    //未报名
                    num.show();
                    btn.show();
                    cond.show();
                    top.show();
                    saiji.show();
                    saiji.setString(X.STR(L("GHZ_SJ"), me.DATA.season));
                    top.setString(L("GHZ_WBM"));
                    num.setString(X.STR(L("GHZ_BMGH"), me.DATA.guildnum));
                    cond.setString(L("GHZ_TJ"));
                    btn.finds("wz_baoming").setString(X.STR(L("GHZ_BMSJ"), me.DATA.season));
                    if(me.DATA.guildnum >= G.class.getConf("gonghuizhengfeng").base.cond.guild_num) {
                        num.hide();
                    }
                    if(P.gud.ghpower > 1) {
                        btn.setBright(false);
                        btn.finds("wz_baoming").setTextColor(cc.color("#6c6c6c"));
                    } else {
                        btn.setBright(true);
                        btn.finds("wz_baoming").setTextColor(cc.color("#2f5719"));
                    }
                    break;
                case 2:
                    //匹配中
                    ybm.show();
                    num.show();
                    top.show();
                    num.setString(X.STR(L("GHZ_BMGH"), me.DATA.guildnum));
                    saiji.show();
                    saiji.setString(X.STR(L("GHZ_SJ"), me.DATA.season));
                    top.setString(X.STR(L("GHZ_YBM"), me.DATA.round, L("GHZ_DW" + me.DATA.segmentdata.segment)));
                    if(me.DATA.guildnum >= G.class.getConf("gonghuizhengfeng").base.cond.guild_num) {
                        me.addCountdown(num);
                        btn.children[0].setString(L("GHZ_SLSQPM"));
                    }
                    break;
                case 3:
                    //匹配失败
                    me.nodes.panel_dh.hide();
                    me.ui.finds("img_bg").loadTexture("img/bg/bg_ghzf.png");
                    cond.show();
                    top.show();
                    title.show();
                    huizhang.show();
                    huizhang.setBackGroundImage("img/gonghui/hz_xiuzhan.png", 1);
                    title.children[0].setString(L("GHZ_XZ"));
                    saiji.show();
                    saiji.setString(X.STR(L("GHZ_SJ"), me.DATA.season));
                    top.setString(X.STR(L("GHZ_DDXZ"), me.DATA.round, L("GHZ_DW" + me.DATA.segmentdata.segment)));
                    cond.setString(L("GHZ_PPSB"));
                    me.addCountdown(num);
                    break;
                case 4:
                    //结算期
                    me.nodes.panel_dh.hide();
                    me.ui.finds("img_bg").loadTexture("img/bg/bg_ghzf.png");
                    top.show();
                    btn.show();
                    btn.finds("wz_baoming").setFontSize(26);
                    btn.loadTextureNormal("img/public/btn/btn1_ssj.png", 1);
                    btn.children[0].setTextColor(cc.color("#7b531a"));
                    huizhang.show();
                    saiji.show();
                    saiji.setString(X.STR(L("GHZ_SJ"), me.DATA.season));
                    me.addCountdown(num);
                    btn.children[0].setString(L("GHZ_SLSQPM"));
                    top.setString(X.STR(L("GHZ_DDPP"), me.DATA.round, L("GHZ_DW" + me.DATA.segmentdata.segment)));

                    if(G.time > X.getTodayZeroTime() + 22 * 3600 + 60 && G.time < X.getTodayZeroTime() * 24 * 3600) {
                        if(G.time > X.getLastMondayZeroTime() + 5 * 24 * 3600) {
                            top.setString(X.STR(L("GHZ_SLJS"), 6, L("GHZ_DW" + me.DATA.segmentdata.segment)));
                            num.show();
                            num.removeAllChildren();
                            cond.show();
                            btn.show();
                            cond.setString(L("GHZ_TJ"));
                            num.setString(L("GHZ_CRBM"));
                            btn.setBright(false);
                            btn.setTouchEnabled(false);
                            btn.finds("wz_baoming").setTextColor(cc.color("#6c6c6c"));
                            btn.finds("wz_baoming").setString(X.STR(L("GHZ_BMSJ"), me.DATA.season + 1));
                        }
                    }
                    me.jiesuan = true;
                    jiesuan();
                    break;
                case 6:
                    //轮空
                    me.DATA.advance = 1;
                    me.nodes.panel_dh.hide();
                    me.ui.finds("img_bg").loadTexture("img/bg/bg_ghzf.png");
                    huizhang.show();
                    title.show();
                    if(me.DATA.segmentdata.segment == 4 && me.DATA.pre_seg == me.DATA.segmentdata.segment) {
                        title.children[0].setString(L("GHZ_LK"));
                    } else {
                        me.isLK = true;
                        title.children[0].setString(X.STR(L("GHZ_GXLK"), L("GHZ_DW" + me.DATA.segmentdata.segment)));
                    }
                    saiji.show();
                    saiji.setString(X.STR(L("GHZ_SJ"), me.DATA.season));
                    top.setString(X.STR(L("GHZ_PPZ"), me.DATA.round, 6, L("GHZ_DW" + me.DATA.segmentdata.segment)));
                    jiesuan(6);
                    if(me.DATA.round != 6 && G.time < X.getLastMondayZeroTime() + 5 * 24 * 3600) {
                        me.addCountdown(num);
                    }
                    break;
            }
        },
        checkShow: function () {
            var me = this;

            if(G.time <= X.getLastMondayZeroTime() + 6 * 24 * 3600) {
                //循环期
                me.xunhuan = true;
            } else {
                me.xiuzhan = true;
                //休战期
            }
            
            G.ajax.send("ghcompeting_open", [], function (data) {
                if(!data) return;
                var data = JSON.parse(data);
                if(data.s == 1) {
                    me.DATA = data.d;
                    if(data.d.status == 5) {
                        if(G.time >= X.getTodayZeroTime() + 6 * 3600 && G.time <= X.getTodayZeroTime() + 22 * 3600) {
                            G.frame.gonghui_ghz.data(data.d).show();
                            me.isFight = true;
                        } else {
                            me.show();
                        }
                    } else {
                        me.show();
                    }
                }
            })
        },
        addCountdown: function (num) {
            var me = this;
            num.show();
            num.setString("");
            var str = L("XLDJS") + "<font node=1></font>";
            var txt = new ccui.Text("", G.defaultFNT, 18);
            txt.setTextColor(cc.color("#30ff01"));
            X.enableOutline(txt, "#000000", 2);
            X.timeout(txt, G.time > X.getTodayZeroTime() + 6 * 3600 ? X.getTodayZeroTime() + 24 * 3600 + 6 * 3600 : X.getTodayZeroTime() + 6 * 3600, function () {
                me.remove();
            });
            var rh = new X.bRichText({
                size: 18,
                family: G.defaultFNT,
                maxWidth: num.width,
                lineHeight: 32,
                color: "#ffffff",
                eachText: function (node) {
                    X.enableOutline(node, "#000000", 2);
                }
            });
            rh.text(str, [txt]);
            rh.setAnchorPoint(0.5, 0.5);
            rh.setPosition(num.width / 2, num.height / 2 + 10);
            num.addChild(rh);
        },
        checkRedPoint: function() {
            var me = this;

            if(G.DATA.hongdian.gonghui.competing == 3) {
                G.setNewIcoImg(me.nodes.btn_duanweibaoxiang);
            } else {
                G.removeNewIco(me.nodes.btn_duanweibaoxiang);
            }
        }
    });
    G.frame[ID] = new fun('gonghui_ghzf.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/9.
 */
(function () {
    //次日登陆
    var ID = 'ciridenglu';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });
        },
        getPrize: function(type) {
            var me = this;

            me.ajax("giverarepet_getprize", [type], function (str, data) {
                if(data.s == 1) {
                    G.frame.jiangli.data({
                        prize: data.d.prize
                    }).show();
                    me.getData(function () {
                        me.setContents();
                    })
                }
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.conf = G.class.getConf("ciridenglu");
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback) {
            var me = this;
            G.ajax.send("giverarepet_open", [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            })
        },
        show: function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me, arguments);
            })
        },
        onShow: function () {
            var me = this;

            me.setContents();

            X.setHeroModel({
                parent: me.nodes.panel_dh,
                data: {hid: G.class.getConf("ciridenglu")[4].hid},
                scaleNum: 1.25
            });

            G.class.ani.show({
                json: "ani_yingxiongzhaomu",
                addTo: me.nodes.panel_dh,
                x: 103,
                y: 90,
                repeat: true,
                autoRemove: false
            });

            for (var i = 1; i < 4; i ++) {
                var lay = me.nodes["img_tx" + i];
                lay.children[0].setBackGroundImage("ico/heroicon/" + G.class.fmtItemICON(me.conf[i].hid) + ".png");
            }

            X.timeout(me.nodes.txt_djs, me.DATA.time, function () {
                me.remove();
            })
        },
        onHide: function () {
            var me = this;
            G.view.mainView.getAysncBtnsData();
            G.hongdian.getData("herorecruit", 1);
        },
        setContents: function () {
            var me = this;
            var idx = 1;

            function f(type) {
                var text = me.nodes["img_wzdi" + type];
                var klq = X.inArray(me.DATA.can, type);
                var ylq = X.inArray(me.DATA.gotarr, type);
                var panel = me.nodes["panel_tx" + type];
                if(panel) panel.setTouchEnabled(false);
                switch (type) {
                    case 1:
                        text.children[0].setString(X.STR(L("TGGQ"), P.gud.maxmapid - 1, me.conf[type].pval));

                        if(klq) {
                            me.nodes.btn_jllq2.show();
                        } else {
                            me.nodes.btn_jllq2.hide();
                        }
                        if(ylq) {
                            me.nodes.btn_jllq2.hide();
                        } else {
                            me.nodes.btn_jllq2.click(function () {
                                me.getPrize(1);
                            });
                            panel.setTouchEnabled(true);
                            panel.click(function () {
                                me.getPrize(1);
                            });

                        }
                        break;
                    case 2:
                        text.children[0].setString(L("XYWJCRDL"));
                        if(klq) {
                            me.nodes.btn_jllq1.show();
                        } else {
                            me.nodes.btn_jllq1.hide();
                        }
                        if(ylq) {
                            me.nodes.btn_jllq1.hide();
                        } else {
                            me.nodes.btn_jllq1.click(function () {
                                me.getPrize(2);
                            });
                            panel.setTouchEnabled(true);
                            panel.click(function () {
                                me.getPrize(2);
                            });
                        }
                        break;
                    case 3:
                        text.children[0].setString(L("JHZZYK"));
                        if(klq) {
                            me.nodes.btn_jhyueka.show();
                            me.nodes.btn_jhyueka.loadTextureNormal("img/yingxiongzhaomu/yxzm_txt_lq.png", 1);
                            me.nodes.btn_jhyueka.click(function () {
                                me.getPrize(3);
                            });
                            panel.setTouchEnabled(true);
                            panel.click(function () {
                                me.getPrize(3);
                            });
                        } else {
                            me.nodes.btn_jhyueka.show();
                            me.nodes.btn_jhyueka.click(function () {
                                G.frame.huodong.once("hide", function () {
                                    me.getData(function () {
                                        me.setContents();
                                    });
                                }).data({
                                    type: 0,
                                    idx: 2
                                }).show();
                            });
                            panel.setTouchEnabled(true);
                            panel.click(function () {
                                G.frame.huodong.once("hide", function () {
                                    me.getData(function () {
                                        me.setContents();
                                    });
                                }).data({
                                    type: 0,
                                    idx: 2
                                }).show();
                            })
                        }
                        if(ylq) {
                            me.nodes.btn_jhyueka.hide();
                        }
                        break;
                    case 4:
                        if(klq) {
                            me.nodes.btn_lqan.show();
                        } else {
                            me.nodes.btn_lqan.hide();
                        }
                        if(ylq) {
                            me.nodes.btn_lqan.show();
                            me.nodes.btn_lqan.setTouchEnabled(false);
                            me.nodes.btn_lqan.loadTextureNormal("img/yingxiongzhaomu/btn_shouchong_ylq.png", 1);
                        } else {
                            me.nodes.btn_lqan.setTouchEnabled(true);
                            me.nodes.btn_lqan.click(function () {
                                me.getPrize(4);
                            })
                        }
                        break;
                }
            }

            while (idx < 5) {
                f(idx);
                idx ++;
            }

            for (var i = 1; i < 4; i ++) {
                var ylq = me.nodes["img_ylq" + i];
                var wz = me.nodes["img_wzdi" + i];

                if(X.inArray(me.DATA.gotarr, i)) {
                    ylq.show();
                    wz.children[0].setTextColor(cc.color("#47da46"));
                    wz.children[0].setString(L("YDC"));
                } else {
                    ylq.hide();
                    wz.children[0].setTextColor(cc.color("#aebbff"));
                }
            }
        },
    });
    G.frame[ID] = new fun('yingxiongzhaomu.json', ID);
})();
;;/**
 * Created by wfq on 2018/7/8.
 */
(function () {
    //huodong

    G.event.on('currencyChange', function () {
        if(G.frame.huodong.isShow){
            G.frame.huodong.updateTop();
        }
    });

    G.event.on('paysuccess', function() {
        if(!G.frame.huodong.isShow) return;
        G.hongdian.getHongdian(1, function () {
            G.frame.huodong.checkRedPoint();
        })
    });

    var ID = 'huodong';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me.singleGroup = "f2";
            me.preLoadRes=['event.png','event.plist'];
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_fh.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.xsArr = [];
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            //hdType  0= 精彩活动（固定类型活动） 1=限时活动（条件开启的活动）
            me.idx = me.data().idx || 0;
            me.hdType = me.data().type;
            me.refreshPanel();
            me.nodes.list.hide();
        },
        onRemove: function () {
            var me = this;

            X.releaseRes([
               'event.plist','event.png'
            ]);
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            me.hdType = me.data().type;
            this.getListData(function () {
                _super.apply(me,arguments);
            });
        },
        refreshPanel: function(){
            var me = this;

            me.createMenu();
            me.nodes.listview.getChildren()[me.idx] && me.nodes.listview.getChildren()[me.idx].triggerTouch(ccui.Widget.TOUCH_ENDED);
            me.checkRedPoint();
            me.setBaseInfo();
        },
        onHide: function () {
            var me = this;
            G.hongdian.getHongdian(1);
            me.emit("hide");
        },
        checkRedPoint: function(){
            var me = this;
            function f1() {
                var arr = ["sign", "yueka_xiao", "yueka_da", "dengjiprize"];
                for(var i = 0; i < arr.length; i ++){
                    if(G.DATA.hongdian[arr[i]] > 0){
                        G.setNewIcoImg(me.nodes.listview.getChildren()[i]);
                        me.nodes.listview.getChildren()[i].getChildByName("redPoint").setPosition(100, 157);
                    }else{
                        G.removeNewIco(me.nodes.listview.getChildren()[i]);
                    }
                }
            }
            function f2() {
                var data = G.DATA.hongdian.huodong;

                for (var i in me.xsArr) {
                    if(!cc.isNode(me.xsArr[i])) continue;
                    if(X.inArray(data, me.xsArr[i].hdid)) {
                        G.setNewIcoImg(me.xsArr[i]);
                        me.xsArr[i].getChildByName("redPoint").setPosition(100, 157);
                    }else {
                        G.removeNewIco(me.xsArr[i]);
                    }
                }
            }
            me.hdType ? f2() : f1();
        },
        getData: function (hdid, callback) {
            var me = this;

            me.ajax('huodong_open', [hdid], function(str, data){
                if (data.s == 1) {
                    callback && callback(data.d);
                }else if(data.s!=-105) {
                    G.frame.huodong.remove();
                }
            });
        },
        getListData: function (callback) {
            var me = this;

            if(me.hdType == 0){
                me.hdList = G.class.menu.get('huodong');
                callback && callback();
            }else{
                G.ajax.send('huodong_openlist',[],function(d) {
                    if(!d) return;
                    var d = JSON.parse(d);
                    if(d.s == 1) {
                        me.hdList = d.d;
                        callback && callback();
                    }
                },true);
            }
        },
        createMenu: function () {
            var me = this;

            var listview = me.nodes.listview;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();

            // var itemClone = me.nodes.list;
            // itemClone.hide();

            var menuItems = [];

            var menus = [].concat(me.hdList);
            cc.log('menus ~~~~', menus);

            for (var i = 0; i < menus.length; i++) {
                var mData = menus[i];
                var item = me.nodes.list.clone();
                me.setItem(item,mData);
                item.hdid = mData.hdid;
                item.data = mData;
                listview.pushBackCustomItem(item);
                me.xsArr.push(item);
                item.show();

                menuItems.push(item);
            }

            listview.jumpToTop();

            X.radio(menuItems, function (sender) {
                me.changeType(sender.data);
            },{
                callback1: function (sender) {
                    sender.finds('txt_name$').setOpacity(255);
                    sender.finds("img_light$").setVisible(true);
                    sender.finds("panel_dh$").setVisible(true);
                    sender.finds("ico$").runActions(cc.sequence(cc.scaleTo(0.1, 1.1, 1.1), cc.scaleTo(0.1, 1, 1)));
                },
                callback2: function (sender) {
                    sender.finds('txt_name$').setOpacity(255 * 0.6);
                    sender.finds("img_light$").setVisible(false);
                    sender.finds("panel_dh$").setVisible(false);
                },
                color: ["#FFE8C0", "#FFE8C0"],
            });
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            ui.setName(data.stype || data.id);

            ui.data = data;

            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);

            X.render({
                txt_name: function(node){
                    node.setString(data.title || data.name);
                    node.setTextColor(cc.color("#FFE8C0"));
                    X.enableOutline(node, "#2A1C0F", 2);
                },
                ico: function (node) {
                    node.setBackGroundImage('img/event/' + (data.icon) + '.png',0);
                },
                panel_dh: function (node) {
                    G.class.ani.show({
                        json: "ani_meirishilian",
                        addTo: node,
                        x: node.width / 2,
                        y: node.height / 2,
                        repeat: true,
                        autoRemove: false,
                    });
                },
            },ui.nodes);
        },
        changeType: function (data) {
            var me = this;
            var type = data.stype || data.id;

            me.curType = type;

            me.setContents(data);
        },
        setContents: function (data) {
            var me = this;
            //type为活动模板
            var type = me.curType;

            var viewConf = {

                "10001": G.class.huodong_libao,
                "10002": G.class.huodong_libao,
                "10003": G.class.huodong_limit,
                "10004": G.class.huodong_duihuan,
                "10005": G.class.huodong_jtfl,
                "10006": G.class.huodong_czlb,
                "10007": G.class.huodong_ljcz,
                "10008": G.class.huodong_djdr,
                "10009": G.class.huodong_djdr,
                "10010": G.class.huodong_djdr,
                "10022": G.class.huodong_djdr,
                "10011": G.class.huodong_kfcj,
                "10012": G.class.huodong_dbcz,
                "10015": G.class.huodong_dljl,
                "10016": G.class.huodong_ljxf,
                "10017": G.class.huodong_xstg,
                "10018": G.class.huodong_yxjl,
                "10021": G.class.huodong_jrdl,
                "10023": G.class.huodong_zcjb,
                "10024": G.class.huodong_lchl,
                "10025": G.class.huodong_yxry,
                "10026": G.class.huodong_mjzh,
                "1": G.class.huodong_denglu,
                "2": G.class.huodong_minMonthCard,
                "3": G.class.huodong_maxMonthCard,
                "4": G.class.huodong_lvFund,
                "5": G.class.huodong_weekPrize,
                "6": G.class.huodong_monthPrize,
                "666": G.class.huodong_fengcefanli,
            };
            var newView = new viewConf[type](data);
            ccui.helper.doLayout(newView);
            me.ui.nodes.panel_nr.addChild(newView);

			if(cc.isNode(me._panels)){
                me._panels.removeFromParent();
                me._panels = newView;
			}else{
				me._panels = newView;
			}

			if(me.isFirst) {
                X.audio.playEffect("sound/dianji.mp3", false);
            }
            me.isFirst = true;

            me.ui.setTimeout(function(){
            	G.guidevent.emit('huodong_setContents_over');
            },500);
        },
        setBaseInfo: function (obj) {
            var me = this;

            obj = obj || {};

            var attr1 = obj.need1 || {a:'attr',t:'jinbi'};
            var attr2 = obj.need2 || {a:'attr',t:'rmbmoney'};

            X.render({
                txt_jb:X.fmtValue(G.class.getOwnNum(attr1.t,attr1.a)),
                txt_zs:X.fmtValue(G.class.getOwnNum(attr2.t,attr2.a)),
                btn_jia1: function (node) {
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.dianjin.show();
                        }

                    });
                },
                btn_jia2: function (node){
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.chongzhi.show();
                        }
                    })
                }
            },me.nodes);
        },
        updateTop: function () {
            var me = this;
            me.nodes.txt_jb.setString(X.fmtValue(P.gud.jinbi));
            me.nodes.txt_zs.setString(X.fmtValue(P.gud.rmbmoney));
        }
    });

    G.frame[ID] = new fun('event.json', ID);
})();
;;/**
 * Created by zhangming on 2018-07-04
 */
(function () {
    //超值礼包
    G.class.huodong_czlb = X.bView.extend({
        ctor: function (data) {
            var me = this;
            me._data = data;
            me._super("event_scrollview.json");
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner6.png', 0);
                },
                panel_txt: function (node) {
                    node.show();
                },
                panel_title: function(node) {
                    var rh = new X.bRichText({
                        size:22,
                        maxWidth:node.width + 60,
                        lineHeight:24,
                        family:G.defaultFNT,
                        color:G.gc.COLOR.n5,
                        eachText: function (node) {
                            X.enableOutline(node,'#000000');
                        },
                    });
                    rh.text(me._data.intr);
                    rh.setAnchorPoint(0,1);
                    rh.setPosition(0, node.height);
                    node.addChild(rh);
                },
                txt_count: L("CHONGZHI"),
                txt_time: function (node) {
                    if(me.DATA.info.etime - G.time > 24 * 3600 * 2) {
                        me.nodes.txt_count.hide();
                        node.setString(X.moment(me.DATA.info.etime - G.time));
                    }else {
                        X.timeout(node, me.DATA.info.etime, function () {
                            me.timeout = true;
                        })
                    }
                },
            },me.nodes);
            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: "52025"},
            });
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data, pos) {
                me.setItem(ui, data, pos[0]+pos[1]);
            }, null, null, 1, 3);
            table.setData(me.DATA.info.arr);
            table.reloadDataWithScroll(true);
            table._table.tableView.setBounceable(false);
        },
        setItem: function (ui, data, idx) {
            var me = this;
            X.autoInitUI(ui);

            ui.nodes.btn_txt.setString( data.payinfo.showrmbmoney + L('YUAN') );
            if (me.DATA.myinfo.val[idx].num > 0) {
                ui.nodes.btn.setEnableState(true);
            } else {
                ui.nodes.btn.setEnableState(false);
                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
            }

            X.render({
                btn: function (node) {
                    node.click(function (sender, type) {
                        G.event.once('paysuccess', function(txt) {
                            try {
                                //G.tip_NB.show(X.createPrizeInfo(data.p,0, 1));
                                G.frame.jiangli.data({
                                    prize: data.p
                                }).show();
                                me.DATA.myinfo.val[idx].num -= 1;
                                me.DATA.myinfo.gotarr.push(data.val);
                                me.setItem(ui, data, idx);
                                // me.refreshPanel();
                            } catch (e) {}
                        });
                        G.event.emit('doSDKPay', {
                            pid: data.payinfo.proid,
                            logicProid: data.payinfo.proid,
                            money: data.payinfo.unitprice,
                            pname: ''
                        });
                    }, 3000)
                },
                ico_item: function (node) {
                    node.removeAllChildren();
                    X.alignItems(node, data.p, 0, {
                        touch: true,
                        callback: function () {
                        }
                    })
                },
                txt: function (node) {
                    node.removeAllChildren();
                    var txt = new ccui.Text(X.STR(me.DATA.info.show, me.DATA.myinfo.val[idx].num), G.defaultFNT, 22);
                    // txt.setFontName(G.defaultFNT);
                    txt.setTextColor(cc.color(me.DATA.myinfo.val >= data.val ? G.gc.COLOR[1] : G.gc.COLOR[5]));
                    txt.setAnchorPoint(0.5,0.5);
                    txt.setPosition(node.width / 2, node.height / 2);
                    node.addChild(txt);
                },
                img_zk: function (node) {
                    if(data.sale) {
                        node.show();
                        node.children[0].setString(data.sale + L("sale"));
                        X.enableOutline(node.children[0], "#008000", 2);
                    } else {
                        node.hide();
                    }
                }
            }, ui.nodes);
            ui.show();
        },
        refreshPanel: function () {
            var me = this;

            G.frame.huodong.getData(me._data.hdid, function (data) {
                me.DATA = data;
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;

            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            X.viewCache.getView("event_list1.json", function (node) {
                me.list = node.nodes.panel_list;

                me.refreshPanel();
            });
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        onRemove: function () {
            var me = this;
        },
    })
})();

;;/**
 * Created by LYF on 2018/9/12.
 */
(function () {
    //单笔充值
    G.class.huodong_dbcz = X.bView.extend({
        ctor: function (data) {
            var me = this;
            me._data = data;
            me._super("event_scrollview.json");
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner13.png', 0);
                },
                panel_txt: function (node) {
                    node.show();
                },
                txt_count: L("CHONGZHI"),
                txt_time: function (node) {
                    if(me._data.etime - G.time > 24 * 3600 * 2) {
                        me.nodes.txt_count.hide();
                        node.setString(X.moment(me._data.etime - G.time));
                    }else {
                        X.timeout(node, me._data.etime, function () {
                            me.timeout = true;
                        })
                    }
                },
                panel_title: function(node) {
                    var rh = new X.bRichText({
                        size:22,
                        maxWidth:node.width + 60,
                        lineHeight:24,
                        family:G.defaultFNT,
                        color:G.gc.COLOR.n5,
                        eachText: function (node) {
                            X.enableOutline(node,'#000000');
                        },
                    });
                    rh.text(me._data.intr);
                    rh.setAnchorPoint(0,1);
                    rh.setPosition(0, node.height);
                    node.addChild(rh);
                },
            },me.nodes);
            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: "4505a"},
            });
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data, pos) {
                me.setItem(ui, data, pos[0]+pos[1]);
            }, null, null, 1, 3);
            table.setData(me.DATA.info.arr);
            table.reloadDataWithScroll(true);
            table._table.tableView.setBounceable(false);
        },
        setItem: function (ui, data, idx) {
            var me = this;
            X.autoInitUI(ui);

            var etime = me._data.etime || 0;
            if (X.inArray(me.DATA.myinfo.gotarr, idx)) {
                ui.nodes.btn_txt.setString(L('YLQ'));
                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                ui.nodes.btn.setEnableState(false);
            }else if(X.inArray(me.DATA.myinfo.val, idx)){
                ui.nodes.btn_txt.setString(L('LQ'));
                ui.nodes.btn.setEnableState(true);
                ui.nodes.btn_txt.setTextColor(cc.color("#7b531a"));
                G.setNewIcoImg(ui.nodes.btn, .9);
            }else{
                G.removeNewIco(ui.nodes.btn);
                ui.nodes.btn_txt.setString(L('LQ'));
                ui.nodes.btn.setEnableState(false);
                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
            }
            // if (X.inArray(me.DATA.myinfo.val, idx)) {
            //     ui.nodes.btn_txt.setString(L('LQ'));
            //     ui.nodes.btn.setEnableState(false);
            //     ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
            // } else {
            //     G.removeNewIco(ui.nodes.btn);
            //     ui.nodes.btn_txt.setString(L('LQ'));
            //     ui.nodes.btn.setEnableState(false);
            //     ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
            // }
            // if (G.time < etime) {
                
                
            // } else {
                
            // }

            X.render({
                btn: function (node) {
                    node.click(function (sender, type) {
                        me.ajax('huodong_use', [me._data.hdid,1,idx], function (str, dd) {
                            if (dd.s == 1){
                                G.frame.jiangli.data({
                                    prize: data.p
                                }).show();
                                changeData(dd.d.myinfo,me.DATA.myinfo);
                                // me.refreshPanel();
                                ui.nodes.btn_txt.setString(L('YLQ'));
                                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                                ui.nodes.btn.setEnableState(false);
                                G.removeNewIco(ui.nodes.btn);
                                G.event.emit('hdchange',me._data.hdid);
                                G.hongdian.getData("huodong", 1, function () {
                                    G.frame.huodong.checkRedPoint();
                                })
                            }
                        },true);
                    })
                },
                ico_item: function (node) {
                    node.removeAllChildren();
                    X.alignItems(node, data.p, 0, {
                        touch: true,
                        callback: function () {
                        }
                    })
                },
                txt: function (node) {
                    node.removeAllChildren();
                    var txt = new ccui.Text(X.STR(me.DATA.info.show,data.czneed[0] / 10,data.czneed[1] / 10), G.defaultFNT, 22);
                    // txt.setFontName(G.defaultFNT);
                    txt.setTextColor(cc.color(me.DATA.myinfo.val >= data.val ? G.gc.COLOR[1] : G.gc.COLOR[5]));
                    txt.setAnchorPoint(0,0.5);
                    txt.setPosition(0, node.height / 2);
                    node.addChild(txt);
                },
            }, ui.nodes);
            ui.show();
        },
        refreshPanel: function () {
            var me = this;

            G.frame.huodong.getData(me._data.hdid, function (data) {
                me.DATA = data;
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            X.viewCache.getView("event_list4.json", function (node) {
                me.list = node.nodes.panel_list;
                me.refreshPanel();
            });
        },
        onNodeShow: function () {
            var me = this;
            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        onRemove: function () {
            var me = this;
            delete G.view.huodong_dbcz;
        },
    })
})();
;;/**
 * Created by wfq on 2018/7/8.
 */
(function () {
    //登录奖励
    G.class.huodong_denglu = X.bView.extend({
        extConf:{
            maxday:30
        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('event_sign.json');
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        bindBTN: function () {
            var me = this;

            me.nodes.btn_sign.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.ajax.send('sign_getprize',[],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            for (var key in d.d) {
                                if (key == 'prize') continue;
                                me.DATA[key] = d.d[key];
                            }
                            G.frame.jiangli.data({
                                prize: [].concat(d.d.prize)
                            }).show();
                            me.refreshData();
                            G.frame.huodong.updateTop();
                            G.hongdian.getData("sign", 1, function () {
                                G.frame.huodong.checkRedPoint();
                            })
                        }
                    },true);
                }
            });

            me.nodes.btn_info.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.help.data({
                        intr:L('TS12')
                    }).show();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.guang = [];
            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            // me.DATA = {
            //     alreadyget:1,
            //     remainnum:3, //最多30天
            //     data:[{a:'attr',t:'rmbmoney',n:100},{a:'attr',t:'rmbmoney',n:100},{a:'attr',t:'rmbmoney',n:100}]
            // };
            // callback && callback();
            G.ajax.send('sign_denglujiangliopen',[],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            },true);
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
            me.setBaseInfo();
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        refreshData: function () {
            var me = this;

            me.table.setData(me.DATA.data);
            me.table.reloadDataWithScroll(false);
            me.setBaseInfo();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner8.png', 0);
                    G.class.ani.show({
                        json:'ani_choukajuese',
                        addTo:node,
                        x:130,
                        y:node.height/2 - 40,
                        repeat:true,
                        autoRemove:false,
                        onload:function (node) {
                            
                        }
                    });
                }
            },me.nodes);
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var table = me.table = new X.TableView(scrollview,me.nodes.list_item,5, function (ui, data) {
                me.setItem(ui, data);
            },null,null,1);
            table.setData(me.DATA.data);
            table.reloadDataWithScroll(true);
            table._table.tableView.setBounceable(false);
            if(me.DATA.remainnum > 10) {
                table.reloadDataWithScrollToBottomRight();
            }
        },
        setItem: function (ui, data) {
            var me = this;
        
            X.autoInitUI(ui);
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            X.render({
                ico_item: function (node) {
                    node.removeAllChildren();
                    var wid = G.class.sitem(data.prize);
                    wid.setPosition(cc.p(node.width / 2,node.height / 2));
                    node.addChild(wid);
                    G.frame.iteminfo.showItemInfo(wid);
                },
                img_sign: function (node) {
                    node.hide();
                    while (node.getChildByTag(999999)){
                        node.getChildByTag(999999).removeFromParent();
                    }
                    if (data.daynum > me.DATA.alreadyget && (me.DATA.remainnum + me.DATA.alreadyget) >= data.daynum) {
                        node.show();
                        G.class.ani.show({
                            json: "ani_qiandao_1",
                            addTo: node,
                            x: 64,
                            y: 49,
                            repeat: true,
                            autoRemove: false,
                            onload :function(node,action){
                                node.setTag(999999);
                                node.setScale(1.2);
                            }
                        });
                    }
                },
                img_gou: function (node) {
                    node.hide();
                    if (data.daynum <= me.DATA.alreadyget) {
                        node.show();
                    }
                }
            },ui.nodes);
            
        },
        setBaseInfo: function () {
            var me = this;

            X.render({
                txt_number:me.DATA.alreadyget + '/' + me.extConf.maxday,
                btn_sign: function (node) {
                    node.setTouchEnabled(false);
                    node.setEnableState(false);
                    node.setTitleColor(cc.color(G.gc.COLOR.n15));
                    G.removeNewIco(node);
                    if (me.DATA.remainnum > 0) {
                        node.setTouchEnabled(true);
                        node.setEnableState(true);
                        node.setTitleColor(cc.color(G.gc.COLOR.n13));
                        G.setNewIcoImg(node, .95);
                    }
                }
            },me.nodes);
        }
    });

})();
;;/**
 * Created by LYF on 2018/7/8.
 */
(function () {
    //周长活动
    G.class.huodong_djdr = X.bView.extend({
        ctor: function (data) {
            var me = this;
            me.DATA = data;
            me._super("event_scrollview.json");
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;
            me.bindBtn();
            me.img = {
                10010: {
                    bg: "img_event_banner9.png",
                    icon: "token_jb.png",
                },
                10008: {
                    bg: "img_event_banner10.png",
                    icon: "token_baoxiang.png",
                },
                10009: {
                    bg: "img_event_banner11.png",
                    icon: "token_xsjf.png",
                },
                10022: {
                    bg: "img_event_banner16.png",
                    icon: "token_kstx.png"
                }
            }
        },
        onShow: function () {
            var me = this;
            me.nodes.panel_banner2.show();
            me.nodes.Image_5.show();
            me.nodes.wz_title.removeAllChildren();

            var tt = new X.bRichText({
                size: 19,
                maxWidth: me.nodes.wz_title.width,
                lineHeight: 32,
                color: "#efe4c7",
                family: G.defaultFNT,
                eachText: function (node) {
                    X.enableOutline(node, "#000000", 2);
                }
            });
            tt.text(me.DATA.intr);
            tt.setAnchorPoint(0, 1);
            tt.setPosition(0, me.nodes.wz_title.height);
            me.nodes.wz_title.addChild(tt);

            me.nodes.panel_banner2.setBackGroundImage("img/event/" + me.img[me.DATA.stype].bg,0);

            var str = "<font node=1></font>" + me.DATA.buff;
            var img = new ccui.ImageView("img/public/token/" + me.img[me.DATA.stype].icon, 1);
            img.setScale(.8);
            var rh = new X.bRichText({
                size: 18,
                maxWidth: me.ui.finds("wz_xg").width,
                lineHeight: 32,
                color: "#fff8e1",
                family: G.defaultFNT,
            });
            rh.text(str, [img]);
            rh.setAnchorPoint(0, 1);
            rh.setPosition(0, me.ui.finds("wz_xg").height);
            me.ui.finds("wz_xg").addChild(rh);

            me.nodes.panel_txt3.show();
            me.nodes.panel_txt2.show();
            me.ui.finds("btn_phjl").show();
            me.ui.finds("btn_phjl").click(function () {
                G.frame.huodong_phb.data(me.DATA).show();
            });
            me.nodes.btn_jlyl.show();
            me.nodes.btn_jlyl.click(function () {
                G.frame.huodong_jlyl.data(me.DATA.data.rankprize).show();
            });
            me.nodes.btn_buy2.hide();
            me.nodes.txt_count2.show();
            me.nodes.txt_count2.setString(L("JLJS"));
            me.nodes.txt_time2.show();

            var time = me.DATA.etime - 5 * 60;

            if(G.time > me.DATA.rtime && G.time < me.DATA.etime) {
                me.nodes.txt_count2.hide();
                me.nodes.txt_time2.setString(L("已截止"));
                me.nodes.txt_time2.setTextColor(cc.color("#ffffff"))
            }else {
                if(time - G.time > 24 * 3600 * 2) {
                    me.nodes.txt_count2.hide();
                    me.nodes.txt_time2.setString(X.moment(time - G.time));
                }else {
                    X.timeout(me.nodes.txt_time2, time, function () {
                        X.uiMana.closeAllFrame();
                    });
                }
            }



            X.setHeroModel({
                parent: me.nodes.panel_hero,
                data: {hid: me.DATA.model},
                // scaleNum: .5,
                // direction: -.5
            });

            if(me.DATA.stype == 10010) {
                G.frame.dianjin.once("hide", function () {
                    if(!G.frame.huodong.isShow) return;
                    G.hongdian.getData("zhouchanghuodong" ,1, function () {
                        G.frame.huodong.checkRedPoint();
                    });
                    me.refreshData();
                })
            }

            X.viewCache.getView("event_list3.json", function (node) {
                me.list = node.nodes.panel_list;
                me.refreshPanel();
            });
        },
        onRemove: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("huodong_open", [me.DATA.hdid], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.data = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;

            // me.setBanner();
            cc.enableScrollBar(me.nodes.scrollview);
            me.setTable();
            //me.setBaseInfo();
        },
        refreshData: function () {
            var me = this;
            me.getData(function () {
                me.setTable();
            });
        },
        setTable: function () {
            var me = this;
            var scrollview = me.nodes.scrollview;
            var data = me.data.info.arr;

            for(var i = 0; i < data.length; i ++){
                data[i].idx = i;
            }
            for(var i = 0; i < data.length; i ++){
                if(X.inArray(me.data.myinfo.gotarr, data[i].val)){
                    data[i].rank = 2;
                }else{
                    data[i].rank = 1;
                }
            }
            data.sort(function (a, b) {
                if(a.rank != b.rank){
                    return a.rank < b.rank ? -1 : 1;
                }else{
                    return a.val < b.val ? -1 : 1;
                }

            });

            if(!me.table) {
                var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data) {
                    me.setItem(ui, data);
                }, null, null, 1, 3);
                table.setData(data);
                table.reloadDataWithScroll(true);
                table._table.tableView.setBounceable(false);
            } else {
                me.table.setData(data);
                me.table.reloadDataWithScroll(false);
            }


        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            X.render({
                txt_jdt: function(node){
                    node.setString(me.data.myinfo.val + "/" + data.val);
                    X.enableOutline(node,'#66370e',2);
                },
                txt_title: function (node) {
                    node.removeAllChildren();

                    var txt = new ccui.Text(X.STR(me.DATA.tips, data.val), G.defaultFNT, 22);
                    txt.setFontName(G.defaultFNT);
                    txt.setTextColor(cc.color(G.gc.COLOR.n4));
                    txt.setAnchorPoint(0,0.5);
                    txt.setPosition(0, node.height / 2 + 3);
                    node.addChild(txt);
                },
                img_jdt: function (node) {
                    node.setPercent(me.data.myinfo.val / data.val * 100);
                },
                ico_item: function (node) {
                    node.removeAllChildren();
                    X.alignItems(node, data.p, 'left', {
                        touch: true,
                        mapItem: function (item) {
                        }
                    })
                },
                btn_txt: function (node) {
                    node.setString(X.inArray(me.data.myinfo.gotarr, data.val) ? L("YLQ") : L("LQ"));
                    if( me.data.myinfo.val >= data.val) {
                        node.setTextColor(cc.color(X.inArray(me.data.myinfo.gotarr, data.val) ? G.gc.COLOR.n15 : G.gc.COLOR.n13));
                    }else {
                        node.setTextColor(cc.color(G.gc.COLOR.n15));
                    }
                },
                btn: function (node) {
                    node.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                    var is = X.inArray(me.data.myinfo.gotarr, data.val) ? false : true;
                    if(is && me.data.myinfo.val >= data.val){
                        G.setNewIcoImg(node, .9);
                    }else{
                        G.removeNewIco(node);
                    }
                    if( me.data.myinfo.val >= data.val) {
                        node.setTouchEnabled(is);
                        node.setBright(is);
                    }else {
                        //node.setTouchEnabled(false);
                        node.setBright(false);
                    }
                    node.click(function (sender, type) {
                        if(me.data.myinfo.val < data.val){
                            G.tip_NB.show(L("WDDLQTJ"));
                            return;
                        }
                        G.ajax.send("huodong_use", [me.DATA.hdid, 1, data.idx], function (d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                G.frame.jiangli.data({
                                    prize: data.p
                                }).show();
                                me.refreshData();
                                // G.frame.huodong.updateTop();
                                G.hongdian.getData("huodong", 1, function () {
                                    G.frame.huodong.checkRedPoint();
                                })
                            }
                        }, true)
                    })
                }
            }, ui.nodes);
            ui.show();
        }
    })
})();
;;/**
 * Created by lsm on 2018-09-26
 */
(function () {
    //登陆领奖
    G.class.huodong_dljl = X.bView.extend({
        ctor: function (data) {
            var me = this;
            me._data = data;
            me._super("event_scrollview.json");
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner14.png', 0);
                },
                panel_txt: function (node) {
                    node.show();
                },
                panel_title: function(node) {
                    var rh = new X.bRichText({
                        size:22,
                        maxWidth:node.width + 60,
                        lineHeight:24,
                        family:G.defaultFNT,
                        color:G.gc.COLOR.n5,
                        eachText: function (node) {
                            X.enableOutline(node,'#000000');
                        },
                    });
                    rh.text(me._data.intr);
                    rh.setAnchorPoint(0,1);
                    rh.setPosition(0, node.height);
                    node.addChild(rh);
                },
                txt_count: L("CHONGZHI"),
                txt_time: function (node) {
                    if(me._data.etime - G.time > 24 * 3600 * 2) {
                        me.nodes.txt_count.hide();
                        node.setString(X.moment(me._data.etime - G.time));
                    }else {
                        X.timeout(node, me._data.etime, function () {
                            me.timeout = true;
                        })
                    }
                },
            },me.nodes);
            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: "52025"},
            });
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            for (var i in me.DATA.info.arr) {
                me.DATA.info.arr[i].index = i;
            }

            me.DATA.info.arr.sort(function (a, b) {
                return a.val - b.val;
            });

            var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data, pos) {
                me.setItem(ui, data, pos[0]+pos[1]);
            }, null, null, 1, 3);
            table.setData(me.DATA.info.arr);
            table.reloadDataWithScroll(true);
            table._table.tableView.setBounceable(false);
        },
        setItem: function (ui, data, idx) {
            var me = this;
            X.autoInitUI(ui);
            if (me.DATA.myinfo.val >= data.val) {
                if (X.inArray(me.DATA.myinfo.gotarr, data.val)) {
                    ui.nodes.btn_txt.setString(L('YLQ'));
                    ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                    ui.nodes.btn.setEnableState(false);
                    G.removeNewIco(ui.nodes.btn);
                } else {
                    ui.nodes.btn_txt.setString(L('LQ'));
                    ui.nodes.btn.setEnableState(true);
                    ui.nodes.btn_txt.setTextColor(cc.color("#2f5719"));
                    G.setNewIcoImg(ui.nodes.btn, .9);
                }
            } else {
                G.removeNewIco(ui.nodes.btn);
                ui.nodes.btn_txt.setString(L('LQ'));
                ui.nodes.btn.setEnableState(false);
                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
            }
            X.render({
                btn: function (node) {
                    node.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                    node.click(function(sender, type) {
                        me.ajax('huodong_use', [me._data.hdid, 1, data.index], function(str, dd) {
                            if (dd.s == 1) {
                                G.frame.jiangli.data({
                                    prize: data.p
                                }).show();
                                changeData(dd.d.myinfo, me.DATA.myinfo);
                                // me.refreshPanel();
                                ui.nodes.btn_txt.setString(L('YLQ'));
                                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                                ui.nodes.btn.setEnableState(false);
                                G.removeNewIco(ui.nodes.btn);
                                G.hongdian.getData("huodong", 1, function () {
                                    G.frame.huodong.checkRedPoint();
                                })
                            }
                        }, true);
                    })
                },
                ico_item: function (node) {
                    node.removeAllChildren();
                    X.alignItems(node, data.p, 0, {
                        touch: true,
                        callback: function () {
                        }
                    })
                },
                txt: function (node) {
                    node.removeAllChildren();
                    var txt = new ccui.Text(X.STR(me.DATA.info.show, data.val,me.DATA.myinfo.val,data.val), G.defaultFNT, 22);
                    // txt.setFontName(G.defaultFNT);
                    txt.setTextColor(cc.color(me.DATA.myinfo.val >= data.val ? G.gc.COLOR[1] : G.gc.COLOR[5]));
                    txt.setAnchorPoint(0,0.5);
                    txt.setPosition(0, node.height / 2);
                    node.addChild(txt);
                },
            }, ui.nodes);
            ui.show();
        },
        refreshPanel: function () {
            var me = this;

            G.frame.huodong.getData(me._data.hdid, function (data) {
                me.DATA = data;
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;

            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            X.viewCache.getView("event_list4.json", function (node) {
                me.list = node.nodes.panel_list;

                me.refreshPanel();
            });
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        onRemove: function () {
            var me = this;
        },
    })
})();

;;/**
 * Created by wfq on 2018/7/8.
 */
(function () {
    //兑换

    G.event.on("itemchange_over", function () {
        if(G.frame.huodong.duihuan) {
            G.frame.huodong.duihuan.showItem();
        }
    });

    G.class.huodong_duihuan = X.bView.extend({
        ctor: function (data) {
            var me = this;
            me._data = data;
            G.frame.huodong.duihuan = me;
            me._super('event_scrollview.json');
        },
        refreshPanel:function () {

        },
        onOpen: function () {
            var me = this;
            cc.enableScrollBar(me.nodes.scrollview);
            X.viewCache.getView('event_list2.json', function(view) {
                me.list = view.nodes.panel_list;
                // me.ui.addChild(view);
                me.getData(function () {
                    me.setContents();
                });
            });
            me.setBanner();
            me.showItem();
        },
        showItem: function() {
            var me = this;

            if(me._data.showitem && X.keysOfObject(me._data.showitem).length > 0) {

                me.ui.finds("daibi").show();
                me.ui.finds("ico").setBackGroundImage(G.class.getItemIco(me._data.showitem.t), 1);
                me.ui.finds("wz_sz").setString(G.class.getOwnNum(me._data.showitem.t, "item"));
            }
        },
        onShow: function () {
            var me = this;
        },
        onRemove: function () {
            var me = this;

            G.frame.huodong.duihuan = undefined;
        },
        getData: function (callback) {
            var me = this;
            G.frame.huodong.getData(me._data.hdid,function (data) {
                me.DATA = data;
                callback && callback();
            });
        },
        setContents: function () {
            var me = this;
            me.setTime();
            var table = new X.TableView(me.nodes.scrollview,me.list,1, function (ui, data,pos) {
                me.setItem(ui,data,pos[0]);
            },null,null,1);
            table.setData(me.DATA.myinfo.arr);
            table.reloadDataWithScroll(true);
            table._table.tableView.setBounceable(false);
        },
        setIcon:function (ui,arr,b,i) {
            var me = this;
            if( !i ) i = 0;
            var enough = 0;
            for(var idx = 0; idx < arr.length; idx++){
                var wid = G.class.sitem(arr[idx]);
                var item = ui.nodes['item'+ (idx + 1 + i)];
                wid.setPosition(item.width * 0.5,item.height * 0.5);
                item.removeAllChildren();
                item.addChild(wid);
                G.frame.iteminfo.showItemInfo(wid);
                if(b){
                    G.class.getOwnNum(arr[idx].t,arr[idx].a) >= arr[idx].n ? enough ++ :'';
                }
            }
            return enough == arr.length ? true : false;
        },
        setItem:function (ui,data,pos) {
            var me = this;
            X.autoInitUI(ui);
            if(!data){
                ui.hide();
                return;
            }
            //消耗图标
            var  enough = me.setIcon(ui, data.need ,true);

            var i = 2;
            if(data.need.length == 1){
                ui.nodes.img_plus.loadTexture('img/event/img_event_equal.png',1);
                ui.nodes.img_event_equal.hide();
                i = 1;
            }
            //奖励图标
            me.setIcon(ui, data.p , false ,i);
            X.render({
                txt: function(node){
                    var str = new ccui.Text(data.buynum >= 0 ? X.STR(L('XGX'),data.buynum) : L("YJ"), G.defaultFNT, 18);
                    str.setAnchorPoint(0.5, 0.5);
                    str.setTextColor(cc.color(G.gc.COLOR.n4));
                    str.setPosition(node.width / 2, node.height / 2);
                    node.removeAllChildren();
                    node.addChild(str);
                },
                btn_txt:function (node) {
                    node.setString(L('DUIHUAN'));
                    node.setTextColor(cc.color(G.gc.COLOR.n12));
                },
            },ui.nodes);
            if(data.buynum < 1){
                ui.nodes.btn.setTouchEnabled(false);
                ui.nodes.btn.setBright(false);
                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
            }else{
            	ui.nodes.btn.setTouchEnabled(true);
                ui.nodes.btn.setBright(true);
                ui.nodes.btn_txt.setTextColor(cc.color("#2f5719"));
            }
            ui.nodes.btn.loadTextureNormal("img/public/btn/btn1_on.png", 1);
            ui.nodes.btn.data = data;
            ui.nodes.btn.pos = pos;
            ui.nodes.btn.click(function(sender, type){
                if(me.timeout){
                    G.tip_NB.show(L("LBGQ"));
                    return;
                }
                me.ajax('huodong_use',[me._data.hdid,1,sender.pos],function(str,d) {
                    if(d.s == 1) {
                        cc.mixin(me.DATA.myinfo.arr[sender.pos],d.d.myinfo,true);
                        G.frame.jiangli.data({
                            prize: sender.data.p
                        }).show();
                        me.showItem();
                        me.setItem(sender.getParent(), me.DATA.myinfo.arr[sender.pos] ,sender.pos);
                    }
                },true);
            });
            ui.show();
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        setBanner: function () {
            var me = this;
            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner4.png', 0);
                },
                txt_count:L('SHENGYU'),
                panel_title: function(node) {
                    var rh = new X.bRichText({
                        size:22,
                        maxWidth:node.width + 60,
                        lineHeight:24,
                        family:G.defaultFNT,
                        color:G.gc.COLOR.n5,
                        eachText: function (node) {
                            X.enableOutline(node,'#000000');
                        },
                    });
                    rh.text(me._data.intr);
                    rh.setAnchorPoint(0,1);
                    rh.setPosition(0, node.height);
                    node.addChild(rh);
                },
            },me.nodes);
            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: "1203a"},
            });
        },
        setTime:function () {
            var me = this;
            me.nodes.panel_txt.show();
            if(me.DATA.info.etime - G.time > 24 * 3600 * 2) {
                me.nodes.txt_count.hide();
                me.nodes.txt_time.setString(X.moment(me.DATA.info.etime - G.time));
            }else {
                X.timeout(me.nodes.txt_time, me.DATA.info.etime, function () {
                    me.timeout = true;
                })
            }
        },
    });

})();
;;(function () {
    //封测返利
    G.class.huodong_fengcefanli = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super("event_shoufafanli.json");
        },
        refreshPanel: function () {
            var me = this;
            me.getData(function () {
                me.setContents();
            });
        },
        getData: function (callback) {
            var me = this;
            G.frame.huodong.getData(me._type.hdid,function(d){
                me.DATA = d;
                callback && callback();
            })
        },
        bindBTN: function() {
            var me = this;

        },
        onOpen: function () {
            var me = this;
            me.bindBTN();
        },
        onShow: function () {
            var me = this;
            me.ui.finds('btn_lq').hide();
            me.ui.finds('bg_10').hide();
            me.ui.finds('ylq').hide();

            me.refreshPanel();
        },
        setContents: function () {
            var me = this;
            var data = me.DATA;
            var item = [];
            for(var i=1;i<=4;i++){
                item.push( me.ui.finds('ico_wupin'+i) );
            }

            if(data.myinfo.val){
                me.ui.finds('btn_lq').hide();
                me.ui.finds('ylq').show();

                me.ui.finds('bg_10').show();

                for(var i = 0;i<data.myinfo.gotarr.length;i++){
                    X.alignCenter(item[i],[data.myinfo.gotarr[i]],false,true);
                }
            }else {
                me.getDataFromGameConfig({binduid:P.gud.binduid, hdid: me._type.hdid , uid:P.gud.uid, rolename:P.gud.name},function (d) {
                    var data = d;
                    if(data.s == 1){
                        me.ui.finds('btn_lq').show();
                        me.ui.finds('bg_10').show();
                        for(var i = 0;i<data.prize.length;i++){
                            X.alignCenter(item[i],[data.prize[i]],false,true);
                        }
                        me.ui.finds('btn_lq').data = data.data;

                        me.ui.finds('btn_lq').click(function (sender) {
                            G.ajax.send('huodong_fengcefanli',[sender.data,me._type.hdid],function(data){
                                var data = JSON.parse(data);
                                if(data.s == 1){
                                    G.frame.jiangli.data({
                                        prize: data.d
                                    }).show();
                                    me.ui.finds('btn_lq').hide();
                                    me.ui.finds('ylq').show();
                                }
                            });
                        });

                    }else {
                        me.ui.finds('img_wz').loadTexture('img/event/sffl2.png',1);
                        me.ui.finds('btn_lq').hide();
                        me.ui.finds('bg_10').hide();
                    }
                });
            };
        },
        getDataFromGameConfig : function (data,callback) {
            var me = this;
            var shoufafuliUrl = "http://gameconfig.legu.cc/?app=api&act=getFanLiInfo";
            var sing = X.MD5('' + data.binduid + data.hdid + data.uid +'xW3t8sTw');
            var url = shoufafuliUrl+"&binduid="+data.binduid+"&hdid="+data.hdid+"&uid="+data.uid+"&rolename="+data.rolename+"&sign="+sing;
            X.ajax.get(url,{},function(txt) {
                var d = X.toJSON(txt);
                callback && callback(d);
            });
        }
    })
})();
;;/**
 * Created by LYF on 2018/9/25.
 */
(function () {
    //月基金-奖励预览
    var ID = 'yjj_jlyl';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.setTouchEnabled(true);
            me.ui.click(function (sender) {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            me.curId = me.data();
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.ui.finds("pan1").hide();
            cc.enableScrollBar(me.ui.finds("listview"));
            me.ui.finds("listview").setItemsMargin(3);
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setItem(me.data().data)
        },
        setItem: function (data) {
            var me= this;
            var arr = [];
            var all = [];
            for (var i = 0; i < data.length; i ++) {
                arr.push(data[i]);
                if((i + 1) % 4 == 0) {
                    all.push(arr);
                    arr = [];
                }
            }
            if(arr.length > 0) all.push(arr);

            for (var i = 0; i < all.length; i ++) {
                var layout = new ccui.Layout;
                var itemArr = [];
                layout.setContentSize(cc.size(me.ui.finds("listview").width, 140));
                for (var j = 0; j < all[i].length; j ++) {
                    var item = G.class.sitem(all[i][j].p[0]);
                    if(X.inArray(me.data().texiao, all[i][j].val - 1)) {
                        G.class.ani.show({
                            json: "ani_viptouxiang",
                            addTo: item,
                            x: item.width / 2,
                            y: item.height / 2,
                            repeat: true,
                            autoRemove: false
                        })
                    }
                    var list = me.data().list.clone();
                    item.setPosition(list.finds("ico").width / 2, list.finds("ico").height / 2);
                    G.frame.iteminfo.showItemInfo(item);
                    list.finds("ico").addChild(item);

                    var str = X.STR(L("LJJT"), all[i][j].val);
                    var rh = new X.bRichText({
                        size: 18,
                        maxWidth: list.finds("wz").width,
                        lineHeight: 32,
                        color: "#b55222",
                        family: G.defaultFNT,
                    });
                    rh.text(str);
                    rh.setAnchorPoint(0.5, 0.5);
                    rh.setPosition(list.finds("wz").width / 2, list.finds("wz").height / 2);
                    list.finds("wz").addChild(rh);
                    list.setAnchorPoint(0.5, 0.5);
                    list.show();

                    itemArr.push(list);
                }
                if(itemArr.length < 4) {
                    var inter = (layout.width - 4 * itemArr[0].width) / 4;
                    for (var n = 0; n < itemArr.length; n ++) {
                        itemArr[n].setScale(.9);
                        itemArr[n].setPosition(itemArr[n].width / 2 + 3.2 + n * itemArr[n].width + n * inter, layout.height / 2);
                        layout.addChild(itemArr[n]);
                    }
                }else {
                    X.center(itemArr, layout, {
                        scale: .9
                    });
                }
                me.ui.finds("listview").pushBackCustomItem(layout);
            }
            var kong = new ccui.Layout;
            kong.setContentSize(me.ui.finds("pan1").width, 20);
            me.ui.finds("listview").pushBackCustomItem(kong);
        }
    });
    G.frame[ID] = new fun('shijieshu_jlyl.json', ID);
})();
;;/**
 * Created by LYF on 2018/8/15.
 */
(function () {
    //活动-奖励预览
    var ID = 'huodong_jlyl';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
            me.nodes.text_zdjl.setString(L("JLYL"));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            new X.bView("ui_eventphb.json", function (view) {
                me.view = view;
                me.nodes.panel_nr.addChild(view);
                me.view.nodes.panel_rank.height -= 103;
                ccui.helper.doLayout(me.view.nodes.panel_rank);
                me.view.nodes.panel_rank.setPositionY(560);
                X.viewCache.getView('ui_list4.json', function (node) {
                    me.list = node.nodes.list_rank;
                    me.setDownText();
                    me.setContents();
                });
            });


        },
        setDownText:function(){
            var me = this;
            me.view.nodes.txt_sm.show();
            me.view.nodes.txt_sm.setString(L('JLYL_INFO'));
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var scrollview = me.view.nodes.scrollview;
            var data = me.data();
            data[data.length - 1].push([]);
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();
            // scrollview.y -= me.view.nodes.panel_player.height/2;
            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,10,10);
            table.setData(data);
            table.reloadDataWithScroll(true);
            scrollview.getChildren()[0].getChildren()[0].x = -1;
        },
        setItem: function (ui, data) {
            X.autoInitUI(ui);
            var layPh = ui.nodes.img_rank;
            var txtPh = ui.nodes.sz_phb;
            txtPh.removeAllChildren();
            layPh.removeAllChildren();
            var rank = data[0];
            if (rank[0] < 4) {
                layPh.setBackGroundImage('img/public/img_paihangbang_' + rank[0] + '.png', 1);
                layPh.show();
                txtPh.hide();
            }else {
                if(data.length < 3) {
                    txtPh.setString(rank[0] + '-' +rank[1] );
                    txtPh.show();
                    layPh.hide();
                }else {
                    txtPh.hide();
                    layPh.show();
                    layPh.setBackGroundImage("img/public/ph_200yihou.png", 1);
                }
            }
            ui.nodes.panel_item.setPositionX(520);
            X.alignItems(ui.nodes.panel_item,data[1],'left',{touch:true});
            ui.show();
        },
    });
    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/10.
 */
(function () {
    //节日掉落
    G.class.huodong_jrdl = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('event_jieridiaoluo.json');
        },
        refreshPanel:function () {
            var me = this;
            me.getData(function(){
                me.setContents();
            })
        },
        onOpen: function () {
            var me = this;
            me.initUi();
        },
        initUi:function(){
            var me = this;

        },
        onShow: function () {
            var me = this;
            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;
            G.frame.huodong.getData(me._type.hdid,function(d){
                me.DATA = d;
                callback && callback();
            })
        },
        setContents: function () {
            var me = this;
            var data = me.DATA.info;
            var str = "";
            var prize = [];
            for(var i = 0; i < data.arr.length; i ++) {
                prize.push(data.arr[i].p[0]);
                if(i != 0) {
                    str += "、" + G.class.getItem(data.arr[i].p[0].t).name;
                }else {
                    str += G.class.getItem(data.arr[i].p[0].t).name;
                }
            }

            me.nodes.wz1.setString(X.STR(L("SJDL"), str));

            if(me.DATA.info.etime - G.time > 24 * 3600 * 2) {
                me.nodes.wz2.setString(X.moment(me.DATA.info.etime - G.time));
            }else {
                X.timeout(me.nodes.wz2, me.DATA.info.etime, function () {
                    X.uiMana.closeAllFrame();
                })
            }

            for(var i = 0; i < prize.length; i ++) {
                prize[i].n = 0;
                me.nodes["ico_daibi" + (i + 1)].show();
                me.nodes["ico_daibi" + (i + 1)].children[0].setBackGroundImage(G.class.getItemIco(prize[i].t), 1);
                me.nodes["ico_daibi" + (i + 1)].children[1].setString(G.class.getOwnNum(prize[i].t, prize[i].a))
            }

            X.alignCenter(me.nodes.neirong, prize, {
                touch: true
            });
        }
    });

})();
;;/**
 * Created by zhangming on 2018-07-04
 */
(function () {
    //积天返利

    G.frame.chongzhi.on("hide", function () {
        if(G.frame.huodong.jtfl) {
            G.frame.huodong.jtfl.refreshPanel();
        }
    });

    G.class.huodong_jtfl = X.bView.extend({
        ctor: function (data) {
            var me = this;
            G.frame.huodong.jtfl = me;
            me._data = data;
            me._super("event_scrollview.json");
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner5.png', 0);
                },
                panel_txt: function (node) {
                    node.show();
                },
                panel_title: function(node) {
                    var rh = new X.bRichText({
                        size:22,
                        maxWidth:node.width + 60,
                        lineHeight:24,
                        family:G.defaultFNT,
                        color:G.gc.COLOR.n5,
                        eachText: function (node) {
                            X.enableOutline(node,'#000000');
                        },
                    });
                    rh.text(me._data.intr);
                    rh.setAnchorPoint(0,1);
                    rh.setPosition(0, node.height);
                    node.addChild(rh);
                },
                txt_count: L("CHONGZHI"),
                txt_time: function (node) {
                    if(me.DATA.info.etime - G.time > 24 * 3600 * 2) {
                        me.nodes.txt_count.hide();
                        node.setString(X.moment(me.DATA.info.etime - G.time));
                    }else {
                        X.timeout(node, me.DATA.info.etime, function () {
                            me.timeout = true;
                        })
                    }
                },
            },me.nodes);
            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: "4105a"},
            });
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            cc.enableScrollBar(scrollview);


            if(!me.table) {
                var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data, pos) {
                    me.setItem(ui, data, pos[0]+pos[1]);
                }, null, null, 1, 3);
                table.setData(me.DATA.info.arr);
                table.reloadDataWithScroll(true);
                table._table.tableView.setBounceable(false);
            } else {
                me.table.setData(me.DATA.info.arr);
                me.table.reloadDataWithScroll(false);
            }

        },
        setItem: function (ui, data, idx) {
            var me = this;
            X.autoInitUI(ui);

            var etime = me._data.etime || 0;
            G.removeNewIco(ui.nodes.btn);
            if (G.time < etime) {
                if (me.DATA.myinfo.val >= data.val){
                    if (X.inArray(me.DATA.myinfo.gotarr, data.val)) {
                        ui.nodes.btn_txt.setString(L('YLQ'));
                        ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                        ui.nodes.btn.setEnableState(false);
                        G.removeNewIco(ui.nodes.btn);
                    } else {
                        ui.nodes.btn_txt.setString(L('LQ'));
                        ui.nodes.btn.setEnableState(true);
                        ui.nodes.btn_txt.setTextColor(cc.color("#2f5719"));
                        G.setNewIcoImg(ui.nodes.btn, .9);
                    }
                }else{
                    ui.nodes.btn_txt.setString(L('LQ'));
                    ui.nodes.btn.setEnableState(false);
                    ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                }
            } else {
                ui.nodes.btn_txt.setString(L('LQ'));
                ui.nodes.btn.setEnableState(false);
                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
            }

            X.render({
                btn: function (node) {
                    node.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                    node.click(function (sender, type) {
                        me.ajax('huodong_use', [me._data.hdid,1,idx], function (str, dd) {
                            if (dd.s == 1){
                                G.frame.jiangli.data({
                                    prize: data.p
                                }).show();
                                changeData(dd.d.myinfo,me.DATA.myinfo);
                                // me.refreshPanel();
                                ui.nodes.btn_txt.setString(L('YLQ'));
                                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                                ui.nodes.btn.setEnableState(false);
                                G.removeNewIco(ui.nodes.btn);
                                G.event.emit('hdchange',me._data.hdid);
                                G.hongdian.getData("huodong", 1, function () {
                                    G.frame.huodong.checkRedPoint();
                                })
                            }
                        },true);
                    })
                },
                ico_item: function (node) {
                    node.removeAllChildren();
                    X.alignItems(node, data.p, 0, {
                        touch: true,
                        callback: function () {
                        }
                    })
                },
                txt: function (node) {
                    node.removeAllChildren();
                    var txt = new ccui.Text(X.STR(me.DATA.info.show,data.val) + X.STR('({1}/{2})',me.DATA.myinfo.val,data.val), G.defaultFNT, 22);
                    // txt.setFontName(G.defaultFNT);
                    txt.setTextColor(cc.color(me.DATA.myinfo.val >= data.val ? G.gc.COLOR[1] : G.gc.COLOR[5]));
                    txt.setAnchorPoint(0,0.5);
                    txt.setPosition(0, node.height / 2);
                    node.addChild(txt);
                },
            }, ui.nodes);
            ui.show();
        },
        refreshPanel: function () {
            var me = this;

            G.frame.huodong.getData(me._data.hdid, function (data) {
                me.DATA = data;
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;

            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            X.viewCache.getView("event_list4.json", function (node) {
                me.list = node.nodes.panel_list;

                me.refreshPanel();
            });
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        onRemove: function () {
            var me = this;
        },
    })
})();

;;/**
 * Created by LYF on 2018/9/12.
 */
(function () {
    //开服冲级
    G.class.huodong_kfcj = X.bView.extend({
        ctor: function (data) {
            var me = this;
            me._data = data;
            me._super("event_scrollview.json");
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner12.png', 0);
                },
                panel_txt: function (node) {
                    node.show();
                },
                txt_count: L("CHONGZHI"),
                txt_time: function (node) {
                    if(me._data.etime - G.time > 24 * 3600 * 2) {
                        me.nodes.txt_count.hide();
                        node.setString(X.moment(me._data.etime - G.time));
                    }else {
                        X.timeout(node, me._data.etime, function () {
                            me.timeout = true;
                        })
                    }
                },
                panel_title: function(node) {
                    var rh = new X.bRichText({
                        size:22,
                        maxWidth:node.width + 60,
                        lineHeight:24,
                        family:G.defaultFNT,
                        color:G.gc.COLOR.n5,
                        eachText: function (node) {
                            X.enableOutline(node,'#000000');
                        },
                    });
                    rh.text(me._data.intr);
                    rh.setAnchorPoint(0,1);
                    rh.setPosition(0, node.height);
                    node.addChild(rh);
                },
            },me.nodes);
            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: "4505a"},
            });
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            cc.enableScrollBar(scrollview);

            if(!me.table) {
                var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data, pos) {
                    me.setItem(ui, data, pos[0]+pos[1]);
                }, null, null, 1, 3);
                table.setData(me.DATA.info.arr);
                table.reloadDataWithScroll(true);
                table._table.tableView.setBounceable(false);
            } else {
                me.table.setData(me.DATA.info.arr);
                me.table.reloadDataWithScroll(false);
            }

        },
        setItem: function (ui, data, idx) {
            var me = this;
            X.autoInitUI(ui);

            var etime = me._data.etime || 0;
            if (G.time < etime) {
                if (P.gud.lv >= data.val && data.buynum > 0){
                    if (X.inArray(me.DATA.myinfo.gotarr, data.val)) {
                        ui.nodes.btn_txt.setString(L('YLQ'));
                        ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                        ui.nodes.btn.setEnableState(false);
                        G.removeNewIco(ui.nodes.btn);
                    } else {
                        ui.nodes.btn_txt.setString(L('LQ'));
                        ui.nodes.btn.setEnableState(true);
                        ui.nodes.btn_txt.setTextColor(cc.color("#2f5719"));
                        G.setNewIcoImg(ui.nodes.btn, .9);
                    }
                }else{
                    G.removeNewIco(ui.nodes.btn);
                    ui.nodes.btn_txt.setString(L('LQ'));
                    ui.nodes.btn.setEnableState(false);
                    ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                }
            } else {
                ui.nodes.btn_txt.setString(L('LQ'));
                ui.nodes.btn.setEnableState(false);
                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
            }

            X.render({
                btn: function (node) {
                    node.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                    node.click(function (sender, type) {
                        me.ajax('huodong_use', [me._data.hdid,1,idx], function (str, dd) {
                            if (dd.s == 1){
                                G.frame.jiangli.data({
                                    prize: data.p
                                }).show();
                                changeData(dd.d.myinfo,me.DATA.myinfo);
                                // me.refreshPanel();
                                ui.nodes.btn_txt.setString(L('YLQ'));
                                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                                ui.nodes.btn.setEnableState(false);
                                G.removeNewIco(ui.nodes.btn);
                                G.event.emit('hdchange',me._data.hdid);
                                G.hongdian.getData("huodong", 1, function () {
                                    G.frame.huodong.checkRedPoint();
                                });
                                me.refreshPanel();
                            }
                        },true);
                    })
                },
                ico_item: function (node) {
                    node.removeAllChildren();
                    X.alignItems(node, data.p, 0, {
                        touch: true,
                        callback: function () {
                        }
                    })
                },
                txt: function (node) {
                    node.removeAllChildren();
                    var txt = new ccui.Text(X.STR(me._data.data.show,data.val) + X.STR('({1}/{2})',P.gud.lv,data.val), G.defaultFNT, 22);
                    txt.setTextColor(cc.color(P.gud.lv >= data.val ? G.gc.COLOR[1] : G.gc.COLOR[5]));
                    txt.setAnchorPoint(0,0.5);
                    txt.setPosition(0, node.height / 2);
                    node.addChild(txt);
                },
                txt1: function (node) {
                    node.setString(X.STR(L("HSXF"), data.buynum));
                }
            }, ui.nodes);
            ui.show();
        },
        refreshPanel: function () {
            var me = this;

            G.frame.huodong.getData(me._data.hdid, function (data) {
                me.DATA = data;
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;

            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            X.viewCache.getView("event_list4.json", function (node) {
                me.list = node.nodes.panel_list;

                me.refreshPanel();
            });
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        onRemove: function () {
            var me = this;
        },
    })
})();
;;/**
 * Created by LYF on 2018-11-8
 */
(function () {
    //累积豪礼
    G.class.huodong_lchl = X.bView.extend({
        ctor: function (data) {
            var me = this;
            me._data = data;
            me._super("event_scrollview.json");
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner17.png', 0);
                },
                panel_txt: function (node) {
                    node.show();
                },
                // txt_count: L("CHONGZHI"),
                txt_time: function (node) {
                    if(me._data.rtime - G.time > 24 * 3600 * 2) {
                        me.nodes.txt_count.setString(L("HDLJSJ"));
                        node.setString(X.moment(me._data.rtime - G.time));
                    }else {
                        if(me._data.rtime < G.time) {
                            me.nodes.txt_count.setString(L("LJJSSJ"));
                            X.timeout(node, me._data.etime, function () {
                                node.setString(L("YJS"));
                            })
                        }else {
                            me.nodes.txt_count.setString(L("HDLJSJ"));
                            X.timeout(node, me._data.rtime, function () {
                                me.nodes.txt_count.setString(L("LJJSSJ"));
                                G.frame.huodong.getData(me._data.hdid, function (data) {
                                    me.DATA = data;
                                    me.setTable();
                                });
                                X.timeout(node, me._data.etime, function () {
                                    node.setString(L("YJS"));
                                })
                            })
                        }
                    }
                },
                panel_title: function(node) {
                    var rh = new X.bRichText({
                        size:22,
                        maxWidth:node.width + 60,
                        lineHeight:24,
                        family:G.defaultFNT,
                        color:G.gc.COLOR.n5,
                        eachText: function (node) {
                            X.enableOutline(node,'#000000');
                        },
                    });
                    rh.text(me._data.intr);
                    rh.setAnchorPoint(0,1);
                    rh.setPosition(0, node.height);
                    node.addChild(rh);
                },
            },me.nodes);
            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: "4505a"},
            });
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data, pos) {
                me.setItem(ui, data, pos[0]+pos[1]);
            }, null, null, 1, 3);
            table.setData(me.DATA.info.arr);
            table.reloadDataWithScroll(true);
            table._table.tableView.setBounceable(false);
        },
        setItem: function (ui, data, idx) {
            var me = this;
            X.autoInitUI(ui);

            var etime = me._data.etime || 0;
            me.btn = ui.nodes.btn;
            me.btntxt = ui.nodes.btn_txt;
            if (G.time < etime) {
                if (me.DATA.myinfo.val >= data.val){
                    if (X.inArray(me.DATA.myinfo.gotarr, data.val)) {
                        ui.nodes.btn_txt.setString(L('YLQ'));
                        ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                        ui.nodes.btn.setEnableState(false);
                        G.removeNewIco(ui.nodes.btn);
                    } else {
                        ui.nodes.btn_txt.setString(L('LQ'));
                        if(G.time > me._data.rtime) {
                            if(me.DATA.myinfo.recidx == idx) {
                                ui.nodes.btn.setEnableState(true);
                                G.setNewIcoImg(ui.nodes.btn, .9);
                                ui.nodes.btn_txt.setTextColor(cc.color("#2f5719"));
                            }else {
                                ui.nodes.btn.setEnableState(false);
                                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                            }
                        }else {
                            ui.nodes.btn.setEnableState(false);
                            ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                        }
                    }
                }else{
                    ui.nodes.btn_txt.setString(L('LQ'));
                    ui.nodes.btn.setEnableState(false);
                    ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                }
            } else {
                ui.nodes.btn_txt.setString(L('LQ'));
                ui.nodes.btn.setEnableState(false);
                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
            }

            X.render({
                btn: function (node) {
                    node.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                    node.click(function (sender, type) {
                        me.ajax('huodong_use', [me._data.hdid,1,idx], function (str, dd) {
                            if (dd.s == 1){
                                G.frame.jiangli.data({
                                    prize: data.p
                                }).show();
                                changeData(dd.d.myinfo,me.DATA.myinfo);
                                // me.refreshPanel();
                                ui.nodes.btn_txt.setString(L('YLQ'));
                                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                                ui.nodes.btn.setEnableState(false);
                                G.removeNewIco(ui.nodes.btn);
                                G.event.emit('hdchange',me._data.hdid);
                                G.hongdian.getData("huodong", 1, function () {
                                    G.frame.huodong.checkRedPoint();
                                })
                            }
                        },true);
                    })
                },
                ico_item: function (node) {
                    node.removeAllChildren();
                    X.alignItems(node, data.p, 0, {
                        touch: true,
                        callback: function () {
                        }
                    })
                },
                txt: function (node) {
                    node.removeAllChildren();
                    var txt = new ccui.Text(X.STR(me.DATA.info.show,data.val) + X.STR('({1}/{2})',me.DATA.myinfo.val,data.val), G.defaultFNT, 22);
                    txt.setTextColor(cc.color(me.DATA.myinfo.val >= data.val ? G.gc.COLOR[1] : G.gc.COLOR[5]));
                    txt.setAnchorPoint(0,0.5);
                    txt.setPosition(0, node.height / 2);
                    node.addChild(txt);
                },
            }, ui.nodes);
            ui.show();
        },
        refreshPanel: function () {
            var me = this;

            G.frame.huodong.getData(me._data.hdid, function (data) {
                me.DATA = data;
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;

            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            X.viewCache.getView("event_list4.json", function (node) {
                me.list = node.nodes.panel_list;

                me.refreshPanel();
            });
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        onRemove: function () {
            var me = this;
        },
    })
})();

;;/**
 * Created by wfq on 2018/7/8.
 */
(function() {
    //等级礼包 || 养成礼包
    G.class.huodong_libao = X.bView.extend({
        ctor: function(type) {
            var me = this;
            me._type = type;
            me._super('event_gift.json');
        },
        bindUI: function() {
            var me = this;
            var view = me._view;
            var data = me.DATA;

            view.nodes.btn_txt.setString(data.btnshow + L('YUAN'));
            if (data.buynum < 1) {
                view.nodes.btn.setBright(false);
                view.nodes.btn.setTouchEnabled(false);
            } else {
                view.nodes.btn.setBright(true);
                view.nodes.btn.setTouchEnabled(true);
            }
            view.nodes.btn.click(function(sender, type) {
                if (me.timeout) {
                    G.tip_NB.show(L("LBGQ"));
                    return;
                }
                G.event.once('paysuccess', function() {
                    G.frame.jiangli.data({
                        prize: [].concat(data.prize)
                    }).show();
                    me.DATA.buynum --;
                    me.setContents();
                });
                G.event.emit('doSDKPay', {
                    pid: data.chkkey,
                    logicProid: data.chkkey,
                    money: data.money,
                    pname: data.name
                });
            }, 5000);
        },
        refreshPanel: function() {
            var me = this;
            me.getData(function() {

                me.setContents();
            });
        },
        onOpen: function() {
            var me = this;

        },
        onShow: function() {
            var me = this;

            X.viewCache.getView('event_list1.json', function(view) {
                me._view = view;
                // X.autoInitUI(view);
                me.nodes.panel_list.removeAllChildren();
                me.nodes.panel_list.addChild(view);
                me.refreshPanel();
            });
        },
        onRemove: function() {
            var me = this;
        },
        getData: function(callback) {
            var me = this;
            me.DATA = me._type;
            callback && callback();
        },
        setContents: function() {
            var me = this;
            me.setBaseInfo();
            me.bindUI();
            me.setTime();
        },
        onNodeShow: function() {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        setBanner: function() {
            var me = this;

            X.render({
                panel_bg: function(node) {
                    if (me.DATA.stype == 10002) {
                        node.setBackGroundImage('img/bg/bg_gift1.png', 0);
                    } else {
                        node.setBackGroundImage('img/bg/bg_gift2.png', 0);
                    }

                }
            }, me.nodes);
        },
        setTime: function() {
            var me = this;
            X.timeout(me.nodes.txt_time, me.DATA.rtime, function() {
                me.timeout = true;
                X.uiMana.closeAllFrame();
                G.view.mainView.getAysncBtnsData(function(){
                    G.view.mainView.allBtns["lefttop"] = [];
                    G.view.mainView.setSvrBtns();
                }, false);
            }, null, {
                showStr: L('HD_timeDown')
            });
        },
        setBaseInfo: function() {
            var me = this;
            var alldata = me.DATA;
            var data = me.DATA;
            if (alldata.stype == 10001) {
                me.nodes.panel_title1.setBackGroundImage('img/event/wz_event_title' + (
                    (data.val == 5 || data.val == 6) ? (data.val == 5 ? 0 : 1) : (data.val - 1)) +'.png', 1);
                me.nodes.panel_title1.show();
            } else {
                me.nodes.panel_title2.show();
                me.nodes.sz_vipgift.setString(data.val);
            }
            me.nodes.panel_list.show();
            me.nodes.txt_time.show();
            X.render({
                txt: function(node){

                    var str = new ccui.Text(X.STR(L('XGX'), data.buynum), G.defaultFNT, 18);
                    str.setAnchorPoint(0.5, 0.5);
                    str.setTextColor(cc.color(G.gc.COLOR.n4));
                    str.setPosition(node.width / 2, node.height / 2);
                    node.removeAllChildren();
                    node.addChild(str);
                }
            }, me._view.nodes);

            var rw = me.nodes.panel_rw;
            me.ui.setTimeout(function () {
                X.setHeroModel({
                    parent: rw,
                    data: {
                        hid: data.hid
                    }
                });
                rw.setPositionY(300);
                rw.setScale(1.5);
            }, 100);

            // rw.setFlippedX(true);
            // G.class.ani.show({
            //     json:'ani_choukajuese',
            //     addTo:rw,
            //     x:rw.width/2,
            //     y:rw.height/2,
            //     repeat:true,
            //     autoRemove:false,
            // });
            X.alignItems(me._view.nodes.ico_item, data.prize, 'left', {
                touch: true
            });
        }
    });

})();
;;/**
 * Created by wfq on 2018/7/8.
 */
(function () {
    //等级礼包 || 养成礼包
    G.class.huodong_limit = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('event_limit.json');
        },
        refreshPanel:function () {
            var me = this;
            me.getData(function(){
                me.setContents();
            })
        },
        onOpen: function () {
            var me = this;
            me.initUi();
        },
        initUi:function(){
            var me = this;
            me.nodes.panel_bg.setBackGroundImage('img/bg/bg_gift3.png',0);
            me.nodes.wz_title.setBackGroundImage('img/event/wz_event_title2.png',1);
            me.nodes.img_card.removeAllChildren();
            G.class.ani.show({
                addTo: me.nodes.img_card,
                json: 'ani_huodong_yueka',
                repeat: true,
                autoRemove: false,
                onload: function (node) {
                    node.nodes.kapai.setBackGroundImage("img/event/img_event_card3.png", 1);
                    // node.setTag(12345);
                }
            });
        },
        onShow: function () {
            var me = this;
            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;
            G.frame.huodong.getData(me._type.hdid,function(d){
                me.DATA = d;
                callback && callback();
            })
        },
        setContents: function () {
            var me = this;
            if(me.DATA.info.etime - G.time > 24 * 3600 * 2) {
                me.nodes.txt_time.setString(X.moment(me.DATA.info.etime - G.time, {
                    d: "{1}天"
                }));
            }else {
                X.timeout(me.nodes.txt_time, me.DATA.info.etime,function () {
                    G.ajax.send("item_remove", [conf.itemid], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            X.uiMana.closeAllFrame();
                        }
                    })
                },null,null);
            }
            var text = new ccui.Text(X.STR(L("YYSL"), G.class.getOwnNum(2016, "item")), G.defaultFNT, 18);
            X.enableOutline(text, "#000000", 1);
            text.setAnchorPoint(0.5, 0.5);
            text.setPosition(me.nodes.txt_info1.width / 2, me.nodes.txt_info1.height / 2);
            me.nodes.txt_info1.addChild(text);
        }
    });

})();
;;/**
 * Created by zhangming on 2018-07-04
 */
(function () {
    //累积充值
    G.class.huodong_ljcz = X.bView.extend({
        ctor: function (data) {
            var me = this;
            me._data = data;
            me._super("event_scrollview.json");
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner7.png', 0);
                },
                panel_txt: function (node) {
                    node.show();
                },
                txt_count: L("CHONGZHI"),
                txt_time: function (node) {
                    if(me.DATA.info.etime - G.time > 24 * 3600 * 2) {
                        me.nodes.txt_count.hide();
                        node.setString(X.moment(me.DATA.info.etime - G.time));
                    }else {
                        X.timeout(node, me.DATA.info.etime, function () {
                            me.timeout = true;
                        })
                    }
                },
                panel_title: function(node) {
                    var rh = new X.bRichText({
                        size:22,
                        maxWidth:node.width + 60,
                        lineHeight:24,
                        family:G.defaultFNT,
                        color:G.gc.COLOR.n5,
                        eachText: function (node) {
                            X.enableOutline(node,'#000000');
                        },
                    });
                    rh.text(me._data.intr);
                    rh.setAnchorPoint(0,1);
                    rh.setPosition(0, node.height);
                    node.addChild(rh);
                },
            },me.nodes);
            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: "4505a"},
            });
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data, pos) {
                me.setItem(ui, data, pos[0]+pos[1]);
            }, null, null, 1, 3);
            table.setData(me.DATA.info.arr);
            table.reloadDataWithScroll(true);
            table._table.tableView.setBounceable(false);
        },
        setItem: function (ui, data, idx) {
            var me = this;
            X.autoInitUI(ui);

            var etime = me._data.etime || 0;
            G.removeNewIco(ui.nodes.btn);
            if (G.time < etime) {
                if (me.DATA.myinfo.val >= data.val){
                    if (X.inArray(me.DATA.myinfo.gotarr, data.val)) {
                        ui.nodes.btn_txt.setString(L('YLQ'));
                        ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                        ui.nodes.btn.setEnableState(false);
                    } else {
                        ui.nodes.btn_txt.setString(L('LQ'));
                        ui.nodes.btn.setEnableState(true);
                        ui.nodes.btn_txt.setTextColor(cc.color("#2f5719"));
                        G.setNewIcoImg(ui.nodes.btn, .9);
                    }
                }else{
                    ui.nodes.btn_txt.setString(L('LQ'));
                    ui.nodes.btn.setEnableState(false);
                    ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                }
            } else {
                ui.nodes.btn_txt.setString(L('LQ'));
                ui.nodes.btn.setEnableState(false);
                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
            }

            X.render({
                btn: function (node) {
                    node.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                    node.click(function (sender, type) {
                        me.ajax('huodong_use', [me._data.hdid,1,idx], function (str, dd) {
                            if (dd.s == 1){
                                G.frame.jiangli.data({
                                    prize: data.p
                                }).show();
                                changeData(dd.d.myinfo,me.DATA.myinfo);
                                // me.refreshPanel();
                                ui.nodes.btn_txt.setString(L('YLQ'));
                                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                                ui.nodes.btn.setEnableState(false);
                                G.removeNewIco(ui.nodes.btn);
                                G.event.emit('hdchange',me._data.hdid);
                                G.hongdian.getData("huodong", 1, function () {
                                    G.frame.huodong.checkRedPoint();
                                })
                            }
                        },true);
                    })
                },
                ico_item: function (node) {
                    node.removeAllChildren();
                    X.alignItems(node, data.p, 0, {
                        touch: true,
                        callback: function () {
                        }
                    })
                },
                txt: function (node) {
                    node.removeAllChildren();
                    var txt = new ccui.Text(X.STR(me.DATA.info.show,data.val) + X.STR('({1}/{2})',me.DATA.myinfo.val,data.val), G.defaultFNT, 22);
                    // txt.setFontName(G.defaultFNT);
                    txt.setTextColor(cc.color(me.DATA.myinfo.val >= data.val ? G.gc.COLOR[1] : G.gc.COLOR[5]));
                    txt.setAnchorPoint(0,0.5);
                    txt.setPosition(0, node.height / 2);
                    node.addChild(txt);
                },
            }, ui.nodes);
            ui.show();
        },
        refreshPanel: function () {
            var me = this;

            G.frame.huodong.getData(me._data.hdid, function (data) {
                me.DATA = data;
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;

            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            X.viewCache.getView("event_list4.json", function (node) {
                me.list = node.nodes.panel_list;

                me.refreshPanel();
            });
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        onRemove: function () {
            var me = this;
        },
    })
})();

;;/**
 * Created by lsm on 2018-09-26
 */
(function () {
    //累计消费
    G.class.huodong_ljxf = X.bView.extend({
        ctor: function (data) {
            var me = this;
            me._data = data;
            me._super("event_scrollview.json");
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner15.png', 0);
                },
                panel_txt: function (node) {
                    node.show();
                },
                panel_title: function(node) {
                    var rh = new X.bRichText({
                        size:22,
                        maxWidth:node.width + 60,
                        lineHeight:24,
                        family:G.defaultFNT,
                        color:G.gc.COLOR.n5,
                        eachText: function (node) {
                            X.enableOutline(node,'#000000');
                        },
                    });
                    rh.text(me._data.intr);
                    rh.setAnchorPoint(0,1);
                    rh.setPosition(0, node.height);
                    node.addChild(rh);
                },
                txt_count: L("CHONGZHI"),
                txt_time: function (node) {
                    if(me._data.etime - G.time > 24 * 3600 * 2) {
                        me.nodes.txt_count.hide();
                        node.setString(X.moment(me._data.etime - G.time));
                    }else {
                        X.timeout(node, me._data.etime, function () {
                            me.timeout = true;
                        })
                    }
                },
            },me.nodes);
            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: "52025"},
            });
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            cc.enableScrollBar(scrollview);

            me.DATA.info.arr.sort(function (a, b) {
                return a.val - b.val;
            });

            if(!me.table) {
                var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data, pos) {
                    me.setItem(ui, data, pos[0]+pos[1]);
                }, null, null, 1, 3);
                table.setData(me.DATA.info.arr);
                table.reloadDataWithScroll(true);
                table._table.tableView.setBounceable(false);
            } else {
                me.table.setData(me.DATA.info.arr);
                me.table.reloadDataWithScroll(false);
            }
        },
        setItem: function (ui, data, idx) {
            var me = this;
            X.autoInitUI(ui);
            var etime = me._data.etime || 0;
            if (G.time < etime) {
                if (me.DATA.myinfo.val >= data.val) {
                    if (X.inArray(me.DATA.myinfo.gotarr, data.val)) {
                        ui.nodes.btn_txt.setString(L('YLQ'));
                        ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                        ui.nodes.btn.setEnableState(false);
                        G.removeNewIco(ui.nodes.btn);
                    } else {
                        ui.nodes.btn_txt.setString(L('LQ'));
                        ui.nodes.btn.setEnableState(true);
                        ui.nodes.btn_txt.setTextColor(cc.color("#2f5719"));
                        G.setNewIcoImg(ui.nodes.btn, .9);
                    }
                } else {
                    G.removeNewIco(ui.nodes.btn);
                    ui.nodes.btn_txt.setString(L('LQ'));
                    ui.nodes.btn.setEnableState(false);
                    ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                }
            } else {
                ui.nodes.btn_txt.setString(L('LQ'));
                ui.nodes.btn.setEnableState(false);
                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
            }
            X.render({
                btn: function (node) {
                    node.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                    node.click(function (sender, type) {
                        me.ajax('huodong_use', [me._data.hdid,1,idx], function (str, dd) {
                            if (dd.s == 1){
                                G.frame.jiangli.data({
                                    prize: data.p
                                }).show();
                                changeData(dd.d.myinfo,me.DATA.myinfo);
                                ui.nodes.btn_txt.setString(L('YLQ'));
                                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                                ui.nodes.btn.setEnableState(false);
                                G.removeNewIco(ui.nodes.btn);
                                G.hongdian.getData("huodong", 1, function () {
                                    G.frame.huodong.checkRedPoint();
                                })
                            }
                        },true);
                    })
                },
                ico_item: function (node) {
                    node.removeAllChildren();
                    X.alignItems(node, data.p, 0, {
                        touch: true,
                        callback: function () {
                        }
                    })
                },
                txt: function (node) {
                    node.removeAllChildren();
                    var txt = new ccui.Text(X.STR(me.DATA.info.show, data.val,me.DATA.myinfo.val,data.val), G.defaultFNT, 22);
                    // txt.setFontName(G.defaultFNT);
                    txt.setTextColor(cc.color(me.DATA.myinfo.val >= data.val ? G.gc.COLOR[1] : G.gc.COLOR[5]));
                    txt.setAnchorPoint(0,0.5);
                    txt.setPosition(0, node.height / 2);
                    node.addChild(txt);
                },
            }, ui.nodes);
            ui.show();
        },
        refreshPanel: function () {
            var me = this;

            G.frame.huodong.getData(me._data.hdid, function (data) {
                me.DATA = data;
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;

            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            X.viewCache.getView("event_list4.json", function (node) {
                me.list = node.nodes.panel_list;

                me.refreshPanel();
            });
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        onRemove: function () {
            var me = this;
        },
    })
})();

;;/**
 * Created by LYF on 2018/7/8.
 */
(function () {
    //等级基金
    G.class.huodong_lvFund = X.bView.extend({
        extConf: {

        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super("event_scrollview.json");
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_buy.click(function (sender, type) {

                G.event.once('paysuccess', function() {
                    me.refreshPanel();
                    G.hongdian.getHongdian(1, function () {
                        G.frame.huodong.checkRedPoint();
                    })
                });
                G.event.emit('doSDKPay', {
					pid:me.DATA.info.payinfo.proid,
                    logicProid: me.DATA.info.payinfo.proid,
                    money: me.DATA.info.payinfo.unitprice,
                });
            }, 5000)
        },
        onOpen: function () {
            var me = this;

            me.hid = 400;
            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            X.viewCache.getView("event_list3.json", function (node) {
                me.list = node.nodes.panel_list;

                me.refreshPanel();
            });
            me.nodes.panel_banner2.hide();
        },
        onRemove: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("huodong_open", [me.hid], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
            //me.setBaseInfo();
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        refreshData: function () {
            var me = this;
            me.getData(function () {
                me.table.setData(me.DATA.prize);
                me.table.reloadDataWithScroll(false);
            });
            // me.setBaseInfo();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner1.png', 0);
                },
                btn_buy: function (node) {
                    node.show();
                    X.inArray(me.DATA.myinfo.gotarr, -1) && node.hide();
                },
                btn_txt: function (node) {
                    node.setString(X.inArray(me.DATA.myinfo.gotarr, -1) ? L("YGM") : me.DATA.info.payinfo.showrmbmoney + L("YUAN"));
                }
            },me.nodes);
            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: "3108a"},
            });
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var data = me.DATA.info.arr;
            for(var i = 0; i < data.length; i ++){
                data[i].idx = i;
            }
            for(var i = 0; i < data.length; i ++){
                if(X.inArray(me.DATA.myinfo.gotarr, data[i].val)){
                    data[i].rank = 2;
                }else{
                    data[i].rank = 1;
                }
            }
            data.sort(function (a, b) {
                if(a.rank != b.rank){
                    return a.rank < b.rank ? -1 : 1;
                }else{
                    return a.val < b.val ? -1 : 1;
                }

            });

            var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data) {
                me.setItem(ui, data);
            }, null, null, 1, 3);
            table.setData(data);
            table.reloadDataWithScroll(true);
            table._table.tableView.setBounceable(false);
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            X.render({
                txt_jdt: function(node){
                    node.setString(P.gud.lv + "/" + data.val);
                    X.enableOutline(node,'#66370e',2);
                },
                txt_title: function (node) {
                    node.removeAllChildren();

                    var txt = new ccui.Text(X.STR(L("DJDDXJ"), data.val), G.defaultFNT, 22);
                    txt.setFontName(G.defaultFNT);
                    txt.setTextColor(cc.color(G.gc.COLOR.n4));
                    txt.setAnchorPoint(0,0.5);
                    txt.setPosition(0, node.height / 2 + 3);
                    node.addChild(txt);
                },
                img_jdt: function (node) {
                    node.setPercent(P.gud.lv / data.val * 100);
                },
                ico_item: function (node) {
                    node.removeAllChildren();
                    X.alignItems(node, data.p, 'left', {
                        touch: true,
                        mapItem: function (item) {
                        }
                    })
                },
                btn_txt: function (node) {
                    node.setString(X.inArray(me.DATA.myinfo.gotarr, data.val) ? L("YLQ") : L("LQ"));
                    // X.inArray(me.DATA.myinfo.gotarr, -1) && node.setTextColor(cc.color(X.inArray(me.DATA.myinfo.gotarr, data.val) ? G.gc.COLOR.n15 :
                    //     (P.gud.lv >= data.val ? G.gc.COLOR.n13 : G.gc.COLOR.n15)));
                    // var is = X.inArray(me.DATA.myinfo.gotarr, data.val) ? false : true;
                    //var color = X.inArray(me.DATA.myinfo.gotarr, data.val) ? G.gc.COLOR.n15 : (P.gud.lv >= data.val ? G.gc.COLOR.n13 : G.gc.COLOR.n15);
                    //node.setTextColor(cc.color(color));
                    if( me.DATA.myinfo.gotarr.length >= 1 && P.gud.lv > data.val) {
                        node.setTextColor(cc.color(X.inArray(me.DATA.myinfo.gotarr, data.val) ? G.gc.COLOR.n15 : G.gc.COLOR.n13));
                    }else {
                        node.setTextColor(cc.color(G.gc.COLOR.n15));
                    }


                },
                btn: function (node) {
                    node.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                    var is = X.inArray(me.DATA.myinfo.gotarr, data.val) ? false : true;
                    if(is && P.gud.lv >= data.val){
                        G.setNewIcoImg(node, .9);
                    }else{
                        is = false;
                        G.removeNewIco(node);
                    }
                    if( me.DATA.myinfo.gotarr.length >= 1 && P.gud.lv >= data.val ) {
                        node.setTouchEnabled(is);
                        node.setBright(is);
                    }else {
                       // node.setTouchEnabled(false);
                        node.setBright(false);
                    }
                    //node.setTouchEnabled(is);
                    //node.setBright(is);
                    node.click(function (sender, type) {
                        if(me.DATA.myinfo.gotarr.length < 1){
                            G.tip_NB.show(L("QXGMJJLB"));
                            return;
                        }
                        if(P.gud.lv < data.val){
                            G.tip_NB.show(L("DJWDDYQ"));
                            return;
                        }
                        G.ajax.send("huodong_use", [me.hid, 1, data.idx], function (d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                G.frame.jiangli.data({
                                    prize: data.p
                                }).show();
                                me.refreshData();
                                G.frame.huodong.updateTop();
                                G.hongdian.getData("dengjiprize", 1, function () {
                                    G.frame.huodong.checkRedPoint();
                                })
                            }
                        }, true)
                    })
                }
            }, ui.nodes);
            ui.show();
        }
    })
})();

;;/**
 * Created by LYF on 2018/7/8.
 */
(function () {
    //大月卡
    G.class.huodong_maxMonthCard = X.bView.extend({
        extConf: {

        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super("event_card.json");
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                X.loadPlist(['event.plist', 'event.png'],function() {
                    me.setContents();
                });
            });
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
            me.type = "da";
            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("yueka_open", [me.type], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setView();
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        setBanner: function () {
            var me = this;

            me.nodes.wz_title.setBackGroundImage("img/event/wz_event_card2.png", 1);
            me.nodes.wz_info.setBackGroundImage("img/event/wz_event_info2.png", 1);
            me.nodes.panel_bg.setBackGroundImage("img/bg/bg_card2.png", 0);
            me.nodes.img_card.removeAllChildren();
            G.class.ani.show({
                addTo: me.nodes.img_card,
                json: 'ani_huodong_yueka',
                repeat: true,
                autoRemove: false,
                onload: function (node) {
                    node.nodes.kapai.setBackGroundImage("img/event/img_event_card2.png", 1);
                    // node.setTag(12345);
                }
            });
            me.nodes.btn_fdj.show();
            me.nodes.btn_fdj.click(function () {
                G.frame.chongzhi.data({'isDykTz':true}).show();
                G.frame.huodong.remove();
            })
        },
        setView: function () {
            var me = this;
            var conf = G.class.getConf("xiaoyueka")[me.type];

            if(me.DATA.rmbmoney / 100 >= conf.maxmoney / 100){
                me.ui.finds("panel_2").show();
                me.ui.finds("panel_1").hide();

                var rh = new X.bRichText({
                    size: 22,
                    maxWidth: me.nodes.txt_info2.width,
                    lineHeight: 34,
                    family: G.defaultFNT,
                    color: "#ececd3",
                    eachText: function (node) {
                        node.enableOutline && X.enableOutline(node, "#000000", 2);
                    }
                });

                if(me.DATA.nt + 30 * 24 * 3600 - G.time > 24 * 3600) {
                    var str = X.STR(L("DYKSY"), parseInt(((me.DATA.nt + 30 * 24 * 3600) - G.time) / (24 * 3600)));
                    rh.text(str);
                } else {
                    var txt = new ccui.Text("", G.defaultFNT, 22);
                    txt.setTextColor(cc.color("#1c9700"));
                    X.enableOutline(txt, "#000000", 2);
                    X.timeout(txt, me.DATA.nt + 30 * 24 * 3600, function () {
                        me.refreshPanel();
                    });
                    var str = L("DYKSSY") + "<font node=1></font>";
                    rh.text(str, [txt]);
                }

                rh.setPosition(me.nodes.txt_info2.width / 2 - rh.trueWidth() / 2, me.nodes.txt_info2.height / 2);
                me.nodes.txt_info1.removeAllChildren();
                me.nodes.txt_info2.removeAllChildren();
                me.nodes.txt_info2.addChild(rh);

                if(!me.DATA.act){
                    G.removeNewIco(me.nodes.btn_receive);
                }else{
                    G.setNewIcoImg(me.nodes.btn_receive, .9);
                }

                me.nodes.btn_receive.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                me.nodes.btn_receive.setTitleColor(cc.color("#2f5719"));

                me.nodes.btn_receive.setBright(me.DATA.act == 0 ? false : true);
                me.nodes.btn_receive.bright == false && me.nodes.btn_receive.setTitleColor(cc.color('#6c6c6c'));
                me.nodes.btn_receive.setTouchEnabled(me.DATA.act == 0 ? false : true);
                me.nodes.btn_receive.click(function (sender, type) {

                    G.ajax.send("yueka_getprize", [me.type], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            G.frame.jiangli.data({
                                prize: conf.prize
                            }).show();
                            me.refreshPanel();
                            G.frame.huodong.updateTop();
                            G.hongdian.getData("yueka_da", 1, function () {
                                G.frame.huodong.checkRedPoint();
                            })
                        }
                    }, true);
                })

            }else{
                me.ui.finds("panel_1").show();
                me.nodes.img_jdt.setPercent(me.DATA.rmbmoney / conf.maxmoney * 100);
                me.nodes.txt_jdt.setString(X.STR(L("DQCZ"), me.DATA.rmbmoney / 100, conf.maxmoney / 100));

                var str = X.STR(L("LJCZ"), conf.maxmoney / 100);
                var rh = new X.bRichText({
                    size: 22,
                    maxWidth: me.nodes.txt_info1.width,
                    lineHeight: 34,
                    family: G.defaultFNT,
                    color: "#ececd3",
                    eachText: function (node) {
                        node.enableOutline && X.enableOutline(node, "#000000", 2);
                    }
                });
                rh.text(str);
                rh.setPosition(me.nodes.txt_info1.width / 2 - rh.trueWidth() / 2, me.nodes.txt_info1.height / 2);
                me.nodes.txt_info1.removeAllChildren();
                me.nodes.txt_info2.removeAllChildren();
                me.nodes.txt_info1.addChild(rh);

                me.nodes.btn_activate.click(function (sender, type) {
                    G.frame.chongzhi.show();
                    G.frame.chongzhi.once("hide", function () {
                        me.refreshPanel();
                        G.hongdian.getHongdian(1, function () {
                            G.frame.huodong.checkRedPoint();
                        })
                    })
                })
            }
        }
    })
})();

;;/**
 * Created by LYF on 2018/7/8.
 */
(function () {
    //小月卡
    G.class.huodong_minMonthCard = X.bView.extend({
        extConf: {

        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super("event_card.json");
        },
        refreshPanel: function () {
            var me = this;
            me.getData(function () {
                X.loadPlist(['event.plist', 'event.png'],function() {
                    me.setContents();
                });
            });
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
            me.type = "xiao";
            me.bindBtn();
        },
        onShow: function () {
            var me = this;
            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("yueka_open", [me.type], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        setContents: function () {
            var me = this;

            me.nodes.panel_bg.setBackGroundImage("img/bg/bg_card1.png", 0);
            me.nodes.wz_title.setBackGroundImage("img/event/wz_event_card1.png", 1);
            me.nodes.wz_info.setBackGroundImage("img/event/wz_event_info1.png", 1);
            me.nodes.img_card.removeAllChildren();
            G.class.ani.show({
                addTo: me.nodes.img_card,
                json: 'ani_huodong_yueka',
                repeat: true,
                autoRemove: false,
                onload: function (node) {
                    node.nodes.kapai.setBackGroundImage("img/event/img_event_card1.png", 1);
                    // node.setTag(12345);
                }
            });
            me.setView();
        },
        setView: function () {
            var me = this;
            var conf = G.class.getConf("xiaoyueka")[me.type];

            if(me.DATA.rmbmoney / 100 >= conf.maxmoney / 100){
                me.ui.finds("panel_2").show();
                me.ui.finds("panel_1").hide();

                var rh = new X.bRichText({
                    size: 22,
                    maxWidth: me.nodes.txt_info2.width,
                    lineHeight: 34,
                    family: G.defaultFNT,
                    color: "#ececd3",
                    eachText: function (node) {
                        node.enableOutline && X.enableOutline(node, "#000000", 2);
                    }
                });

                if(me.DATA.nt + 30 * 24 * 3600 - G.time > 24 * 3600) {
                    var str = X.STR(L("XYKSY"), parseInt(((me.DATA.nt + 30 * 24 * 3600) - G.time) / (24 * 3600)));
                    rh.text(str);
                } else {
                    var txt = new ccui.Text("", G.defaultFNT, 22);
                    txt.setTextColor(cc.color("#1c9700"));
                    X.enableOutline(txt, "#000000", 2);
                    X.timeout(txt, me.DATA.nt + 30 * 24 * 3600, function () {
                        me.refreshPanel();
                    });
                    var str = L("XYKSSY") + "<font node=1></font>";
                    rh.text(str, [txt]);
                }
                rh.setPosition(me.nodes.txt_info2.width / 2 - rh.trueWidth() / 2, me.nodes.txt_info2.height / 2);
                me.nodes.txt_info1.removeAllChildren();
                me.nodes.txt_info2.removeAllChildren();
                me.nodes.txt_info2.addChild(rh);

                if(!me.DATA.act){
                    G.removeNewIco(me.nodes.btn_receive);
                }else{
                    G.setNewIcoImg(me.nodes.btn_receive, .9);
                }

                me.nodes.btn_receive.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                me.nodes.btn_receive.setTitleColor(cc.color("#2f5719"));

                me.nodes.btn_receive.setBright(me.DATA.act == 0 ? false : true);
                me.nodes.btn_receive.bright == false && me.nodes.btn_receive.setTitleColor(cc.color('#6c6c6c'));
                me.nodes.btn_receive.setTouchEnabled(me.DATA.act == 0 ? false : true);
                me.nodes.btn_receive.click(function (sender, type) {

                    G.ajax.send("yueka_getprize", [me.type], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            G.frame.jiangli.data({
                                prize: conf.prize
                            }).show();
                            me.refreshPanel();
                            G.frame.huodong.updateTop();
                            G.hongdian.getData("yueka_xiao", 1, function () {
                                G.frame.huodong.checkRedPoint();
                            })
                        }
                    }, true);
                })

            }else{
                me.ui.finds("panel_1").show();
                me.nodes.img_jdt.setPercent(me.DATA.rmbmoney / conf.maxmoney * 100);
                me.nodes.txt_jdt.setString(X.STR(L("DQCZ"), me.DATA.rmbmoney / 100, conf.maxmoney / 100));

                var str = X.STR(L("LJCZ"), conf.maxmoney / 100);
                var rh = new X.bRichText({
                    size: 22,
                    maxWidth: me.nodes.txt_info1.width,
                    lineHeight: 34,
                    family: G.defaultFNT,
                    color: "#ececd3",
                    eachText: function (node) {
                        node.enableOutline && X.enableOutline(node, "#000000", 2);
                    }
                });
                rh.text(str);
                rh.setPosition(me.nodes.txt_info1.width / 2 - rh.trueWidth() / 2, me.nodes.txt_info1.height / 2);
                me.nodes.txt_info1.removeAllChildren();
                me.nodes.txt_info2.removeAllChildren();
                me.nodes.txt_info1.addChild(rh);

                me.nodes.btn_activate.click(function (sender, type) {
                    G.frame.chongzhi.show();
                    G.frame.chongzhi.once("hide", function () {
                        me.refreshPanel();
                        G.hongdian.getHongdian(1, function () {
                            G.frame.huodong.checkRedPoint();
                        })
                    })
                })
            }
        }
    })
})();

;;/**
 * Created by LYF on 2018-12-12
 */
(function () {
    //魔镜置换
    G.class.huodong_mjzh = X.bView.extend({
        ctor: function (data) {
            var me = this;
            me._data = data;
            me._super("event_mojingzhihuan.json");
        },
        onShow: function () {
            var me = this;

            cc.enableScrollBar(me.nodes.scrollview);
            me.nodes.scrollview.setDirection(cc.SCROLLVIEW_DIRECTION_HORIZONTAL);

            me.setView();
            me.setContents();
        },
        setView: function () {
            var me = this;
            
            me.nodes.btn_bz.click(function () {
                G.frame.help.data({
                    intr:L("TS22")
                }).show();
            });

            me.nodes.btn_zh.click(function () {
                if(!me.curId) {
                    G.tip_NB.show(L("QXZXYFZDYX"));
                    return;
                }
                if(me.selectedData.length < me.curData.needarmynum) {
                    G.tip_NB.show(L("YX") + L("CAILIAO") + L("BUZU"));
                    return;
                }
                if(G.class.getOwnNum("2023", "item") < me.curData.need[0].n) {
                    G.tip_NB.show(G.class.getItem(me.curData.need[0].t).name + L("BUZU"));
                    return;
                }
                me.ajax("huodong_rearmy_change", [me._data.hdid, me.curId, me.selectedData], function (str, data) {
                    if(data.s == 1) {
                        me.rightAni.playWithCallback("zhihuan", false, function () {
                            me.rightAni.play("xunhuan", true);
                            if(data.d.prize.length > 0) {
                                G.frame.jiangli.data({
                                    prize: data.d.prize
                                }).show();
                            }
                        });
                        me.leftAni.playWithCallback("xiaoshi", false, function () {

                            me.leftAni.play("xunhuan", true);
                        });
                        G.tip_NB.show(L("ZHCG"));
                        me.curId = undefined;
                        me.selectedData = [];
                        me.leftNode.removeAllChildren();
                        me.setSate();
                        me.setTable();
                        me.setAttr();
                        me.nodes.img_yxdi.hide();
                        me.ui.finds("txt1").hide();
                    }
                })
            });

            me.ui.finds("ico").click(function () {
                if(!me.curId) {
                    G.tip_NB.show(L("QXZXYFZDYX"));
                    return;
                }
                G.frame.yingxiong_zhxz.data({
                    selectedData: me.selectedData,
                    num: me.curData.needarmynum || 5,
                    star: 5,
                    hid: G.class.hero.getById(G.DATA.yingxiong.list[me.curId].hid).pinglunid + "5",
                    zhongzu: G.DATA.yingxiong.list[me.curId].zhongzu,
                    callback: function (arr) {
                        me.selectedData = arr;
                        me.setSate();
                    }
                }).show();
            });

            G.class.ani.show({
                json: "ani_mojing_xunhuan",
                addTo: me.nodes.panel_1,
                x: me.nodes.panel_1.width / 2,
                y: me.nodes.panel_1.height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    action.play("xunhuan", true);
                    me.leftNode = node.finds("hero");
                    me.leftAni = action;
                }
            });

            G.class.ani.show({
                json: "ani_mojing_xunhuan",
                addTo: me.nodes.panel_2,
                x: me.nodes.panel_2.width / 2,
                y: me.nodes.panel_2.height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    action.play("xunhuan", true);
                    me.rightNode = node.finds("hero");
                    me.rightAni = action;
                }
            });

            me.nodes.txt_sj.show();
            if(me._data.etime - G.time > 24 * 3600 * 2) {
                me.nodes.txt_js.hide();
                me.nodes.txt_sj.setString(X.moment(me._data.etime - G.time));
            } else {
                if(G.time > me._data.etime) {
                    me.nodes.txt_js.hide();
                    me.nodes.txt_sj.setString(L("HDYJS"));
                } else {
                    me.nodes.txt_js.show();
                    X.timeout(me.nodes.txt_sj, me._data.etime, function () {
                        me.nodes.txt_js.hide();
                        me.nodes.txt_sj.setString(L("HDYJS"));
                    })
                }
            }
        },
        setContents: function () {
            var me = this;

            me.setTable();
            me.setAttr();
            me.nodes.text_sl.setString(0);
            me.nodes.img_yxdi.hide();
            me.ui.finds("txt1").hide();
        },
        setAttr: function () {
            var me = this;
            var need = me._data.data.arr[0].need[0];

            me.nodes.text_jiejin.setString(X.fmtValue(G.class.getOwnNum(need.t, need.a)));
        },
        getData: function() {
            var me = this;
            var arr = [];
            var heroList = G.DATA.yingxiong.list;
            var needStar = me._data.data.arr[0].val;

            for (var i in heroList) {
                if(heroList[i].star == needStar) {
                    arr.push(heroList[i]);
                }
            }

            arr.sort(function (a, b) {
                if(a.star != b.star) {
                    return a.star > b.star ? -1 : 1;
                } else {
                    return a.lv > b.lv ? -1 : 1;
                }
            });

            return arr;
        },
        setTable: function () {
            var me = this;
            var data = me.getData();

            if(data.length < 1) {
                me.nodes.img_zwnr.show();
            } else {
                me.nodes.img_zwnr.hide();
            }

            if(!me.table) {
                var table = me.table = new X.TableView(me.nodes.scrollview, me.nodes.list_yx, 1, function (ui, data) {
                    me.setItem(ui, data)
                }, cc.size(110,0), null, 1);
                table.setData(data);
                table.reloadDataWithScroll(true);
            } else {
                me.table.setData(data);
                me.table.reloadDataWithScroll(false);
            }
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);

            var hero = G.class.shero(data);
            hero.setAnchorPoint(0.5, 0.5);
            hero.setPosition(ui.nodes.panel_yx.width / 2, ui.nodes.panel_yx.height / 2);
            ui.nodes.panel_yx.removeAllChildren();
            ui.nodes.panel_yx.addChild(hero);
            ui.nodes.panel_yx.setTouchEnabled(false);

            ui.data = data.tid;

            if(X.inArray(G.DATA.yingxiong.jjchero, data.tid) || data.islock) {
                hero.setEnabled(false);
                ui.nodes.img_suo.show();
                if(X.inArray(G.DATA.yingxiong.jjchero, data.tid)) ui.def = true;
                else ui.lock = true;
            } else {
                hero.setEnabled(true);
                ui.nodes.img_suo.hide();
                ui.def = false;
                ui.lock = false;
            }

            if(me.curId && me.curId == ui.data) {
                ui.nodes.img_gou.show();
            } else {
                ui.nodes.img_gou.hide();
            }

            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_NOMOVE) {
                    if(sender.def) {
                        G.tip_NB.show(L("GYXCYFSZR"));
                        return;
                    }
                    if(sender.lock) {
                        G.tip_NB.show(L("GYXBSD"));
                        return;
                    }

                    me.curId = sender.data;
                    me.selectedData = [];
                    me.getHeroData();
                    me.checkSelected();
                }
            });

            ui.show();
        },
        getHeroData: function() {
            var me = this;

            me.ajax("huodong_rearmy_getneed", [me._data.hdid, me.curId], function (str, data) {
                if(data.s == 1) {
                    me.curData = data.d;
                    me.setSelectedHero(data.d);
                }
            });
        },
        setSelectedHero: function (data) {
            var me = this;

            me.nodes.img_yxdi.show();
            me.ui.finds("txt1").show();
            X.setHeroModel({
                parent: me.leftNode,
                data: G.DATA.yingxiong.list[me.curId],
                scaleNum: .8
            });
            me.nodes.text_sl.setString(data.need[0].n);
            me.setSate();
        },
        setSate: function() {
            var me = this;
            var lay = me.ui.finds("ico");
            var data = me.curData || {};

            me.ui.finds("txt1").setString(me.selectedData.length + "/" + (data.needarmynum || 5));

            lay.removeAllChildren();
            me.rightNode.removeAllChildren();

            if(me.selectedData.length > 0) {
                var hero = G.class.shero(G.DATA.yingxiong.list[me.selectedData[0]]);
                hero.setAnchorPoint(0.5, 0.5);
                hero.setPosition(lay.width / 2, lay.height / 2);
                hero.lv.hide();
                lay.addChild(hero);

                var hid = G.DATA.yingxiong.list[me.selectedData[0]].hid;
                var str = "";
                str += hid.substring(0, hid.length - 1);
                str += "6";
                var conf = X.clone(G.class.hero.getById(str));
                conf.star = 10;
                X.setHeroModel({
                    parent: me.rightNode,
                    data: conf,
                    direction: -1,
                    scaleNum: .8
                })
            }
        },
        checkSelected: function (data) {
            var me = this;

            var chr = me.table.getAllChildren();
            for (var i in chr) {
                if(me.curId == chr[i].data) {
                    chr[i].nodes.img_gou.show();
                } else {
                    chr[i].nodes.img_gou.hide();
                }
            }
        }
    });
})();
;;/**
 * Created by LYF on 2018/7/8.
 */
(function () {
    //月礼包
    G.class.huodong_monthPrize = X.bView.extend({
        extConf: {

        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super("event_scrollview.json");
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
            me.type = "month";
            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            X.viewCache.getView("event_list1.json", function (node) {
                me.list = node.nodes.panel_list;

                me.refreshPanel();
            });
        },
        onRemove: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("weekmonthlibao_open", [me.type], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner3.png', 0);
                },
                panel_txt: function (node) {
                    node.show();
                    node.removeAllChildren();
                    var txt_djs = new ccui.Text("", G.defaultFNT, 20);
                    var txt = new ccui.Text(L("HCZ"), G.defaultFNT, 20);
                    txt_djs.setTextColor(cc.color("#2bdf02"));
                    txt.setTextColor(cc.color("#ffffff"));
                    X.enableOutline(txt_djs, "#000000", 2);
                    X.enableOutline(txt, "#000000", 2);
                    txt_djs.setAnchorPoint(1, 0.5);
                    txt.setAnchorPoint(0, 0.5);
                    txt_djs.setPosition(node.width / 2, node.height / 2);
                    txt.setPosition(node.width / 2, node.height / 2);
                    node.addChild(txt_djs);
                    node.addChild(txt);
                    if(me.DATA.et - G.time > 24 * 3600) {
                        txt_djs.setString(X.moment(me.DATA.et - G.time));
                        txt.hide();
                    }else {
                        X.timeout(txt_djs, me.DATA.et, function () {
                            me.refreshPanel();
                        });
                    }
                }
            },me.nodes);
            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: "4504a"},
            });
        },
        setTable: function () {
            var me = this;
            var conf = G.class.getConf("weekmonth")[me.type];
            var scrollview = me.nodes.scrollview;
            cc.enableScrollBar(scrollview);

            var arr = [];
            var data = me.DATA.itemdict;
            var keys = X.keysOfObject(data);
            for(var i = 0; i < keys.length; i ++){
                data[keys[i]].pid = keys[i];
                data[keys[i]].conf = conf.itemdict[keys[i]];
                arr.push(data[keys[i]]);
            }
            arr.sort(function (a, b) {
                return a.conf.rmbmoney < b.conf.rmbmoney ? -1 : 1;
            });

            if(!me.table) {
                var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data) {
                    me.setItem(ui, data);
                }, null, null, 1, 3);
                table.setData(arr);
                table.reloadDataWithScroll(true);
                table._table.tableView.setBounceable(false);
            } else {
                me.table.setData(arr);
                me.table.reloadDataWithScroll(false);
            }

        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            X.render({
                btn: function (node) {
                    node.setBright(data.num < 1 ? false : true);
                    node.setTouchEnabled(data.num < 1 ? false : true);
                    node.click(function (sender, type) {
                        G.event.once('paysuccess', function() {
                            G.frame.jiangli.data({
                                prize: data.conf.p
                            }).show();
                            G.frame.huodong.updateTop();
                            me.refreshPanel();
                        });
                        G.event.emit('doSDKPay', {
							pid:data.pid,
                            logicProid: data.pid,
                            money: data.conf.rmbmoney,
                        });
                    }, 1000)
                },
                ico_item: function (node) {
                    node.removeAllChildren();
                    X.alignItems(node, data.conf.p, "left", {
                        touch: true,
                    })
                },
                txt: function (node) {
                    node.removeAllChildren();
                    var txt = new ccui.Text(X.STR(L("XGX"), data.num), G.defaultFNT, 22);
                    txt.setFontName(G.defaultFNT);
                    txt.setTextColor(cc.color(G.gc.COLOR.n4));
                    txt.setAnchorPoint(0.5,0.5);
                    txt.setPosition(node.width / 2, node.height / 2);
                    node.addChild(txt);
                },
                btn_txt: function (node) {
                    node.setString(data.conf.rmbmoney / 100 + L("YUAN"));
                    if(data.num < 1){
                        node.setTextColor(cc.color(G.gc.COLOR.n15));
                    }else{
                        node.setTextColor(cc.color("#7b531a"))
                    }
                },
                img_zk: function (node) {
                    if(data.conf.sale) {
                        node.show();
                        node.children[0].setString(data.conf.sale + L("sale"));
                        X.enableOutline(node.children[0], "#008000", 2);
                    } else {
                        node.hide()
                    }
                }
            }, ui.nodes);
            ui.show();
        }
    })
})();

;;/**
 * Created by LYF on 2018/8/14.
 */
(function () {
    //活动-排行榜
    var ID = 'huodong_phb';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;

            me.nodes.text_zdjl.setString(L("PHB"));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.conf = {
                10010: {
                    rankTitle: L("DJCS"),
                    myTitle: L("WDCS"),
                    type: 7
                },
                10008: {
                    rankTitle: L("YZTG"),
                    myTitle: L("WDSC"),
                    type: 8
                },
                10009: {
                    rankTitle: L("XSCS"),
                    myTitle: L("WDCS"),
                    type: 9
                },
                10022: {
                    rankTitle: L("KSTX"),
                    myTitle: L("WDCS"),
                    type: 15
                }
            }
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            new X.bView("ui_paihangbang.json", function (view) {
                me.view = view;
                me.nodes.panel_nr.addChild(view);
                me.view.nodes.panel_rank.height -= 103;
                ccui.helper.doLayout(me.view.nodes.panel_rank);
                X.viewCache.getView('ui_list2.json', function (node) {
                    me.list = node.nodes.list_rank;
                    me.setContents();
                });
            });
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            me.curType = me.data().stype == 10010 ? 7 : (me.data().stype == 10008 ? 8 : (me.data().stype == 10009 ? 9 : 15));
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onHide: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            G.ajax.send('rank_open', [me.curType], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;

            var scrollview = me.view.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            var listview = me.view.nodes.listview;
            cc.enableScrollBar(listview);
            scrollview.removeAllChildren();



            var data = me.DATA;
            if (data.ranklist.length < 1) {
                me.setMyRank();
                cc.isNode(me.view.nodes.img_zwnr) && me.view.nodes.img_zwnr.show();
                return;
            } else {
                cc.isNode(me.view.nodes.img_zwnr) && me.view.nodes.img_zwnr.hide();
            }
            me.setMyRank();
            for (var i = 0; i < data.ranklist.length; i++) {
                data.ranklist[i].rank = i + 1;
            }
            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8, 10);
            table.setData(data.ranklist);
            table.reloadDataWithScroll(true);
            scrollview.getChildren()[0].getChildren()[0].x = -1;
        },
        setItem: function (ui, data) {
            X.autoInitUI(ui);
            var me = this;
            var layPh = ui.nodes.img_rank;
            var txtPh = ui.nodes.sz_phb;
            var layIco = ui.nodes.panel_tx;
            var txtName = ui.nodes.txt_name;
            var txtGuanqia = ui.nodes.txt_number;
            ui.nodes.txt_title.setString(me.conf[me.data().stype].rankTitle);

            if(data.zhanli) {
                ui.finds("img_zdl").show();
                ui.nodes.text_zdl2.show();
                ui.nodes.text_zdl2.setString(data.zhanli);
            }

            layPh.hide();
            txtPh.setString('');
            layIco.removeAllChildren();
            if (data.rank < 0) {
                txtPh.setString(0);
            } else if (data.rank < 4) {
                layPh.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                layPh.show();
            } else {
                txtPh.setString(data.rank);
                txtPh.show();
            }

            var wid = G.class.shead(data.headdata);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);
            wid.data = data;
            wid.setTouchEnabled(true);
            wid.click(function (sender) {
                if (P.gud.uid == sender.data.headdata.uid) {
                    return;
                }
                G.frame.wanjiaxinxi.data({
                    pvType: 'zypkjjc',
                    uid: sender.data.headdata.uid,
                    btnsCall: function (node) {
                        var btnsArr = [];

                    }
                }).checkShow();
            });

            txtName.setString(data.headdata.name);
            txtGuanqia.setString(data.val);

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            layPh.setTouchEnabled(false);

        },
        //显示我的排行
        setMyRank: function () {
            var me = this;
            var data = me.data();
            var rank = me.DATA.myrank;
            var list = me.list.clone();
            X.autoInitUI(list);
            var txtPh = me.view.nodes.fnt_player;
            var layIco = list.nodes.panel_tx;
            var txtName = list.nodes.txt_name;
            var txtGuanqia = me.view.finds('txt_level_0');

            list.nodes.bg_list.hide();
            list.nodes.txt_title.setString(L('GUANQIA'));
            me.view.finds("txt_level").setString(me.conf[data.stype].myTitle);

            layIco.removeAllChildren();
            txtPh.removeAllChildren();
            if (rank < 0) {
                txtPh.setString("");
                me.view.finds('wsb_player').show();
            } else{
                txtPh.setString(rank);
            }
            // else if (rank < 4) {
            //     txtPh.setBackGroundImage('img/public/img_paihangbang_' + rank + '.png', 1);
            // }

            var wid = G.class.shead(P.gud);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);

            txtName.setString(P.gud.name);
            txtGuanqia.setString(me.DATA.myval);

            layIco.setTouchEnabled(false);
            // list.setPosition(me.view.nodes.list_player.width / 2, me.view.nodes.list_player.height / 2 - list.height / 2);

            // me.view.nodes.list_player.addChild(list);
            me.view.nodes.panel_player.show();
        }
    });

    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by LYF on 2018/7/8.
 */
(function () {
    //周礼包
    G.class.huodong_weekPrize = X.bView.extend({
        extConf: {

        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super("event_scrollview.json");
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
            me.type = "week";
            me.bindBtn();
        },
        onShow: function () {
            var me = this;

            X.viewCache.getView("event_list1.json", function (node) {
                me.list = node.nodes.panel_list;

                me.refreshPanel();
            });
        },
        onRemove: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("weekmonthlibao_open", [me.type], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage('img/event/img_event_banner2.png', 0);
                },
                panel_txt: function (node) {
                    node.show();
                    node.removeAllChildren();
                    var txt_djs = new ccui.Text("", G.defaultFNT, 20);
                    var txt = new ccui.Text(L("HCZ"), G.defaultFNT, 20);
                    txt_djs.setTextColor(cc.color("#2bdf02"));
                    txt.setTextColor(cc.color("#ffffff"));
                    X.enableOutline(txt_djs, "#000000", 2);
                    X.enableOutline(txt, "#000000", 2);
                    txt_djs.setAnchorPoint(1, 0.5);
                    txt.setAnchorPoint(0, 0.5);
                    txt_djs.setPosition(node.width / 2, node.height / 2);
                    txt.setPosition(node.width / 2, node.height / 2);
                    node.addChild(txt_djs);
                    node.addChild(txt);
                    if(me.DATA.et - G.time > 24 * 3600) {
                        txt_djs.setString(X.moment(me.DATA.et - G.time));
                        txt.hide();
                    }else {
                        X.timeout(txt_djs, me.DATA.et, function () {
                            me.refreshPanel();
                        });
                    }
                }
            },me.nodes);
            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: "45013"},
            });
        },
        setTable: function () {
            var me = this;
            var conf = G.class.getConf("weekmonth")[me.type];
            var scrollview = me.nodes.scrollview;
            cc.enableScrollBar(scrollview);

            var arr = [];
            var data = me.DATA.itemdict;
            var keys = X.keysOfObject(data);
            for(var i = 0; i < keys.length; i ++){
                data[keys[i]].pid = keys[i];
                data[keys[i]].conf = conf.itemdict[keys[i]];
                arr.push(data[keys[i]]);
            }
            arr.sort(function (a, b) {
                return a.conf.rmbmoney < b.conf.rmbmoney ? -1 : 1;
            });

            if(!me.table) {
                var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data) {
                    me.setItem(ui, data);
                }, null, null, 1, 3);
                table.setData(arr);
                table.reloadDataWithScroll(true);
                table._table.tableView.setBounceable(false);
            } else {
                me.table.setData(arr);
                me.table.reloadDataWithScroll(false);
            }
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            X.render({
                btn: function (node) {
                    node.setBright(data.num < 1 ? false : true);
                    node.setTouchEnabled(data.num < 1 ? false : true);
                    node.click(function (sender, type) {
                        G.event.once('paysuccess', function() {
                            G.frame.jiangli.data({
                                prize: data.conf.p
                            }).show();
                            G.frame.huodong.updateTop();
                            me.refreshPanel();
                        });
                        G.event.emit('doSDKPay', {
							pid:data.pid,
                            logicProid: data.pid,
                            money: data.conf.rmbmoney,
                        });
                    }, 1000)
                },
                ico_item: function (node) {
                    node.removeAllChildren();
                    X.alignItems(node, data.conf.p, "left", {
                        touch: true,
                    })
                },
                txt: function (node) {
                    node.removeAllChildren();
                    var txt = new ccui.Text(X.STR(L("XGX"), data.num), G.defaultFNT, 22);
                    txt.setFontName(G.defaultFNT);
                    txt.setTextColor(cc.color(G.gc.COLOR.n4));
                    txt.setAnchorPoint(0.5,0.5);
                    txt.setPosition(node.width / 2, node.height / 2);
                    node.addChild(txt);
                },
                btn_txt: function (node) {
                    node.setString(data.conf.rmbmoney / 100 + L("YUAN"));
                    if(data.num < 1){
                        node.setTextColor(cc.color(G.gc.COLOR.n15));
                    }else{
                        node.setTextColor(cc.color("#7b531a"))
                    }
                },
                img_zk: function (node) {
                    if(data.conf.sale) {
                        node.show();
                        node.children[0].setString(data.conf.sale + L("sale"));
                        X.enableOutline(node.children[0], "#008000", 2);
                    } else {
                        node.hide();
                    }
                }
            }, ui.nodes);
            ui.show();
        }
    })
})();

;;/**
 * Created by LYF on 2018/10/10.
 */
(function () {
    //限时团购
    G.class.huodong_xstg = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super("event_xianshituangou.json");
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.bindBTN();
                me.ui.finds("listview").children[me.curType].triggerTouch(ccui.Widget.TOUCH_ENDED);
            });
        },
        getData: function (callback) {
            var me = this;

            G.frame.huodong.getData(me._type.hdid,function(d){
                me.DATA = d;
                callback && callback();
            })
        },
        bindBTN: function() {
            var me = this;

            if(X.inArray(G.DATA.hongdian.huodong, me._type.hdid)) {
                G.setNewIcoImg(me.nodes.btn_fx);
            }
            if(me.DATA.myinfo.receive) {
                me.nodes.btn_lq.setTouchEnabled(false);
                me.nodes.btn_lq.setBright(false);
                me.nodes.btn_lq.setTitleText(L("YLQ"));
                me.nodes.btn_lq.setTitleColor(cc.color("#6c6c6c"));
            }
            me.nodes.btn_lq.click(function (sender) {
                if(me._type.rtime > G.time) {
                    G.tip_NB.show(L("WDFXSJ"));
                    return;
                }
                if(me.DATA.myinfo.receive) {
                    G.tip_NB.show(L("FXYLQ"));
                    return;
                }
                me.ajax('huodong_use',[me._type.hdid, 2, 0], function (str, data) {
                    if (data.s == 1){
                        G.frame.jiangli.data({
                            prize: data.d.prize
                        }).show();
                        me.getData(function () {
                            me.nodes.txt_zs.setString(me.DATA.myinfo.val[0].n);
                        });
                        G.hongdian.getHongdian(1, function () {
                            G.frame.huodong.checkRedPoint();
                        });
                        G.removeNewIco(sender);
                        me.nodes.btn_lq.setTouchEnabled(false);
                        me.nodes.btn_lq.setBright(false);
                        me.nodes.btn_lq.setTitleText(L("YLQ"));
                        me.nodes.btn_lq.setTitleColor(cc.color("#6c6c6c"));
                    }
                },true);
            });
            me.nodes.btn_sz.click(function () {
                G.ajax.send('huodong_use',[me._type.hdid, 1, me.curType],function(d) {
                    if(!d) return;
                    var d = JSON.parse(d);
                    if(d.s == 1) {
                        G.frame.jiangli.data({
                            prize:[].concat(d.d.prize)
                        }).show();
                        me.refreshPanel();
                    }
                },true);
            });
        },
        changeType: function(type, bool) {
            var me = this;
            me.curType = type;
            me.setContents();
        },
        createMenu: function() {
            var me = this;

            for(var i = 0; i < me._type.data.arr.length; i ++) {
                var data = me._type.data.arr[i];
                var item = G.class.sitem(data.p[0]);
                // item.num.hide();
                item.setName("item_" + i);
                item.setTouchEnabled(true);
                me.ui.finds("listview").pushBackCustomItem(item);
            }

            X.radio(me.ui.finds("listview").getChildren(), function (sender) {
                var name = sender.getName();

                me.changeType(name.split("_")[1]);
            }, {
                color: ["#ffffff", "#ffffff"],
                callback1: function (sender) {
                    if(sender.gou) {
                        sender.gou.show();
                    }else {
                        var gou = new ccui.ImageView('img/public/img_gou.png',1);
                        gou.setName('gou');
                        gou.setAnchorPoint(cc.p(0.5,0.5));
                        gou.setPosition(cc.p(sender.width / 2,sender.height / 2));
                        gou.setLocalZOrder(1000);
                        sender.addChild(gou);
                        sender.gou = gou;
                    }
                },
                callback2: function (sender) {
                    if(sender.gou) {
                        sender.gou.hide();
                    }
                }
            });
        },
        onOpen: function () {
            var me = this;

            cc.enableScrollBar(me.ui.finds("listview"));
            me.createMenu();
            me.ui.finds("listview").setItemsMargin(15);
            me.curType = 0;
            me.nodes.list.hide();
        },
        onShow: function () {
            var me = this;
            me.nodes.wz2.show();
            me.refreshPanel();
            me.setBanner();
            me.setState();
        },
        setState: function() {
            var me = this;

            if(me.isFX) {
                me.nodes.btn_lq.show();
                me.nodes.btn_sz.hide();
                me.nodes.wz1.hide();
                me.nodes.wz2.hide();
                me.ui.finds("zs_di").hide();
                me.ui.finds("txt_sjjs").show();
            }
        },
        setBanner: function () {
            var me = this;

            if(me._type.rtime - G.time > 24 * 3600 * 2) {
                me.nodes.wz3.setString(X.moment(me._type.rtime - G.time));
            }else {
                if(me._type.rtime < G.time) {
                    me.ui.finds("wz1_0").setString(L("FXJSSJ"));
                    me.isFX = true;
                    X.timeout(me.nodes.wz3, me._type.etime, function () {
                        me.nodes.wz3.setString(L("YJS"));
                    })
                }else {
                    X.timeout(me.nodes.wz3, me._type.rtime, function () {
                        me.ui.finds("wz1_0").setString(L("FXJSSJ"));
                        me.isFX = true;
                        X.timeout(me.nodes.wz3, me._type.etime, function () {
                            me.nodes.wz3.setString(L("YJS"));
                        })
                    })
                }
            }
        },
        setContents: function () {
            var me = this;
            var conf = me._type.data.arr[me.curType];
            var data = me.DATA.info[me.curType];
            var arr = ["wz_200", "wz_300", "wz_400", "wz_800"];

            for(var i = 1; i < conf.num2sale.length; i ++) {
                me.ui.finds(arr[i - 1]).setString(conf.num2sale[i][0]);
            }

            for(var i = 1; i < 5; i ++) {
                var per = data.buynum / conf.num2sale[i][0] * 100;
                if(data.buynum >= conf.num2sale[i][0]) {
                    me.nodes["jindutiao" + i].setPercent(100);
                }else if(data.buynum < conf.num2sale[i][0] && data.buynum > conf.num2sale[i - 1][0]){
                    me.nodes["jindutiao" + i].setPercent(per);
                }else {
                    me.nodes["jindutiao" + i].setPercent(0);
                }
            }

            me.nodes.wz_goumai.setString(X.STR(L("YGMXJ"), data.buynum));
            me.nodes.txt_zs.setString(me.DATA.myinfo.val[0].n);

            var item = G.class.sitem(data.p[0]);
            item.setPosition(me.nodes.ico.width / 2, me.nodes.ico.height / 2);
            G.frame.iteminfo.showItemInfo(item);
            me.nodes.ico.removeAllChildren();
            me.nodes.ico.addChild(item);
            me.nodes.text_zuanshi.setString(data.need[0].n);
            me.nodes.text_zuanshi2.setString(data.sale ? parseInt(data.need[0].n * data.sale / 100) : data.need[0].n);
            me.nodes.wz2.removeAllChildren();

            var str2 = new X.bRichText({
                size: 22,
                maxWidth: me.nodes.wz2.width,
                lineHeight: 32,
                family: G.defaultFNT,
                color: "#ffffff"
            });
            str2.text(X.STR(L("JRKGMXC"), me.DATA.myinfo.gotarr[me.curType].daynum));
            str2.setAnchorPoint(0, 0.5);
            str2.setPosition(0, me.nodes.wz2.height / 2);
            me.nodes.wz2.addChild(str2);
        },
    })
})();
;;/**
 * Created by LYF on 2018/9/25.
 */
(function () {
    //月基金
    G.class.huodong_yjj = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me.data = type;
            G.frame.xianshilibao.yjj = me;
            me._super("event_jijin128.json");
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        getData: function (callback) {
            var me = this;

            G.ajax.send('monthfund_open',[me.data.hdid],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            },true);
        },
        bindBTN: function() {
            var me = this;

            G.class.ani.show({
                json: "ani_jiangliyulan",
                addTo: me.nodes.btn_jlyl,
                x: me.nodes.btn_jlyl.width / 2,
                y: me.nodes.btn_jlyl.height / 2,
                cache: true,
                repeat: true,
                autoRemove: false
            });

            me.nodes.btn_jlyl.opacity = 0;

            me.nodes.btn_jlyl.click(function () {
                G.frame.yjj_jlyl.data({data: me.data.data.arr, list: me.nodes.list.clone(), texiao: me.data.data.texiao}).show();
            });

            me.nodes.pan1.finds("btn_sz").click(function () {
                if (!me.DATA.myinfo.yueka) {
                    G.frame.alert.data({
                        sizeType:3,
                        cancelCall:null,
                        okCall: function () {
                            G.frame.huodong.data({
                                type: 0,
                                idx: 1
                            }).show();
                        },
                        autoClose:true,
                        richText:L('HUODONG_CZJJ_YUEKA')
                    }).show();
                    return;
                }

                if (!me.DATA.myinfo.zhizunka) {
                    G.frame.alert.data({
                        sizeType:3,
                        cancelCall:null,
                        okCall: function () {
                            G.frame.huodong.data({
                                type: 0,
                                idx: 2
                            }).show();
                        },
                        autoClose:true,
                        richText:L('HUODONG_CZJJ_ZHIZUNKA')
                    }).show();
                    return;
                }
                G.event.once('paysuccess', function() {
                    me.refreshPanel();
                    G.view.mainView.getAysncBtnsData(function(){
                        G.view.mainView.allBtns["lefttop"] = [];
                        G.view.mainView.setSvrBtns();
                        G.hongdian.getData("monthfund", 1, function () {
                            G.frame.xianshilibao.checkRedPoint();
                        });
                    }, false);
                });
                G.event.emit('doSDKPay', {
                    pid:me.data.data.chkkey,
                    logicProid: me.data.data.chkkey,
                    money: me.data.data.money,
                });
            }, 2000);

            me.nodes.pan2.finds("btn_sz").click(function () {
                me.ajax('monthfund_use',[me.data.hdid],function(s, d) {
                    if(d.s == 1) {
                        G.frame.jiangli.data({
                            prize: d.d.prize
                        }).show();
                        cc.mixin(me.DATA.myinfo,d.d.myinfo,true);
                        if (me.DATA.myinfo.isover) {
                            G.tip_NB.show(L('HUODONG_CZJJ_JLYLQ'));
                            me.nodes.pan2.finds('btn_sz').setTitleText(L('BTN_YLQ'));
                            me.nodes.pan2.finds('btn_sz').setTitleColor(cc.color("#6c6c6c"));
                            me.nodes.pan2.finds('btn_sz').setTouchEnabled(false);
                            me.nodes.pan2.finds('btn_sz').setBright(false);
                            G.removeNewIco(me.nodes.pan2.finds('btn_sz'));
                        }else {
                            me.setContents();
                        }
                        G.hongdian.getData("monthfund", 1, function () {
                            G.frame.xianshilibao.checkRedPoint();
                        })
                    } else if (d.s == -10) {
                        G.frame.huodong.remove();
                    }
                },true);
            })
        },
        onOpen: function () {
            var me = this;
            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.ui.finds("txt1").y += 10;
            me.ui.finds("bg").loadTexture(me.data.htype == 170 ? "img/bg/bg_jijin128.png" : "img/bg/bg_jijin328.png", 0);

            me.refreshPanel();
            me.setBanner();
        },
        setContents: function () {
            var me = this;

            me.setTable();
        },
        setBanner: function () {
            var me = this;

            var prize = me.data.data.showprize;
            X.newExtendLayout(me.nodes.neirong, {
                dataCount: prize.length,
                extend: true,
                delay: 10,
                cellCount: 4,
                nodeWidth:120,
                rowHeight:160,
                itemAtIndex: function (index) {
                    var p = prize[index];
                    var list = me.nodes.list.clone();

                    var widget = G.class.sitem(me.data.data.arr[p].p[0]);
                    widget.setPosition(list.finds("ico").width / 2, list.finds("ico").height / 2);
                    list.finds("ico").addChild(widget);
                    G.frame.iteminfo.showItemInfo(widget);

                    var str = X.STR(L("LJJT"), p + 1);
                    var rh = new X.bRichText({
                        size: 18,
                        maxWidth: list.finds("wz").width,
                        lineHeight: 32,
                        color: "#b55222",
                        family: G.defaultFNT,
                    });
                    rh.text(str);
                    rh.setAnchorPoint(0.5, 0.5);
                    rh.setPosition(list.finds("wz").width / 2, list.finds("wz").height / 2);
                    list.finds("wz").addChild(rh);
                    list.show();
                    return list;
                }
            })
        },
        setTable: function () {
            var me = this;

            if(me.DATA.myinfo.isbuy) {
                me.nodes.pan1.hide();
                me.nodes.pan2.show();

                X.render({
                    ico: function(node){
                        var p = me.DATA.info.arr[me.DATA.myinfo.val - 1].p;
                        var widget = G.class.sitem(p[0]);
                        widget.setPosition(node.width / 2, node.height / 2);
                        node.removeAllChildren();
                        node.addChild(widget);
                        G.frame.iteminfo.showItemInfo(widget);
                    },
                    wz1: X.STR(L('HUODONG_YJJ_LJ'), me.DATA.myinfo.val),
                    wz2: X.STR(L('HUODONG_YJJ_LQSJ'), me.DATA.myinfo.usetime)
                }, me.nodes);

                if (X.inArray(me.DATA.myinfo.gotarr, me.DATA.myinfo.val)) {
                    me.nodes.pan2.finds('btn_sz').setTitleText(L('BTN_YLQ'));
                    me.nodes.pan2.finds('btn_sz').setTitleColor(cc.color("#6c6c6c"));
                    me.nodes.pan2.finds('btn_sz').setTouchEnabled(false);
                    me.nodes.pan2.finds('btn_sz').setBright(false);
                    G.removeNewIco(me.nodes.pan2.finds('btn_sz'));
                } else {
                    me.nodes.pan2.finds('btn_sz').setTitleText(L('BTN_LQ'));
                    me.nodes.pan2.finds('btn_sz').setTouchEnabled(true);
                    me.nodes.pan2.finds('btn_sz').setTitleColor(cc.color("#2f5719"));
                    me.nodes.pan2.finds('btn_sz').setBright(true);
                    G.setNewIcoImg(me.nodes.pan2.finds('btn_sz'), .9);
                }
            }else {
                me.nodes.pan2.hide();
                me.nodes.pan1.show();
                me.data.htype == 170 ? me.nodes.pan1.finds("btn_sz").setTitleText("￥128") : me.nodes.pan1.finds("btn_sz").setTitleText("￥328");
                me.data.htype == 170 ? me.nodes.txt_info1.setBackGroundImage("img/yuejijin/bg_128.png", 1) : me.nodes.txt_info1.setBackGroundImage("img/yuejijin/bg_328.png", 1)
            }
        }
    })
})();
;;/**
 * Created by LYF on 2018/10/10.
 */
(function () {
    //英雄降临
    G.class.huodong_yxjl = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super("event_yingxiongjianglin.json");
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        getData: function (callback) {
            var me = this;

            G.frame.huodong.getData(me._type.hdid,function(d){
                me.DATA = d;
                callback && callback();
            })
        },
        bindBTN: function() {
            var me = this;

            me.nodes.btn.click(function () {
                G.frame.shop.data({type: "1", name: "yxsd"}).show();
            })
        },
        onOpen: function () {
            var me = this;
            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();
            me.setBanner();
        },
        setBanner: function () {
            var me = this;

            me.ui.finds("txt_count").setString(L("SHENGYU"));
            if(me._type.etime - G.time > 24 * 3600 * 2) {
                me.nodes.txt_time.setString(X.moment(me._type.etime - G.time));
            }else {
                X.timeout(me.nodes.txt_time, me._type.etime, function () {
                    X.uiMana.closeAllFrame();
                })
            }

            X.setHeroModel({
                parent: me.nodes.panel_rw,
                data: {
                    hid: me._type.data.hid,
                },
                scale: 1.5
            });
        },
        setContents: function () {
            var me = this;
            var prize = [];

            for(var i = 0; i < me._type.data.arr.length; i ++) {
                prize.push(me._type.data.arr[i].item);
            }

            X.alignItems(me.nodes.ico_item, prize, 0, {
                touch: true,
                callback: function () {
                }
            })
        },
    })
})();
;;/**
 * Created by LYF on 2018/11/29.
 */
(function () {
    //英雄荣耀
    G.class.huodong_yxry = X.bView.extend({
        ctor: function (data) {
            var me = this;
            me._data = data;
            me._super('event_scrollview.json');
        },
        bindBtn:function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
        },
        onShow : function(){
            var me = this;

            cc.enableScrollBar(me.nodes.scrollview);
            X.viewCache.getView("event_list4.json", function (node) {
                me.list = node.nodes.panel_list;
                me.refreshPanel();
            });
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
        },
        setBanner: function () {
            var me = this;

            X.render({
                panel_banner: function (node) {
                    node.setBackGroundImage("img/event/img_event_banner18.png");
                },
                panel_title: function(node) {
                    var rh = new X.bRichText({
                        size:22,
                        maxWidth:node.width + 60,
                        lineHeight:24,
                        family:G.defaultFNT,
                        color:G.gc.COLOR.n5,
                        eachText: function (node) {
                            X.enableOutline(node,'#000000');
                        },
                    });
                    rh.text(me._data.intr);
                    rh.setAnchorPoint(0,1);
                    rh.setPosition(0, node.height);
                    node.addChild(rh);
                },
                txt_count: L("CHONGZHI"),
                txt_time: function (node) {
                    if(me._data.etime - G.time > 24 * 3600 * 2) {
                        me.nodes.txt_count.hide();
                        node.setString(X.moment(me._data.etime - G.time));
                    }else {
                        X.timeout(node, me._data.etime, function () {
                            me.timeout = true;
                        })
                    }
                },
            }, me.nodes);

            X.setModel({
                parent: me.nodes.panel_hero1,
                data: {hid: me._data.model},
            });
        },
        setTable: function () {
            var me = this;
            var data = me.DATA.info.arr;

            if(!me.table) {
                var table = me.table = new X.TableView(me.nodes.scrollview, me.list, 1, function (ui, data, pos) {
                    me.setItem(ui, data, pos[0] + pos[1]);
                }, null, null, 1, 3);
                table.setData(data);
                table.reloadDataWithScroll(true);
            } else {
                me.table.setData(data);
                me.table.reloadDataWithScroll(false);
            }
        },
        setItem: function (ui, data, idx) {
            var me = this;
            X.autoInitUI(ui);

            if (me.DATA.myinfo.val[data.id] && me.DATA.myinfo.val[data.id] >= data.val ) {
                if (X.inArray(me.DATA.myinfo.gotarr[data.id], data.val)) {
                    ui.nodes.btn_txt.setString(L('YLQ'));
                    ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                    ui.nodes.btn.setEnableState(false);
                    G.removeNewIco(ui.nodes.btn);
                } else {
                    ui.nodes.btn_txt.setString(L('LQ'));
                    ui.nodes.btn.setEnableState(true);
                    ui.nodes.btn_txt.setTextColor(cc.color("#2f5719"));
                    G.setNewIcoImg(ui.nodes.btn, .9);
                }
            } else {
                G.removeNewIco(ui.nodes.btn);
                ui.nodes.btn_txt.setString(L('LQ'));
                ui.nodes.btn.setEnableState(false);
                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
            }

            X.render({
                btn: function (node) {
                    node.idx = idx;
                    node.loadTextureNormal("img/public/btn/btn1_on.png", 1);
                    node.click(function(sender, type) {
                        me.ajax('huodong_use', [me._data.hdid, 1, sender.idx], function(str, dd) {
                            if (dd.s == 1) {
                                G.frame.jiangli.data({
                                    prize: data.p
                                }).show();
                                ui.nodes.btn_txt.setString(L('YLQ'));
                                ui.nodes.btn_txt.setTextColor(cc.color("#6c6c6c"));
                                ui.nodes.btn.setEnableState(false);
                                G.removeNewIco(ui.nodes.btn);
                                G.hongdian.getData("huodong", 1, function () {
                                    G.frame.huodong.checkRedPoint();
                                });
                                me.refreshPanel();
                            }
                        }, true);
                    })
                },
                ico_item: function (node) {
                    X.alignItems(node, data.p, "left", {
                        touch: true,
                    });
                },
                txt: function (node) {
                    node.removeAllChildren();
                    var txt = new ccui.Text(X.STR(L("YXRY"), G.class.tongyu.getHerosByID(data.id)[data.val < 6 ? 0 : 1].name, data.val), G.defaultFNT, 22);
                    txt.setTextColor(cc.color(me.DATA.myinfo.val[data.id] && me.DATA.myinfo.val[data.id] >= data.val ? G.gc.COLOR[1] : G.gc.COLOR[5]));
                    txt.setAnchorPoint(0,0.5);
                    txt.setPosition(0, node.height / 2);
                    node.addChild(txt);
                },
            }, ui.nodes);
        },
        refreshPanel: function () {
            var me = this;

            G.frame.huodong.getData(me._data.hdid, function (data) {
                me.DATA = data;
                me.setContents();
            });
        },
    });

})();
;;/**
 * Created by LYF on 2018/10/24.
 */
(function () {
    //招财进宝

    G.frame.chongzhi.on("hide", function () {
        if(G.frame.huodong.zcjb) {
            G.frame.huodong.zcjb.refreshPanel();
        }
    });

    G.class.huodong_zcjb = X.bView.extend({
        ctor: function (data) {
            var me = this;
            me._data = data;
            me._super("event_zhaocaijingbao.json");
            G.frame.huodong.zcjb = me;
        },
        setContents: function () {
            var me = this;

            me.setBanner();
            me.setTable();
        },
        setBanner: function () {
            var me = this;
            var nr = me.ui.finds("Panel_15");
            var day = me.nodes.txt_tx;
            nr.removeAllChildren();
            day.removeAllChildren();

            var str = me._data.intr;
            var rh = new X.bRichText({
                size: 20,
                maxWidth: nr.width,
                lineHeight: 32,
                color: "#fff6c5",
                family: G.defaultFNT,
                eachText: function (node) {
                    X.enableOutline(node, "#000000", 2);
                }
            });
            rh.text(str);
            rh.setAnchorPoint(0, 1);
            rh.setPosition(0, nr.height);
            nr.addChild(rh);

            if(8 - me.DATA.daynum * 1 > 1) {
                var str1 = X.STR(L("SYXT"), 8 - me.DATA.daynum * 1);
                var rh1 = new X.bRichText({
                    size: 22,
                    maxWidth: day.width,
                    lineHeight: 32,
                    color: "#ffffff",
                    family: G.defaultFNT,
                    eachText: function (node) {
                        X.enableOutline(node, "#000000", 2);
                    }
                });
                rh1.text(str1);
                rh1.setAnchorPoint(0.5, 0.5);
                rh1.setPosition(day.width / 2, day.height / 2);
                day.addChild(rh1);
            }else {
                var str2 = L("SYXS");
                var txt1 = new ccui.Text("", G.defaultFNT, 16);
                txt1.setTextColor(cc.color("#2bdf02"));
                X.enableOutline(txt1, "#000000", 2);
                X.timeout(txt1, me._data.etime, function () {
                    X.uiMana.closeAllFrame();
                });
                var rh2 = new X.bRichText({
                    size: 22,
                    maxWidth: day.width,
                    lineHeight: 32,
                    color: "#ffffff",
                    family: G.defaultFNT,
                    eachText: function (node) {
                        X.enableOutline(node, "#000000", 2);
                    }
                });
                rh2.text(str2, [txt1]);
                rh2.setAnchorPoint(0.5, 0.5);
                rh2.setPosition(day.width / 2, day.height / 2);
                day.addChild(rh2);
            }


        },
        setTable: function () {
            var me = this;

            for(var i = 1; i < 8; i ++) {
                var list = me.ui.finds("list").clone();
                list.show();
                list.setPosition(0, -40);
                list.finds("ts1").y = 195;
                var str = X.STR(L("DXT"), i);
                var rh = new X.bRichText({
                    size: 22,
                    maxWidth: list.finds("ts1").width,
                    lineHeight: 32,
                    color: "#ffffff",
                    family: G.defaultFNT,
                    eachText: function (node) {
                        X.enableOutline(node, "#000000", 2);
                    }
                });
                rh.text(str);
                rh.setAnchorPoint(0.5, 0.5);
                rh.setPosition(list.finds("ts1").width / 2, list.finds("ts1").height / 2 - 40);
                list.finds("ts1").addChild(rh);

                if(!me.DATA.myinfo.val[i]) {
                    list.finds("ico").setBackGroundImage("img/zhaocaijingbao/ico_zcjb_bx1.png", 1);
                    list.finds("jy1").hide();
                    list.finds("img_jryc").hide();
                    list.finds("zs").hide();
                    list.finds("sz_1").hide();
                }else {
                    list.finds("wz1").hide();
                    list.finds("ico").setBackGroundImage("img/zhaocaijingbao/ico_zcjb_bx2.png", 1);
                    list.finds("sz_1").setString(me.DATA.myinfo.val[i])
                }

                me.nodes["list" + i].removeAllChildren();
                me.nodes["list" + i].addChild(list);
            }

            if(me.DATA.daynum * 1 < 8) {
                me.nodes.btn_qwcz.show();
                me.nodes.btn_cz.hide();
            }else {
                me.nodes.btn_qwcz.hide();
                me.nodes.btn_cz.show();
            }

            if(me.DATA.myinfo.finish) {
                me.nodes.btn_cz.setBright(false);
                me.nodes.btn_cz.setTouchEnabled(false);
            }

            for(var i = 0; i < me.DATA.info.fanli.length; i ++) {
                var data = me.DATA.info.fanli[i];
                var text = me.nodes["zt" + (i + 1)];
                if(!text) break;
                var str2 = X.STR(L("VIPFL"), data[0], data[1], parseInt(me.DATA.sum * (data[1] / 100)));
                var img = new ccui.ImageView(G.class.getItemIco("rmbmoney"), 1);
                var color = P.gud.vip >= data[0] ? (me.DATA.info.fanli[i + 1] ?
                    (P.gud.vip >= me.DATA.info.fanli[i + 1][0] ? "#ffffff" : "#30ff01")
                    :"#30ff01") : "#ffffff";
                var rh3 = new X.bRichText({
                    size: 16,
                    maxWidth: text.width,
                    lineHeight: 32,
                    color: color,
                    family: G.defaultFNT,
                });
                rh3.text(str2, [img]);
                rh3.setAnchorPoint(0, 0.5);
                rh3.setPosition(0, text.height / 2);
                text.removeAllChildren();
                text.addChild(rh3);
            }
        },
        refreshPanel: function () {
            var me = this;

            G.frame.huodong.getData(me._data.hdid, function (data) {
                me.DATA = data;
                me.setContents();
            });
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_qwcz.click(function () {
                G.frame.chongzhi.show();
            });
            me.nodes.btn_cz.click(function (sender) {
                me.ajax('huodong_use', [me._data.hdid, 1, 1], function (str, dd) {
                    if (dd.s == 1){
                        sender.setBright(false);
                        sender.setTouchEnabled(false);
                        G.frame.jiangli.data({
                            prize: dd.d.prize
                        }).show();
                        G.hongdian.getData("huodong", 1, function () {
                            G.frame.huodong.checkRedPoint();
                        });
                    }
                },true);
            }, 6000);
        },
        onOpen: function () {
            var me = this;

            me.bindBtn();
        },
        onShow: function () {
            var me = this;
            me.ui.finds("list").hide();
            me.refreshPanel();
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        onRemove: function () {
            var me = this;
            G.frame.huodong.zcjb = undefined;
        },
    })
})();
;;/**
 * Created by LYF on 2018/10/24.
 */
(function () {
    //每日首充
    var ID = 'meirishouchong';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
            var conf = G.class.getConf("meirishouchong");

            me.nodes.mask.click(function () {
                me.remove();
            });

            me.nodes.btn_an.click(function () {
                if(me.DATA.length < 1 || me.DATA[0].v < conf.val) {
                    G.frame.chongzhi.once("hide", function () {
                        me.getData(function () {
                            me.setContents();
                            me.setButton();
                        })
                    }).show();
                    return;
                }
                me.ajax("mrsc_getprize", [], function (str, data) {
                    if(data.s == 1) {
                        G.frame.jiangli.once("hide", function () {
                            me.remove();
                        }).data({
                            prize: data.d.prize
                        }).show();
                    }
                })
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.getData(function () {
                me.setContents();
                me.setButton();
            });
        },
        onHide: function () {
            var me = this;
            G.hongdian.getData("meirishouchong", 1);
            G.view.mainView.getAysncBtnsData(function () {
                G.view.mainView.allBtns["lefttop"] = [];
                G.view.mainView.setSvrBtns();
            }, false, ["meirishouchong"]);
        },
        setContents: function () {
            var me = this;
            var conf = G.class.getConf("meirishouchong");
            var num = me.DATA[0] && me.DATA[0].v || 0;

            X.alignCenter(me.nodes.ico, conf.prize, {
                touch: true,
                mapItem: function (item) {
                    me.setitemani(item);
                }
            });

            me.nodes.wz_sz.setString(conf.val > num ? (conf.val - num) * 10 : 0);
            me.setbtn_ani(me.nodes.bg_mrsc, "ani_meirishouchong");
        },
        setitemani:function(node){
            var me = this;
            G.class.ani.show({
                json: "ani_wupingkuang",
                addTo: node,
                x: 50,
                y: 50,
                repeat: true,
                autoRemove: false,
                onload: function(node, action) {
                }
            });
        },
        getData: function (callback) {
            var me = this;
            G.view.mainView.getAysncBtnsData(function () {
                me.DATA = G.DATA.asyncBtnsData.meirishouchong;
                callback && callback();

            }, false, ["meirishouchong"]);
        },
        setButton: function () {
            var me = this;
            var conf = G.class.getConf("meirishouchong");


            if(me.DATA.length > 0) {
                if(me.DATA[0].receive){
                    // 已领取
                    me.nodes.wz_sz.hide();
                    me.nodes.img_cz.hide();
                    me.nodes.img_lq.show();
                    // me.ui.finds("btn_an").loadTextureNormal("img/shouchong/btn_shouchong_ylq.png", 1);
                    me.nodes.btn_an.setTouchEnabled(false);
                }else if(me.DATA[0].v >= conf.val){
                    // 领取
                    me.nodes.wz_sz.hide();
                    me.nodes.img_cz.hide();
                    me.nodes.img_lq.show();
                    // me.ui.finds("btn_an").loadTextureNormal("img/shouchong/wz_jrsclq.png", 1);
                    me.setbtn_ani(me.nodes.btn_an, "ani_lingqu");
                }else {
                    me.setbtn_ani(me.nodes.btn_an, "ani_woyaohaoli");
                }
            }else{
                me.setbtn_ani(me.nodes.btn_an, "ani_woyaohaoli");
            }
        },
        setbtn_ani:function(node,ani){
            var me = this;
            node.removeAllChildren();
            G.class.ani.show({
                json: ani,
                addTo: node,
                x: node.width / 2,
                y: node.height / 2,
                repeat: true,
                autoRemove: false,
            });
        }
    });
    G.frame[ID] = new fun('jinrishouchong.json', ID);
})();
;;(function () {

    G.event.on("currencyChange", function () {
        if(G.frame.xianshilibao.isShow) {
            G.frame.xianshilibao.updateAttr();
        }
    });

    //异步按钮活动
    var ID = 'xianshilibao';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me.singleGroup = "f2";
            me._super(json, id,{action:true});
            me.preLoadRes = ["event3.png", "event3.plist"]
        },
        initUi: function () {
            var me = this;

        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_fh.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.hdList = me.data();
            me.redPointArr = [];
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.refreshPanel();
            me.checkRedPoint();
        },
        checkRedPoint: function() {
            var me = this;

            for (var i in me.redPointArr) {
                if(cc.isNode(me.redPointArr[i])) {
                    if(G.DATA.hongdian.monthfund[me.redPointArr[i].data.htype] && G.DATA.hongdian.monthfund[me.redPointArr[i].data.htype].canlq) {
                        G.setNewIcoImg(me.redPointArr[i]);
                        me.redPointArr[i].getChildByName("redPoint").setPosition(100, 157);
                    }else {
                        G.removeNewIco(me.redPointArr[i]);
                    }
                }
            }
        },
        refreshPanel: function(){
            var me = this;

            me.createMenu();
            me.nodes.listview.getChildren()[0] && me.nodes.listview.getChildren()[0].triggerTouch(ccui.Widget.TOUCH_ENDED);
            me.setBaseInfo();
        },
        onHide: function () {
            var me = this;
            if(G.frame.xianshilibao.yjj) {
                G.hongdian.getData("monthfund", 1);
            }else {
                G.view.mainView.getAysncBtnsData(function(){
                    G.view.mainView.allBtns["lefttop"] = [];
                    G.view.mainView.setSvrBtns();
                }, false);
            }

        },
        getData: function (hdid, callback) {
            var me = this;

            me.ajax('huodong_open', [hdid], function(str, data){
                if (data.s == 1) {
                    callback && callback(data.d);
                }
            });
        },
        getListData: function (callback) {
            var me = this;

        },
        createMenu: function () {
            var me = this;

            var listview = me.nodes.listview;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();

            // var itemClone = me.nodes.list;
            // itemClone.hide();

            var menuItems = [];

            var menus = me.hdList;

            menus.sort(function (a, b) {
                return a.stype * 1 > b.stype * 1;
            });

            cc.log('menus ~~~~', menus);

            for (var i = 0; i < menus.length; i++) {
                var mData = menus[i];
                var item = me.nodes.list.clone();
                item.data = mData;
                me.setItem(item,mData);
                if (G.DATA.hongdian.monthfund[mData.htype]) {
                    me.redPointArr.push(item);
                }
                listview.pushBackCustomItem(item);
                item.show();

                menuItems.push(item);
            }

            listview.jumpToTop();

            X.radio(menuItems, function (sender) {
                // var name = sender.getName();
                me.changeType(sender.data);
            },{
                callback1: function (sender) {
                    sender.finds('txt_name$').setOpacity(255);
                    sender.finds("img_light$").setVisible(true);
                    sender.finds("panel_dh$").setVisible(true);
                    sender.finds("ico$").runActions(cc.sequence(cc.scaleTo(0.1, 1.1, 1.1), cc.scaleTo(0.1, 1, 1)));
                },
                callback2: function (sender) {
                    sender.finds('txt_name$').setOpacity(255 * 0.6);
                    sender.finds("img_light$").setVisible(false);
                    sender.finds("panel_dh$").setVisible(false);
                },
                color: ["#FFE8C0", "#FFE8C0"],
            });
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            ui.setName(data.stype || data.id);

            ui.data = data;

            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);

            X.render({
                txt_name: function(node){
                    node.setString(data.title || data.name);
                    node.setTextColor(cc.color("#FFE8C0"));
                    X.enableOutline(node, "#2A1C0F", 2);
                },
                ico: function (node) {
                    node.setBackGroundImage('img/event/' + (data.icon) + '.png',0);
                },
                panel_dh: function (node) {
                    G.class.ani.show({
                        json: "ani_meirishilian",
                        addTo: node,
                        x: node.width / 2,
                        y: node.height / 2,
                        repeat: true,
                        autoRemove: false,
                    });
                }
            },ui.nodes);
        },
        changeType: function (data) {
            var me = this;
            var type = data.stype || data.id;

            me.curType = type;

            me.setContents(data);
        },
        setContents: function (data) {
            var me = this;
            //type为活动模板
            var type = me.curType;

            var viewConf = {
                "10001": G.class.huodong_libao,
                "10002": G.class.huodong_libao,
                "10019": G.class.huodong_yjj,
                "10020": G.class.huodong_yjj
            };
            var newView = new viewConf[type](data);
            ccui.helper.doLayout(newView);
            me.ui.nodes.panel_nr.addChild(newView);

            if(cc.isNode(me._panels)){
                me._panels.removeFromParent();
                me._panels = newView;
            }else{
                me._panels = newView;
            }


            //me._panels.show();
            if(me.isFirst) {
                X.audio.playEffect("sound/dianji.mp3", false);
            }
            me.isFirst = true;

            me.ui.setTimeout(function(){
                G.guidevent.emit('huodong_setContents_over');
            },500);
        },
        setBaseInfo: function (obj) {
            var me = this;

            obj = obj || {};

            var attr1 = obj.need1 || {a:'attr',t:'jinbi'};
            var attr2 = obj.need2 || {a:'attr',t:'rmbmoney'};

            X.render({
                txt_jb:X.fmtValue(G.class.getOwnNum(attr1.t,attr1.a)),
                txt_zs:X.fmtValue(G.class.getOwnNum(attr2.t,attr2.a)),
                btn_jia1: function (node) {
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.dianjin.show();
                        }
                    });
                },
                btn_jia2: function (node){
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.chongzhi.show();
                        }
                    })
                }
            },me.nodes);

            // me.ui.finds('token_jb').loadTexture(G.class.getItemIco(attr1.t),0);
            // me.ui.finds('token_zs').loadTexture(G.class.getItemIco(attr2.t),0);
        },
        updateAttr: function () {
            var me = this;
            X.render({
                txt_jb:X.fmtValue(P.gud.jinbi),
                txt_zs:X.fmtValue(P.gud.rmbmoney),
            },me.nodes);
        }
    });

    G.frame[ID] = new fun('event.json', ID);
})();
;;(function () {
    X.loadPlist(["lujing.png", "lujing.plist"]);
    G.class.setTZ = function (idx) {

        var is = true;
        var conf = G.class.tiaozhuan.getById(idx);
        var openLv = G.class.opencond.getLvById(conf.checkOpenId);
        if(conf.checkOpenId){
            openLv = G.class.opencond.getLvById(conf.checkOpenId);
            if(P.gud.lv < openLv){
                is = false;
            }
        }

        var btn = new ccui.Button;
        btn.is = is;
        btn.idx = idx;
        btn.setAnchorPoint(0.5, 0.5);
        btn.setContentSize(70, 70);
        btn.loadTextureNormal("img/lujing/" + conf.img, 1);
        btn.setBright(is);
        btn.click(function (sender, type) {
            if(!is){
                G.tip_NB.show(X.STR(L("DQGNXJKQ"), openLv));
                return;
            }
            X.tiaozhuan(sender.idx);
            if(G.frame.iteminfo.isShow) G.frame.iteminfo.remove();
            if(G.frame.qianwang.isShow) G.frame.qianwang.remove();
            if(G.frame.woyaobianqiang.isShow) G.frame.woyaobianqiang.remove();
            if(G.frame.ui_tip_xuanze.isShow) G.frame.ui_tip_xuanze.remove();
            if(G.frame.yingxiong_hecheng.isShow) G.frame.yingxiong_hecheng.remove();
        });
        return btn;
    }
})();
;;(function () {
    G.class.sglyph = function (data, noShow) {
        item = G.class.itemTemplate();

        var conf = G.class.glyph.getById(data.gid || data.t);
        if(!conf) return item;

        var color = conf.color || 0;
        if (color !== 0) {
            item.background.loadTexture('img/public/ico/ico_bg' + color + '.png', 1);
        }

        if(noShow) {
            item.background.hide();
            item.num.hide();
        }

        if(!data.n) {
            item.num.y = 80;
        }

        item.data = data;
        item.conf = conf;

        item.num.setString(data.lv || data.n || "");

        item.icon.loadTextureNormal('ico/glyphico/' + conf.ico + '.png', 0);

        if(color == 5 && !noShow) {
            G.class.ani.show({
                json: "ani_diaowen_wuping_hong",
                addTo: item,
                x: item.width / 2,
                y: item.height / 2,
                cache: true,
                repeat: true,
                autoRemove: false
            })
        }

        item.setGou = function (show) {
            if(!show){
                cc.isNode(item.gou) && item.gou.hide();
            }else{
                if(!cc.isNode(item.gou)){
                    item.gou = new ccui.ImageView('img/public/img_gou.png',1);
                    item.gou.setName('gou');
                    item.gou.setAnchorPoint(cc.p(0.5,0.5));
                    item.gou.setPosition(cc.p(item.width / 2,item.height / 2));
                    item.gou.setLocalZOrder(1000);
                    item.addChild(item.gou);
                }else{
                    item.gou.show();
                }
            }
        };

        return item;
    }
})();
;;(function () {

    G.class.sattr = function (data,showName, item) {
        item = item || G.class.itemTemplate();
        if (data == null) return item;
        item.data = data;
        item.conf = G.class.attricon.getById(data.t);
        //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
        item.icon.loadTextureNormal(G.class.attricon.getById(data.t).img);
        //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;
        item.background.loadTexture('img/public/ico/ico_bg' + item.conf.color + '.png', 1);
        //if(data.n>1){
        item.num.setAnchorPoint(1, 0);
        item.num.setString(X.fmtValue(data.n));
        item.num.setPosition(item.width - 3, 0);
        //}

        var color = item.conf.color;
        if (showName){
            setTextWithColor(item.title,G.class.attricon.getById(data.t).name,color ? G.gc.COLOR[color] : G.gc.COLOR[0]);
        }

        // if (color){
        //     item.kuang.loadTexture('img/ico_bg'+ color +'.png',ccui.Widget.PLIST_TEXTURE);
        // }

        item.setHighLight = function (bool) {
            item.icon.setEnableState(bool);
            item.background.loadTexture('img/public/ico/ico_bg_hui.png', 1);
        };

        item.refresh = function(isLoop, callback, speed){
            while (item.getChildByTag(20180711)) {
                item.getChildByTag(20180711).removeFromParent();
            }

            G.class.ani.show({
                json: "ani_shangpinshuaxin",
                addTo: item,
                x: item.width / 2,
                y: item.height / 2,
                repeat: isLoop ? true : false,
                autoRemove: isLoop ? false : true,
                onload: function (node, action) {
                    speed && action.setTimeSpeed(speed);
                    callback && item.show();
                    node.setTag(20180711);
                    node.getChildren()[0].getChildren()[1].setScale(1.55);
                    item.loop = node;
                },
                onend: function (node, action) {
                    callback && callback();
                }
            })
        };

        return item;
    };

})();
;;/**
 * Created by wfq on 2018/5/24.
 */
(function () {

    G.class.sbaoshi = function (data,showName, item) {
        item = item || G.class.itemTemplate();
        if (data == null) return item;

        var conf = G.class.baoshi.getById(data.bid || data.t || data) || data;

        var color = data.color || conf.color||0;
        item.background.loadTexture('img/public/ico/ico_bg' + color + '.png', 1);

        item.data = data;
        item.conf = conf;

        //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
        item.icon.loadTextureNormal('ico/baoshiico/' + conf.ico + '.png',0);
        //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;

        if (showName){
            setTextWithColor(item.title,conf.name,G.gc.COLOR[color]);
        }

        if (conf.star) {
            if (!cc.isNode(item.star)) {
                var star = item.star = new ccui.Layout();
                star.setName('star');
                star.setContentSize(cc.size(70,20));
                star.setAnchorPoint(cc.p(0.5,0.5));
                star.setPosition(cc.p(item.width / 2, star.height / 2 + 3));
                item.addChild(star);
            }

            X.createStarsLayout(item.star,conf.star,{
                scale:.7,
                maxStar:5
            });
        }else if (cc.isNode(item.star)){
            item.star.removeFromParent();
            delete item.star;
        }

        //数量默认隐藏
        item.num.hide();

        return item;
    };

})();
;;(function () {

    //宝物
    G.class.sbaowu = function (data, showName, item) {
        item = item || G.class.itemTemplate();
        // item.kuang.loadTexture('img/ico_bg11.png', 1);
        if (data == null) {
            item.showAdd = function (v) {
                item.icon.loadTexture('img/public/btn_jia2.png', 1);
                item.background.setVisible(v);
                item.icon.setVisible(v);
                item.kuang.setVisible(!v);
            };
            return item;
        }
        var conf = G.class.baowu.getById(data.bid || data.itemid || data.t || data);
        var color = data.color || 0;
        if (color !== 0) {
            item.background.loadTexture('img/public/ico/ico_bg_wq' + color + '.png', 1);
        }
        item.data = data;
        item.conf = conf;
        //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
        item.icon.loadTextureNormal('item/' + conf.icon, ccui.Widget.LOCAL_TEXTURE);
        //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;

        //lv等级
        var dengji = item.dengji = new ccui.Text();
        dengji.setString(L('DENGJI') + (conf.lv || 1));
        dengji.x = 100;
        dengji.y = 26;
        dengji.width = item.width;
        dengji.setAnchorPoint(C.ANCHOR[9]);
        dengji.setFontSize(18);
        dengji.setTextColor(cc.color('#d5b97c'));
        dengji.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_RIGHT);
        dengji.enableShadow(cc.color(0, 0, 0, 255), cc.size(1, -1));
        item.addChild(dengji);

        // 数量
        item.num.setAnchorPoint(C.ANCHOR[9]);
        item.num.x = 120;
        item.num.setString('x1');
        item.num.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_RIGHT);

        if (showName) {
            setTextWithColor(item.title, conf.name, G.gc.COLOR[color]);
        }
        //特效
        item.effect.removeAllChildren();
        if (data.tsbuff && X.isHavItem(data.tsbuff)) {
            X.ccui(['tubiaotx.json', 'tubiaotx.json', 'tubiaotx.json'][0], function (loader) {
                var node = loader.node;
                node.setPosition(cc.p(item.effect.width / 2, item.effect.height / 2));
                item.effect.addChild(node);
                node.runAction(loader.action);
                loader.action.gotoFrameAndPlay(0, true);
            });
        }
        if (data.lock) {
            // 图没有
            // var suo = item.lock = new ccui.ImageView('img/public/wz_suo.png', ccui.Widget.PLIST_TEXTURE);
            // suo.setPosition(15, 90);
            // item.addChild(suo);
        }

        item.refresh = function(isLoop, callback){
            while (item.getChildByTag(20180711)) {
                item.getChildByTag(20180711).removeFromParent();
            }

            G.class.ani.show({
                json: "ani_shangpinshuaxin",
                addTo: item,
                x: item.width / 2,
                y: item.height / 2,
                repeat: isLoop ? true : false,
                autoRemove: isLoop ? false : true,
                onload: function (node, action) {
                    callback && item.show();
                    node.setTag(20180711);
                    node.getChildren()[0].getChildren()[1].setScale(1.55);
                    item.loop = node;
                },
                onend: function (node, action) {
                    callback && callback();
                }
            })
        };
        return item;
    };

})();
;;/**
 * Created by wfq on 2018/7/9.
 */
(function() {
    //设置活动btn
    //type:[panel,btn_qrdl]
    G.class.shdbtnType = {
        Normal: 'panel', //一般按钮
        ForQRDL: 'btn_qrdl' //七天登录
    };
    G.class.shdbtn = function(data, item, type, texType, isDjs) {

        if (!data) {
            return;
        }

        type = type || G.class.shdbtnType.Normal;
        texType = texType != undefined ? texType : ccui.Widget.PLIST_TEXTURE;

        var set = function(item, data) {

            var ui = item;
            var btn;
            var djs;
            var icon;
            // var djs = item.djs = item.finds('dsjs');
            // djs.enableShadow(cc.color(0, 0, 0, 255),cc.size(1,-1));
            // icon = item.icon = ui.finds("icon");
            // icon.loadTexture(data.img, texType);

            btn = item.btn = ui.finds('btn');
            btn.setTouchEnabled(true);
            btn.loadTextureNormal(data.img, texType);

            if(data.ani) {
                btn.opacity = 0;
                G.class.ani.show({
                    json: data.ani,
                    addTo: btn,
                    x: btn.width / 2,
                    y: btn.height / 2,
                    repeat: true,
                    autoRemove: false,
                })
            }

            djs = item.djs = ui.finds("wz_djs");
            if(cc.isArray(isDjs)) {
                djs.show();
                X.enableOutline(djs, "#000000", 1);
                isDjs.sort(function (a, b) {
                    return a.rtime < b.rtime ? -1 : 1;
                });
                var conf = isDjs[0];
                X.timeout(djs, conf.rtime, function () {
                    G.view.mainView.getAysncBtnsData(function(){
                        G.view.mainView.allBtns["lefttop"] = [];
                        G.view.mainView.setSvrBtns();
                    }, false);
                })
            }

            btn.show();
            item.data = data;
            item.setName(data.btnname);
            item.setTouchEnabled(false);
        };

        if (!item) {
            item = G._hdBtnNode.clone();
            set(item, data);
        } else {
            set(item, data);
        }
        return item;
    };
})();
;;(function () {

    //设置头像数据
    G.class.shead = function (data, showName, item, isAni) {
        item = item || G.class.itemTemplate(cc.size(100,100));
        item.setLv = function(v) {
            var lv = item.lv = new ccui.Text();
            lv.setFontName(G.defaultFNT);
            lv.setString(v);
            lv.setAnchorPoint(1, 0);
            lv.setPosition(cc.p(item.width-5, 5));
            lv.setFontSize(18);
            lv.setFontName(G.defaultFNT);
            lv.setVisible(true);
            X.enableOutline(lv);
            item.addChild(lv);
        };
        if (data == null) {
            item.icon.loadTextureNormal('ico/itemico/15036.png', 0);
            return item;
        }
        item.data = data;
        var zxConf;
        var head_txt = data.head.toString();
        if(head_txt.split("_").length > 1) {
            var head = data.head.split("_")[0];
            head[head.length - 1] = "a";
            zxConf = G.class.zaoxing.getHeadById(head) || G.class.zaoxing.getHeadById('25075');
        } else {
            zxConf = G.class.zaoxing.getHeadById(data.head) || G.class.zaoxing.getHeadById('25075');
        }
        var ico = zxConf.img;

        item.icon.removeAllChildren();
        if(data.head == 1000) {
            G.class.ani.show({
                x: item.icon.width / 2,
                y: item.icon.height / 2,
                json: "ani_viptouxiangkuang",
                addTo: item.icon,
                repeat: true,
                releaseRes:false,
                autoRemove: false,
            })
        } else {
            item.icon.loadTextureNormal('ico/itemico/' + G.class.fmtItemICON(ico), ccui.Widget.LOCAL_TEXTURE);
        }


        if (data.lv) {
            item.setLv(data.lv);
        }

        item.background.loadTexture('img/public/ico/ico_bg0.png', 1);

        if(data.headborder){
            item.kuang.loadTexture('img/public/head_0'+ data.headborder + '.png', 1);

            if(data.vip && data.vip >= 9 && !isAni) {
                G.class.ani.show({
                    json: data.headborder == 2 ? "ani_vip12zhuanshu" : (data.headborder == 3 ? "ani_wangzekuang" : "ani_viptouxiang"),
                    addTo: item,
                    x: item.width / 2,
                    y: item.height / 2,
                    repeat: true,
                    releaseRes:false,
                    autoRemove: false,
                    onload: function (node, action) {
                        node.setTag(12312897);
                        item.tx = node;
                    }
                })
            }else{
                if(cc.isNode(item) && cc.isNode(item.getChildByTag(12312897))){
                    item.removeChildByTag(12312897);
                }
            }
        }



        //数量默认隐藏
        item.num.hide();

        if (showName) {
            setTextWithColor(item.title, data.name, G.gc.COLOR[data.headborder * 1 || 0]);
        }
        return item;
    };

})();

;;(function () {
// ui_item_wp

// 英雄信息界面的英雄图标
G.class.shero = function (data,showName, item) {
    item = item || new G.class.sheroTemp();
    if (!data) return item;
    
    var conf = G.class.hero.getById(data.hid || data.t || data.head || data) || data;
    item.data = data;
    item.conf = conf;

    item.reuse(conf.color);

    //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
    var tx = (data.star || conf.star) > 9 ? conf.tenstarico : conf.heroico;
    item.panel_tx.loadTextureNormal('ico/itemico/' + G.class.fmtItemICON(tx) + '.png', 0);
    //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;
	
    var color = conf.color;
    
    //名称
    item.titleNode(showName);
    if (showName) {
        setTextWithColor(item.title, conf.name, G.gc.COLOR[conf.star - 1]);
    }
    //等级
    item.lvNode(data.lv);
    if (data.lv) {
        item.lv.setString(data.lv);
        X.enableOutline(item.lv, "#2a1c0f", 2);
    }
    
	//数量
	item.numNode(data.showNum || data.n > 1);
    if(data.n > 1){
        item.txt_num.setString(data.n);
        item.txt_num.show();
        item.txt_num.setPosition(86, 17);
    }
    
    item.setEnabled(true);
    if(G.frame.yingxiong_fight.isShow || G.frame.jingjichang_gjfight.isShow) item.zyNode(conf.hid);
    return item;
};

G.class.shero_extneed = function (data, armyinfo, item) {
    var n;
    var color_n;
    var conf = G.class.hero.getById(armyinfo.hid);
    if(data.sxhero){
        n = false;
        color_n = -1;
    }else{
        n = true;
        color_n = data.samezhongzu ? -1 : 0;
    }

    item = item || new G.class.sheroTemp();
	item.numNode(true);




    var heroico, zhongzu, dengjielv;
    var ownNum;

    if(data.star){
        item.reuse(data.star >= 6 ? 5 : data.star + color_n);
    }else{
        item.reuse(conf.color + color_n);
    }


    if(data.samezhongzu){
        heroico = 'hero_' + (data.star >= 6?6:data.star);
        zhongzu = conf.zhongzu;
        dengjielv = data.star;
        ownNum = G.frame.yingxiong.getHeroNumByZzAndStar(conf.zhongzu,dengjielv);
    }else{
        if( data.t){
            heroico = conf.heroico;
            zhongzu = conf.zhongzu;
            dengjielv = G.class.hero.getById(data.t).star;
        }else if(data.sxhero){
            heroico = G.class.hero.getById(conf.sxhid).heroico;
            zhongzu = conf.zhongzu;
            dengjielv =5;
        }else{
            heroico = 'hero_' + (data.star >= 6?6:data.star);
            zhongzu = 0;
            dengjielv = data.star;
        }
        if(data.sxhero){
            ownNum = G.frame.yingxiong.getHeroNumByHid(conf.sxhid);
        }else{
            if(G.frame.yingxiong_xxxx.isShow){
                ownNum = G.frame.yingxiong.getHeroNumByStar(dengjielv, armyinfo);
            }else{
                ownNum = G.frame.yingxiong.getHeroNumByStar(dengjielv);
            }
        }
    }

    cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
    // item.icon.loadTexture('item/'+conf.img, ccui.Widget.LOCAL_TEXTURE);
    item.panel_tx.loadTextureNormal('ico/itemico/' + G.class.fmtItemICON(heroico) + '.png', 0);
    cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;
    //item.panel_tx.setPositionY(300);
    
    
    var img_jia = item.img_jia = new ccui.ImageView();
    img_jia.setName('img_jia');
    img_jia.loadTexture('img/public/img_jia.png',1);
    img_jia.setAnchorPoint(0.5, 0.5);
    img_jia.setPosition(cc.p(item.width - img_jia.width / 2 - 2, img_jia.height / 2 + 2));
    item.addChild(img_jia);
    img_jia.zIndex = 100;
    img_jia.hide();

    item.setjia = function(v){
        if(v) {
            item.img_jia.hide();
        }else{
            if (ownNum >= (data.num || data.n)) {
                var act1 = cc.fadeIn(1.5);
                var act2 = cc.fadeOut(1.5);
                var action = cc.sequence(act1, act2);
                item.img_jia.runAction(cc.repeatForever(action));
                item.img_jia.show();
            }
        }
    };
    
    
    item.setEnabled = function (v) {
    	this.zzNode();
    	this.xxNode();
        if(v){
            item.panel_tx.setBright(true);
            // item.img_jia.hide();
            dengjielv && G.class.ui_star(item.panel_xx, dengjielv, 0.7, {interval:-4});
            zhongzu && item.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (conf.zhongzu + 1) + '_s.png', 1);
        }else{
            item.panel_tx.setBright(false);
            dengjielv && G.class.ui_star(item.panel_xx, dengjielv, 0.7, {interval:-4, ico:'img_xing_h'});
            zhongzu && item.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (conf.zhongzu + 1) + '_s.png', 1);
        }
    };

    return item;
};

G.class.new_shero_extneed = function(data, conf, item) {
    item = item || new G.class.sheroTemp();
    item.numNode(true);

    var n;
    var color_n;
    var heroico, zhongzu, dengjielv;
    var ownNum;
    if(data.sxhero){
        n = false;
        color_n = 0;
    }else{
        n = true;
        color_n = data.samezhongzu ? -1 : 0;
    }
    if(data.star){
        item.reuse(data.star >= 6 ? 5 : data.star + color_n);
    }else{
        item.reuse(conf.color );
    }
    if(data.samezhongzu) {
        heroico = 'hero_' + (data.star >= 6?6:data.star);
        zhongzu = conf.zhongzu;
        dengjielv = data.star;
        ownNum = G.frame.yingxiong.getHeroNumByZzAndStar(conf.zhongzu,dengjielv);
    }else {
        heroico = G.class.hero.getById(conf.hid).heroico;
        zhongzu = conf.zhongzu;
        dengjielv =5;
        ownNum = G.frame.yingxiong.getHeroNumByHid(conf.hid);
    }


    cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
    item.panel_tx.loadTextureNormal('ico/itemico/' + G.class.fmtItemICON(heroico) + '.png', 0);
    cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;

    var img_jia = item.img_jia = new ccui.ImageView();
    img_jia.setName('img_jia');
    img_jia.loadTexture('img/public/img_jia.png',1);
    img_jia.setAnchorPoint(0.5, 0.5);
    img_jia.setPosition(cc.p(item.width - img_jia.width / 2 - 2, img_jia.height / 2 + 2));
    item.addChild(img_jia);
    img_jia.zIndex = 100;
    img_jia.hide();

    item.setjia = function(v){
        if(v) {
            item.img_jia.hide();
        }else{
            if (ownNum >= (data.num || data.n)) {
                var act1 = cc.fadeIn(1.5);
                var act2 = cc.fadeOut(1.5);
                var action = cc.sequence(act1, act2);
                item.img_jia.runAction(cc.repeatForever(action));
                item.img_jia.show();
            }
        }
    };


    item.setEnabled = function (v) {
        this.zzNode();
        this.xxNode();
        if(v){
            item.panel_tx.setBright(true);
            dengjielv && G.class.ui_star(item.panel_xx, dengjielv, 0.7, {interval:-4});
            zhongzu && item.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (conf.zhongzu + 1) + '_s.png', 1);
        }else{
            item.panel_tx.setBright(false);
            dengjielv && G.class.ui_star(item.panel_xx, dengjielv, 0.7, {interval:-4, ico:'img_xing_h'});
            zhongzu && item.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (conf.zhongzu + 1) + '_s.png', 1);
        }
    };

    return item;
};

G.class.sheroTemp = ccui.Layout.extend({
	ctor : function(){
		this._super.apply(this,arguments);
		this.reuse(0);
	},
	reuse : function(color){
		// 底图
		this.setAnchorPoint(0.5, 0.5);
    	this.setContentSize(100, 100);
    	this.scale = 1;
    	this.opacity = 255;
		this.setBackGroundImage('img/public/ico/ico_bg'+ color +'.png', 1);
		
		// 头像按钮
		if(!cc.isNode(this.panel_tx)){
			this.panel_tx = new ccui.Button();
			this.panel_tx.setName('panel_tx');
			this.addChild(this.panel_tx);
		}
		var panel_tx = this.panel_tx;
	    panel_tx.setAnchorPoint(0.5, 0.5);
	    panel_tx.setPosition(cc.p(this.width / 2, this.height / 2));
	    panel_tx.setTouchEnabled(false);
	},
    txNode: function(){
        if(!cc.isNode(this.panel_tx)){
            this.panel_tx = new ccui.Button();
            this.panel_tx.setName('panel_tx');
            this.addChild(this.panel_tx);
        }
        var panel_tx = this.panel_tx;
        panel_tx.setAnchorPoint(0.5, 0.5);
        panel_tx.setPosition(cc.p(this.width / 2, this.height / 2));
        panel_tx.setTouchEnabled(false);
    },
	titleNode : function(show){
		//名字
		if(!show){
			cc.isNode(this.title) && this.title.hide();
		}else{
			if(!cc.isNode(this.title)){
				this.title = new ccui.Text('','',24);
				this.title.setName('title');
				this.addChild(this.title);
			}
			var txtName = this.title;
			txtName.setFontName(G.defaultFNT);
	    	txtName.setPosition(cc.p(this.width / 2,15));
	    	txtName.setAnchorPoint(cc.p(0.5,0.5));
	    	txtName.show();
		}
	},
	lvNode : function(show){
		//等级
		if(!show){
			cc.isNode(this.lv) && this.lv.hide();
		}else{
			if(!cc.isNode(this.lv)){
				this.lv = new ccui.Text('1','',22);
				this.lv.setName('lv');
				this.addChild(this.lv);
			}
			var lv = this.lv;
			lv.setAnchorPoint(cc.p(1, 0.5));
	    	lv.setPosition(cc.p(this.width - lv.width / 2, this.height - lv.height / 2 - 5));
	    	lv.setFontName(G.defaultFNT);
	    	X.enableOutline(lv,'#2a1c0f',2);
            lv.zIndex = 10;
	    	lv.show();
		}
	},
	numNode : function(show){
		//数量
		if(!show){
			cc.isNode(this.txt_num) && this.txt_num.hide();
		}else{
			if(!cc.isNode(this.txt_num)){
				this.txt_num = new ccui.Text();
				this.txt_num.setName('txt_num');
				this.addChild(this.txt_num);
			}
			var txt_num = this.txt_num;
			txt_num.setContentSize(100, 30);
		    txt_num.setAnchorPoint(0.5, 0.5);
		    txt_num.setFontSize(24);
		    txt_num.setFontName(G.defaultFNT);
		    txt_num.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
		    txt_num.setTextColor(cc.color('#ffffff'));
		    X.enableOutline(txt_num, "#000000", 2);
            txt_num.zIndex = 10;

	    	txt_num.show();
		}
	},
	
	setHighLight : function (bool) {
		//兼容原逻辑
		var item = this;
        if (bool) {
            cc.isNode(item.black) && item.black.hide();
        } else {
        	if(!cc.isNode(this.black)){
				this.black = new ccui.Layout();
				this.black.setName('black');
				this.addChild(this.black);
			}
        	var black = this.black;
		    black.setAnchorPoint(0.5, 0.5);
		    black.setContentSize(100, 100);
		    black.setPosition(this.width / 2, this.height / 2);
		    
            black.setBackGroundColor(cc.color(G.gc.COLOR['n15']));
            black.setBackGroundColorType(ccui.Layout.BG_COLOR_SOLID);
            black.setOpacity(188);
            
            black.show();
        }
    },
    
    zzNode : function(){
		if(!cc.isNode(this.panel_zz)){
			this.panel_zz = new ccui.Layout();
			this.panel_zz.setName('panel_zz');
			this.addChild(this.panel_zz);
		}
		this.panel_zz.setAnchorPoint(0.5, 0.5);
	    this.panel_zz.setContentSize(32, 32);
	    this.panel_zz.setPosition(this.panel_zz.width / 2, this.height - this.panel_zz.height / 2);
	},

    zyNode : function(hid) {
	    if(!cc.isNode(this.panel_zy)) {
	        this.panel_zy = new ccui.ImageView();
	        this.panel_zy.setName("panel_zy");

        }
        this.panel_zy.loadTexture(G.class.hero.getJobIcoByIdX(hid), 1);
        // this.panel_zy.setScale(.55);
        this.panel_zy.setAnchorPoint(0.5, 0.5);
        this.panel_zy.setPosition(16, this.height - 46);
        this.addChild(this.panel_zy);
    },
	
	xxNode : function(){
		if(!cc.isNode(this.panel_xx)){
			this.panel_xx = new ccui.Layout();
			this.panel_xx.setName('panel_xx');
			this.addChild(this.panel_xx);
		}
		this.panel_xx.setAnchorPoint(0.5, 0.5);
	    this.panel_xx.setContentSize(30, 16);
	    this.panel_xx.setPosition(this.width / 2, this.panel_xx.height);
	},
	
    setEnabled : function (v) {
    	this.zzNode();
    	this.xxNode();
        if(v){
        	this.panel_tx.setBright(true);
            G.class.ui_star(this.panel_xx, this.data.star || this.data.dengjielv || this.conf.star, .7, {interval:-4});
            this.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + ((this.conf.zhongzu * 1) + 1) + '_s.png', 1);
        }else{
        	this.panel_tx.setBright(false);
            this.panel_tx.setTouchEnabled(false);
            G.class.ui_star(this.panel_xx, this.data.star || this.data.dengjielv || this.conf.star, .7, {interval:-4, ico:'img_xing_h'});
            this.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + ((this.conf.zhongzu * 1) + 1) + '_sh.png', 1);
            this.setBackGroundImage('img/public/ico/ico_bg_hui.png', 1);
        }
    },
    
    //对勾设置
    setGou : function (show) {
    	if(!show){
			cc.isNode(this.gou) && this.gou.hide();
		}else{
			if(!cc.isNode(this.gou)){
				this.gou = new ccui.ImageView('img/public/img_gou.png',1);
				this.gou.setName('gou');
                this.gou.setAnchorPoint(cc.p(0.5,0.5));
                this.gou.setPosition(cc.p(this.width / 2,this.height / 2));
                this.gou.setLocalZOrder(1000);
				this.addChild(this.gou);
                //var imgGou = this.gou;
			}else{
			    this.gou.show();
            }
            //imgGou.show();
		}
    },

    fuse: function(node) {
        G.class.ani.show({
            json: "ani_yingxionghecheng_posui",
            addTo: this.getParent(),
            x: this.x,
            y: this.y,
            cache: true,
            repeat: false,
            autoRemove: true,
            onend: function () {
                node.show();
            }
        })
    },
    
    setHP : function(v,show){
    	if(!show){
			cc.isNode(this.hpbg) && this.hpbg.hide();
			cc.isNode(this.hp) && this.hp.hide();
		}else{
			if(!cc.isNode(this.hpbg)){
				this.hpbg = new ccui.Layout();
				this.addChild(this.hpbg);
                this.hpbg.setContentSize(100, 20);
                this.hpbg.setBackGroundImage("img/public/jdt/img_sp_jdt_bg.png", 1);
                this.hpbg.setPosition(0, -20);
			}
			if(!cc.isNode(this.hp)){
				this.hp = new ccui.LoadingBar();
				this.hpbg.addChild(this.hp);
                this.hp.setContentSize(100, 20);
                this.hp.loadTexture("img/public/jdt/img_sp_jdt.png", 1);
                this.hp.setPosition(50, 10);
                this.hp.setDirection(ccui.LoadingBar.TYPE_LEFT);
			}
			var hp = this.hp;
            hp.setPercent(v);
            
            this.hpbg.show();
            this.hp.show();
		}
    },

    setNQ : function(v, show) {
	    if(!show) {
            cc.isNode(this.nqbg) && this.nqbg.hide();
            cc.isNode(this.nq) && this.nq.hide();
        }else {
            if(!cc.isNode(this.nqbg)){
                this.nqbg = new ccui.Layout();
                this.addChild(this.nqbg);
                this.nqbg.setContentSize(100, 15);
                this.nqbg.setBackGroundImage("img/public/jdt/img_sp_jdt_bg.png", 1);
                this.nqbg.setPosition(1, -24);
            }
            if(!cc.isNode(this.nq)){
                this.nq = new ccui.LoadingBar();
                this.nqbg.addChild(this.nq);
                this.nq.setContentSize(100, 15);
                this.nq.loadTexture("img/public/jdt/img_sp_jdt1.png", 1);
                this.nq.setPosition(50, 5);
                this.nq.setDirection(ccui.LoadingBar.TYPE_LEFT);
            }
            var hp = this.nq;
            hp.setPercent(v);

            this.nqbg.show();
            this.nq.show();
        }
    },
    
    refresh : function(isLoop, callback, speed){
        while (this.getChildByTag(20180711)) {
            this.getChildByTag(20180711).removeFromParent();
        }
        G.class.ani.show({
            json: "ani_shangpinshuaxin",
            addTo: this,
            x: this.width / 2,
            y: this.height / 2,
            repeat: false,
            cache:true,
            autoRemove: true,
            onload: function (node, action) {
                speed && action.setTimeSpeed(speed);
                callback && this.show();
                node.setTag(20180711);
                node.getChildren()[0].getChildren()[1].setScale(1.55);
                item.loop = node;
            },
            onend: function (node, action) {
                callback && callback();
            }
        })
    },
    
    setBlue : function(){
    	var me = this;
        G.class.ani.show({
            json: "ani_chouka_chuxian",
            addTo: this,
            x: 54,
            y: -38,
            repeat: false,
            cache:true,
            autoRemove: true,
            onload: function (node, action) {
                action.gotoFrameAndPause(0);
                me.bule = action;
            }
        })
    },

    setSelected: function() {
	    //选中特效
        if(cc.isNode(this.getChildByName("selected"))) return;
        G.class.ani.show({
            json: "ani_mijing_yingxiongman",
            addTo: this,
            x: this.width / 2,
            y: this.height / 2,
            repeat: false,
            cache:true,
            autoRemove: true,
            onload: function (node) {
                node.setName("selected");
            },
        })
    },

    setArtifact: function(id) {
	    //神兵加身动画

        while (this.getChildByName("artifact")) {
            this.getChildByName("artifact").removeFromParent();
        }

        this.sqid = id;
	    if(!id) return;

        G.class.ani.show({
            json: "shenbing_ico_0" + id,
            addTo: this,
            x: 54,
            y: 50,
            cache: true,
            repeat: true,
            autoRemove: false,
            onload: function (node, action) {
                node.setName("artifact");
                node.setScale(1);
            }
        })
    },
	
	onExit : function(){
		this._super.apply(this,arguments);
		//G.class.sheroTempCache.push(this);
	}
});

})();
;;(function () {

    G.class.sitem = function (data, showName, item, showNum) {
        item = item || G.class.itemTemplate();
        if (data == null) return item;
        if (data.a == 'attr') {
            return G.class.sattr(data, showName, item);
        }
        if (data.a == 'hero') {
            return G.class.shero(data, showName);
        }
        if (data.a == 'equip') {
            return G.class.szhuangbei(data, showName, item);
        }
        //宝物
        if (data.a == 'baowu') {
            return G.class.sbaowu(data, showName, item);
        }
        //宝石
        if (data.a == 'baoshi') {
            return G.class.sbaoshi(data, showName, item);
        }
        if (data.a == 'shipin') {
            return G.class.sshipin(data, showName, item);
        }
        if(data.a == "glyph") {
            return G.class.sglyph(data, showName, item);
        }
        // //魂石
        // if (data.a == 'hunshi') {
        //     return G.class.shunshi(data, showName, item);
        // }
        var conf = G.class.getItem(data.itemid || data.t || data) || G.class.getConf("special")[data.t];
        if(!conf) return item;
        var color = conf.color || 0;
        if (color !== 0) {
            item.background.loadTexture('img/public/ico/ico_bg' + color + '.png', 1);
        }

        item.data = data;
        item.conf = conf;

        var ico;
        if(conf.special) ico = conf.img;
        else ico = 'ico/itemico/' + G.class.fmtItemICON(conf.img) + ".png";




        //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
        item.icon.loadTextureNormal(ico, conf.special ? 1 : 0);
        //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;


        //if((data.n || data.num)>1){
        item.num.setString(X.fmtValue((data.n || data.num || 1)));
        item.num.setAnchorPoint(1,0);
        item.num.setPosition(cc.p(item.width - 3, 0));
        //}else{
        //    item.num.setString('');
        //}
        // item.num.setPosition(cc.p(item.background.width/4,item.background.height/5));
        if(showNum || data.n == 0){
            item.num.hide();
        }
        if(data.num && data.num != 0) {
            item.num.show();
        }
        if(conf.star){
            if (!cc.isNode(item.star)) {
                var star = item.star = new ccui.Layout();
                star.setName('star');
                star.setContentSize(cc.size(70,20));
                star.setAnchorPoint(cc.p(0.5,0.5));
                star.setPosition(cc.p(item.width / 2,star.height / 2 + 3));
                item.addChild(star);
                item.num.zIndex = star.zIndex + 1;

                X.createStarsLayout(item.star,conf.star,{
                    scale:.7,
                    maxStar:5
                });
            }
        }else if (cc.isNode(item.star)){
            item.star.removeFromParent();
            delete item.star;
        }
        if(conf.zhongzu){
            // item.num.setAnchorPoint(1, 0.5);
            // item.num.setPosition(111, 99);
            item.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (parseInt(conf.zhongzu) + 1) + '_s.png', 1);
        }

        if (showName) {
            setTextWithColor(item.title, conf.name, G.gc.COLOR[color]);
        }


        if (data.star) {
            //todo BUG!! tableView中时，这段逻辑会重复执行
            for (var i = 0; i < data.star; i++) {
                var x = new ccui.ImageView('img/xingxing.png', ccui.Widget.PLIST_TEXTURE);
                x.setPosition(i * 21, 0);
                item.addChild(x);
            }
        }

        item.setHighLight = function (bool) {
            item.icon.setEnableState(bool);
            item.background.loadTexture('img/public/ico/ico_bg_hui.png', 1);
            if(cc.isNode(item.star)){
                X.createStarsLayout(item.star,conf.star,{
                    scale:.7,
                    maxStar:5,
                    isLight: true,
                });
            }
        };

        // 特效
        item.effect.removeAllChildren();
        if (conf.effect && conf.effect > 0) {
            X.ccui(['tubiaotx.json', 'tubiaotx.json', 'tubiaotx.json'][conf.effect - 1], function (loader) {
                var node = loader.node;
                node.setPosition(cc.p(item.effect.width / 2, item.effect.height / 2));
                item.effect.addChild(node);
                node.runAction(loader.action);
                loader.action.gotoFrameAndPlay(0, true);
            });
        }

        //碎片表示
        if (conf.bagtype * 1 == 3 && !item.sui) {
            var img = item.sui = new ccui.ImageView();
            img.loadTexture('img/public/ico/ico_sp.png', ccui.Widget.PLIST_TEXTURE);
            img.setAnchorPoint(cc.p(0.5,0.5));
            img.setPosition(item.width - img.width / 2, item.height - img.height / 2);
            item.addChild(img);
        } else if (conf.bagtype * 1 != 3 && item.sui) {
            item.sui.removeFromParent();
            delete item.sui;
        }

        item.refresh = function(isLoop, callback, speed){
            while (item.getChildByTag(20180711)) {
                item.getChildByTag(20180711).removeFromParent();
            }

            G.class.ani.show({
                json: "ani_shangpinshuaxin",
                addTo: item,
                x: item.width / 2,
                y: item.height / 2,
                repeat: isLoop ? true : false,
                autoRemove: isLoop ? false : true,
                onload: function (node, action) {
                    speed && action.setTimeSpeed(speed);
                    callback && item.show();
                    node.setTag(20180711);
                    node.getChildren()[0].getChildren()[1].setScale(1.55);
                    item.loop = node;
                },
                onend: function (node, action) {
                    callback && callback();
                }
            })
        };

        return item;
    };

})();
;;/**
 * Created by wfq on 2018/5/25.
 */
(function () {

    G.class.sshipin = function (data,showName, item) {
        item = item || G.class.itemTemplate();
        if (data == null) return item;

        var conf = G.class.shipin.getById(data.spid || data.t || data.id || data) || data;

        var color = data.color || conf.color||0;
        item.background.loadTexture('img/public/ico/ico_bg' + color + '.png', 1);

        item.data = data;
        item.conf = conf;

        //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
        item.icon.loadTextureNormal('ico/shipinico/' + conf.ico + '.png',0);
        //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;

        var canUseNum = data.n || data.num;
        if (canUseNum > 1) {
            item.num.setString(canUseNum);
            // item.num.setAnchorPoint(cc.p(0,0.5));
            item.num.setAnchorPoint(0.5,0.5);
            item.num.setPosition(cc.p(item.width - item.num.width / 2 - 5, item.num.height / 2));
        } else {
            item.num.setString('');
        }
        item.num.zIndex = 10;

        if (showName){
            setTextWithColor(item.title,conf.name,G.gc.COLOR[color]);
        }

        if (conf.star) {
            if (!cc.isNode(item.star)) {
                var star = item.star = new ccui.Layout();
                star.setName('star');
                star.setContentSize(cc.size(70,20));
                star.setAnchorPoint(cc.p(0.5,0.5));
                star.setPosition(cc.p(item.width / 2,star.height / 2 + 3));
                item.addChild(star);
            }

            if(conf.star > 5) {
                X.createStarsLayout(item.star, conf.star - 5, {
                    imgstar: 'img/public/img_xing4.png',
                    scale: .65,
                    maxStar: 5,
                });
            }else {
                X.createStarsLayout(item.star,conf.star,{
                    scale:.7,
                    maxStar:5
                });
            }
        }else if (cc.isNode(item.star)){
            item.star.removeFromParent();
            delete item.star;
        }

        item.setHighLight = function (bool) {
            item.icon.setEnableState(bool);
            item.background.loadTexture('img/public/ico/ico_bg_hui.png', 1);
            X.createStarsLayout(item.star,conf.star,{
                scale:.7,
                maxStar:5,
                isLight: true,
            });
        };

        item.refresh = function(isLoop, callback, speed){
            while (item.getChildByTag(20180711)) {
                item.getChildByTag(20180711).removeFromParent();
            }

            G.class.ani.show({
                json: "ani_shangpinshuaxin",
                addTo: item,
                x: item.width / 2,
                y: item.height / 2,
                repeat: isLoop ? true : false,
                autoRemove: isLoop ? false : true,
                onload: function (node, action) {
                    speed && action.setTimeSpeed(speed);
                    callback && item.show();
                    node.setTag(20180711);
                    node.getChildren()[0].getChildren()[1].setScale(1.55);
                    item.loop = node;
                },
                onend: function (node, action) {
                    callback && callback();
                }
            })
        };

        item.fuse = function (node) {
            G.class.ani.show({
                json: "ani_yingxionghecheng_posui",
                addTo: item.getParent(),
                x: item.x,
                y: item.y,
                cache: true,
                repeat: false,
                autoRemove: true,
                onend: function () {
                    node.show();
                }
            })
        };

        return item;
    };

})();
;;(function () {

    G.class.sskill = function(conf,skilllv,item, num) {
        item = item || G.class.itemTemplate();
        if (conf == null) {
            item.background.show();
            item.icon.loadTexture('img/public/btn/btn_jia2.png',1);
            return item;
        }
        item.conf = conf;

        item.background.hide();

        //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
        item.icon.loadTextureNormal('ico/skillico/' + conf.img,0);
        //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;
        //lv
        // var lv = item.lv = new ccui.Text();
        // lv.setString((skilllv || 0) + '/' + conf.maxlv);
        // lv.setFontSize(18);
        // lv.x = 90;
        // lv.y = 30;
        // lv.setAnchorPoint(C.ANCHOR[9]);
        // lv.setLocalZOrder(100);
        // X.enableOutline(lv,'#000000',5);
        // item.addChild(lv);
        var lv = new X.bRichText({
            size: 18,
            lineHeight: 24,
            maxWidth:item.width,
            color:G.gc.COLOR.n1,
            family:G.defaultFNT,
            eachText: function (node) {
                X.enableOutline(node,'#2a1c0f');
            }
        });
        // lv.setString((skilllv || 0) + '/' + conf.maxlv);
        lv.text((skilllv || 0) + '/' + conf.maxlv);
        lv.setAnchorPoint(cc.p(1,0.5));
        lv.setPosition(cc.p(item.width - lv.width / 2 - 2,lv.height / 2 + 5));
        lv.zIndex = 10;
        item.addChild(lv);

        item.num.hide();


        if(num) {
            var tag = new ccui.ImageView("img/gonghui/img_ditu.png", 1);
            tag.setAnchorPoint(0.5, 0.5);
            tag.setPosition(20, 80);
            item.addChild(tag);
            tag.zIndex = 999;

            var txt = new ccui.Text(num, G.defaultFNT, 18);
            txt.setTextColor(cc.color("#ffffff"));
            txt.setAnchorPoint(0.5, 0.5);
            txt.setPosition(tag.width / 2 - 1, tag.height / 2);
            tag.addChild(txt);
        }

        //置灰
        item.isHighLight = true;
        item.setHighLight = function (bool) {
            item.isHighLight = bool;
            item.icon.setEnableState(bool);
        };

        item.setXuanzhong = function (bool) {
            if (bool) {
                if (item._xz) {
                    item._xz.show();
                } else {
                    var xz = item._xz = new ccui.ImageView('img/public/img_yuan_xz.png',1);
                    xz.setName('xuanzhong');
                    xz.setPosition(cc.p(item.width / 2,item.height / 2));
                    item.addChild(xz);
                }
            } else {
                if (item._xz) {
                    item._xz.hide();
                }
            }
        };

        return item;
    };

})();
;;/**
 * Created by wfq on 2018/6/6.
 */
(function () {
    G.class.stiaozhuan = function (data, showName, item) {
        item = item || G.class.itemTemplate();
        if (data == null) return item;

        item.id = G.class.tiaozhuan.getIdByFrameId(data.id || data.t || data);
        var id = item.id;
        var conf = G.class.tiaozhuan.getById(id);

        var color = conf.color || 0;
        item.background.loadTexture('img/public/ico/ico_bg' + color + '.png', 1);

        item.background.hide();
        item.data = data;
        item.conf = conf;

        var ico;
        ico = 'img/tujing/' + conf.btn_img;

        cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
        item.icon.loadTextureNormal(ico,1);
        cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;

        item.num.hide();

        if (showName) {
            item.title.setString(conf.name);
            item.title.setTextColor(cc.color("#a1ceff"));
            item.title.setFontName(G.defaultFNT);
            item.title.y -= 5;
        }
        item.touch(function (sender, type) {
            if (type == ccui.Widget.TOUCH_ENDED) {
                var callback = sender.data.callback;
                callback && callback();

                X.tiaozhuan(id);
            }
        });

        return item;
    };

})();
;;(function () {

    G.class.szhuangbei = function (data,showName, item, showNum) {
        item = item || G.class.itemTemplate();
        if (data == null) return item;
        
        var conf = G.class.equip.getById(data.eid || data.t || data) || data;

        var color = data.color || conf.color|| 0;
        item.background.loadTexture('img/public/ico/ico_bg' + color + '.png', 1);

        item.data = data;
        item.conf = conf;

        cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
        item.icon.loadTextureNormal('ico/equipico/' + conf.ico + '.png',0);
        cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;

        var allNum = data.n || data.num;
        var canUseNum = allNum - (data.usenum || 0);
        if (canUseNum > 1) {
            item.num.setString(canUseNum);
            // item.num.setAnchorPoint(cc.p(0,0.5));
            // item.num.setPosition(cc.p(2,item.height - item.num.height / 2));
        } else {
            item.num.setString('');
        }
        item.num.setAnchorPoint(0.5,0.5);
        item.num.setPosition(cc.p(item.width - item.num.width / 2 - 6, item.num.height / 2));
        item.num.zIndex = 10;
        if(showNum == false){
            item.num.hide();
        }
        if (showName){
            setTextWithColor(item.title,conf.name,G.gc.COLOR[color]);
        }

        if (conf.star) {
            if (!cc.isNode(item.star)) {
                var star = item.star = new ccui.Layout();
                star.setName('star');
                star.setContentSize(cc.size(70,20));
                star.setAnchorPoint(cc.p(0.5,0.5));
                star.setPosition(cc.p(item.width / 2,star.height / 2 + 3));
                item.addChild(star);
            }

            if(conf.star > 5) {
                X.createStarsLayout(item.star, conf.star - 5, {
                    imgstar: 'img/public/img_xing4.png',
                    scale: .65,
                    maxStar: 5,
                });
            }else {
                X.createStarsLayout(item.star,conf.star,{
                    scale:.7,
                    maxStar:5
                });
            }
        }else if (cc.isNode(item.star)){
            item.star.removeFromParent();
            delete item.star;
        }
        item.setGou = function (v) {
            if (v) {
                if (item.gou) {
                    item.gou.show();
                } else {
                    var imgGou = item.gou = new ccui.ImageView('img/public/img_gou.png',1);
                    imgGou.setAnchorPoint(cc.p(0.5,0.5));
                    imgGou.setPosition(cc.p(item.width / 2,item.height / 2));
                    imgGou.setName('gou');
                    item.addChild(imgGou);
                    imgGou.setLocalZOrder(1000);
                    imgGou.show();
                }
            } else {
                if (item.gou) {
                    item.gou.hide();
                }
            }
        };

        item.refresh = function(isLoop, callback, speed){
            while (item.getChildByTag(20180711)) {
                item.getChildByTag(20180711).removeFromParent();
            }

            G.class.ani.show({
                json: "ani_shangpinshuaxin",
                addTo: item,
                x: item.width / 2,
                y: item.height / 2,
                repeat: isLoop ? true : false,
                autoRemove: isLoop ? false : true,
                onload: function (node, action) {
                    speed && action.setTimeSpeed(speed);
                    callback && item.show();
                    node.setTag(20180711);
                    node.getChildren()[0].getChildren()[1].setScale(1.55);
                    item.loop = node;
                },
                onend: function (node, action) {
                    callback && callback();
                }
            })
        };

        item.setHighLight = function (bool) {
            item.icon.setEnableState(bool);
            item.background.loadTexture('img/public/ico/ico_bg_hui.png', 1);
            X.createStarsLayout(item.star,conf.star,{
                scale:.7,
                maxStar:5,
                isLight: true,
            });
        };

        return item;
    };

})();
;;(function () {
    G.class.getItem = function (itemid, type) {
        if (type == 'attr') {
            return G.class.attricon.getById(itemid);
        }
        if (type == 'hero') {
            return G.class.hero.getById(itemid);
        }
        if (type == 'equip') {
            return G.class.equip.getById(itemid);
        }
        if (type == 'baoshi') {
            return G.class.baoshi.getById(itemid);
        }
        if (type == 'shipin') {
            return G.class.shipin.getById(itemid);
        }
        if (type == "glyph") {
            return G.class.glyph.getById(itemid);
        }
        var conf = G.gc.item[itemid];
        if (!conf) {
            cc.log(itemid + '物品配置不存在');
            return null;
        }
        return conf;
    };

    G.class.getItemByType = function (tid, type) {
        if (type == 'item'){
            return G.class.getItem(tid);
        }
        if (type == 'attr'){
            return G.class.attricon.getById(tid);
        }
        // if (type == 'shili'){
        //     return G.class.attr.getAttr(tid);
        // }
        // if (type == 'hero'){
        //     return G.class.hero.getHeroById(tid);
        // }
        // if (type == 'jianhun') {
        //     return G.class.jianhun.getById(tid);
        // }
        // if (type == 'shenbing') {
        //     return G.class.shenbing.getById(tid);
        // }
    };

    G.class.getItemIco = function (itemid) {
        if (G.class.attricon.getById(itemid)) {
            return G.class.attricon.getById(itemid).ico;
        } else {
            var ico = G.class.getItem(itemid).ico;
            if (ico) {
                return 'img/public/token/' + ico + '.png';
            } else {
                return G.class.getItem(itemid).img;
            }
        }
    };
    G.class.getItemImg = function(itemId) {
        if (G.class.attricon.getById(itemId)) {
            return G.class.attricon.getById(itemId).img;
        } else {
            var img = G.class.getItem(itemId).img;
            if (img) {
                return 'ico/itemico/' + img + '.png';
            } else {
                return G.class.getItem(itemId).img;
            }
        }
    };
    //获得玩家拥有的数量
    G.class.getOwnNum = function (id, type) {
        var me = this;

        var value = 0;
        switch (type) {
            case 'attr':
                value =  P.gud[id];
                break;
            case 'item':
                value = G.frame.beibao.getItemNumByTypeid(id) || 0;
                break;
            default:
                value = 0;
                break;
        }

        return value;
    };

    G.class.itemTemplate = function (size) {
        size = size || cc.size(100, 100);
        var ui = new ccui.Layout();
        ui.setAnchorPoint(0.5, 0.5);
        ui.setContentSize(size);
        ui.setHighlight = function (v) {
            //需要废弃
            // if (v && !this._hl) {
            //     var hl = new ccui.ImageView();
            //     hl.setPosition(ui.width * .5, ui.height * .5);
            //     hl.setAnchorPoint(0.5, 0.5);
            //     hl.loadTexture('img/public/ico/ico_xzk.png', 1);
            //     ui.addChild(hl);
            //     this._hl = hl;
            // } else if (!v && this._hl) {
            //     this._hl.removeFromParent();
            //     delete this._hl;
            // }
        };
        var bg = ui.background = new ccui.ImageView();
        bg.setName('bg');
        bg.loadTexture('img/public/ico/ico_bg_hui.png', 1);
        bg.x = ui.width * .5;
        bg.y = ui.height * .5;
        ui.addChild(bg);


        var icon = ui.icon = new ccui.Button();
        icon.setName('icon');
        icon.x = ui.width * .5;
        icon.y = ui.height * .5;
        icon.setTouchEnabled(false);
        ui.addChild(icon);

        var kuang = ui.kuang = new ccui.ImageView();
        kuang.setName('kuang');
        // kuang.loadTexture('img/public/ico/ico_bg99.png', 1);
        kuang.x = ui.width * .5;
        kuang.y = ui.height * .5;
        ui.addChild(kuang);

        var num = ui.num = new ccui.Text();
        num.setName('num');
        num.setString('0');
        num.setFontSize(22);
        num.setFontName(G.defaultFNT);
        num.enableShadow(cc.color(0, 0, 0, 255), cc.size(1, -1));
        X.enableOutline(num, "#2a1c0f", 2);
        num.setAnchorPoint(cc.p(1,0.5));
        num.setPosition(ui.width - num.width / 2 - 2, num.height / 2 + 2);
        ui.addChild(num);

        var title = ui.title = new ccui.Text();
        title.setName('title');
        title.setString('');
        title.x = ui.width / 2;
        title.y = -20;
        title.width = ui.width;
        title.setAnchorPoint(C.ANCHOR[8]);
        title.setFontSize(19);
        title.enableShadow(cc.color(0, 0, 0, 255), cc.size(1, -1));
        title.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
        title.setTextColor(cc.color('#4B3507'));
        ui.addChild(title);

        var effect = ui.effect = new ccui.Layout;
        effect.setName('effect');
        effect.x = ui.width * .5;
        effect.y = ui.height * .5;
        ui.addChild(effect);

        var panel_zz = ui.panel_zz = new ccui.Layout();
        panel_zz.setAnchorPoint(0.5, 0.5);
        panel_zz.setContentSize(32, 32);
        panel_zz.setPosition(panel_zz.width / 2, ui.height - panel_zz.height / 2);
        ui.addChild(panel_zz);

        // var panel_xx = ui.panel_xx = new ccui.Layout();
        // panel_xx.setAnchorPoint(0.5, 0.5);
        // panel_xx.setContentSize(90, 0);
        // panel_xx.setPosition(65, 19);
        // ui.addChild(panel_xx);

        // 星星容器
        var panel_xx = ui.panel_xx = new ccui.Layout();
        panel_xx.setName('panel_xx');
        panel_xx.setAnchorPoint(0.5, 0.5);
        panel_xx.setContentSize(30, 16);
        panel_xx.setPosition(ui.width / 2, panel_xx.height);
        ui.addChild(panel_xx);

        return ui;
    };

    /**
     *  格式化所属物品格式
     * @param d 物品数据
     * @param target
     * @param fmt 格式
     */
    G.class.fmtItemNeed = function (d, target, fmt) {
        fmt = fmt || '{1}：{2}';
        var c = G.class.getItem(d.t),
            cn = G.frame.beibao.getItemNum(d.t);
        var str = X.STR(fmt, c.name, cn + '/' + d.n);
        if (!target) {
            return str;
        }
        setTextWithColor(target, str, G.gc.COLOR[d.n > cn ? 5 : 1], 'label');
    };

})();
;;(function () {
// ui_item_wp

// 英雄信息界面的物品图标
G.class.ui_equip_list = function (data, item) {
    item = item || itemTemplate();

    return item;
};

var itemTemplate = function(){
    var ui = new ccui.Layout();
    ui.setAnchorPoint(0.5, 0.5);
    ui.setContentSize(100, 100);

    // 底图
    var panel_ico_di = ui.panel_ico_di = new ccui.Layout();
    panel_ico_di.setBackGroundImage('img/public/ico/ico_bg_hui.png', 1);
    panel_ico_di.setAnchorPoint(0.5, 1);
    panel_ico_di.setContentSize(100, 100);
    panel_ico_di.setPosition(50, 100);
    ui.addChild(panel_ico_di);

    // 头像按钮
    var panel_tx = ui.panel_tx = new ccui.Button();
    panel_tx.setAnchorPoint(0.5, 1);
    panel_tx.setPosition(50, 100);
    panel_tx.setTouchEnabled(false);
    ui.addChild(panel_tx);

    // 左上角的种族图标
    var panel_zz = ui.panel_zz = new ccui.Layout();
    panel_zz.setAnchorPoint(0.5, 1);
    panel_zz.setContentSize(40, 40);
    panel_zz.setPosition(14, 100);
    panel_zz.setScale(0.8);
    ui.addChild(panel_zz);

    // 加号
    var img_jia = ui.img_jia = new ccui.ImageView();
    img_jia.loadTexture('img/public/img_jia.png',1);
    img_jia.setAnchorPoint(0.5, 1);
    img_jia.setPosition(cc.p(84, 100-6));
    ui.addChild(img_jia);
    img_jia.hide();

    // 星星容器
    var panel_xx = ui.panel_xx = new ccui.Layout();
    panel_xx.setName('panel_xx');
    panel_xx.setAnchorPoint(0.5, 0.5);
    panel_xx.setContentSize(30, 16);
    panel_xx.setPosition(ui.width / 2, panel_xx.height);
    ui.addChild(panel_xx);

    var txt_num = ui.txt_num = new ccui.Text();
    txt_num.setString('');
    txt_num.setContentSize(150, 30);
    txt_num.setAnchorPoint(1, 0.5);
    txt_num.setPosition(ui.width - txt_num.width / 2 - 4, txt_num.height / 2);
    txt_num.setFontSize(24);
    txt_num.setFontName(G.defaultFNT);
    txt_num.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
    txt_num.setTextColor(cc.color('#0d121b'));
    ui.addChild(txt_num);

    return ui;
};

})();
;;(function () {

// 英雄信息界面的技能图标
G.class.ui_skill_list = function (data, showTip, item, is, conf) {
    item = item || itemTemplate();

    item.data = data;

    //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA4444;
    item.ico_jn.loadTextureNormal('ico/skillico/' + data.ico + '.png', 0);
    //cc.Texture2D.defaultPixelFormat = cc.Texture2D.PIXEL_FORMAT_RGBA8888;

    if(data.lv > 1){
        item.txt_dj.setString(data.lv);
        item.panel_dj.show();
    }else{
        if(conf && conf.star > 5){
            item.txt_dj.setString('2');
            item.panel_dj.show();
        }else{
            item.txt_dj.setString('');
            item.panel_dj.hide();
        }

    }
    data.is = is;

    item.ico_jn.setBright(!data.lock);

    if(showTip){
        item.ico_jn.setZoomScale(0);
        item.ico_jn.touch(function (sender, type) {
            if (type == ccui.Widget.TOUCH_BEGAN) {
                // cc.log('show~~~~~~~~', data.intr)
                G.frame.yingxiong_skill_xq.data(data).show();
            }else if (type == ccui.Widget.TOUCH_ENDED || type == ccui.Widget.TOUCH_NOMOVE || type == ccui.Widget.TOUCH_CANCELED) {
                sender.setTimeout(function () {
                    if (G.frame.yingxiong_skill_xq.isShow) {
                        G.frame.yingxiong_skill_xq.remove();
                    }
                },100);


                // cc.log('hide~~~~~~~~')
            }
        });
    }

    return item;
};

var itemTemplate = function(){
    var ui = new ccui.Layout();
    ui.setAnchorPoint(0.5, 0.5);
    ui.setContentSize(88, 100);



    var ico_jn = ui.ico_jn = new ccui.Button();
    ico_jn.setName('ico_jn');
    ico_jn.setTouchEnabled(true);
    // ico_jn.loadTextureNormal('img/jineng/ico_jn1.png',1);
    ico_jn.setAnchorPoint(0.5, 0.5);
    ico_jn.setPosition(44, 50);
    ui.addChild(ico_jn);

    // var ico_bg = ui.ico_bg = new ccui.ImageView;
    // ico_bg.setName("ico_bg");
    // ico_bg.setAnchorPoint(0.5, 0.5);
    // ico_bg.loadTexture("img/public/bg_yuan.png", 1);
    // ico_bg.setPosition(44, 50);
    // ui.addChild(ico_bg);

    var panel_dj = ui.panel_dj = new ccui.Layout();
    panel_dj.setName('panel_dj');
    panel_dj.setBackGroundImage('img/public/bg_yuan1.png', 1);
    panel_dj.setAnchorPoint(0.5, 0.5);
    panel_dj.setContentSize(31, 31);
    panel_dj.setPosition(0, 86);
    ui.addChild(panel_dj);

    var txt_dj = ui.txt_dj = new ccui.Text();
    txt_dj.setName('txt_dj');
    txt_dj.setString('');
    txt_dj.x = 15;
    txt_dj.y = 14;
    // txt_dj.width = 60;
    txt_dj.setContentSize(60, 30);
    txt_dj.setAnchorPoint(0.5, 0.5);
    txt_dj.setFontSize(20);
    txt_dj.setFontName(G.defaultFNT);
    txt_dj.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
    txt_dj.setTextColor(cc.color('#ffcb3f'));
    panel_dj.addChild(txt_dj);

    return ui;
};

})();

;;/**
 * Created by wfq on 2018/6/19.
 */
(function () {
    //竞技场
    var ID = 'jingjichang';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
			me.fullScreen = true;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_fh.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            me.nodes.btn_sc.click(function (sender, type) {
                G.frame.shop.data({type: 4, name: "jjsd"}).show();
            })
        },
        onOpen: function () {
            var me = this;
            X.audio.playEffect("sound/openjingjichang.mp3");
            me.fillSize();
            me.showToper();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;

            me.ui.setTimeout(function(){
            	G.guidevent.emit('jingjichangOpenOver');
            },200);
        },
        onShow: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
            me.event.emit('hide');
        },
        getData: function (callback) {
            var me = this;

            me.DATA = {};
            callback && callback();
            // G.ajax.send('zypkjjc_open', [], function (d) {
            //     if (!d) return;
            //     var d = JSON.parse(d);
            //     if (d.s == 1) {
            //         me.DATA = d.d;
            //         callback && callback();
            //     }
            // }, true);
        },
        checkRedPoint: function() {
            var me = this;
            var data = G.DATA.hongdian.crosswz;
            if (data > 0 && P.gud.lv >= G.class.wangzherongyao.getOpen().lv) {
                G.setNewIcoImg(me.nodes.img_dfwz, .7);
                me.nodes.img_dfwz.getChildByName("redPoint").setPosition(570, 170);
            } else {
                G.removeNewIco(me.nodes.img_dfwz);
            }

        },
        setContents: function () {
            var me = this;

            var imgFreeJJC = me.nodes.img_zyjj;
            var imgGuanjun = me.nodes.img_gjsl;
            var imgWangzhe = me.nodes.img_dfwz;
            var txtTimeStr1 = me.nodes.text_1;
            var txtTime1 = me.nodes.text_djs1;
            var txtTimeStr2 = me.nodes.text_2;
            var txtTime2 = me.nodes.text_djs2;
            var txtTimeStr3 = me.nodes.text_3;
            var txtTime3 = me.nodes.text_djs3;
            // var imgOpen2 = me.ui.finds('img_kfdj');


            // imgOpen2.hide();

            //自由竞技场
            var zeroTime = X.getLastMondayZeroTime();
            var openDuration = G.class.jingjichang.get().base.closetime;

            if (me.timer1) {
                txtTime1.clearTimeout(me.timer1);
                delete me.timer1;
            }

            if (G.time > zeroTime + openDuration) {
                //休息时间
                me.iszyjjc = false;
                txtTimeStr1.setString(L('OPEN_TO_STAR') + '：');
                me.timer1 = X.timeout(txtTime1,zeroTime + 7 * 24 * 60 * 60, function () {
                    me.setContents();
                },null,null);
            } else {
                //活动时间
                me.iszyjjc = true;
                txtTimeStr1.setString(L('OPEN_TO_END') + '：');
                me.timer1 = X.timeout(txtTime1,zeroTime + openDuration, function () {
                    me.setContents();
                },null,null);
            }

            imgFreeJJC.setZoomScale(0.05);
            imgFreeJJC.setTouchEnabled(true);
            imgFreeJJC.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    // if (G.time > zeroTime + openDuration) {
                    //     G.tip_NB.show(L('JJC_FREE_NOWORK'));
                    //     return;
                    // }
                    G.frame.jingjichang_freepk.data(me.iszyjjc).checkShow();
                }
            });

            if(G.class.opencond.getIsOpenById('championtrial')){
                imgGuanjun.setBright(true);
            }else{
                imgGuanjun.setBright(false);
            }
            // 冠军试炼
            var openDuration2 = G.class.championtrial.get().base.opentime;
            var closetime = G.class.championtrial.get().base.colsetime;
            if (me.timer2) {
                txtTime2.clearTimeout(me.timer2);
                delete me.timer2;
            }
            if (G.time < zeroTime + 4 * 24 * 3600 + 8 * 3600) {
                //休息时间
                me.isFight = false;
                imgGuanjun.isopen = false;
                imgGuanjun.setTouchEnabled(false);
                txtTimeStr2.setString(L('OPEN_TO_STAR') + '：');
                me.timer2 = X.timeout(txtTime2,zeroTime + 4 * 24 * 3600 + 8 * 3600, function () {
                    me.setContents();
                },null,null);
            }else if(G.time > zeroTime + 6 * 24 * 3600 + 22 * 3600){
                //休息时间
                me.isFight = false;
                imgGuanjun.isopen = false;
                imgGuanjun.setTouchEnabled(false);
                txtTimeStr2.setString(L('OPEN_TO_STAR') + '：');
                me.timer2 = X.timeout(txtTime2,zeroTime + 11 * 24 * 3600 + 8 * 3600, function () {
                    me.setContents();
                },null,null);
            } else {
                //活动时间
                me.isFight = true;
                imgGuanjun.isopen = true;
                imgGuanjun.setBright(true);
                txtTimeStr2.setString(L('OPEN_TO_END') + '：');
                me.timer2 = X.timeout(txtTime2,zeroTime + 6 * 24 * 3600 + 22 * 3600, function () {
                    me.setContents();
                },null,null);
            }
            if (P.gud.lv < G.class.opencond.getLvById('championtrial')) {
                imgGuanjun.setBright(false);
            }
            imgGuanjun.setZoomScale(0.05);
            imgGuanjun.setTouchEnabled(true);
            imgGuanjun.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (P.gud.lv < G.class.opencond.getLvById('championtrial')) {
                        G.tip_NB.show(L('JJC_GUANJUN_NOWORK'));
                        return;
                    }
                    if(!sender.isopen){
                        G.tip_NB.show(L('JJC_FIGHT_OVER'));
                        return;
                    }
                    G.frame.jingjichang_guanjunshilian.data(sender.isopen).checkShow();
                }
            });

            if(G.loginAllData.opentime + 24 * 3600 * 7 < G.time){
                imgWangzhe.setBright(true);
                imgWangzhe.setTouchEnabled(true);
                imgWangzhe.loadTextureNormal("img/jingjichang/img_jjc_dfwz2.png", 1);
                me.checkRedPoint();
            }else{
                imgWangzhe.setBright(false);
                imgWangzhe.setTouchEnabled(false);
            }
            imgWangzhe.setZoomScale(0.05);
            imgWangzhe.click(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {

                    G.frame.wangzherongyao.show();
                }
            }, 600);



        },
    });

    G.frame[ID] = new fun('jingjichang.json', ID);
})();

;;/**
 * Created by wfq on 2018/6/22.
 */
(function() {
    //竞技场-战斗报告
    var ID = 'jingjichang_fightreport';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        initUi: function() {
            var me = this;

            setPanelTitle(me.nodes.text_zdjl, L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function() {
            var me = this;

            me.nodes.mask.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function() {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;

            if (me.needRefreshMain) delete me.needRefreshMain;

            new X.bView('jingjichang_zdjl.json', function(view) {
                me._view = view;

                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);

                me.getData(function() {
                    me.setContents();
                });
            });
        },
        onHide: function() {
            var me = this;

            if (me.needRefreshMain) {
                //刷新
                if (G.frame.jingjichang_freepk.isShow) {
                    G.frame.jingjichang_freepk.getData(function() {
                        G.frame.jingjichang_freepk._panels[G.frame.jingjichang_freepk.curType].refreshPanel(1);
                    });
                } else {
                    G.frame.jingjichang_guanjunshilian.getData(function() {
                        G.frame.jingjichang_guanjunshilian._panels[G.frame.jingjichang_guanjunshilian.curType].refreshPanel(1);
                    });
                }

            }
        },
        refreshData: function() {
            var me = this;

            me.getData(function() {
                me.setContents();
            });
        },
        getData: function(callback) {
            var me = this;
            var api = G.frame.jingjichang_freepk.isShow ? 'zypkjjc_recording' : 'championtrial_recording';
            G.ajax.send(api, [], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function() {
            var me = this;

            var panel = me._view;
            var scrollview = panel.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var data = me.DATA.recording;

            if (data.length < 1) {
                cc.sys.isObjectValid(panel.nodes.img_zwnr) && panel.nodes.img_zwnr.show();
                return;
            } else {
                cc.sys.isObjectValid(panel.nodes.img_zwnr) && panel.nodes.img_zwnr.hide();
            }

            var table = new X.TableView(scrollview, panel.nodes.list_lb, 1, function(ui, data) {
                me.setItem(ui, data);
            }, null, null, 8,10);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function(ui, data) {
            var me = this;

            X.autoInitUI(ui);

            ui.setTouchEnabled(false);

            var enemyUid = data.uid;
            if (P.gud.uid == data.uid) {
                enemyUid = data.enemyuid;
            }

            var wid = G.class.shead(data.headdata);

            X.render({
                panel_tx: function(node) {
                    var wid = G.class.shead(data.headdata);
                    wid.setPosition(cc.p(node.width / 2, node.height / 2));
                    node.removeAllChildren();
                    node.addChild(wid);

                    node.setTouchEnabled(true);
                    node.setSwallowTouches(false);
                    node.data = data;
                    node.touch(function(sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.wanjiaxinxi.data({
                                pvType: 'zypkjjc',
                                uid: sender.data.headdata.uid
                            }).checkShow();
                        }
                    });
                },
                // text_dj2: data.headdata.lv,
                //胜利失败，积分变化是指我的,头像是玩家的，
                img_sb: function(node) {
                    node.hide();

                    if ((P.gud.uid == data.uid && data.winside != 0) || (P.gud.uid == data.enemyuid && data.winside == 0)) {
                        node.show();
                    }
                },
                img_sl: function(node) {
                    node.hide();

                    if ((P.gud.uid == data.uid && data.winside == 0) || (P.gud.uid == data.enemyuid && data.winside != 0)) {
                        node.show();
                    }

                },
                text_mz: data.headdata.name,
                text_jf: function(node) {
                    //失败


                    if (P.gud.uid == data.uid) {
                        setTextWithColor(node, (data.winside == 0 ? '+' : '-') + Math.abs(data.jifenchange[1].change), G.gc.COLOR[data.winside == 0 ? 1 : 5]);
                    } else {
                        setTextWithColor(node, (data.winside != 0 ? '+' : '-') + Math.abs(data.jifenchange[0].change), G.gc.COLOR[data.winside == 1 > 0 ? 1 : 5]);
                    }
                },
                text_sj: X.moment((data.ctime || 0) - G.time),
                btn_hf: function(node) {
                    node.setTouchEnabled(true);
                    node.setSwallowTouches(false);
                    node.data = data;
                    node.touch(function(sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.ajax.send('zypkjjc_watch', [sender.data.tid], function(d) {
                                if (!d) return;
                                var d = JSON.parse(d);
                                if (d.s == 1) {
                                    G.frame.fight.data({
                                        pvType: 'pvjjc',
                                        isVideo: true,
                                        prize: d.d.prize,
                                        fightData:d.d
                                    }).once('show', function() {

                                    }).demo(d.d.fightres);
                                }
                            }, true);
                        }
                    });
                },
                btn_zd: function(node) {
                    node.hide();

                    // if ((P.gud.uid == data.uid && data.winside == 1) || (P.gud.uid == data.enemyuid && data.winside == 0)) {
                    //     node.show();
                    // }
                    node.setTouchEnabled(true);
                    node.setSwallowTouches(false);
                    node.isopen = true;
                    if(!G.frame.jingjichang_freepk.isFight) {
                        node.setBright(G.frame.jingjichang_freepk.isFight);
                        node.isopen = false;
                    }
                    node.data = data;

                    node.touch(function(sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if(sender.isopen == false) {
                                G.tip_NB.show(L("BLSJYJS"));
                                return;
                            }
                            G.frame.fight.startFight({}, function(n) {
                                var selectedData = n.getSelectedData();

                                G.ajax.send('zypkjjc_fight', [enemyUid, selectedData], function(d) {
                                    if (!d) return;
                                    var d = JSON.parse(d);
                                    if (d.s == 1) {
                                        if (d.d.fightres.winside == 0) {
                                            G.frame.fight_win_battle.once("show", function () {
                                                G.frame.fanpai.data(d.d.flop).show();
                                            })
                                        }else{
                                            G.frame.fight_fail_battle.once("show", function () {
                                                G.frame.fanpai.data(d.d.flop).show();
                                            })
                                        }
                                        d.d.pvType = "pvjjc";
                                        G.frame.fight.data(d.d).once('show', function() {
                                            G.frame.yingxiong_fight.remove();

                                            me.refreshData();

                                            me.needRefreshMain = true;

                                        }).demo(d.d.fightres);
                                    }
                                }, true);
                            });
                        }
                    });
                },
                text_tzjsl: function(node) {
                    var data = G.frame.jingjichang_freepk.DATA || G.frame.jingjichang_guanjunshilian.DATA;
                    if (data.freenum > 0) {
                        node.setString(0);
                    } else {
                        var need = G.class.jingjichang.get().base.pkneed;
                        node.setString(need[0].n);
                    }
                    node.setTextColor(cc.color(G.gc.COLOR.n5));
                    X.enableOutline(node,'#4A1D09',2);
                }
            }, ui.nodes);
        }
    });

    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/19.
 */
(function() {
    //自由竞技场
    var ID = 'jingjichang_freepk';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f3";
            me.fullScreen = true;
            me._super(json, id, {
                action: true
            });
        },
        initUi: function() {
            var me = this;
            me.setBlackFrame();
            X.radio([me.nodes.btn_zyjj, me.nodes.btn_phb], function(sender) {
                var name = sender.getName();
                var name2type = {
                    btn_zyjj$: 1,
                    btn_phb$: 2
                };

                me.changeType(name2type[name]);
            });
        },
        setBlackFrame: function() {
            var me = this;
            var blackFrame = new ccui.Layout();
            var winsize = cc.director.getWinSize();
            blackFrame.setContentSize(winsize);
            blackFrame.setBackGroundColor(C.color('#000000'));
            blackFrame.setBackGroundColorOpacity(255 * 0.7);
            blackFrame.setBackGroundColorType(ccui.Layout.BG_COLOR_SOLID);
            me.ui.addChild(blackFrame, -1);
        },
        bindBtn: function() {
            var me = this;

            //竞技奖励
            me.nodes.btn_jjjl.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.jingjichang_freepk_jjjl.show();
                }
            });
            //战斗记录
            me.nodes.btn_zdjl.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.jingjichang_fightreport.show();
                }
            });
            //防守阵容
            me.nodes.btn_fszr.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.setFSSZ();
                }
            });
            //返回
            me.nodes.btn_fh.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
            //介绍
            me.nodes.btn_bz.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.help.data({
                        intr: L('TS9')
                    }).show();
                }
            });

            var isopen = me.data();
            if (!isopen) {
                me.nodes.btn_zdjl.setBright(false);
                me.nodes.btn_zdjl.setTouchEnabled(false);
            }
        },
        onOpen: function() {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.isFight = me.data();
        },
        onAniShow: function() {
            var me = this;
        },
        show: function(conf) {
            var me = this;
            var _super = this._super;
            me.getRankData(function() {
                _super.apply(me, arguments);
            });
        },
        onShow: function() {
            var me = this;

            me.showToper();
            me.ui.setTimeout(function() {
                G.guidevent.emit('jingjichang_freepkOpenOver');
            }, 200);
            var isopen = me.data();
            if (!isopen) {
                me.nodes.btn_phb.triggerTouch(ccui.Widget.TOUCH_ENDED);
                me.nodes.btn_zyjj.setColor(cc.color('#999999'));
                me.nodes.btn_zyjj.setTouchEnabled(false);
            } else {
                me.nodes.btn_zyjj.triggerTouch(ccui.Widget.TOUCH_ENDED);
            }
            
            // me.nodes.btn_zyjj.triggerTouch(ccui.Widget.TOUCH_ENDED);
            // // });
            // me.getRankData();
        },
        getRankData: function(callback) {
            var me = this;
            G.ajax.send('rank_open', [3], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.rankData = d.d;
                    callback && callback();
                }
            });
        },
        onHide: function() {
            var me = this;
            me.event.emit('hide');
        },
        getData: function(callback, errCall) {
            var me = this;

            G.ajax.send('zypkjjc_open', [], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                } else {
                    errCall && errCall();
                }
            }, true);
        },
        getEnemyData: function(type, callback) {
            var me = this;

            //type 0 不刷新，1刷新
            G.ajax.send('zypkjjc_choose', [type], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    if (type == 1) me.isSX = true;
                    me.enemyData = d.d.enemy;
                    callback && callback();
                }
            });
        },
        setContents: function() {
            var me = this;



        },
        changeType: function(type) {
            var me = this;

            if (me.curType && me.curType == type) {
                return;
            }

            me.curType = type;

            var viewConf = {
                "1": G.class.jingjichang_pk,
                "2": G.class.jingjichang_phb,
            };
            me._panels = me._panels || {};
            for (var _type in me._panels) {
                cc.isNode(me._panels[_type]) && me._panels[_type].hide();
            }
            if (!cc.isNode(me._panels[type])) {
                me._panels[type] = new viewConf[type](type);
                me.ui.nodes.panel_nr.addChild(me._panels[type]);
            }
            me._panels[type].show();
        },
        checkShow: function() {
            var me = this;

            me.getData(function() {
                me.once('show', function() {
                    // me.DATA.zhanli = 0;
                    me.checkIsShowFSZR();
                }).show();
            });
        },
        //判断是否显示防守阵容
        checkIsShowFSZR: function() {
            var me = this;

            var data = me.DATA;
            if (data.zhanli < 1) {
                me.setFSSZ();
            }
        },
        //设置防守部队
        setFSSZ: function() {
            var me = this;

            G.frame.yingxiong_fight.once('show', function() {
                G.frame.yingxiong_fight.ui.nodes.mask.touch(function(sender, type) {
                    if (type == ccui.Widget.TOUCH_ENDED) {
                        var defData = G.frame.yingxiong_fight.top.getSelectedData();

                        if (!defData) {
                            G.frame.yingxiong_fight.remove();
                        } else {
                            if (me.DATA.zhanli > 1) {
                                G.frame.yingxiong_fight.remove();
                            } else {
                                G.frame.yingxiong_fight.remove();
                                G.frame.jingjichang_freepk.remove();
                            }

                        }
                    }
                });
            }).data({
                callback: function(node) {
                    var data = node.getSelectedData();
                    G.DATA.yingxiong.jjchero = [];
                    for (var k in data) {
                        G.DATA.yingxiong.jjchero.push(data[k]);
                    }
                    G.ajax.send('zypkjjc_defend', [data], function(d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            X.cacheByUid('fight_zyjjc', data);
                            G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                            G.frame.yingxiong_fight.remove();
                            me.getData(function() {
                                me._panels[me.curType].refreshPanel(1);
                            });
                        }
                    }, true);
                },
                defhero: me.DATA.defhero
            }).show();
        },
    });

    G.frame[ID] = new fun('jingjichang_bg.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/21.
 */
(function () {
    //竞技场-自由竞技-竞技奖励
    var ID = 'jingjichang_freepk_jjjl';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            me.nodes.btn_zyjj.finds('text_zzjjc$').setString(L('PMJL'));
            me.nodes.btn_phb.finds('text_zzjjc$').setString(L('SJJL'));
            X.radio([me.nodes.btn_zyjj,me.nodes.btn_phb], function (sender) {
                var name = sender.getName();
                var name2type = {
                    btn_zyjj$:1,
                    btn_phb$:2
                };

                me.changeType(name2type[name]);
            });
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.nodes.btn_zyjj.triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        onHide: function () {
            var me = this;
        },
        changeType: function (type) {
            var me = this;

            if (me.curType && me.curType == type) {
                return;
            }

            me.curType = type;

            var viewConf = {
                "1": G.class.jingjichang_pmjl,
                "2": G.class.jingjichang_sjjl,
            };
            me._panels = me._panels || {};
            for (var _type in me._panels) {
                if (cc.isNode(me._panels[_type])) {
                    me._panels[_type].removeFromParent();
                    delete me._panels[_type];
                }
            }

            if (!cc.isNode(me._panels[type])) {
                me._panels[type] = new viewConf[type](type);
                me.ui.nodes.panel_nr.addChild(me._panels[type]);
            }
            me._panels[type].show();
        },
    });

    G.frame[ID] = new fun('jingjichang_bg2.json', ID);
})();
;;/**
 * Created by lsm on 2018/6/22.
 */
(function() {
    //竞技场-冠军试炼-战斗报告
    var ID = 'jingjichang_gj_fightreport';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id,{action:true});
        },
        initUi: function() {
            var me = this;

            // me.ui.finds('text_zdjl').setString(L('UI_TITLE_' + me.ID()))
            setPanelTitle(me.nodes.text_zdjl, L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function() {
            var me = this;

            me.nodes.mask.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function() {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;

            if (me.needRefreshMain) delete me.needRefreshMain;

            new X.bView('jingjichang_zdjl.json', function(view) {
                me._view = view;

                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);

                me.getData(function() {
                    me.setContents();
                });
            });
        },
        onHide: function() {
            var me = this;

            if (me.needRefreshMain) {
                //刷新
                if (G.frame.jingjichang_freepk.isShow) {
                    G.frame.jingjichang_freepk.getData(function() {
                        G.frame.jingjichang_freepk._panels[G.frame.jingjichang_freepk.curType].refreshPanel(1);
                    });
                } else {
                    G.frame.jingjichang_guanjunshilian.getData(function() {
                        G.frame.jingjichang_guanjunshilian._panels[G.frame.jingjichang_guanjunshilian.curType].refreshPanel(1);
                    });
                }

            }
        },
        refreshData: function() {
            var me = this;

            me.getData(function() {
                me.setContents();
            });
        },
        getData: function(callback) {
            var me = this;
            G.ajax.send('championtrial_recording', [], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function() {
            var me = this;

            var panel = me._view;
            var scrollview = panel.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var data = me.DATA.recording;

            if (data.length < 1) {
                cc.sys.isObjectValid(panel.nodes.img_zwnr) && panel.nodes.img_zwnr.show();
                return;
            } else {
                cc.sys.isObjectValid(panel.nodes.img_zwnr) && panel.nodes.img_zwnr.hide();
            }

            var table = new X.TableView(scrollview, panel.nodes.list_lb, 1, function(ui, data) {
                me.setItem(ui, data);
            }, null, null, 8, 10);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function(ui, data) {
            var me = this;

            X.autoInitUI(ui);

            ui.setTouchEnabled(false);

            var enemyUid = data.uid;
            if (P.gud.uid == data.uid) {
                enemyUid = data.enemyuid;
            }
            X.render({
                panel_tx: function(node) {
                    var wid = G.class.shead(data.headdata);
                    wid.setPosition(cc.p(node.width / 2, node.height / 2));
                    node.removeAllChildren();
                    node.addChild(wid);

                    wid.setTouchEnabled(true);
                    wid.setSwallowTouches(false);
                    wid.data = data;
                    wid.touch(function(sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.wanjiaxinxi.data({
                                pvType: 'championtrial',
                                uid: sender.data.headdata.uid
                            }).checkShow();
                        }
                    });
                },
                // text_dj2: data.headdata.lv,
                //胜利失败，积分变化是指我的,头像是玩家的，
                img_sb: function(node) {
                    node.hide();
                    node.setTouchEnabled(false);
                    // if ((P.gud.uid == data.uid && data.winside == 0) || (P.gud.uid == data.enemyuid && data.winside == 1)) {
                    //     node.show();
                    // }
                    if ((P.gud.uid == data.uid && data.winside != 0) || (P.gud.uid == data.enemyuid && data.winside == 0)) {
                        node.show();
                    }
                },
                img_sl: function(node) {
                    node.hide();
                    node.setTouchEnabled(false);
                    // if ((P.gud.uid == data.uid && data.winside == 1) || (P.gud.uid == data.enemyuid && data.winside == 0)) {
                    //     node.show();
                    // }
                    if ((P.gud.uid == data.uid && data.winside == 0) || (P.gud.uid == data.enemyuid && data.winside != 0)) {
                        node.show();
                    }
                },
                text_mz: data.headdata.name,
                text_jf: function(node) {
                    //失败
                    if (P.gud.uid == data.uid) {
                        setTextWithColor(node, (data.winside == 0 ? '+' : '') + data.jifenchange[0].change, G.gc.COLOR[data.winside == 0 ? 1 : 5]);
                    } else {
                        setTextWithColor(node, (data.winside != 0 ? '+' : '') + data.jifenchange[1].change, G.gc.COLOR[data.winside == 1 > 0 ? 1 : 5]);
                    }
                    // if (P.gud.uid == data.uid) {
                    //     setTextWithColor(node, (data.winside == 1 ? '+' : '-') + Math.abs(data.winside == 1 ? data.jifenchange.add : data.jifenchange.reduce), G.gc.COLOR[data.winside == 1 ? 1 : 5]);
                    // } else {
                    //     setTextWithColor(node, (data.winside == 0 ? '+' : '-') + Math.abs(data.winside == 0 ? data.jifenchange.add : data.jifenchange.reduce), G.gc.COLOR[data.winside == 0 > 0 ? 1 : 5]);
                    // }
                },
                text_sj: X.moment((data.ctime || 0) - G.time),
                btn_hf: function(node) {
                    node.setTouchEnabled(true);
                    node.setSwallowTouches(false);
                    node.data = data;
                    node.touch(function(sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.ajax.send('championtrial_watch', [sender.data.tid], function(d) {
                                if (!d) return;
                                var d = JSON.parse(d);
                                if (d.s == 1) {
                                    G.frame.fight.data({
                                        pvType: 'pvgjjjc',
                                        prize: d.d.prize,
                                        isVideo: true,
                                        session: 0,
                                        fightlength: d.d.fightres.length,
                                        fightData:d.d,
                                        callback: function(session) {
                                            G.frame.fight.demo(d.d.fightres[session]);
                                        }
                                    }).once('show', function() {

                                    }).demo(d.d.fightres[0]);
                                }
                            }, true);
                        }
                    });
                },
                btn_zd: function(node) {
                    node.hide();

                    // if ((P.gud.uid == data.uid && data.winside == 1) || (P.gud.uid == data.enemyuid && data.winside == 0)) {
                    //     node.show();
                    // }

                    node.setTouchEnabled(true);
                    node.setSwallowTouches(false);
                    node.data = data;
                    node.touch(function(sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if (!G.frame.jingjichang_guanjunshilian._panels[1].isFighting) {
                                G.tip_NB.show(L('JJC_FIGHT_OVER'));
                                return;
                            }

                            var need = G.class.championtrial.get().base.pkneed;
                            var pkNeedNum = G.frame.jingjichang_guanjunshilian.DATA.freenum > 0 ? 0 : need[0].n;
                            var ownNum = me.ownNum;
                            if (ownNum < pkNeedNum) {
                                G.tip_NB.show(G.class.getItem(need[0].t, need[0].a).name + L('buzu'));
                                return;
                            }
                            G.frame.jingjichang_gjfight.data({
                                type: 'pvzyjjc',
                                data: enemyUid,
                                callback: function(node) {
                                    var data = node.getDefendData();

                                    G.ajax.send("championtrial_fight", [enemyUid, data], function(d) {
                                        if (!d) return;
                                        var d = JSON.parse(d);
                                        if (d.s == 1) {
                                            // X.cacheByUid('fight_ready',data);

                                            G.frame.fight.data({
                                                pvType: 'pvgjjjc',
                                                prize: d.d.prize,
                                                session: 0,
                                                fightlength: d.d.fightres.length,
                                                fightData:d.d,
                                                callback: function(session) {
                                                    G.frame.fight.demo(d.d.fightres[session]);
                                                    if (session == d.d.fightres.length - 1) {
                                                        G.frame.fight_win_battle.remove();
                                                        G.frame.fight_fail_battle.remove();

                                                        if (d.d.fightres[session].winside == 0) {
                                                            G.frame.fight_win_battle.once('in_over', function () {
                                                                G.frame.fanpai.data(d.d.flop).show();
                                                            });
                                                        } else {
                                                            G.frame.fight_fail_battle.once('in_over', function () {
                                                                G.frame.fanpai.data(d.d.flop).show();
                                                            });
                                                        }
                                                    }
                                                }
                                            }).once('show', function() {
                                                G.frame.jingjichang_gjfight.remove();
                                                //刷新
                                                G.frame.jingjichang_guanjunshilian._panels['1'].refreshPanel();
                                                // G.frame.jingjichang_guanjunshilian._panels['1'].refreshEnemys();

                                            }).demo(d.d.fightres[0]);
                                        }
                                    }, true);
                                }
                            }).show();
                        }
                    });
                },
                text_tzjsl: function(node) {
                    var data = G.frame.jingjichang_freepk.DATA || G.frame.jingjichang_guanjunshilian.DATA;
                    if (data.freenum > 0) {
                        node.setString(0);
                    } else {
                        var need = G.class.championtrial.get().base.pkneed;
                        node.setString(need[0].n);
                    }
                }
            }, ui.nodes);
        }
    });

    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by lsm on 2018/6/23
 */
(function() {
    //竞技场-冠军试炼-赛季奖励
    var ID = 'jingjichang_gj_prize';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        initUi: function() {
            var me = this;

            setPanelTitle(me.nodes.text_zdjl, L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function() {
            var me = this;

            me.nodes.mask.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function() {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;

            if (me.needRefreshMain) delete me.needRefreshMain;
            me.nodes.text_zdjl.setString(L('SJJL'));
            new X.bView('jingjichang_pmjl.json', function(view) {
                me._view = view;

                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
            });
        },
        onHide: function() {
            var me = this;

        },
        refreshData: function() {
            var me = this;

        },
        getData: function(callback) {
            var me = this;
            
        },
        setContents: function() {
            var me = this;
            me.setMyRank();
            me.setTable(); 

        },
        setMyRank: function () {
            var me = this;
            var panel = me._view.nodes.panel_wzts;

            panel.removeAllChildren();
            var str = L('MY_RANK') + '<font color=#BE5E30>' + (G.frame.jingjichang_guanjunshilian.DATA.myrank || 0) + '</font>';
            var rh = new X.bRichText({
                size:22,
                maxWidth:panel.width,
                lineHeight:34,
                color:G.gc.COLOR.n4,
                family:G.defaultFNT
            });
            rh.text(str);
            rh.setAnchorPoint(0, 0.5);
            rh.setPosition(cc.p(0, panel.height / 2));

            var str1 = L("SJJL_RANK_INFO");
            var rh1 = new X.bRichText({
                size:22,
                maxWidth:panel.width,
                lineHeight:32,
                color:G.gc.COLOR.n4,
                family:G.defaultFNT,
            });
            rh1.text(str1);
            rh1.setAnchorPoint(1, 0.5);
            rh1.setPosition(cc.p(panel.width, panel.height / 2));
            panel.addChild(rh);
            panel.addChild(rh1);
        },
        setTable: function () {
            var me = this;
            var panel = me._view;
            var scrollview = panel.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var ranklist = G.class.championtrial.get().base.weekprize;


            var table = me.table = new X.TableView(scrollview,panel.nodes.list_lb,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8);
            table.setData(ranklist);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);

            var layIco = ui.nodes.panel_tx;
            var layPm = ui.nodes.panel_pm;
            var txtPm = ui.nodes.sz_phb;

            layPm.hide();
            txtPm.setString('');
            txtPm.hide();

            layIco.removeAllChildren();
            layIco.setTouchEnabled(false);
            //排名
            var rank = data[0];
            if (rank.length == 1) {
                if (rank[0] < 4) {
                    layPm.show();
                    layPm.setBackGroundImage('img/public/img_paihangbang_' + rank[0] + '.png',1);
                } else {
                    txtPm.setString(rank[0]);
                    txtPm.show();
                }
            } else {
                if (rank[0] == rank[1]) {
                    // txtPm.setString(rank[0]);
                    if (rank[0] < 4) {
                        layPm.show();
                        layPm.setBackGroundImage('img/public/img_paihangbang_' + rank[0] + '.png',1);
                    } else {
                        txtPm.setString(rank[0]);
                        txtPm.show();
                    }
                }  else if(rank[0] > 100){
                    layPm.show();
                    rank[0] == 101 && layPm.setBackGroundImage('img/public/img_paihangbang_4.png',1);
                    rank[0] == 201 && layPm.setBackGroundImage('img/public/img_paihangbang_5.png',1);
                    rank[0] == 501 && layPm.setBackGroundImage('img/public/img_paihangbang_6.png',1);
                    rank[0] == 1001 && layPm.setBackGroundImage('img/public/img_paihangbang_7.png',1);
                } else {
                    txtPm.setString(rank[0] + '-' + rank[1]);
                    txtPm.show();
                }
            }

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            X.alignItems(layIco,data[1],'left',{
                touch:true
            });
        }
        
    });

    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by lsm on 2018/6/23
 */
(function() {
    //英雄-出战
    var ID = 'jingjichang_gjfight';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function() {
            var me = this;

            if(G.frame.jingjichang_guanjunshilian.isShow) {
                if (me.DATA && me.DATA.type == 'defend') {
                    setPanelTitle(me.ui.nodes.txt_title, L('UI_TITLE_' + me.ID() + '_defend'));
                } else {
                    setPanelTitle(me.ui.nodes.txt_title, L('UI_TITLE_' + me.ID()));
                }
            } else {
                if(me.DATA.def) {
                    setPanelTitle(me.ui.nodes.txt_title, L("GHZX"));
                }else if(me.DATA.type == "pvwz"){
                    setPanelTitle(me.ui.nodes.txt_title, L("UI_TITLE_jingjichang_gjfight"));
                }
            }

        },
        bindBtn: function() {
            var me = this;

            me.ui.nodes.mask.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function() {
            var me = this;
            me.DATA = me.data();
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;

            me.setContents();
        },
        onHide: function() {
            var me = this;
        },
        setContents: function() {
            var me = this;
            me.ui.finds('panel_tip').finds('txt_djgb').hide();
            me.setBottom();
            me.setXia();
        },
        setXia: function() {
            var me = this;

            if (!me.top) {
                me.top = new G.class.jingjichang_gjkaizhan('fight');
                me.nodes.panel_nr2.removeAllChildren();
                me.nodes.panel_nr2.addChild(me.top);
            } else {
                me.top.refreshPanel();
            }
        },
        setBottom: function() {
            var me = this;

            if (!me.bottom) {
                me.bottom = new G.class.jingjichang_gjxuanzhe('fight');
                me.nodes.panel_nr1.removeAllChildren();
                me.nodes.panel_nr1.addChild(me.bottom);
            } else {
                me.bottom.refreshPanel();
            }
        }
    });

    G.frame[ID] = new fun('ui_tip3.json', ID);
})();
;;/**
 * Created by lsm on 2018/6/23
 */
(function() {
    //英雄-冠军试炼-开战选择
    G.class.jingjichang_gjkaizhan = X.bView.extend({
        ctor: function(type) {
            var me = this;
            me._type = type;
            me._super('jingjichang_yxcz.json');
        },
        refreshPanel: function() {
            var me = this;

            // me.setContents();
        },
        bindBTN: function() {
            var me = this;
            if ((G.frame.jingjichang_gjfight.data() && G.frame.jingjichang_gjfight.data().type == 'defend') || G.frame.jingjichang_gjfight.data().def) {
                me.nodes.btn_kz.setTitleText(L('BAOCUN'));
            } else {
                me.nodes.btn_kz.setTitleText(L('FIGHT'));
            }
            if(G.frame.jingjichang_gjfight.data().txt) {
                me.nodes.btn_kz.setTitleText(G.frame.jingjichang_gjfight.data().txt);
            }
            //开战
            me.nodes.btn_kz.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    //空判断
                    var sData = me.getDefendData();
                    if (sData.length < 1) {
                        G.tip_NB.show(L('YX_FIGHT_TIP_1'));
                        return;
                    }
                    if(sData.length < 3) {
                        G.tip_NB.show(L('YX_FIGHT_TIP_2'));
                        return;
                    }
                    for (var i in sData) {
                        if(X.keysOfObject(sData[i]).length == 1 && X.keysOfObject(sData[i])[0] == "sqid") {
                            G.tip_NB.show(L('YX_FIGHT_TIP_2'));
                            return;
                        }
                    }
                    if(G.frame.jingjichang_guanjunshilian.isShow) {
                        X.cacheByUid("fight_gjjjc", sData);
                    }
                    if(G.frame.wangzherongyao.isShow && !G.frame.jingjichang_gjfight.data().def){
                        X.cacheByUid("pvwz",sData);
                    }
                    var callback = G.frame.jingjichang_gjfight.DATA.callback;
                    callback && callback(me);
                }
            });

            //交换1
            me.nodes.btn_th1.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.swapHero(1);
                }
            });

            me.nodes.btn_th2.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.swapHero(2);
                }
            });

            me.nodes.btn_cdsq.click(function () {
                if(!me.opetion) {
                    me.nodes.panel_option.show();
                    me.opetion = true;
                }else {
                    me.nodes.panel_option.hide();
                    me.opetion = false;
                }
            });

            me.ui.finds("btn1").click(function () {
                me.changeSQ(1);
            });
            me.ui.finds("btn2").click(function () {
                me.changeSQ(2);
            });
            me.ui.finds("btn3").click(function () {
                me.changeSQ(3);
            });
        },
        checkRedPoint: function() {
            var me = this;
            var isNeedShow = false;

            for(var i in me.sqid) {
                if(me.sqid[i] != "") {
                    isNeedShow = true;
                    break;
                }
            }

            if(!isNeedShow) G.setNewIcoImg(me.nodes.btn_cdsq, .95);
            else G.removeNewIco(me.nodes.btn_cdsq);
        },
        changeSQ: function(type) {
            var me = this;

            G.frame.shenqi_xuanze.data({
                sqid: me.sqid[type - 1],
                sqArr: me.sqid,
                idx: type - 1,
                callback: function f(data) {
                    me.sqid[type - 1] = data;
                    for(var i = (type - 1) * 6; i < type * 6; i ++) {
                        if(me.icoList[i].data) {
                            me.icoList[i].getChildren()[0].setArtifact(data);
                        }
                    }
                    me.checkRedPoint();
                },
            }).show();
        },
        swapHero: function(type) {
            var me = this;
            var data = me.getSelectedData();
            if (data.length <= 0) return;
            var obj = {
                1: [1, 2],
                2: [2, 3]
            };


            // var tmp = me.sqid[type];
            // me.sqid[type] = me.sqid[type - 1];
            // me.sqid[type - 1] = tmp;

            var str = obj[type];
            var list_1 = data[str[0]];
            var list_2 = data[str[1]];
            var idx = type == 1 ? 0 : 6;
            var idx2 = type == 1 ? 6 : 12;
            for (var k in list_2) {
                var item = me.icoList[idx];
                var wid = G.class.shero(G.DATA.yingxiong.list[list_2[k]]);
                item.data = list_2[k];
                wid.setAnchorPoint(0.5, 1);
                wid.setPosition(cc.p(item.width / 2, item.height));
                item.removeAllChildren();
                if (G.DATA.yingxiong.list[list_2[k]]) {
                    item.addChild(wid);
                    wid.setArtifact(me.sqid[parseInt(idx / 6)]);
                }
                me.addTouchEvent(wid);
                idx++
            }
            for (var j in list_1) {
                var item = me.icoList[idx2];
                var wid = G.class.shero(G.DATA.yingxiong.list[list_1[j]]);
                item.data = list_1[j];
                wid.setAnchorPoint(0.5, 1);
                wid.setPosition(cc.p(item.width / 2, item.height));
                item.removeAllChildren();
                if (G.DATA.yingxiong.list[list_1[j]]) {
                    item.addChild(wid);
                    wid.setArtifact(me.sqid[parseInt(idx2 / 6)]);
                }
                me.addTouchEvent(wid);
                idx2++
            }
        },
        checkItemsCollision: function(cloneItem, p) {
            var me = this;

            var itemsArr = me.icoList;

            for (var i = 0; i < itemsArr.length; i++) {
                var item = itemsArr[i];
                if (item) {
                    var pos = item.getParent().convertToNodeSpace(p);
                    if (cc.rectContainsPoint(item.getBoundingBox(), pos)) {
                        return item;
                    }
                }
            }

            return null;
        },
        changeItem: function(item1, item2) {
            var me = this;
            var tid1 = item1.data.tid;
            var tid2 = item2.data;
            var parent = item1.getParent();

            var idx1 = item1.getParent().index;
            var idx2 = item2.index;

            parent.removeAllChildren();
            parent.data = undefined;
            item2.removeAllChildren();
            item2.data = undefined;

            if(tid2) {
                var wid = G.class.shero(G.DATA.yingxiong.list[tid2]);
                wid.setAnchorPoint(0.5, 1);
                wid.setPosition(cc.p(parent.width / 2, parent.height));
                me.addTouchEvent(wid);
                parent.addChild(wid);
                parent.data = tid2;
                wid.setArtifact(me.sqid[parseInt(idx1 / 6)]);
            }
            var wid1 = G.class.shero(G.DATA.yingxiong.list[tid1]);
            wid1.setAnchorPoint(0.5, 1);
            wid1.setPosition(cc.p(item2.width / 2, item2.height));
            me.addTouchEvent(wid1);
            item2.addChild(wid1);
            item2.data = tid1;
            wid1.setArtifact(me.sqid[parseInt(idx2 / 6)]);
        },
        getDefendData: function() {
            var me = this;
            var data = me.getSelectedData();
            var newdata = [];

            for (var key in data) {
                var list = {};
                for (var i = 1; i < 7; i++) {
                    var d = data[key];
                    if (d[i]) {
                        list[i] = d[i];
                    }
                }
                if(me.sqid[key * 1 - 1]) {
                    list.sqid = me.sqid[key * 1 - 1];
                }
                if (JSON.stringify(list) === '{}') {
                    continue;
                }
                newdata.push(list);
            }
            return newdata;
        },
        getSelectedData: function() {
            var me = this;
            var tiem1 = {};
            var tiem2 = {};
            var tiem3 = {};
            for (var key in me.icoList) {
                var k = key >> 0;
                if (k < 6) {
                    tiem1[k + 1] = me.icoList[key].data || 0;
                } else if (5 < k && k < 12) {
                    tiem2[k % 6 + 1] = me.icoList[key].data || 0;
                } else {
                    tiem3[k % 6 + 1] = me.icoList[key].data || 0;
                }
            }
            return {
                1: tiem1,
                2: tiem2,
                3: tiem3
            };
        },
        setDefendHero: function() {
            var me = this;

            var defdata;
            if (G.frame.jingjichang_gjfight.DATA.type == 'defend') {
                defdata = G.frame.jingjichang_guanjunshilian.DATA.defhero;
            }else{
                if(G.frame.wangzherongyao.isShow && !defdata) {
                 defdata = X.cacheByUid("pvwz");
             }else{
                defdata = X.cacheByUid('fight_gjjjc');
            }
            }

            //没有数据时跳出设置
            if (!defdata || defdata.length < 1) {
                return;
            }

            for (var i = 0; i < defdata.length; i++) {
                var icolist = me.sanList[i];
                var datalist = defdata[i];
                if(datalist.sqid) {
                    me.sqid[i] = datalist.sqid;
                }
                for (var key in datalist) {
                    if(G.DATA.yingxiong.list[datalist[key]]){
                        var k = key >> 0;
                        var item = icolist[(k - 1)];
                        item.data = datalist[key];
                        var wid = G.class.shero(G.DATA.yingxiong.list[datalist[key]]);
                        wid.setAnchorPoint(0.5, 1);
                        wid.setPosition(cc.p(item.width / 2, item.height));
                        me.addTouchEvent(wid);
                        item.addChild(wid);
                        if(me.sqid[i]) {
                            wid.setArtifact(me.sqid[i]);
                        }
                        G.frame.jingjichang_gjfight.bottom.selectedData.push(datalist[key]);
                    }
                }
            }
            G.frame.jingjichang_gjfight.bottom.fmtItemList();
        },
        addLayout: function() {
            var me = this;
            var count = 0;
            me.icoList = [];
            me.icoData = [];
            me.sanList = [];
            for (var i = 0; i < 3; i++) {
                var list = me.nodes.list.clone();
                setico();
                list.show();
                list.setAnchorPoint(0, 0);
                list.setPosition(0, 0);
                me.nodes['Panel_' + (i + 1)].addChild(list);
            }

            function setico() {
                X.autoInitUI(list);
                var zuo = list.nodes.panel_ico1;
                var you = list.nodes.panel_ico2;
                var oneList = {};
                for (var k = 0; k < 2; k++) {
                    var ico = list.nodes.list_ico.clone();
                    ico.setAnchorPoint(0, 0.5);
                    ico.setPositionX(80 * k);
                    ico.setName(count++);
                    zuo.addChild(ico);
                    me.icoList.push(ico);
                    oneList[k] = ico;
                }
                for (var j = 0; j < 4; j++) {
                    var ico = list.nodes.list_ico.clone();
                    ico.setAnchorPoint(0, 0.5);
                    ico.setPositionX(80 * j);
                    ico.setName(count++);
                    you.addChild(ico);
                    me.icoList.push(ico);
                    oneList[(k + j)] = ico;
                }
                me.sanList.push(oneList);
            }

            for(var i = 0; i < me.icoList.length; i ++) {
                me.icoList[i].index = i;
            }
        },
        addTouchEvent: function(ui) {
            var me = this;
            var item = ui;
            var bPos, cloneItem, pos;
            item.setTouchEnabled(true);
            item.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    //卸下英雄
                    if (sender.data) {
                        var a = sender.getParent();
                        me.removeItem(sender.data.tid);
                    }
                } else if (type == ccui.Widget.TOUCH_BEGAN) {
                    if (sender.data) {
                        bPos = sender.getTouchBeganPosition();
                        var firstParent = sender.getParent();

                        var firstPos = firstParent.convertToWorldSpace(sender.getPosition());
                        pos = me.ui.convertToNodeSpace(firstPos);
                        cloneItem = me.cloneItem = sender.clone();
                        cloneItem.data = sender.data;
                        sender.hide();
                        cloneItem.setScale(.79);
                        cloneItem.setPosition(cc.p(pos));
                        me.ui.addChild(cloneItem);
                    }
                } else if (type == ccui.Widget.TOUCH_MOVED) {
                    if (sender.data) {
                        var mPos = sender.getTouchMovePosition();
                        var offset = cc.p(mPos.x - bPos.x, mPos.y - bPos.y);

                        cloneItem.setPosition(cc.p(pos.x + offset.x, pos.y + offset.y));

                    }
                } else if (type == ccui.Widget.TOUCH_ENDED || type == ccui.Widget.TOUCH_CANCELED) {
                    if (sender.data) {

                        var isCollision = me.checkItemsCollision(cloneItem, sender.getTouchMovePosition());
                        if (isCollision != null) {
                            me.changeItem(sender, isCollision);
                        }

                        if (me.cloneItem) {
                            me.cloneItem.removeFromParent();
                            delete me.cloneItem;
                        }
                        sender.show();
                    }
                }

            });
        },
        removeItem: function(tid) {
            var me = this;

            var itemArr = me.icoList;
            for (var i = 0; i < itemArr.length; i++) {
                var item = itemArr[i];
                var layIco = item;
                // var imgAdd = item.nodes.img_add;
                if (item.data && item.data == tid) {
                    var idx = X.arrayFind(G.frame.jingjichang_gjfight.bottom.selectedData, tid);
                    if (idx > -1) {
                        G.frame.jingjichang_gjfight.bottom.selectedData.splice(idx, 1);
                        G.frame.jingjichang_gjfight.bottom.removeGou(tid);
                    }
                    delete item.data;
                    layIco.removeAllChildren();
                }
            }
        },
        addItem: function(tid) {
            var me = this;

            var itemArr = me.icoList;
            for (var i = 0; i < itemArr.length; i++) {
                var item = itemArr[i];
                if (!item.data) {
                    item.data = tid;
                    var layIco = item;
                    // var imgAdd = item.nodes.img_add;
                    var wid = G.class.shero(G.DATA.yingxiong.list[tid]);
                    wid.setAnchorPoint(0.5, 1);
                    wid.setPosition(cc.p(layIco.width / 2, layIco.height));
                    me.addTouchEvent(wid);
                    if(me.sqid[parseInt(i / 6)]) {
                        wid.setArtifact(me.sqid[parseInt(i / 6)]);
                    }
                    layIco.addChild(wid);
                    break;
                }
            }
        },
        onOpen: function() {
            var me = this;
            me.sqid = ["", "", ""];
            me.bindBTN();
        },
        onShow: function() {
            var me = this;
            me.addLayout();
            me.setDefendHero();
            me.refreshPanel();
            me.checkRedPoint();
        },
        onRemove: function() {
            var me = this;
        },
        setContents: function() {
            var me = this;

        },

    });

})();
;;/**
 * Created by lsm on 2018/6/23
 */
(function() {
    //冠军的试炼
    G.class.jingjichang_gjpk = X.bView.extend({
        extConf: {
            box: {
                idx: [1, 1, 2, 2, 3, 3, 3]
            }
        },
        ctor: function(type) {
            var me = this;
            me._type = type;
            me.fullScreen = true;
            me._super('jingjichang_zyjj.json');
        },
        refreshPanel: function() {
            var me = this;

            me.setContents();
        },
        bindBTN: function() {
            var me = this;

            //刷新
            me.nodes.btn_sx.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (!me.isFighting) {
                        G.tip_NB.show(L('JJC_FIGHT_OVER'));
                        return;
                    }

                    if (!me.isRefreshEnemy) {
                        me.isRefreshEnemy = true;
                        me.refreshEnemys();

                        if (me.refTimer) {
                            clearInterval(me.refTimer);
                            delete me.refTimer;
                        }
                        var time = 3;
                        refTimer(sender,time);
                    }
                }
            });
            function refTimer(sender,time) {
                sender.setEnableState(false);
                sender.setTitleText(time + 's');
                sender.setTitleColor(cc.color(G.gc.COLOR.n15));
                me.ui.setTimeout(function() {
                    time--;
                    cc.isNode(sender) && sender.setTitleText(L('BTN_SX'));
                    sender.setEnableState(true);
                    if (time <= 0) {
                        me.ui.setTimeout(function() {
                            delete me.isRefreshEnemy;
                        }, 200);
                        sender.setTitleColor(cc.color(G.gc.COLOR.n13));
                        return;
                    } else {
                        refTimer(sender,time);
                    }
                }, 1000)
            }
            //增加次数
            me.nodes.btn_jia.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    function callback(num) {
                        G.ajax.send('zypkjjc_buypknum', [num], function (d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                // G.tip_NB.show(L('GOUMAI') + L('SUCCESS'));
                                if (d.d.prize) {
                                    G.frame.jiangli.data({
                                        prize: [].concat(d.d.prize)
                                    }).once('show', function () {
                                        G.frame.iteminfo_plgm.remove();
                                        me.setTzNum();
                                        me.refreshEnemys();
                                    }).show();
                                }
                            }
                        }, true);
                    }

                    G.frame.iteminfo_plgm.data({
                        buy: G.class.jingjichang.get().base.pkneed[0],
                        num: 0,
                        buyneed: G.class.jingjichang.get().base.buyneed,
                        callback: callback
                    }).show();
                }
            });

            //隐藏宝箱
            me.nodes.panel_bxjl.hide();
        },
        onOpen: function() {
            var me = this;

            me.bindBTN();
        },
        onShow: function() {
            var me = this;

            me.refreshPanel();

            G.frame.jingjichang_guanjunshilian.onnp('updateInfo', function(d) {
                if (G.frame.jingjichang_guanjunshilian.curType == me._type) {
                    me.refreshPanel();
                } else {
                    me._needRefresh = true;
                }
            }, me.getViewJson());
        },
        onRemove: function() {
            var me = this;
            me.event.emit('hide');
            if (me.refTimer) {
                clearInterval(me.refTimer);
                delete me.refTimer;
            }
        },
        setContents: function() {
            var me = this;

            me.setDjs();
            me.setBaseInfo();
            me.setMyRank();
            me.setTzNum();
            // me.setBoxPrize();
            G.frame.jingjichang_guanjunshilian.getEnemyData(1, function() {
                me.setEnemy();
            });
        },
        onNodeShow: function() {
            var me = this;

            if (me._needRefresh) {
                delete me._needRefresh;
                me.refreshPanel();
            }
        },
        setBaseInfo: function() {
            var me = this;

            var btnSx = me.nodes.btn_sx;
            btnSx.setBright(true);
            if (!me.isFighting) {
                btnSx.setBright(false);
            }
        },
        // 刷新敌人信息
        refreshEnemys: function() {
            var me = this;

            G.frame.jingjichang_guanjunshilian.getEnemyData(1, function() {
                // G.tip_NB.show(L('SHUAXIN') + L('SUCCESS'));
                me.setEnemy();
            });
        },
        //活动倒计时
        setDjs: function() {
            var me = this;

            var txtTimeStr1 = me.ui.finds('text_susj');
            var txtTime1 = me.nodes.text_sj;

            var zeroTime = X.getLastMondayZeroTime();
            var openDuration = G.class.jingjichang.get().base.closetime;

            if (me.timer1) {
                txtTime1.clearTimeout(me.timer1);
                delete me.timer1;
            }
            if (me.isFighting) delete me.isFighting;

            if (G.time > zeroTime + openDuration) {
                //休息时间
                G.frame.jingjichang.isFight = false;
                txtTimeStr1.setString(L('OPEN_TO_STAR') + '：');
                me.timer1 = X.timeout(txtTime1, zeroTime + 7 * 24 * 60 * 60, function() {
                    me.refreshPanel();
                }, null, null);
            } else {
                me.isFighting = true;
                //活动时间
                G.frame.jingjichang.isFight = true;
                txtTimeStr1.setString(L('OPEN_TO_END') + '：');
                me.timer1 = X.timeout(txtTime1, zeroTime + openDuration, function() {
                    if(G.frame.fight.isShow){
                        G.frame.fight.once("hide", function () {
                            X.uiMana.closeAllFrame();
                        });
                    }else {
                        X.uiMana.closeAllFrame();
                    }
                }, null, null);
            }
        },
        setMyRank: function() {
            var me = this;

            var panel = me.ui.finds('panel_wdxx');
            X.autoInitUI(panel);

            var layIco = panel.nodes.panel_wdtx;
            var txtRank = panel.nodes.text_pm;
            var txtScore = panel.nodes.text_jf;
            var txtZdl = panel.nodes.text_zdl1;

            layIco.removeAllChildren();

            var data = G.frame.jingjichang_guanjunshilian.DATA;

            var wid = G.class.shead(P.gud);
            wid.setPosition(cc.p(layIco.width / 2, layIco.height / 2));
            layIco.addChild(wid);
            txtRank.setString(data.myrank || 0);
            txtScore.setString(data.jifen);
            txtZdl.setString(data.zhanli || 0);
        },
        setTzNum: function() {
            var me = this;

            var txtTzNum = me.ui.finds('panel_wdxx').finds('text_tzjsl$');

            var need = G.class.jingjichang.get().base.pkneed;

            var ownNum = me.ownNum = G.class.getOwnNum(need[0].t, need[0].a);
            txtTzNum.setString(ownNum);
            // setTextWithColor(txtTzNum,ownNum,G.gc.COLOR[ownNum >= need[0].n ? 'n1' : 5]);
        },
        setEnemy: function() {
            var me = this;

            var lay;
            var layArr = [me.nodes.panel_lb1, me.nodes.panel_lb2, me.nodes.panel_lb3];
            for (var i = 0; i < layArr.length; i++) {
                lay = layArr[i];
                lay.removeAllChildren();
            }

            var item = me.nodes.list_lb;
            item.hide();

            var enemyData = G.frame.jingjichang_guanjunshilian.enemyData || [];

            if (enemyData.length < 1) {
                cc.sys.isObjectValid(me.ui.finds('img_zwnr')) && me.ui.finds('img_zwnr').show();
                return;
            } else {
                cc.sys.isObjectValid(me.ui.finds('img_zwnr')) && me.ui.finds('img_zwnr').hide();
            }

            for (var i = 0; i < enemyData.length; i++) {
                lay = layArr[i];
                var data = enemyData[i];
                var wid = item.clone();
                wid.setPosition(cc.p(0, 0));
                lay.addChild(wid);
                wid.show();
                me.setItem(wid, data);
            }
        },
        setItem: function(ui, data) {
            var me = this;

            X.autoInitUI(ui);
            var layIco = ui.nodes.panel_tx;
            var txtName = ui.nodes.text_mz;
            var txtZdl = ui.nodes.text_zdl2;
            var txtScore = ui.nodes.text_jf;
            var btnFight = ui.nodes.btn_zd;
            var txtNeed = ui.nodes.text_tzjsl;
            ui.finds('img_dk').setColor(cc.color('#EDE4D0'));
            txtNeed.setTextColor(cc.color(G.gc.COLOR.n5));
            X.enableOutline(txtNeed,'#4A1D09',2);

            layIco.removeAllChildren();

            var wid = G.class.shead(data.headdata);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);
            txtName.setString(data.headdata.name);
            // txtZdl.setString(data.headdata.zhanli || 0);
            txtZdl.setString(data.zhanli || 0);
            txtScore.setString(data.jifen);

            var pkNeedNum = G.frame.jingjichang_guanjunshilian.DATA.freenum > 0 ? 0 : G.class.championtrial.get().base.pkneed[0].n;
            var ownNum = me.ownNum;
            setTextWithColor(txtNeed, pkNeedNum, G.gc.COLOR[ownNum >= pkNeedNum ? 'n1' : 5]);

            btnFight.setBright(true);
            if (!me.isFighting) {
                btnFight.setBright(false);
            }
            layIco.setTouchEnabled(true);
            layIco.setSwallowTouches(false);
            layIco.data = data.headdata.uid;
            layIco.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.wanjiaxinxi.data({
                        pvType: 'championtrial',
                        uid: sender.data
                    }).checkShow();
                }
            });
            btnFight.setTouchEnabled(G.frame.jingjichang.isFight);
            btnFight.setTouchEnabled(G.frame.jingjichang.isFight);
            btnFight.data = data;
            btnFight.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (!me.isFighting) {
                        G.tip_NB.show(L('JJC_FIGHT_OVER'));
                        return;
                    }

                    var need = G.class.championtrial.get().base.pkneed;
                    var pkNeedNum = G.frame.jingjichang_guanjunshilian.DATA.freenum > 0 ? 0 : need[0].n;
                    var ownNum = me.ownNum;
                    if (ownNum < pkNeedNum) {
                        function callback(num) {
                            G.ajax.send('zypkjjc_buypknum', [num], function (d) {
                                if (!d) return;
                                var d = JSON.parse(d);
                                if (d.s == 1) {
                                    // G.tip_NB.show(L('GOUMAI') + L('SUCCESS'));
                                    if (d.d.prize) {
                                        G.frame.jiangli.data({
                                            prize: [].concat(d.d.prize)
                                        }).once('show', function () {
                                            G.frame.iteminfo_plgm.remove();
                                            me.setTzNum();
                                        }).show();
                                    }
                                }
                            }, true);
                        }

                        G.frame.iteminfo_plgm.data({
                            buy: G.class.jingjichang.get().base.pkneed[0],
                            num: 0,
                            buyneed: G.class.jingjichang.get().base.buyneed,
                            callback: callback
                        }).show();
                        return;
                    }
                    G.frame.jingjichang_gjfight.data({
                        type: 'pvzyjjc',
                        data: sender.data.headdata.uid,
                        callback: function(node) {
                            var data = node.getDefendData();

                            G.ajax.send("championtrial_fight", [sender.data.headdata.uid, data], function(d) {
                                if (!d) return;
                                var d = JSON.parse(d);
                                if (d.s == 1) {
                                    X.cacheByUid('fight_gj_ready', data);

                                    G.frame.fight.data({
                                        pvType: 'pvgjjjc',
                                        prize: d.d.prize,
                                        session: 0,
                                        fightlength: d.d.fightres.length,
                                        fightData: d.d,
                                        callback: function(session) {
                                            G.frame.fight.demo(d.d.fightres[session]);
                                            if (session == d.d.fightres.length - 1) {
                                            	G.frame.fight_win_battle.remove();
                                            	G.frame.fight_fail_battle.remove();

                                                if (d.d.fightres[session].winside == 0) {
                                                    G.frame.fight_win_battle.once('in_over', function () {
                                                        G.frame.fanpai.data(d.d.flop).show();
                                                    });
                                                } else {
                                                    G.frame.fight_fail_battle.once('in_over', function () {
                                                        G.frame.fanpai.data(d.d.flop).show();
                                                    });
                                                }
                                            }
                                        },
                                        endcallback: function() {
                                            // G.frame.jingjichang_guanjunshilian.getData(function() {
                                            //     me.nodes.btn_zyjj.triggerTouch(ccui.Widget.TOUCH_ENDED);
                                            // });
                                        }
                                    }).once('show', function() {
                                        G.frame.jingjichang_gjfight.remove();
                                        //刷新
                                        G.frame.jingjichang_guanjunshilian.getData(function() {
                                            G.frame.jingjichang_guanjunshilian._panels['1'].refreshPanel();
                                        });

                                        // G.frame.jingjichang_guanjunshilian._panels['1'].refreshEnemys();

                                    }).demo(d.d.fightres[0]);
                                }
                            }, true);
                        }
                    }).show();
                }
            });

            ui.show();
        },
        //宝箱奖励
        setBoxPrize: function() {
            var me = this;

            me.setFightNum();

            var listview = me.nodes.listview_bx;
            listview.removeAllChildren();
            cc.enableScrollBar(listview);
            var list = me.nodes.list_bx;
            list.hide();

            var conf = G.class.jingjichang.get().base.passprize;

            for (var i = 0; i < conf.length; i++) {
                var p = conf[i];
                var item = list.clone();
                item.data = p;
                item.idx = i;
                me.setItemBx(item);
                listview.pushBackCustomItem(item);
            }

            listview.jumpToRight();
        },
        setItemBx: function(item) {
            var me = this;

            X.autoInitUI(item);
            var layIco = item.nodes.panel_bx;
            var txtNum = item.nodes.text_cs2;
            var imgYlq = item.nodes.img_ylq;


            var myFightNum = G.frame.jingjichang_guanjunshilian.DATA.pknum || 0;
            // myFightNum = 100;

            var prizelist = G.frame.jingjichang_guanjunshilian.DATA.prizelist || [];
            var data = item.data;
            var idx = item.idx;

            imgYlq.hide();

            layIco.setTouchEnabled(false);
            layIco.setBackGroundImage('img/jingjichang/img_jjc_bx' + me.extConf.box.idx[idx] + '.png', 1);
            txtNum.setString(data[0][0]);

            //todo 去掉红点

            var lqState = 'yulan';
            if (X.inArray(prizelist, data[0][0])) {
                imgYlq.show();
                lqState = 'chakan'
            } else {
                if (myFightNum >= data[0][0]) {
                    //显示红点
                    lqState = 'lq';
                }
            }

            item.lqstate = lqState;
            item.setTouchEnabled(true);
            item.setSwallowTouches(false);
            item.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var prize = sender.data[1];
                    if (sender.lqstate == 'yulan' || sender.lqstate == 'chakan') {
                        G.frame.jiangliyulan.data({
                            title: sender.lqstate = 'yulan' ? L('JLYL') : L('JLCK'),
                            prize: [].concat(prize)
                        }).show();
                    } else if (sender.lqstate == 'lq') {
                        G.ajax.send('zypkjjc_getprize', [sender.data[0][0]], function(d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                G.frame.jingjichang_guanjunshilian.DATA.prizelist = d.d.prizelist;
                                me.setItemBx(sender);
                                G.frame.jiangli.data({
                                    prize: [].concat(prize)
                                }).show();
                            }
                        }, true);
                    }
                }
            });

            item.show();
        },
        setFightNum: function() {
            var me = this;

            var panel = me.nodes.panel_bxjl;
            panel.hide();
            // var txtNum = panel.finds('text_cs$');

            // var data = G.frame.jingjichang_guanjunshilian.DATA;
            // txtNum.setString(data.pknum || 0);
        },
    });

})();

;;/**
 * Created by lsm on 2018/6/23
 */
(function () {
    //冠军试炼-选择
    G.class.jingjichang_gjxuanzhe = X.bView.extend({
        extConf:{
            fight:{
                data: function (type) {
                    var data = G.DATA.yingxiong.list;
                    var keys = X.keysOfObject(data);

                    var arr = [];
                    if (type == 0) {
                        arr = keys;
                    } else {
                        for (var i = 0; i < keys.length; i++) {
                            var tid = keys[i];
                            var heroData = data[tid];
                            if (heroData.zhongzu == type) {
                                arr.push(tid);
                            }
                        }
                    }

                    return arr;
                },
                sort: function (a,b) {
                    var dataA = G.DATA.yingxiong.list[a];
                    var dataB = G.DATA.yingxiong.list[b];
                    var zz = {
                        5:0, //神圣
                        6:1, //暗影
                        4:2, //自然
                        3:4, //邪能
                        2:5, //奥术
                        1:6 //亡灵
                    };


                    if (dataA.star != dataB.star) {
                        return dataA.star > dataB.star ? -1 : 1;
                    } else if (dataA.lv != dataB.lv) {
                        return dataA.lv > dataB.lv ? -1 : 1;
                    } else if (dataA.zhongzu != dataB.zhongzu) {
                        return zz[dataA.zhongzu] < zz[dataB.zhongzu] ? -1 : 1;
                    } else if (dataA.hid != dataB.hid) {
                        return dataA.hid < dataB.hid ? -1 : 1;
                    }
                }
            }
        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('ui_tip3_shang.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
        },
        bindBTN: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;

            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.createMenu();
            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var cache = G.frame.wangzherongyao.isShow ? X.cacheByUid("pvwz") : X.cacheByUid('fight_gjjjc');
            var cacheArr = [];
            if (cache) {
                for (var id in cache) {
                    var tid = cache[id];
                    if (G.DATA.yingxiong.list[tid]) {
                        cacheArr.push(tid);
                    }
                }
            }

            me.selectedData = cacheArr;
            var type = me.curType || 0;
            me._menus[type].triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        createMenu: function () {
            var me = this;

            var view = me;
            me._menus = [];
            var listview = view.nodes.listview_zz;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();
            view.nodes.list_ico.hide();

            //图标中，1指的是全部
            for (var i = 0; i < 7; i++) {
                var list_ico = view.nodes.list_ico.clone();
                X.autoInitUI(list_ico);
                list_ico.nodes.panel_zz.setTouchEnabled(false);
                list_ico.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (i + 1) + '.png', 1);
                list_ico.nodes.panel_zz.setScale(0.8);
                list_ico.show();

                list_ico.data = i;
                list_ico.setTouchEnabled(true);

                list_ico.click(function(sender, type){
                    for(var j=0;j<me._menus.length;j++){
                        var node = me._menus[j];
                        var img = 'img/public/ico/ico_zz' + (node.data + 1) + '.png';
                        if(node.data == sender.data){
                            if(me.effect) X.audio.playEffect("sound/dianji.mp3",false);
                            me.effect=true;
                            me.curType = sender.data;
                            me.fmtItemList();
                            img = 'img/public/ico/ico_zz' + (node.data + 1) + '_g.png';
                            if(sender.ani) {
                                sender.ani.show();
                            }else {
                                G.class.ani.show({
                                    json:"ani_guangbiaoqiehuan",
                                    addTo:sender,
                                    x:sender.width / 2,
                                    y:sender.height /2,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node) {
                                        sender.ani = node;
                                    }
                                })
                            }
                        }else{
                            //node.nodes.img_yuan_xz.hide();
                            if(node.ani) node.ani.hide();
                        }
                        node.nodes.panel_zz.setBackGroundImage(img,1);
                    }
                });

                me._menus.push(list_ico);
                listview.pushBackCustomItem(list_ico);
                list_ico.show();
            }
        },
        fmtItemList: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();
            me.nodes.list.hide();

            var d = me.extConf[me._type].data(me.curType);

            if (d.length < 1) {
                me.ui.finds('img_zwnr').show();
                return;
            } else {
                me.ui.finds('img_zwnr').hide();
            }

            d.sort(me.extConf[me._type].sort);

            var table = me.table = new X.TableView(scrollview,me.nodes.list,5, function (ui, data) {
                me.setItem(ui, data);
            },null,null,1, 5);
            table.setData(d);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            var heroData = G.DATA.yingxiong.list[data];
            ui.setName(heroData.hid);

            var widget = G.class.shero(heroData);
            widget.setName('widget');
            widget.setScale(0.95);
            widget.setAnchorPoint(0.5,1);
            widget.setPosition(cc.p( ui.nodes.panel_ico.width*0.5, ui.nodes.panel_ico.height ));
            ui.nodes.panel_ico.removeAllChildren();
            ui.nodes.panel_ico.addChild(widget);

            ui.nodes.panel_ico.setTouchEnabled(false);
            ui.nodes.panel_ico.show();

            var imgGou = ui.nodes.img_gou;
            imgGou.setAnchorPoint(0.5,0.5);
            imgGou.setPosition(imgGou.width/2, imgGou.height/2);
            imgGou.setScale(.95);
            // 任务中
            var imgRwz = ui.nodes.img_rwz;

            imgGou.hide();
            imgRwz.hide();

            if (X.inArray(me.selectedData,data)) {
                imgGou.show();
                imgGou.setBright(false);
            }

            ui.data = data;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE){
                    if (X.inArray(me.selectedData, sender.data)) {
                        sender.nodes.img_gou.hide();
                        me.selectedData.splice(X.arrayFind(me.selectedData,sender.data),1);
                        G.frame.jingjichang_gjfight.top.removeItem(sender.data);
                    } else {
                        if (me.selectedData.length >= 18) {
                            G.tip_NB.show(L('YX_FIGHT_XZ_FULL'));
                            return;
                        }
                        me.selectedData.push(sender.data);
                        sender.nodes.img_gou.show();
                        G.frame.jingjichang_gjfight.top.addItem(sender.data);
                    }
                }
            });

            ui.show();
        },
        removeGou: function (tid) {
            var me = this;

            var children = me.table.getAllChildren();
            for (var i = 0; i < children.length; i++) {
                var child = children[i];
                if (child.isVisible() && child.data == tid) {
                    child.nodes.img_gou.hide();
                    break;
                }
            }
        },
    });

})();

;;/**
 * Created by lsm on 2018/6/22.
 */
(function() {
    //冠军的试炼
    var ID = 'jingjichang_guanjunshilian';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id, {
                action: true
            });
        },
        initUi: function() {
            var me = this;
            me.setBlackFrame();
            X.radio([me.nodes.btn_zyjj, me.nodes.btn_phb], function(sender) {
                var name = sender.getName();
                var name2type = {
                    btn_zyjj$: 1,
                    btn_phb$: 2
                };

                me.changeType(name2type[name]);
            });
        },
        setBlackFrame: function() {
            var me = this;
            var blackFrame = new ccui.Layout();
            var winsize = cc.director.getWinSize();
            blackFrame.setContentSize(winsize);
            blackFrame.setBackGroundColor(C.color('#000000'));
            blackFrame.setBackGroundColorOpacity(255 * 0.7);
            blackFrame.setBackGroundColorType(ccui.Layout.BG_COLOR_SOLID);
            me.ui.addChild(blackFrame, -1);
        },
        bindBtn: function() {
            var me = this;

            //竞技奖励
            me.nodes.btn_jjjl.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.jingjichang_gj_prize.show();
                }
            });
            //战斗记录
            me.nodes.btn_zdjl.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.jingjichang_gj_fightreport.show();
                }
            });
            //防守阵容
            me.nodes.btn_fszr.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.setFSSZ();
                }
            });
            //返回
            me.nodes.btn_fh.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
            //介绍
            me.nodes.btn_bz.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.help.data({
                        intr: L('TS9')
                    }).show();
                }
            });

            var isopen = me.data();
            if (!isopen) {
                me.nodes.btn_fszr.setBright(false);
                me.nodes.btn_zdjl.setBright(false);
                me.nodes.btn_zdjl.setTouchEnabled(false);
                me.nodes.btn_fszr.setTouchEnabled(false);
            }

            //按钮名字
            me.nodes.text_zzjjc.setString(L('BTN_NAME_' + ID));
        },
        onOpen: function() {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function() {
            var me = this;
        },
        show: function(conf) {
            var me = this;
            var _super = this._super;
            me.getData(function() {
                me.getRankData(function() {
                    _super.apply(me, arguments);
                });
            });
        },
        onShow: function() {
            var me = this;
            me.showToper();
            me.showMainMenu();
            me.showPanel();
        },
        showPanel: function() {
            var me = this;
            var isopen = me.data();
            if (!isopen) {
                me.nodes.btn_phb.triggerTouch(ccui.Widget.TOUCH_ENDED);
                me.nodes.btn_zyjj.setColor(cc.color('#999999'));
                me.nodes.btn_zyjj.setTouchEnabled(false);
            } else {
                me.nodes.btn_zyjj.triggerTouch(ccui.Widget.TOUCH_ENDED);
            }
        },
        getRankData: function(callback) {
            var me = this;
            G.ajax.send('rank_open', [4], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.rankData = d.d;
                    callback && callback();
                }
            });
        },
        onHide: function() {
            var me = this;
        },
        getData: function(callback, errCall) {
            var me = this;

            G.ajax.send('championtrial_open', [], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                } else {
                    errCall && errCall();
                }
            }, true);
        },
        getEnemyData: function(type, callback) {
            var me = this;

            //type 0 不刷新，1刷新
            G.ajax.send('championtrial_choose', [type], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.enemyData = d.d.list;
                    callback && callback();
                }
            });
        },
        setContents: function() {
            var me = this;

        },
        changeType: function(type) {
            var me = this;

            if (me.curType && me.curType == type) {
                return;
            }

            me.curType = type;

            var viewConf = {
                "1": G.class.jingjichang_gjpk,
                "2": G.class.jingjichang_phb,
            };
            me._panels = me._panels || {};
            for (var _type in me._panels) {
                cc.isNode(me._panels[_type]) && me._panels[_type].hide();
            }
            if (!cc.isNode(me._panels[type])) {
                me._panels[type] = new viewConf[type](type);
                me.ui.nodes.panel_nr.addChild(me._panels[type]);
            }
            me._panels[type].show();
        },
        checkShow: function() {
            var me = this;

            me.getData(function() {
                me.once('show', function() {
                    // me.DATA.zhanli = 0;
                    me.checkIsShowFSZR();
                }).show();
            });
        },
        //判断是否显示防守阵容
        checkIsShowFSZR: function() {
            var me = this;

            var data = me.DATA;
            if (data.defhero.length < 1) {
                me.setFSSZ();
            }
        },
        //设置防守部队
        setFSSZ: function() {
            var me = this;

            G.frame.jingjichang_gjfight.once('show', function() {
                G.frame.jingjichang_gjfight.ui.nodes.mask.touch(function(sender, type) {
                    if (type == ccui.Widget.TOUCH_ENDED) {
                        var defData = G.frame.jingjichang_gjfight.top.getDefendData();
                        var count = 0;
                        for (var k in defData) {
                            if (!defData[k]) {
                                count++
                            }
                        };
                        if (count < 3) {
                            if (me.DATA.defhero < 1) {
                                G.frame.jingjichang_gjfight.remove();
                                G.frame.jingjichang_guanjunshilian.remove();
                            } else {
                                G.frame.jingjichang_gjfight.remove();
                            }
                        } else {
                            G.frame.jingjichang_gjfight.remove();
                        }
                    }
                });
            }).data({
                type: 'defend',
                defendData: me.DATA.defhero,
                callback: function(node) {
                    var data = node.getDefendData();
                    if (data.length < 3) {
                        G.tip_NB.show(L('championtrial_defend_erro'));
                    } else {
                        G.ajax.send('championtrial_defend', [data], function(d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                X.cacheByUid('fight_gjjjc', data);
                                G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                                G.frame.jingjichang_gjfight.remove();
                                me.getData(function() {
                                    me._panels[me.curType].refreshPanel();
                                });
                            }
                        }, true);
                    }

                }
            }).show();
        }
    });

    G.frame[ID] = new fun('jingjichang_bg.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/19.
 */
(function() {
    //自由竞技场-排行榜
    G.class.jingjichang_phb = X.bView.extend({
        ctor: function(type) {
            var me = this;
            me._type = type;
            me._super('jingjichang_phb.json');
        },
        refreshPanel: function() {
            var me = this;

            me.getData(function() {
                me.setContents();
            });
        },
        bindBTN: function() {
            var me = this;

        },
        onOpen: function() {
            var me = this;
            me.DATA = G.frame.jingjichang_freepk.isShow ? G.frame.jingjichang_freepk.rankData : G.frame.jingjichang_guanjunshilian.rankData;
            me.bindBTN();
        },
        onShow: function(data) {
            var me = this;
            me.setContents();
        },
        onRemove: function() {
            var me = this;
        },
        getData: function(callback) {
            var me = this;
            G.ajax.send('rank_open', [G.frame.jingjichang_freepk.isShow ? 3 : 4], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function() {
            var me = this;

            me.setMyRank();
            me.setTable();
        },
        setMyRank: function() {
            var me = this;

            var panel = me.ui.finds('panel_wdxx');
            X.autoInitUI(panel);

            var layIco = panel.nodes.panel_tx;
            var txtRank = panel.nodes.text_pm;
            var txtScore = panel.nodes.text_jf;
            var txtZdl = panel.nodes.text_zdl1;

            layIco.removeAllChildren();

            var data = G.frame.jingjichang_freepk.isShow ? G.frame.jingjichang_freepk.DATA : G.frame.jingjichang_guanjunshilian.DATA;

            var wid = G.class.shead(P.gud);
            wid.setPosition(cc.p(layIco.width / 2, layIco.height / 2));
            layIco.addChild(wid);

            txtRank.setString(data.myrank || 0);
            txtScore.setString(data.jifen);
            txtZdl.setString(data.zhanli || 0);
        },
        setTable: function() {
            var me = this;

            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var ranklist = [].concat(me.DATA.ranklist);
            if (ranklist.length < 1) {
                me.nodes.img_zwnr.show();
                return;
            } else {
                me.nodes.img_zwnr.hide();
            }

            for (var i = 0; i < ranklist.length; i++) {
                ranklist[i].rank = i + 1;
            }

            // for (var i = 0; i < ranklist.length; i++) {
            //     me.setItem(me.nodes.list_lb.clone(), ranklist[i]);
            // }
            //
            // // if (ranklist.length > 5) {
            // //     for (var i = 0; i < 5; i++) {
            // //         me.setItem(me.nodes.list_lb.clone(), ranklist[i]);
            // //     }
            // //     me.ui.setTimeout(function() {
            // //         for (var i = 6; i < ranklist.length; i++) {
            // //             me.setItem(me.nodes.list_lb.clone(), ranklist[i]);
            // //         }
            // //     }, 200)
            // // } else {
            //
            // // }


            var table = me.table = new X.TableView(scrollview,me.nodes.list_lb,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,12);
            table.setData(ranklist);
            table.reloadDataWithScroll(true);
        },
        setItem: function(ui, data) {
            var me = this;

            X.autoInitUI(ui);
            var layIco = ui.nodes.panel_tx;
            var layPm = ui.nodes.panel_pm;
            var txtPm = ui.nodes.sz_phb;
            var txtName = ui.nodes.text_mz;
            var txtZl = ui.nodes.text_zdl2;
            var txtScore = ui.nodes.text_jf;
            ui.finds('img_dk').setColor(cc.color('#EDE4D0'));


            layPm.hide();
            txtPm.setString('');
            txtPm.hide();
            layIco.removeAllChildren();
            layPm.setTouchEnabled(false);
            ui.setTouchEnabled(false);

            //排名
            if (data.rank < 4) {
                layPm.show();
                layPm.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
            } else {
                txtPm.setString(data.rank);
                txtPm.show();
            }

            var wid = G.class.shead(data.headdata);
            wid.setPosition(cc.p(layIco.width / 2, layIco.height / 2));
            layIco.addChild(wid);

            layIco.setTouchEnabled(true);
            layIco.setSwallowTouches(false);
            layIco.data = data.headdata.uid;
            layIco.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.wanjiaxinxi.data({
                        pvType: G.frame.jingjichang_freepk.isShow ? 'zypkjjc' : 'championtrial',
                        uid: sender.data
                    }).checkShow();
                }
            });

            txtName.setString(data.headdata.name);
            txtZl.setString(data.zhanli || 0);
            txtScore.setString(data.jifen || 0);

            ui.show();
        },
        onNodeShow: function() {
            var me = this;

            if (!cc.isNode(me.ui)) {
                return;
            }
            me.refreshPanel();
        }
    });

})();
;;/**
 * Created by wfq on 2018/6/19.
 */
(function() {
    //自由竞技场
    G.class.jingjichang_pk = X.bView.extend({
        extConf: {
            box: {
                idx: [1, 1, 2, 2, 3, 3, 3]
            }
        },
        ctor: function(type) {
            var me = this;
            me._type = type;
            me._super('jingjichang_zyjj.json');
        },
        refreshPanel: function(d) {
            var me = this;

            me.setContents(d);
        },
        bindBTN: function() {
            var me = this;

            //刷新
            me.nodes.btn_sx.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (!G.frame.jingjichang_freepk.isFight) {
                        G.tip_NB.show(L('JJC_FIGHT_OVER'));
                        return;
                    }

                    if (!me.isRefreshEnemy) {
                        me.isRefreshEnemy = true;
                        me.refreshEnemys();
                        var time = 3;
                        refTimer(sender,time);
                    }


                }
            });

            function refTimer(sender,time) {
                sender.setEnableState(false);
                sender.setTitleText(time + 's');
                sender.setTitleColor(cc.color(G.gc.COLOR.n15));
                me.ui.setTimeout(function() {
                    time--;
                    cc.isNode(sender) && sender.setTitleText(L('BTN_SX'));
                    sender.setEnableState(true);
                    if (time <= 0) {
                        me.ui.setTimeout(function() {
                            delete me.isRefreshEnemy;
                        }, 200)
                        sender.setTitleColor(cc.color(G.gc.COLOR.n13));
                        return;
                    } else {
                        refTimer(sender,time);
                    }
                }, 1000)
            }
            //增加次数
            me.nodes.btn_jia.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    function callback(num) {
                        G.ajax.send('zypkjjc_buypknum', [num], function(d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                // G.tip_NB.show(L('GOUMAI') + L('SUCCESS'));
                                if (d.d.prize) {
                                    G.frame.jiangli.data({
                                        prize: [].concat(d.d.prize)
                                    }).once('show', function() {
                                        G.frame.iteminfo_plgm.remove();
                                        me.setTzNum();
                                        me.refreshEnemys();
                                    }).show();
                                }
                            }
                        }, true);
                    }
                    G.frame.iteminfo_plgm.data({
                        buy: G.class.jingjichang.get().base.pkneed[0],
                        num: 0,
                        buyneed: G.class.jingjichang.get().base.buyneed,
                        callback: callback
                    }).show();


                }
            });
        },
        onOpen: function() {
            var me = this;

            me.bindBTN();
        },
        onShow: function() {
            var me = this;

            me.refreshPanel();

            G.frame.jingjichang_freepk.onnp('updateInfo', function(d) {
                if (G.frame.jingjichang_freepk.curType == me._type) {
                    me.refreshPanel(d);
                } else {
                    me._needRefresh = true;
                }
            }, me.getViewJson());
        },
        onRemove: function() {
            var me = this;

            if (me.refTimer) {
                clearInterval(me.refTimer);
                delete me.refTimer;
            }
        },
        setContents: function(d) {
            var me = this;

            me.setDjs();
            me.setBaseInfo();
            me.setMyRank();
            me.setTzNum();
            me.setBoxPrize();
            G.frame.jingjichang_freepk.getEnemyData(d ? 1 : 0, function() {
                me.setEnemy();
            });
        },
        onNodeShow: function() {
            var me = this;

            if (me._needRefresh) {
                delete me._needRefresh;
                me.refreshPanel();
            }
        },
        setBaseInfo: function() {
            var me = this;

            var btnSx = me.nodes.btn_sx;
            btnSx.setBright(true);
            if (!G.frame.jingjichang_freepk.isFight) {
                btnSx.setBright(false);
            }
        },
        // 刷新敌人信息
        refreshEnemys: function() {
            var me = this;

            G.frame.jingjichang_freepk.getEnemyData(1, function() {
                // G.tip_NB.show(L('SHUAXIN') + L('SUCCESS'));
                me.setEnemy();
            });
        },
        //活动倒计时
        setDjs: function() {
            var me = this;

            var txtTimeStr1 = me.ui.finds('text_susj');
            var txtTime1 = me.nodes.text_sj;
            txtTime1.setFontName(G.defaultFNT);

            var zeroTime = X.getLastMondayZeroTime();
            var openDuration = G.class.jingjichang.get().base.closetime;

            if (me.timer1) {
                txtTime1.clearTimeout(me.timer1);
                delete me.timer1;
            }
            if (me.isFighting) delete me.isFighting;

            if (G.time > zeroTime + openDuration) {
                //休息时间
                txtTimeStr1.setString(L('OPEN_TO_STAR') + '：');
                me.timer1 = X.timeout(txtTime1, zeroTime + 7 * 24 * 60 * 60, function() {
                    me.refreshPanel();
                    G.frame.jingjichang_freepk.isFight = true;
                }, null, null);
            } else {
                //活动时间
                txtTimeStr1.setString(L('OPEN_TO_END') + '：');
                me.timer1 = X.timeout(txtTime1, zeroTime + openDuration, function() {
                    if(G.frame.fight.isShow){
                        G.frame.fight.once("hide", function () {
                            X.uiMana.closeAllFrame();
                        });
                    }else {
                        X.uiMana.closeAllFrame();
                    }
                }, null, null);
            }
        },
        setMyRank: function() {
            var me = this;

            var panel = me.ui.finds('panel_wdxx');
            X.autoInitUI(panel);

            var layIco = panel.nodes.panel_wdtx;
            // var txtLv = panel.nodes.text_dj;
            var txtRank = panel.nodes.text_pm;
            var txtScore = panel.nodes.text_jf;
            var txtZdl = panel.nodes.text_zdl1;

            layIco.removeAllChildren();

            var data = G.frame.jingjichang_freepk.DATA;

            var wid = G.class.shead(P.gud);
            wid.setPosition(cc.p(layIco.width / 2, layIco.height / 2));
            layIco.addChild(wid);

            // txtLv.setString(P.gud.lv);
            txtRank.setString(data.myrank || 0);
            txtScore.setString(data.jifen || 1000);
            txtZdl.setString(data.zhanli || 0);
        },
        setTzNum: function() {
            var me = this;

            var txtTzNum = me.ui.finds('panel_wdxx').finds('text_tzjsl$');

            var need = G.class.jingjichang.get().base.pkneed;

            var ownNum = me.ownNum = G.class.getOwnNum(need[0].t, need[0].a);
            txtTzNum.setString(ownNum);
            // setTextWithColor(txtTzNum,ownNum,G.gc.COLOR[ownNum >= need[0].n ? 'n1' : 5]);
        },
        setEnemy: function() {
            var me = this;

            var lay;
            var layArr = [me.nodes.panel_lb1, me.nodes.panel_lb2, me.nodes.panel_lb3];
            for (var i = 0; i < layArr.length; i++) {
                lay = layArr[i];
                lay.removeAllChildren();
            }

            var item = me.nodes.list_lb;
            item.hide();

            var enemyData = G.frame.jingjichang_freepk.enemyData || [];

            if (enemyData.length < 1) {
                me.nodes.img_zwnr.show();
                return;
            } else {
                me.nodes.img_zwnr.hide();
            }

            for (var i = 0; i < enemyData.length; i++) {
                lay = layArr[i];
                var data = enemyData[i];
                var wid = item.clone();
                wid.setPosition(cc.p(0, 0));
                lay.addChild(wid);
                if(G.frame.jingjichang_freepk.isSX){
                    G.class.ani.show({
                        json: "ani_shuaxin",
                        addTo: wid,
                        x: wid.width / 2,
                        y: wid.height / 2,
                        repeat: false,
                        autoRemove: true
                    });
                }
                wid.show();
                me.setItem(wid, data);
            }
            G.frame.jingjichang_freepk.isSX = false;
        },
        setItem: function(ui, data) {

            var me = this;

            X.autoInitUI(ui);
            var layIco = ui.nodes.panel_tx;
            var txtName = ui.nodes.text_mz;
            var txtZdl = ui.nodes.text_zdl2;
            var txtScore = ui.nodes.text_jf;
            var btnFight = ui.nodes.btn_zd;
            var txtNeed = ui.nodes.text_tzjsl;
            ui.finds('img_dk').setColor(cc.color('#EDE4D0'));
            layIco.removeAllChildren();

            var wid = G.class.shead(data.headdata);
            wid.setPosition(cc.p(layIco.width / 2, layIco.height / 2));
            layIco.addChild(wid);

            wid.data = data;
            wid.setTouchEnabled(true);
            wid.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.wanjiaxinxi.data({
                        pvType: 'zypkjjc',
                        uid: sender.data.headdata.uid
                    }).checkShow();
                }
            });

            txtName.setString(data.headdata.name);
            // txtZdl.setString(data.headdata.zhanli || 0);
            txtZdl.setString(data.zhanli || 0);
            //X.enableOutline(txtZdl, cc.color('#740000'), 1);
            txtScore.setString(data.jifen || 0);
            //X.enableOutline(txtScore, cc.color('#740000'), 1);
            txtName.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_LEFT);

            var pkNeedNum = G.frame.jingjichang_freepk.DATA.freenum > 0 ? 0 : G.class.jingjichang.get().base.pkneed[0].n;
            var ownNum = me.ownNum;
            setTextWithColor(txtNeed, pkNeedNum, G.gc.COLOR[ownNum >= pkNeedNum ? 'n1' : 'n16']);
            X.enableOutline(txtNeed, cc.color(ownNum >= pkNeedNum ? "#000000":'#740000'), 1);

            btnFight.setBright(G.frame.jingjichang_freepk.isFight);
            btnFight.setTouchEnabled(G.frame.jingjichang_freepk.isFight);
            btnFight.isopen = G.frame.jingjichang_freepk.isFight;
            btnFight.data = data;
            btnFight.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (sender.isopen == false) {
                        G.tip_NB.show(L('BLSJYJS'));
                        return;
                    }
                    var need = G.class.jingjichang.get().base.pkneed;
                    var pkNeedNum = G.frame.jingjichang_freepk.DATA.freenum > 0 ? 0 : need[0].n;
                    var ownNum = me.ownNum;
                    if (ownNum < pkNeedNum) {
                        function callback(num) {
                            G.ajax.send('zypkjjc_buypknum', [num], function(d) {
                                if (!d) return;
                                var d = JSON.parse(d);
                                if (d.s == 1) {
                                    // G.tip_NB.show(L('GOUMAI') + L('SUCCESS'));
                                    if (d.d.prize) {
                                        G.frame.jiangli.data({
                                            prize: [].concat(d.d.prize)
                                        }).once('show', function() {
                                            G.frame.iteminfo_plgm.remove();
                                            me.setTzNum();
                                        }).show();
                                    }
                                    me.refreshEnemys();
                                }
                            }, true);
                        }
                        G.frame.iteminfo_plgm.data({
                            buy: G.class.jingjichang.get().base.pkneed[0],
                            num: 0,
                            buyneed: G.class.jingjichang.get().base.buyneed,
                            callback: callback
                        }).show();
                        return;
                    }

                    G.frame.fight.startFight({}, function(node) {
                        var selectedData = node.getSelectedData();

                        G.ajax.send('zypkjjc_fight', [sender.data.headdata.uid, selectedData], function(d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                X.cacheByUid('fight_zyjjc', selectedData);
                                if (d.d.fightres.winside == 0) {
                                    G.frame.fight_win_battle.once('in_over', function () {
                                        G.frame.fanpai.data(d.d.flop).show();
                                    });
                                } else {
                                    G.frame.fight_fail_battle.once('in_over', function () {
                                        G.frame.fanpai.data(d.d.flop).show();
                                    });
                                }

                                G.frame.fight.data({
                                    pvType: 'pvjjc',
                                    prize: d.d.prize,
                                    fightData: d.d
                                }).once('show', function() {
                                    G.frame.yingxiong_fight.remove();

                                    // 不论胜负，都需要刷新界面
                                    //刷新
                                }).demo(d.d.fightres);

                                G.frame.jingjichang_freepk.getData(function () {
                                    me.setMyRank();
                                    me.refreshPanel(1);
                                    me.setTzNum();
                                    me.refreshEnemys();
                                })
                            }
                        }, true);
                    });


                    // G.frame.yingxiong_fight.data({
                    //     type:'pvzyjjc',
                    //     data:sender.data.headdata.uid,
                    //     callback: function (node) {
                    //         var selectedData = node.getSelectedData();
                    //
                    //         G.ajax.send("zypkjjc_fight", [sender.data.headdata.uid, selectedData], function (d) {
                    //             if (!d) return;
                    //             var d = JSON.parse(d);
                    //             if (d.s == 1) {
                    //                 // X.cacheByUid('fight_ready',data);
                    //
                    //                 G.frame.fight.data({
                    //                     prize: d.d.prize
                    //                 }).once('show', function () {
                    //                     G.frame.yingxiong_fight.remove();
                    //                     //刷新
                    //                     G.frame.jingjichang_freepk._panels['1'].refreshPanel();
                    //                     G.frame.jingjichang_freepk.getData(function () {
                    //                         G.frame.jingjichang_freepk._panels[me.curType].refreshPanel(1);
                    //                     });
                    //
                    //                 }).demo(d.d.fightres);
                    //             }
                    //         }, true);
                    //     }
                    // }).show();
                }
            });

            ui.show();
        },
        //宝箱奖励
        setBoxPrize: function() {
            var me = this;

            me.setFightNum();

            var listview = me.nodes.listview_bx;
            listview.removeAllChildren();
            cc.enableScrollBar(listview);
            var list = me.nodes.list_bx;
            list.hide();

            var conf = G.class.jingjichang.get().base.passprize;
            var myFightNum = G.frame.jingjichang_freepk.DATA.pknum || 0;

            for (var i = 0; i < conf.length; i++) {
                var p = conf[i];
                var item = list.clone();
                item.data = p;
                item.idx = i;
                me.setItemBx(item);
                listview.pushBackCustomItem(item);
            }

            for (var i = 1; i < conf.length; i ++) {
                var jdt = me.nodes["img_tiao" + i];
                if(conf[i - 1] && conf[i - 1][0][0] < myFightNum) {
                    jdt.setPercent(myFightNum / conf[i][0][0] * 100);
                } else {
                    jdt.setPercent(0);
                }
            }
        },
        setItemBx: function(item) {
            var me = this;

            X.autoInitUI(item);
            var layIco = item.nodes.panel_bx;
            var txtNum = item.nodes.text_cs2;
            var imgYlq = item.nodes.img_ylq;


            var myFightNum = G.frame.jingjichang_freepk.DATA.pknum || 0;
            // myFightNum = 100;

            var prizelist = G.frame.jingjichang_freepk.DATA.prizelist || [];
            var data = item.data;
            var idx = item.idx;

            imgYlq.hide();

            layIco.removeAllChildren();
            layIco.removeBackGroundImage();
            layIco.setTouchEnabled(false);
            txtNum.setString(data[0][0]);
            txtNum.setTextColor(cc.color(G.gc.COLOR.n5));
            X.enableOutline(txtNum,'#4A1D09',2);

            //todo 去掉红点

            var lqState = 'yulan';
            if (X.inArray(prizelist, idx)) {
                imgYlq.show();
                lqState = 'chakan';

                layIco.setBackGroundImage('img/jingjichang/img_jjc_bx' + me.extConf.box.idx[idx] + '_d.png', 1);
            } else {
                if (myFightNum >= data[0][0]) {
                    //显示红点
                    lqState = 'lq';

                    X.addBoxAni({
                        parent:layIco,
                        boximg:'img/jingjichang/img_jjc_bx' + me.extConf.box.idx[idx] + '.png'
                    });

                    // G.class.ani.show({
                    //     addTo:layIco,
                    //     json:'ani_baoxianglingqu',
                    //     x:layIco.width / 2,
                    //     y:layIco.height / 2,
                    //     repeat:true,
                    //     autoRemove:false,
                    //     onload: function (node,action) {
                    //         node.finds('baoxiang').setBackGroundImage('img/jingjichang/img_jjc_bx' + me.extConf.box.idx[idx] + '.png', 1);
                    //     }
                    // });
                } else {
                    layIco.setBackGroundImage('img/jingjichang/img_jjc_bx' + me.extConf.box.idx[idx] + '.png', 1);
                }
            }

            item.lqstate = lqState;
            item.setTouchEnabled(true);
            item.setSwallowTouches(false);
            item.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var prize = sender.data[1];
                    if (sender.lqstate == 'yulan' || sender.lqstate == 'chakan') {
                        G.frame.jiangliyulan.data({
                            title: sender.lqstate == 'yulan' ? L('JLYL') : L('JLCK'),
                            prize: [].concat(prize)
                        }).show();
                    } else if (sender.lqstate == 'lq') { //sender.data[0][0]
                        G.ajax.send('zypkjjc_getprize', [sender.idx], function(d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                G.frame.jingjichang_freepk.DATA.prizelist.push(sender.idx);
                                me.setItemBx(sender);
                                G.frame.jiangli.data({
                                    prize: [].concat(prize)
                                }).show();
                            }
                        }, true);
                    }
                }
            });

            item.show();
        },
        setFightNum: function() {
            var me = this;

            var panel = me.nodes.panel_bxjl;

            var txtNum = panel.finds('text_cs$');

            var data = G.frame.jingjichang_freepk.DATA;
            txtNum.setString(X.STR(L('YYC'),data.pknum) || 0);
        },
    });

})();
;;/**
 * Created by wfq on 2018/6/21.
 */
(function () {
    //竞技场-奖励-排名奖励
    G.class.jingjichang_pmjl = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('jingjichang_pmjl.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
        },
        bindBTN: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;

            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setMyRank();
            me.setTable();
        },
        setMyRank: function () {
            var me = this;

            var panel = me.nodes.panel_wzts;
            var data = G.frame.jingjichang_freepk.DATA

            panel.removeAllChildren();
            var str = L('MY_RANK') + '<font color=#BE5E30>' + (data.myrank || 0) + '</font>';
            var rh = new X.bRichText({
                size:22,
                maxWidth:panel.width,
                lineHeight:32,
                color:G.gc.COLOR.n4,
                family:G.defaultFNT,
            });
            rh.text(str);
            rh.setAnchorPoint(0, 0.5);
            rh.setPosition(cc.p(0, panel.height / 2));

            var str1 = L("MTJL");
            var rh1 = new X.bRichText({
                size:22,
                maxWidth:panel.width,
                lineHeight:32,
                color:G.gc.COLOR.n4,
                family:G.defaultFNT,
            });
            rh1.text(str1);
            rh1.setAnchorPoint(1, 0.5);
            rh1.setPosition(cc.p(panel.width, panel.height / 2));

            panel.addChild(rh);
            panel.addChild(rh1);
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var ranklist = G.class.jingjichang.get().base.dayprize.prize


            var table = me.table = new X.TableView(scrollview,me.nodes.list_lb,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,10);
            table.setData(ranklist);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);

            var layIco = ui.nodes.panel_tx;
            var layPm = ui.nodes.panel_pm;
            var txtPm = ui.nodes.sz_phb;

            layPm.hide();
            txtPm.hide();
            txtPm.setString('');

            layIco.removeAllChildren();
            layIco.setTouchEnabled(false);
            // txtPm.setFntFile('img/fnt/sz_zd2.fnt');
            txtPm.removeAllChildren();
            layPm.removeAllChildren();

            //排名
            var rank = data[0];
            if (rank.length == 1) {
                if (rank[0] < 4) {
                    layPm.show();
                    layPm.setBackGroundImage('img/public/img_paihangbang_' + rank[0] + '.png',1);
                } else {
                    txtPm.setString(rank[0]);
                    txtPm.show();
                }
            } else {
                if (rank[0] == rank[1]) {
                    // txtPm.setString(rank[0]);
                    if (rank[0] < 4) {
                        layPm.show();
                        layPm.setBackGroundImage('img/public/img_paihangbang_' + rank[0] + '.png',1);
                    } else {
                        txtPm.setString(rank[0]);
                        txtPm.show();
                    }
                } else if(rank[0] > 100){
                    layPm.show();
                    rank[0] == 101 && layPm.setBackGroundImage('img/public/img_paihangbang_4.png',1);
                    rank[0] == 201 && layPm.setBackGroundImage('img/public/img_paihangbang_5.png',1);
                    rank[0] == 501 && layPm.setBackGroundImage('img/public/img_paihangbang_6.png',1);
                    rank[0] == 1001 && layPm.setBackGroundImage('img/public/img_paihangbang_7.png',1);
                }  else {
                    txtPm.setString(rank[0] + '-' + rank[1]);
                    txtPm.show();
                }
            }

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            X.alignItems(layIco,data[1],'left',{
                touch:true
            });
        }
    });

})();
;;/**
 * Created by wfq on 2018/6/21.
 */
(function () {
    //竞技场-奖励-赛季奖励
    G.class.jingjichang_sjjl = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('jingjichang_pmjl.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
        },
        bindBTN: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;

            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setMyRank();
            me.setTable();
        },
        setMyRank: function () {
            var me = this;

            var panel = me.nodes.panel_wzts;
            var data = me.DATA;

            panel.removeAllChildren();
            var str = L('SJJL_RANK_INFO');
            var rh = new X.bRichText({
                size:22,
                maxWidth:panel.width,
                lineHeight:32,
                color:G.gc.COLOR.n4,
                family:G.defaultFNT
            });
            rh.text(str);
            rh.setPosition(cc.p(panel.width / 2 - rh.trueWidth() / 2,panel.height / 2 - rh.trueHeight() / 2));
            panel.addChild(rh);
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var ranklist = G.class.jingjichang.get().base.weekprize.prize;


            var table = me.table = new X.TableView(scrollview,me.nodes.list_lb,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,10);
            table.setData(ranklist);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);

            var layIco = ui.nodes.panel_tx;
            var layPm = ui.nodes.panel_pm;
            var txtPm = ui.nodes.sz_phb;

            layPm.hide();
            txtPm.setString('');
            txtPm.hide();

            layIco.removeAllChildren();
            layIco.setTouchEnabled(false);
            //排名
            var rank = data[0];
            if (rank.length == 1) {
                if (rank[0] < 4) {
                    layPm.show();
                    layPm.setBackGroundImage('img/public/img_paihangbang_' + rank[0] + '.png',1);
                } else {
                    txtPm.setString(rank[0]);
                    txtPm.show();
                }
            } else {
                if (rank[0] == rank[1]) {
                    // txtPm.setString(rank[0]);
                    if (rank[0] < 4) {
                        layPm.show();
                        layPm.setBackGroundImage('img/public/img_paihangbang_' + rank[0] + '.png',1);
                    } else {
                        txtPm.setString(rank[0]);
                        txtPm.show();
                    }
                } else if(rank[0] > 100){
                    layPm.show();
                    rank[0] == 101 && layPm.setBackGroundImage('img/public/img_paihangbang_4.png',1);
                    rank[0] == 201 && layPm.setBackGroundImage('img/public/img_paihangbang_5.png',1);
                    rank[0] == 501 && layPm.setBackGroundImage('img/public/img_paihangbang_6.png',1);
                    rank[0] == 1001 && layPm.setBackGroundImage('img/public/img_paihangbang_7.png',1);
                }  else {
                    txtPm.setString(rank[0] + '-' + rank[1]);
                    txtPm.show();
                }
            }

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            X.alignItems(layIco,data[1],'left',{
                touch:true
            });
        }
    });

})();
;;/**
 * Created by LYF on 2018/7/10.
 */
(function () {

    G.event.on("attrchange_over", function () {
        if(G.frame.kaifukuanghuan.isShow) {
            G.frame.kaifukuanghuan.updateAttr();
        }
    });

    //开服狂欢
    var ID = 'kaifukuanghuan';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action:true});
        },
        updateAttr: function() {
            var me = this;
            var jinbi = me.nodes.txt_jb;
            var rmb = me.nodes.txt_zs;
            jinbi.setString(X.fmtValue(G.class.getOwnNum('jinbi','attr')));
            rmb.setString(X.fmtValue(G.class.getOwnNum('rmbmoney','attr')));
        },
        initUi: function () {
            var me = this;
            var arr = [];
            var menu = G.class.menu.get("kaifukuanghuan");
            var rw = me.nodes.panel_rw;
            var jinbi = me.nodes.txt_jb;
            var rmb = me.nodes.txt_zs;
            jinbi.setString(X.fmtValue(G.class.getOwnNum('jinbi','attr')));
            rmb.setString(X.fmtValue(G.class.getOwnNum('rmbmoney','attr')));

            me.nodes.btn_jia1.click(function () {
                G.frame.dianjin.show();
                G.frame.dianjin.once("hide", function () {
                    jinbi.setString(X.fmtValue(G.class.getOwnNum('jinbi','attr')));
                });
            });

            me.nodes.btn_jia2.click(function () {
                G.frame.chongzhi.show();
                G.frame.chongzhi.once("hide", function () {
                    rmb.setString(X.fmtValue(G.class.getOwnNum('rmbmoney','attr')));
                    me.getData(me._curDay, function () {
                        me.changeType(me._curType);
                        me.checkRedPoint();
                        me.checkRedPoint1();
                    });
                })
            });

            if(me.nodes.btn_ph) {
                me.nodes.btn_ph.hide();
            }

            // me.nodes.btn_ph.click(function () {
            //     G.frame.kaifukuanghuan_phb.show();
            // });

            for(var i = 0; i < menu.length; i ++){
                var btn = me.nodes.btn_1.clone();
                btn.setName("btn" + menu[i].id);
                btn.getChildren()[0].setString(menu[i].title);
                btn.show();
                arr.push(btn);
                me.nodes.listview.addChild(btn);
            }
            X.radio(arr, function (sender) {
                me.changeType({btn1: 1, btn2: 2, btn3: 3, btn4: 4}[sender.getName()]);
            },{
                callback1: function (sender) {
                    X.enableOutline(sender.finds('txt_name$'), cc.color('#34221d'),2);
                },
                callback2: function (sender) {
                    X.enableOutline(sender.finds('txt_name$'), cc.color('#34221d'),2);
                },
            });
            G.class.ani.show({
                json:'ani_choukajuese',
                addTo:rw,
                x:rw.width/2,
                y:rw.height/2,
                repeat:true,
                autoRemove:false,
            });
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_fh.click(function (sender, type) {
                me.remove();
            });

            X.radio([me.nodes.btn_day1, me.nodes.btn_day2, me.nodes.btn_day3, me.nodes.btn_day4,
                me.nodes.btn_day5, me.nodes.btn_day6, me.nodes.btn_day7], function(sender){
                    me.changDay({
                        btn_day1$: 1,
                        btn_day2$: 2,
                        btn_day3$: 3,
                        btn_day4$: 4,
                        btn_day5$: 5,
                        btn_day6$: 6,
                        btn_day7$: 7,
                    }[sender.getName()]);
                })
        },
        changeType: function(type){
            var me = this;
            me.nodes.listview1.removeAllChildren();
            me._curType = type;
            me.setContents();
        },
        changDay: function(type){
            var me = this;
            me.getData(type, function () {
                me.checkRedPoint1();
                me.nodes.listview.getChildren()[me._curType - 1].triggerTouch(ccui.Widget.TOUCH_ENDED);
            });
        },
        getData: function(type, callback){
            var me = this;
            G.ajax.send("kfkh_open", type ? [type] : [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me._curDay = d.d.sday;
                    me._openDay = d.d.oday;
                    if (!me.DATA){
                        me.initData(d.d.sday);
                    }
                    if (!type){
                        me.nodes["btn_day" + d.d.sday].triggerTouch(ccui.Widget.TOUCH_ENDED);
                    }
                    me.DATA = d.d;
                    callback && callback();
                }else{
                    me.remove();
                }
            })
        },
        getFirstData: function(type, callback){
            var me = this;

            G.ajax.send("kfkh_open", type ? [type] : [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me._curDay = d.d.sday;
                    me._openDay = d.d.oday;
                    me.DATA = d.d;
                    callback && callback();
                }
            })
        },
        initData: function () {
            var me = this;
            var time = new Date((G.DATA.asyncBtnsData.kaifukuanghuan.kfkhetime + 7 * 24 * 60 * 60) * 1000);
            time.setHours(0);
            time.setMinutes(0);
            time.setSeconds(0);
            time.setMilliseconds(0);
            time = time.getTime()/1000;
            if (G.DATA.asyncBtnsData.kaifukuanghuan.kfkhetime > G.time){
                var rh = new X.bRichText({
                    size: 20,
                    maxWidth: me.ui.nodes.txt_number.width,
                    lineHeight: 34,
                    color: G.gc.COLOR.n34,
                    family: G.defaultFNT,
                    eachText: function (node) {
                        X.enableOutline(node,'#000000',1);
                    },
                });
                rh.text(X.moment(G.DATA.asyncBtnsData.kaifukuanghuan.kfkhetime - G.time));
                rh.setAnchorPoint(0, 0.5);
                rh.setPosition(0, me.ui.nodes.txt_number.height/2 + 4);
                me.ui.nodes.txt_number.addChild(rh);
            }else {
                // X.timeout(me.ui, me.ui.nodes.txt_number, time - G.time, function () {
                //     me.remove();
                // });
            }
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.bindBtn();
            me._curType = 1;
            cc.enableScrollBar(me.nodes.listview1);
            cc.enableScrollBar(me.nodes.listview_bx);
        },
        onAniShow: function () {
            var me = this;
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            this.getFirstData(null, function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;
            me.initUi();
            me.initData(me.DATA.sday);
            me.nodes["btn_day" + me.DATA.sday].triggerTouch(ccui.Widget.TOUCH_ENDED);
            me.checkRedPoint();
            me.nodes.listview1.setItemsMargin(-3);
        },
        checkRedPoint: function(){
            var me = this;
            var data = G.DATA.hongdian.kfkh;
            for(var i in data){
                if(data[i] > 0){
                    G.setNewIcoImg(me.nodes["btn_day" + i]);
                    me.nodes["btn_day" + i].getChildByName("redPoint").setPosition(100, 44);
                }else{
                    G.removeNewIco(me.nodes["btn_day" + i]);
                }
            }
        },
        checkRedPoint1: function(){
            var me = this;
            var redArr = [false, false, false];
            var typeArr = [1, 2, 3];
            for(var i = 0; i < 3; i ++){
                var data = me.getTypeData(typeArr[i]);
                for(var j = 0; j < data.length; j ++){
                    if(i == 0){
                        if(data[j].day == me._openDay && data[j].nval >= data[j].pval && data[j].finish != 1 && data[j].hdid != 1){
                            redArr[i] = true;
                            break;
                        }else{
                            if(data[j].nval >= data[j].pval && data[j].finish != 1){
                                redArr[i] = true;
                                break;
                            }
                        }
                    }else{
                        if(data[j].nval >= data[j].pval && data[j].finish != 1){
                            redArr[i] = true;
                            break;
                        }
                    }
                }
            }
            for(var i = 0; i < redArr.length; i ++){
                if(redArr[i]) {
                    G.setNewIcoImg(me.nodes.listview.getChildren()[i]);
                    me.nodes.listview.getChildren()[i].getChildByName("redPoint").x = 108;
                }
                else G.removeNewIco(me.nodes.listview.getChildren()[i]);
            }
        },
        getTypeData: function(type){
            var me = this;
            var arr = [];
            var data = me.DATA.data;
            for (var i = 0; i < data.length; i ++){
                if(data[i].tab == type){
                    arr.push(data[i]);
                }
            }
            return arr;
        },
        onHide: function () {
            var me = this;
            G.hongdian.getData("kfkh", 1);
        },
        setContents: function () {
            var me = this;
            var data = me.setData(me.DATA.data);

            for(var i = 0; i < data.length; i ++){
                me.setItem(data[i]);
            }
            me.setBox();
        },
        setItem: function(data){
            var me = this;
            var list = me.nodes.list1.clone();
            var conf = G.class.getConf("kaifukuanghuan")[me._curDay][data.hdid];
            X.autoInitUI(list);

            var str = X.STR(conf.title + " ({1}/{2})", data.nval, data.pval);
            var rh = new X.bRichText({
                size: 22,
                maxWidth: list.nodes.txt_title.width,
                lineHeight: 34,
                family: G.defaultFNT,
                color: (data.nval >= data.pval && !data.finish) ? G.gc.COLOR.n7 : G.gc.COLOR.n4
            });
            rh.text(str);
            rh.setAnchorPoint(0, 0.5);
            rh.setPosition(0, list.nodes.txt_title.height / 2);
            list.nodes.txt_title.addChild(rh);
            
            X.alignItems(list.nodes.panel_item, conf.p, "left",{
                touch: true,
                callback: function () {

                }
            });

            function buy(curDay, hdid) {
                // if(me._openDay < me._curDay){
                //     G.tip_NB.show(L("HDZWKQ"));
                //     return;
                // }
                G.ajax.send("kfkh_getprize", [curDay, hdid], function (d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.frame.jiangli.data({
                            prize: conf.p,
                        }).show();
                        me.nodes.txt_jb.setString(X.fmtValue(G.class.getOwnNum('jinbi','attr')));
                        me.nodes.txt_zs.setString(X.fmtValue(G.class.getOwnNum('rmbmoney','attr')));
                        me.getData(me._curDay, function () {
                            me.changeType(me._curType);
                            G.hongdian.getData("kfkh", 1, function () {
                                me.checkRedPoint();
                                me.checkRedPoint1();
                            })
                        });
                    }
                });
            }

            if(data.tab == 4){
                list.nodes.btn_receive.hide();
                list.nodes.img_received.hide();
                list.nodes.txt_number1.setString(conf.need[0].n);
                list.nodes.txt_buy.setString(parseInt(conf.need[0].n * (conf.needsale / 10)));
                list.nodes.txt_buy.setTextColor(cc.color(G.gc.COLOR.n12));
                if(data.finish){
                    list.nodes.btn_buy.setTouchEnabled(false);
                    list.nodes.txt_buy.setTextColor(cc.color(G.gc.COLOR.n15));
                    list.nodes.btn_buy.setBright(false);
                }
                list.nodes.btn_buy.click(function(sender, type){
                    buy(me._curDay, data.hdid);
                })
            }else{
                list.nodes.btn_buy.hide();
                list.nodes.btn_receive.show();
                list.finds("panel_price1").hide();
                if(data.nval < data.pval){
                    G.removeNewIco(list.nodes.btn_receive);
                    list.nodes.btn_receive.setTouchEnabled(false);
                    list.nodes.btn_receive.setBright(false);
                    list.nodes.btn_receive.setTitleColor(cc.color(G.gc.COLOR.n15));
                }else{
                    if(data.finish){
                        list.nodes.btn_receive.hide();
                        list.nodes.img_received.show();
                        G.removeNewIco(list.nodes.btn_receive);
                    }else{
                        G.setNewIcoImg(list.nodes.btn_receive, .9);
                        list.nodes.btn_receive.click(function (sender, type) {
                            buy(me._curDay, data.hdid);
                        });
                    }
                }
            }
            list.show();
            me.nodes.listview1.pushBackCustomItem(list);
        },
        setBox: function(){
            var me = this;
            var boxConf = G.class.getConf("kaifukuanghuan_jdt").base.stageprize;

            me.nodes.jdt100.setPercent(me.DATA.finipro);
            me.ui.finds("txt_rw").setString(L("WCRWGS") + me.DATA.finipro);

            for(var i = 0; i < boxConf.length; i ++){
                var type = boxConf[i][0] < boxConf[2][0] ? 1 : (boxConf[i][0] < boxConf[4][0] ? 2 : 3);
                var box = me.nodes["list_bx" + (i + 1)];
                (function (box, i) {
                    var state = "yulan";
                    X.autoInitUI(box);
                    box.nodes.panel_bx.removeAllChildren();
                    box.nodes.panel_bx.removeBackGroundImage();
                    box.nodes.text_cs2.setString(boxConf[i][0]);
                    if(me.DATA.finipro < boxConf[i][0]){
                        box.nodes.panel_bx.setBackGroundImage("img/jingjichang/img_jjc_bx" + type + ".png", 1);
                    }else{
                        if(X.inArray(me.DATA.recprize, i)){
                            box.nodes.panel_bx.setBackGroundImage("img/jingjichang/img_jjc_bx" + type + "_d.png", 1);
                            box.nodes.panel_bx.removeAllChildren();
                            box.nodes.img_ylq.show();
                            box.nodes.img_klq.hide();
                            state = "chakan";
                        }else{
                            box.nodes.panel_bx.removeBackGroundImage();
                            box.nodes.img_klq.show();
                            X.addBoxAni({
                                parent: box.nodes.panel_bx,
                                boximg: "img/jingjichang/img_jjc_bx" + type + ".png"
                            });
                            state = "lq";
                        }
                    }
                    if(state == "lq") G.setNewIcoImg(box, .8);
                    else G.removeNewIco(box);
                    box.nodes.panel_bx.setTouchEnabled(true);
                    box.nodes.panel_bx.touch(function (sender, type) {
                        if(type == ccui.Widget.TOUCH_ENDED){
                            if(state == "lq"){
                                G.ajax.send("kfkh_recproprize", [i], function (d) {
                                    if (!d) return;
                                    var d = JSON.parse(d);
                                    if (d.s == 1) {
                                        G.frame.jiangli.data({
                                            prize: boxConf[i][1],
                                        }).show();
                                        me.getData(me._curDay, function () {
                                            me.changeType(me._curType);
                                        });
                                    }
                                });
                            }else{
                                G.frame.jiangliyulan.data({
                                    title: state == 'yulan' ? L('JLYL') : L('JLCK'),
                                    prize: boxConf[i][1]
                                }).show();
                            }
                        }
                    });
                    box.show();
                })(box, i);
            }
        },
        setData: function(data){
            var me = this;
            var typeArr = [];
            for(var i = 0; i < data.length; i ++){
                if(me._curType == data[i].tab){
                    typeArr.push(data[i]);
                }
            }
            for(var i = 0; i < typeArr.length; i ++){
                if(typeArr[i].nval < typeArr[i].pval){
                    typeArr[i].rank = 2;
                }else{
                    if(typeArr[i].finish){
                        typeArr[i].rank = 3;
                    }else{
                        typeArr[i].rank = 1;
                    }
                }
            }
            typeArr.sort(function(a, b){
                if(a.rank !== b.rank){
                    return a.rank < b.rank ? -1 : 1;
                }else{
                    return a.hdid < b.hdid ? -1 : 1;
                }
            });
            return typeArr;
        }
    });
    G.frame[ID] = new fun('carnival.json', ID);
})();
;;/**
 * Created by LYF on 2018/9/13.
 */
(function () {
    //开服狂欢-排行榜
    var ID = 'kaifukuanghuan_phb';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;

            me.nodes.text_zdjl.setString(L("PHB"));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            new X.bView("ui_paihangbang.json", function (view) {
                me.view = view;
                me.nodes.panel_nr.addChild(view);
                me.view.nodes.panel_rank.height -= 103;
                cc.enableScrollBar(me.view.nodes.scrollview);
                cc.enableScrollBar(me.view.nodes.listview);
                ccui.helper.doLayout(me.view.nodes.panel_rank);
                X.viewCache.getView('ui_list2.json', function (node) {
                    me.list = node.nodes.list_rank;
                    me.setContents();
                });
            });
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            me.curType = 12;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onHide: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            G.ajax.send('rank_open', [me.curType], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;

            var scrollview = me.view.nodes.scrollview;

            scrollview.removeAllChildren();

            me.setMyRank();

            var data = me.DATA;
            if (data.ranklist.length < 1) {
                cc.isNode(me.view.nodes.img_zwnr) && me.view.nodes.img_zwnr.show();
                return;
            } else {
                cc.isNode(me.view.nodes.img_zwnr) && me.view.nodes.img_zwnr.hide();
            }
            for (var i = 0; i < data.ranklist.length; i++) {
                data.ranklist[i].rank = i + 1;
            }
            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8, 2);
            table.setData(data.ranklist);
            table.reloadDataWithScroll(true);
            scrollview.getChildren()[0].getChildren()[0].x = -1;
        },
        setItem: function (ui, data) {
            X.autoInitUI(ui);
            var me = this;
            var layPh = ui.nodes.img_rank;
            var txtPh = ui.nodes.sz_phb;
            var layIco = ui.nodes.panel_tx;
            var txtName = ui.nodes.txt_name;
            var txtGuanqia = ui.nodes.txt_number;
            ui.nodes.txt_title.setString(L("WCGS"));

            // if(data.zhanli) {
            //     ui.finds("img_zdl").show();
            //     ui.nodes.text_zdl2.show();
            //     ui.nodes.text_zdl2.setString(data.zhanli);
            // }

            layPh.hide();
            txtPh.setString('');
            layIco.removeAllChildren();
            if (data.rank < 0) {
                txtPh.setString(0);
            } else if (data.rank < 4) {
                layPh.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                layPh.show();
            } else {
                txtPh.setString(data.rank);
                txtPh.show();
            }

            var wid = G.class.shead(data.headdata);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);
            wid.data = data;
            wid.setTouchEnabled(true);
            wid.click(function (sender) {
                if (P.gud.uid == sender.data.headdata.uid) {
                    return;
                }
                G.frame.wanjiaxinxi.data({
                    pvType: 'zypkjjc',
                    uid: sender.data.headdata.uid,
                    btnsCall: function (node) {
                        var btnsArr = [];

                    }
                }).checkShow();
            });

            txtName.setString(data.headdata.name);
            txtGuanqia.setString(data.count);

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            layPh.setTouchEnabled(false);

        },
        //显示我的排行
        setMyRank: function () {
            var me = this;
            me.view.finds("txt_level").setString(L("WCGS"));

            if(me.DATA.myrank > 0) {
                me.view.nodes.fnt_player.setString(me.DATA.myrank);
                me.view.finds("wsb_player").hide();
                // me.view.finds("txt_level_0").setString(me.getVal(me.DATA.ranklist));
                for(var i in me.DATA.ranklist) {
                    if(me.DATA.ranklist[i].headdata.uid == P.gud.uid) {
                        me.view.finds("txt_level_0").setString(me.DATA.ranklist[i].count);
                    }
                }
            }else {
                me.view.finds("wsb_player").show();
                me.view.nodes.fnt_player.setString("");
                me.view.finds("txt_level_0").setString("");
            }
        }
    });

    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by lsm on 2018/6/25
 */
(function() {
    //聊天
    var ID = 'liaotian';
    G.event.on('loginOver', function() {
        G.frame.liaotian.getSzData();
        G.frame.liaotian.getData(function(d) {
            G.frame.liaotian.DATA = {
                1: [],
                2: [],
                3: [],
                4: [],
                5: []
            };
            G.frame.liaotian.addNewChat(d, false);
            G.frame.liaotian.DATA.userHongDian = G.frame.liaotian.DATA.userHongDian || {};
            G.frame.liaotian.DATA.userList = G.frame.liaotian.DATA.userList || [];
        });
        G.frame.liaotian.armylist = [];
        G.frame.liaotian.armyidx = 0;
        G.frame.liaotian.ghlist = [];
        G.frame.liaotian.ghidx = 0;
    });


    G.event.on('newchat', function(d) {
        var o = X.toJSON(d);

        G.DATA.chatRedPoint > 60 ? G.DATA.chatRedPoint = 60 : G.DATA.chatRedPoint ++;
        G.setNewIcoImg(G.view.mainView.nodes.btn_lt, 0.8, G.DATA.chatRedPoint);
        if(G.frame.gonghui_main.isShow) {
            G.setNewIcoImg(G.frame.gonghui_main.nodes.btn_lt, 0.8, G.DATA.chatRedPoint);
        }

        function f() {
            G.frame.liaotian.addNewChat(o, true);
        }

        if(o.pmd){
            var str = o.m.split(">")[2][0];
            switch (str) {
                case L("CHOU"):
                    G.frame.chouka_hdyx.once("over", function () {
                        f();
                    });
                    break;
                default:
                    f();
                    break;
            }
        }else{
            f()
        }
    });

    G.event.on("paomadengOver", function(d) {

    });

    var _CONF = {
        world: 'world',
        guild: 'guild',
        recruit: 'recruit',
        hideVip: "hideVip",
        kuafu: "kuafu",
    };
    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function() {
            var me = this;
            me.ui.nodes.listview_opiton.y += 10;
            me.btnArry = [me.nodes.btn_world, me.nodes.btn_kuafu, me.nodes.btn_guild, me.nodes.btn_recruit];
            if(P.gud.lv < 30){
                    var lay = new ccui.Layout();
                    lay.setContentSize(me.nodes.btn_kuafu.getSize());
                    me.nodes.btn_kuafu.addChild(lay);
                    me.nodes.btn_kuafu.setTouchEnabled(false);
                    lay.setTouchEnabled(true);
                    lay.click(function(){
                        G.tip_NB.show(L('KUAFULTL'));
                    });
            }
            X.radio(me.btnArry, function(sender) {
                var name = sender.getName();
                var name2type = {
                    btn_world$: 2,
                    btn_guild$: 3,
                    btn_recruit$: 1,
                    btn_kuafu$: 4
                };
                for (var i = me.btnArry.length - 1; i >= 0; i--) {
                    me.btnArry[i].setBright(true);
                }
                sender.setBright(false);
                me.changeType(name2type[name]);
            }, {
                color: ['#ffffff', '#af9e89']
            });
            me.initUi_listview();
        },
        bindBtn: function() {
            var me = this;
            me.nodes.mask.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            //聊天设置
            me.ui.nodes.btn_option.touch(function(sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    me.liaotianOption(sender);
                }
            });

            me.ui.nodes.close_option.click(function(sender) {
                sender.setTouchEnabled(false);
                me.nodes.panel_option.hide();
            });

            me.ui.nodes.btn_send.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {

                    if (me._curType == 2 && P.gud.lv < 20) {
                        G.tip_NB.show(L('gonghuipindao'));
                        return;
                    }
                    var text = me.ui.nodes.txtfield.getString(),
                        toName = '';
                    if (text.trim().length == 0) {
                        G.tip_NB.show(L('SRLTNR'));
                        return;
                    }
                    text = text.substr(0, 40);

                    if (text.length > 30) {
                        G.tip_NB.show(L('TEXT_ALERT'));
                        return;
                    }

                    var _sendData = [text, me._curType, toName, ''];
                    var notmsg = '';
                    if (me._curType == 2) {
                        if (!parseInt(me.szData['world'])) {
                            notmsg = 'notSendMessage';
                        }
                    } else if (me._curType == 1) {
                        if (!parseInt(me.szData['recruit'])) {
                            notmsg = 'notSendMessage';
                        }
                    } else if (me._curType == 3) {
                        if (!parseInt(me.szData['guild'])) {
                            notmsg = 'notSendMessage';
                        }
                    } else if(me._curType == 4) {
                        if (!parseInt(me.szData['kuafu'])) {
                            notmsg = 'notSendMessage';
                        }
                    }
                    _sendData[5] = '';
                    _sendData[6] = G.frame.liaotian.szData.hideVip == 0 ? 1 : 0;

                    me.ui.nodes.txtfield.setString('');

                    me.sendMsgToServ(_sendData, function() {
                        X.editbox.create(me.ui.nodes.txtfield);
                    });
                }
            });
        },
        sendMsgToServ: function(d, callback) {
            var me = this;
            G.ajax.send('chat_send', d, function(data) {
                var data = X.toJSON(data);
                if (data.s == 1) {
                    callback && callback();
                }
            }, true);
        },
        liaotianOption: function(ui) {
            var me = this;
            cc.log(JSON.stringify(me.szData));
            var data = me.szData || {
                world: 1,
                guild: 1,
                recruit: 1,
                kuafu: 1,
                hideVip: 1,
            };
            var conf = {
                world: L('world_opiton'),
                guild: L('guild_opiton'),
                recruit: L('recruit_opiton'),
                hideVip: L("hide_vip"),
                kuafu: L("kuafu")
            };
            if (me.nodes.panel_option.visible) {
                me.nodes.panel_option.hide();
            } else {
                setOption();
                me.nodes.panel_option.show();
            }
            me.ui.nodes.close_option.setTouchEnabled(true);

            function setOption() {
                var listview = me.ui.nodes.listview_opiton;
                cc.enableScrollBar(listview);
                var kong = me.ui.nodes.list_option.clone();
                kong.height = kong.height / 2 + 3;
                listview.removeAllChildren();
                listview.pushBackCustomItem(kong);
                for (var k in data) {
                    var item = me.ui.nodes.list_option.clone();
                    setitem(item, data[k], k);
                    listview.pushBackCustomItem(item);
                }
            }

            function setitem(ui, d, k) {
                X.autoInitUI(ui);
                var txt = ui.nodes.txt_option;
                var check = ui.nodes.check;
                setTextWithColor(txt, conf[k], '#f6ebcd');
                check.setSelected(d > 0 ? false : true);
                check.data = _CONF[k];
                check.touch(function(sender, type) {
                    if (type === ccui.Widget.TOUCH_ENDED) {
                        G.frame.liaotian.szData[sender.data] = sender.isSelected() ? 0 : 1;
                        cc.log(JSON.stringify(G.frame.liaotian.szData));
                        X.cache('chat', JSON.stringify(G.frame.liaotian.szData));
                    }
                });
                ui.show();
            }
        },
        onOpen: function() {
            var me = this;
            me._curType = 2;
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.ui.finds("text_2").setString(1);
            me.ui.nodes.txtfield.setPlaceHolderColor(cc.color(G.gc.COLOR.n11));
            me.ui.nodes.txtfield.setTextHorizontalAlignment(0);
            me.ui.nodes.txtfield.setTextVerticalAlignment(1);
            X.editbox.create(me.nodes.txtfield);
            me.isNew = false;
        },
        onAniShow: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;
            me.DATA = me.DATA || {
                1: [],
                2: [],
                3: [],
                4: [],
                5: []
            };
            var type = me.data() && me.data().type ? me.data().type : 1;
            if(type == 1) {
                if(P.gud.lv >= 30) {
                    type = 2;
                }
            }
            me.btnArry[type - 1].triggerTouch(ccui.Widget.TOUCH_ENDED);
            G.DATA.chatRedPoint = 0;
            G.removeNewIco(G.view.mainView.nodes.btn_lt);
            if(G.frame.gonghui_main.isShow) {
                G.removeNewIco(G.frame.gonghui_main.nodes.btn_lt);
            }
        },
        onHide: function() {
            var me = this;

            G.removeNewIco(G.view.mainView.nodes.btn_lt);
            if(G.frame.gonghui_main.isShow) {
                G.removeNewIco(G.frame.gonghui_main.nodes.btn_lt);
            }
        },

        setContents: function() {
            var me = this;

        },
        getSzData: function(callback) {
            var me = this;
            var new_chat_sz = X.cache('chat');
            if (!new_chat_sz) {
                X.cache('chat', JSON.stringify({
                    world: 1,
                    guild: 1,
                    recruit: 1,
                    kuafu: 1,
                    hideVip: 1,
                }));
            }
            me.szData = JSON.parse(X.cache('chat'));
        },
        getData: function(callback) {
            var me = this;
            G.ajax.send('chat_getlist', '', function(data) {
                data = X.toJSON(data);
                if (data.s == 1) {
                    callback && callback.call(me, data.d);
                }
            });
        },
        changeType: function(type) {
            var me = this;
            me._curType = type;

            if (me._curType != type) {
                me._needShowScrollViewUp = true;
                me._scrollOffset = cc.p(0, 0);
                me.ui.nodes.txtfield.setString('');
            } else {
                me._needShowScrollViewUp = false;
            }

            if (type == 1) {
                me.nodes.btn_send.hide();
                me.ui.finds('panel_txtfield').hide();
            } else {
                me.nodes.btn_send.show();
                me.ui.finds('panel_txtfield').show();
            }

            me.isNew = false;
            me.setData();
        },
        onNodeShow: function() {
            var me = this;

            if(!cc.isNode(me.ui)) return;

            me.setData();
        },
        setData: function() {
            var me = this;
            var data;
            var type = me._curType;
            if (type == 1) {
                data = [].concat(me.DATA[1]);
            } else if (type == 2) {
                data = [].concat(me.DATA[2]);
            } else if (type == 3) {
                data = [].concat(me.DATA[3]);
            }else if(type == 4) {
                data = [].concat(me.DATA[4]);
            }
            if(data.length < 1){
                if(cc.isNode(me.nodes.img_zwnr)){
                    me.nodes.img_zwnr.show();
                }
            }else{
                if(cc.isNode(me.nodes.img_zwnr)){
                    me.nodes.img_zwnr.hide();
                }
            }
            me.fmtItemList(data);
            me.ui_table1.setCellSize(data.length - 1, cc.size(me.ui.nodes.list_dialogue.width, me.oldlineheight || me.defLineheight));
        },

    });

    G.frame[ID] = new fun('chat.json', ID);
})();
;;(function() {
    // 聊天-公共
    var me = G.frame.liaotian;

    var _fun = {
        //判断2个字符串的相似度
        compare: function(str1, str2) {
            var x = str1.split('');
            var y = str2.split('');
            var z = 0;
            var s = x.length + y.length;

            x.sort();
            y.sort();
            var a = x.shift();
            var b = y.shift();

            while (a !== undefined && b !== undefined) {
                if (a === b) {
                    z++;
                    a = x.shift();
                    b = y.shift();
                } else if (a < b) {
                    a = x.shift();
                } else if (a > b) {
                    b = y.shift();
                }
            }
            return z / s * 200;
        },
        _checkRepeat: function(str) {
            var me = this;
            me._lastChat = me._lastChat || [];
            //5个字内不监测
            if (str.length < 5) return false;

            for (var i = 0; i < me._lastChat.length; i++) {
                if (me.compare(str, me._lastChat[i]) > 50) {
                    return true;
                }
            }
            return false;
        },
        addNewChat: function(data, isNewChat) {
            var me = this;
            var a = [].concat(data);
            me.DATA = me.DATA || {
                1: [],
                2: [],
                3: [],
                4: [],
                5: []
            };
            me.DATA.voiceList = me.DATA.voiceList || [];
            me.DATA.userHongDian = me.DATA.userHongDian || {};
            if (a.length == 0) return;
            var lastOne = {
                '1': null,
                '2': null
            };
            var showNewIco = false;
            for (var i = 0; i < a.length; i++) {
                var d = a[i];
                var type = d.t;
                me.insertChat(d);
                var da = me.handleDataBySz(type, a);
                me._idx = 0;
                if (G.frame.liaotian.isShow) {
                    me.setData();
                }
            }
            if (data.pmd) {
                if(!cc.isNode(G.view.paomadeng)) {
                    new G.class.paomadeng();
                    cc.director.getRunningScene().addChild(G.view.paomadeng, 999);
                    me.timer = setTimeout(function() {
                        G.view.paomadeng.scrollMessage(data);
                    }, 1000);
                }else {
                    me.timer = setTimeout(function() {
                        cc.isNode(G.view.paomadeng) && G.view.paomadeng.scrollMessage(data);
                    }, 1000);
                }
            }
            //todo
            // if (lastOne['1']) {
            //     setTimeout(function () {
            //         G.frame.paomadeng.scrollMessage(lastOne['1']);
            //     },1000)
            // }else if (lastOne['2']) {
            //     G.event.emit('new_main_liaotian',lastOne['2']);
            //     //G.frame.main.showMessage(lastOne['2']);
            // }
            // if (showNewIco) {
            //     G.setNewIcoImg(me.topMenu.getBtn('4'), 2);
            // }
        },
        insertChat: function(d) {
            var me = this;
            var type = d.t;

            var da = me.handleDataBySz(type, [].concat(d));
            if (da.length < 1) return;
            me.DATA[type].push(d);
            if (type == 1 && me.DATA[type].length > 100) { //20
                me.DATA[type].shift();
            } else if (type == 2 && me.DATA[type].length > 100) { //60
                me.DATA[type].shift();
            } else if (type == 3 && me.DATA[type].length > 100) { //30
                me.DATA[type].shift();
            } else if (type == 4 && me.DATA[type].length > 100) { //80
                me.DATA[type].shift();
            }
        },
        createItem: function(data) {
            var me = this;
            var item = new ccui.Layout();

            var msg = me.getMsg(data);
            // var _1 = data.name || '[' + L({
            //         1: 'xitong',
            //         2: 'world',
            //         3: 'guild'
            //     }[data.t]) + ']',
            //     _2 = data.t == 4 ? '@' + data.toname + ': ' + msg : msg;
            var richText = new X.bRichText({
                size: 22,
                maxWidth: 999999,
                lineHeight: 24,
                color: '#ffb200',
                family: G.defaultFNT
            });
            // richText.text(_1 + '：' + msg, []);
            richText.setAnchorPoint(0.5, 0.5);
            richText.text(L('systemXX') + ':' + msg, []);
            richText.y = 35;
            item.setContentSize(richText.trueWidth(), 24);

            item.addChild(richText);
            return item;
        },
        getMsg: function(data) {
            var me = this;

            var msg;

            // var fun = function() {
            //     G.frame.baowu_xq.data({
            //         tid: null,
            //         data: data.showdata
            //     }).show();
            // };
            if (data.sendType && data.sendType != '') {
                //todo
                me.armylist.push({
                    uid: data.sendData.uid,
                    tid: data.sendData.tid
                });
                me.sendData = data.sendData;
                var c = G.class.shero(data.sendData);
                var str = '<font color=' + G.gc.COLOR[data.sendData.color || c.conf.color || 1] + ' onclick=G.frame.liaotian.showItem(this)>[' + c.conf.name + ']</font>';
                msg = X.STR(L('LT_SHOW_ITEM'), str, data.sendData.lv, data.sendData.zhanli);
            } else if (data.t == 1) {
                me.ghlist.push(data.ghid);
                msg = data.m + "<br><font node=1></font>";
            } else {
                msg = data.m || data.content;
            }
            return msg;
        },
        showItem: function(data) {
            var me = this;
            G.ajax.send('user_army_details', [me.armylist[data.idx].uid, me.armylist[data.idx].tid], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    G.frame.yingxiong_jianjie.data({
                        data: d.d
                    }).show();
                }
            }, true)
        },
        //信息分享到聊天
        //[tid,频道type,toName,,是否重复,发言type]
        //d = {
        //    tid:tid,  必选
        //    showType:'item,army,equip,baowu等等',   必选
        //    channelType:'频道类型，可选key',
        //    toName:'发送至谁，可选key',
        //},
        shareToChat: function(d) {
            var me = this;

            var arr = [d.tid, d.channelType || 5, d.toName || '', '', d.showType];
            me.sendMsgToServ(arr, function() {
                G.tip_NB.show(L('LT_SHOW_TIP'));
            });
        },
        handleDataBySz: function(curType, data) {
            var me = this;

            if (!me.szData) {
                me.szData = JSON.parse(X.cache('chat'));
            }
            if (!me.szData) return data;

            var arr = [];
            if (curType == 2) {
                if (!parseInt(me.szData['world'])) {
                    data = [];
                }
            } else if (curType == 1) {
                if (!parseInt(me.szData['recruit'])) {
                    data = [];
                }
            } else if (curType == 3) {
                if (!parseInt(me.szData['guild'])) {
                    data = [];
                }
            }else if(curType == 4) {
                if (!parseInt(me.szData['kuafu'])) {
                    data = [];
                }
            }
            // if (curType == 5) { //跨服
            //     if (me.szData['kuafu'] != 1) {
            //         data = [];
            //     }
            // } else if (curType == 2 || curType == 1) { //综合
            //     if (me.szData['zonghe'] != 1) {
            //         data = [];
            //     } else if (me.szData['xitong'] != 1) {
            //         arr = [];
            //         for (var i = 0; i < data.length; i++) {
            //             var d = data[i];
            //             if (d.t != 1) { //去掉系统消息
            //                 arr.push(d);
            //             }
            //         }
            //         data = arr;
            //     }
            // } else if (curType == 3 || curType == 1) { //公会
            //     if (me.szData['gonghui'] != 1) {
            //         data = [];
            //     } else if (me.szData['xitong'] != 1) {
            //         arr = [];
            //         for (var i = 0; i < data.length; i++) {
            //             var d = data[i];
            //             if (d.type == 'user') { //仅仅是玩家消息，去掉公会里的系统消息
            //                 arr.push(d);
            //             }
            //         }
            //         data = arr;
            //     }
            // }

            return data;
        },
    };
    cc.mixin(me, _fun, true);
})();
;;(function() {
    // 聊天
    var me = G.frame.liaotian;

    var _fun = {
        initUi_listview: function() {
            cc.enableScrollBar(me.ui.nodes.scrollview_chat, false);
            me._idx = 0;
            // 私聊列表
            me.ui.nodes.scrollview_chat.removeAllChildren();
            var table1 = new cc.myTableView({
                rownum: 1,
                type: 'fill',
                lineheight: me.ui.nodes.list_dialogue.height + 10,
                paddingTop: 10
            });
            me.ui_table1 = table1;
            table1.setDelegate(this);
            me.ui_table1.data([]);
            table1.bindScrollView(me.ui.nodes.scrollview_chat);
            var item  = me.ui.nodes.list_dialogue.clone();
            X.autoInitUI(item);
            var right_item = item.nodes.list_lb_r;
            var system_item = item.nodes.list_system;
            X.autoInitUI(right_item);
            me.defHeight = right_item.nodes.img_player_chat_r.height;
            me.defLineheight = me.ui.nodes.list_dialogue.height + 10;
            X.autoInitUI(system_item);
            me.defbgheight = system_item.nodes.bg_system.height;
            me.defItemHeight = item.height;
        },
        setItem: function(item, data, idx) {
            var me = this;
            X.autoInitUI(item);
            var right_item = item.nodes.list_lb_r;
            var left_item = item.nodes.list_lb;
            var system_item = item.nodes.list_system;
            left_item.setPositionY(122);
            item.setContentSize(cc.size(item.width,me.defItemHeight));
            if ((!data.pmd && data.uid == P.gud.uid && data.t != 1) || (data.t == 4 && P.gud.uid == data.uid)) {
                X.autoInitUI(right_item);
                var tx = right_item.nodes.panel_tx_r;
                tx.removeAllChildren();

                var vip = right_item.nodes.fnt_vip_r;
                var vipImg = right_item.finds("bg_vip_r");
                var name = right_item.nodes.txt_player_name_r;
                var send_time = right_item.nodes.txt_send_time_r;
                var chat = right_item.nodes.txt_player_chat_r;
                var panel_chat = right_item.nodes.panel_player_chat_r;
                var img_player = right_item.nodes.img_player_chat_r;
                var head = G.class.shead(data);
                var vip1 = right_item.finds('panel_vip_r');
                // chat.x -= 11;
                // chat.y -= 11;
                head.data = data;
                head.setScale(1);
                head.setName(data.uid);
                head.setAnchorPoint(0, 0);
                tx.addChild(head);

                vip.setTextColor(cc.color('#ffecaa'));
                X.enableOutline(vip, '#250e00',1);
                // name.setString(data.name);
                vip1.setPositionX(name.x - name.getAutoRenderSize().width - vip1.width * 0.75);
                if(data.vip != 0 && data.t != 4) {
                    vip.setString(data.vip);
                    vipImg.loadTexture(X.getVipIcon(data.vip), 0);
                    name.removeAllChildren();
                    me.namePulsVip(name,vip1,data.name,2,data.svrname,data.hidevip);
                }else {
                    vip1.hide();
                    name.removeAllChildren();
                    if(data.t == 4){
                        name.setString(data.svrname + '-' + data.name);
                    }else{
                        name.setString(data.name);
                    }
                }

                if(G.frame.liaotian.szData.hideVip == 0) {
                    vip1.hide();
                }


                send_time.setString(X.timetostr(data.ctime, '[m-d h:mm]'));
                headtouch(head);
                setMsg(right_item, 1);
                right_item.show();
                left_item.hide();
                system_item.hide();
                return;
            } else if ((!data.pmd && data.uid !== P.gud.uid && data.t != 1 && data.uid != "SYSTEM") || (data.t == 4 && data.uid !== P.gud.uid)) {
                if(data.guild) {
                    X.autoInitUI(system_item);
                    var bg = system_item.nodes.bg_system;
                    var txt = system_item.nodes.txt_system;
                    var ico = system_item.finds('img_horn');
                    var msg = me.getMsg(data);
                    var richText = new X.bRichText({
                        size: 22,
                        maxWidth: txt.width,
                        lineHeight: 22,
                        color: '#804326',
                        family: G.defaultFNT
                    });
                    richText.text(L('systemXX') + ':' + msg);
                    txt.removeAllChildren();
                    txt.addChild(richText);
                    richText.setAnchorPoint(0, 1);
                    bg.height = me.defbgheight;
                    // if (richText.trueHeight() >= 60) {
                    //     bg.height += richText.trueHeight() / 2;
                    //     me.oldlineheight = me.defLineheight + richText.trueHeight() / 2 - 10;
                    // } else {
                    //     me.oldlineheight = me.defLineheight - 10;
                    // }
                    bg.setContentSize( cc.size(bg.width,bg.height + richText.trueHeight() - 22));
                    ico.setPositionY(bg.height / 2)
                    ccui.helper.doLayout(bg);
                    richText.setPositionY(36);
                    left_item.hide();
                    right_item.hide();
                    system_item.show();
                } else {
                    X.autoInitUI(left_item);
                    var tx = left_item.nodes.panel_tx;
                    tx.removeAllChildren();

                    var vip = left_item.nodes.fnt_vip;
                    var vipImg = left_item.finds("bg_vip");
                    var name = left_item.nodes.txt_player_name;
                    var send_time = left_item.nodes.txt_send_time;
                    var chat = left_item.nodes.txt_player_chat;
                    var panel_chat = left_item.nodes.panel_player_chat;
                    var img_player = left_item.nodes.img_player_chat;
                    var btn = left_item.nodes.btn_apply;
                    var head = G.class.shead(data);
                    var vip1 = left_item.finds('panel_vip');
                    head.data = data;
                    head.setScale(1);
                    head.setAnchorPoint(0, 0);
                    head.setName(data.uid);
                    tx.addChild(head);
                    vip.setTextColor(cc.color('#ffecaa'));
                    X.enableOutline(vip, '#250e00',1);
                    // name.setString(data.name);
                    vip1.setPositionX(name.x + name.getAutoRenderSize().width + vip1.width * 0.75);
                    if(data.vip != 0 && data.t != 4) {
                        vip.setString(data.vip);
                        vipImg.loadTexture(X.getVipIcon(data.vip), 0);
                        name.removeAllChildren();
                        me.namePulsVip(name,vip1,data.name,1,data.svrname,data.hidevip);
                    }else {
                        vip1.hide();
                        name.removeAllChildren();
                        if(data.t == 4){
                            name.setString(data.name + '-' + data.svrname);
                        }else{
                            name.setString(data.name);
                        }
                    }

                    send_time.setString(X.timetostr(data.ctime, '[m-d h:mm]'));
                    headtouch(head);
                    setMsg(left_item, 2);
                    left_item.show();
                    btn.hide();
                    right_item.hide();
                    system_item.hide();
                }

                return;
            } else if (data.pmd) {
                X.autoInitUI(system_item);
                var bg = system_item.nodes.bg_system;
                var txt = system_item.nodes.txt_system;
                var ico = system_item.finds('img_horn');
                var msg = me.getMsg(data);
                var richText = new X.bRichText({
                    size: 22,
                    maxWidth: txt.width,
                    lineHeight: 22,
                    color: '#804326',
                    family: G.defaultFNT
                });
                richText.text(L('systemXX') + ':' + msg);
                txt.removeAllChildren();
                txt.addChild(richText);
                richText.setAnchorPoint(0, 1);
                bg.height = me.defbgheight;
                bg.setContentSize( cc.size(bg.width,bg.height + richText.trueHeight() - 22));
                ico.setPositionY(bg.height / 2)
                ccui.helper.doLayout(bg);
                richText.setPositionY(36);
                left_item.hide();
                right_item.hide();
                system_item.show();
                return;
            } else if (data.t == 1) {
                X.autoInitUI(left_item);
                var tx = left_item.nodes.panel_tx;
                tx.removeAllChildren();

                var vip = left_item.nodes.fnt_vip;
                var panel_vip = left_item.finds('panel_vip');
                var name = left_item.nodes.txt_player_name;
                var send_time = left_item.nodes.txt_send_time;
                var chat = left_item.nodes.txt_player_chat;
                var panel_chat = left_item.nodes.panel_player_chat;
                var img_player = left_item.nodes.img_player_chat;
                var btn = left_item.nodes.btn_apply;
                var head = G.class.shead(data);
                head.data = data;
                head.setScale(1);
                head.setAnchorPoint(0, 0);
                headtouch(head);

                tx.addChild(head);
                // vip.setString(data.vip ? 'V' + data.vip : 'V' + 0);
                vip.setString(data.vip ? data.vip : 0);
                vip.setTextColor(cc.color('#ffecaa'));
                X.enableOutline(vip, '#250e00',1);
                // name.setString(data.name);
                send_time.setString(X.timetostr(data.ctime, '[m-d h:mm]'));
                var idx = me.ghidx++;
                if(data.vip != 0){
                    name.removeAllChildren();
                    me.namePulsVip(name,panel_vip,data.name,1, data.hidevip);
                }else{
                    name.removeAllChildren();
                    name.setString(data.name);
                }
                // btn.click(function(sender) {
                //     G.frame.gonghui_main.gonghuiApply(me.ghlist[sender.idx]);
                // });
                item.setContentSize(cc.size(item.width,230));
                ccui.helper.doLayout(item);
                setMsg(left_item, 2, idx);
                btn.hide();
                left_item.show();
                right_item.hide();
                system_item.hide();
                return;
            }else if(data.uid == "SYSTEM") {
                X.autoInitUI(left_item);
                var tx = left_item.nodes.panel_tx;
                tx.removeAllChildren();

                var vip = left_item.nodes.fnt_vip;
                var vipImg = left_item.finds("bg_vip");
                var name = left_item.nodes.txt_player_name;
                var send_time = left_item.nodes.txt_send_time;
                var chat = left_item.nodes.txt_player_chat;
                var img_player = left_item.nodes.img_player_chat;
                var head = G.class.shead();
                var vip1 = left_item.finds('panel_vip');
                head.data = "system";
                head.num.setString(999);
                head.icon.loadTextureNormal("ico/itemico/gmtx.png", 0);
                head.setScale(1);
                head.setAnchorPoint(0, 0);
                head.setName(data.uid);
                tx.addChild(head);
                vip.setTextColor(cc.color('#ffecaa'));
                X.enableOutline(vip, '#250e00',1);
                name.setString(data.name);
                vip1.show();
                vip.hide();
                vip1.setPositionX(name.x + name.getAutoRenderSize().width + vip1.width * 0.75);

                vipImg.loadTexture("img/sale/ico_sale_zdy.png", 0);

                send_time.setString(X.timetostr(data.ctime, '[m-d h:mm]'));
                headtouch(head);
                setMsg(left_item, "system");
                left_item.show();
                right_item.hide();
                system_item.hide();
                return;
            }

            function setMsg(ui, type, ghidx) {
                if(data.chatborder) {
                    var img = G.class.zaoxing.getChatById(data.chatborder).img;
                    if(cc.isNode(ui.finds("img_player_chat$"))) {
                        ui.finds("img_player_chat$").loadTexture("img/chat/" + img, 1);
                    }
                    if(cc.isNode(ui.finds("img_player_chat_r$"))){
                        ui.finds("img_player_chat_r$").loadTexture("img/chat/" + img, 1);
                    }
                }else{
                    if(cc.isNode(ui.finds("img_player_chat$"))) {
                        ui.finds("img_player_chat$").loadTexture("img/chat/wz_bg_chat.png", 1);
                    }
                    if(cc.isNode(ui.finds("img_player_chat_r$"))){
                        ui.finds("img_player_chat_r$").loadTexture("img/chat/wz_bg_chat.png", 1);
                    }
                }
                img_player.finds('aa') && img_player.finds('aa').removeFromParent();
                var msg = me.getMsg(data);
                var richText = new X.bRichText({
                    size: 22,
                    maxWidth: 385,
                    lineHeight: 22,
                    color: type == "system" ? "#be1b1a" : (data.chatborder == 2 ? "#f5ff37":
                        (data.vip && data.vip >= 7 ? "#eb3a3a" : (data.chatborder == 4 ? "#ff2e1d" : '#804326'))),
                    family: G.defaultFNT
                });
                var h = 0;
                if(data.t == 1){
                    img_player.width = 415;
                }
                if (type == 1) {
                    richText.setPositionX(richText.x + 50);
                    richText.setAnchorPoint(1, 1);
                } else {
                    richText.setAnchorPoint(0, 1);
                }
                if (data.sendType && data.sendType != '') {
                    var img = new ccui.ImageView('img/public/ico/ico_zdl.png', 1);
                    img.setScale(.5);
                    richText.text(msg, [img]);
                    richText.idx = me.armyidx++;
                    h = -8;
                } else if(data.t == 1){
                    var btn = ui.nodes.btn_apply.clone();
                    ui.nodes.btn_apply.hide();
                    btn.setName("aa");
                    btn.idx = ghidx;
                    btn.show();
                    btn.click(function (sender, type) {
                        G.frame.gonghui_main.gonghuiApply(me.ghlist[sender.idx]);
                    });
                    richText.text(msg);
                    btn.setAnchorPoint(0,0);
                    img_player.height = me.defHeight;
                    img_player.setContentSize(cc.size(img_player.width,img_player.height + richText.trueHeight() + 10));
                    btn.setPosition(img_player.width - 100,3);
                    if(richText.trueHeight() > 40){
                        ui.setPositionY(230);
                        if(!me.isMove) me.isMove = true;
                    }else{
                        if(me.isMove){
                            ui.setPositionY(200);
                            me.isMove = false;
                        }else{
                            ui.setPositionY(230);
                        }
                    }
                    img_player.finds('aa') && img_player.finds('aa').removeFromParent();
                    img_player.addChild(btn);
                }else {
                    richText.text(msg);
                }
                richText.setPositionY(33 + h);
                if(data.t != 1){
                    img_player.width = richText.trueWidth() > 415 ? 415 : richText.trueWidth() + 27;
                    img_player.height = me.defHeight;
                    img_player.setContentSize(cc.size(img_player.width,img_player.height + richText.trueHeight() - 25));
                   
                }
                ccui.helper.doLayout(img_player);
                chat.removeAllChildren();
                chat.addChild(richText);
            }

            function headtouch(head) {

                head.setTouchEnabled(true);
                head.icon.setTouchEnabled(false);
                head.touch(function(sender, type) {
                    if (type == ccui.Widget.TOUCH_NOMOVE) {
                        if(sender.data == "system") {
                            G.tip_NB.show(L("XSYDY"));
                            return;
                        }
                        if(sender.data.sid != P.gud.sid) {
                            G.tip_NB.show(L("LZWY"));
                            return;
                        }


                        G.frame.wanjiaxinxi.data({
                            pvType: 'zypkjjc',
                            uid: sender.data.uid
                        }).checkShow();
                    }
                });
            }
        },
        namePulsVip:function(name,vip,data,type,svrname, isHide){
            var me = this;
            var node = vip.clone();
            vip.hide();

            node.setName('vipInfoNearByName');

            var _idx = 1;
            X.forEachChild(node,function(_nd){
                _nd.setName("_node"+ _idx);
                _idx++;
            });

            if(isHide) {
                node.hide();
            } else {
                node.show();
            }

            name.setString('');
            if(type == 2){
                if(me._curType == 4){
                    var str = '<font node=1></font>' + svrname + '-' + data;
                }else{
                    var str = '<font node=1></font>' + data;
                }
            }else{
                if(me._curType == 4){
                    var str = data + '-' + svrname + '<font node=1></font>';
                }else{
                    var str = data + '<font node=1></font>';
                }
                
            }
            var richText = new X.bRichText({
                size: 22,
                maxWidth: 385,
                lineHeight: 22,
                color: '#6b2605',
                family: G.defaultFNT
            });
            richText.text(str,[node]);
            richText.setPositionX(type == 2 ? name.width - richText.trueWidth() : 0);
            name.removeAllChildren();
            name.addChild(richText);
        },
        setTableViewData: function(data) {
            var me = this;
            var table = me.ui_table;
            data.sort(function(a, b) {
                return a.ctime - b.ctime;
            });
            table.data(data);
        },
        fmtItemList: function(data) {
            var me = this;
            data = data || [];
            data.sort(function(a, b) {
                return a.ctime - b.ctime;
            });
            me.ui_table1.data(data);
            me.ui_table1.reloadDataWithScroll(!me.isNew);
            if(!me.isNew)me.ui_table1.reloadDataWithScrollToBottomRight(me.isNew);
            me.isNew = true;
        },
        /**
         * 数据模板
         * @returns {*}
         */
        cellDataTemplate: function() {
            return this.ui.nodes.list_dialogue.clone();
        },
        /**
         * 数据初始化
         * @param ui
         * @param data
         */
        cellDataInit: function(ui, data) {
            if (!data) {
                ui.hide();
                return;
            }
            ui.setName('liebiao');
            this.setItem(ui, data, me._idx++);
            ui.show();
        },
        getTableviewCanScroll: function(type) {
            var me = this;

            var table = type == 4 ? me.ui_table1 : me.ui_table;
            if (!table) return false;

            var tableview = table.tableView.getChildren()[0];

            return tableview.y >= -50;
        },
    };
    cc.mixin(me, _fun, true);
})();
;;/**
 * Created by lsm on 2018/6/25.
 */
(function () {
    //跑马灯

    G.class.paomadeng = X.bView.extend({
        ctor: function(){
            var me = this;
            me._super("flashy.json", null);
            me.preLoadRes = ['public2.plist','public2.png'];
            G.view.paomadeng = me;
        },
        onShow: function () {
            this.fillSize();
        },
        onRemove: function () {
            if(G.frame.liaotian && G.frame.liaotian.timer){
                delete G.frame.liaotian.timer;
            }
        },
        onOpen : function(){
            var me = this;
            me.initUI();
        },
        initUI: function () {
            var me = this;
            me.ui_paomadeng = me.nodes.txt_flashy;
            me.ui_background = me.ui.finds('wz_bg_flashy');
            G.event.emit("paomadengOver");
        },
        scrollMessage: function (d) {
            if(!cc.isNode(G.view.toper)){
                new G.class.paomadeng();
                cc.director.getRunningScene().addChild(G.view.paomadeng, 999);
            }
            this._allMessage = [].concat(this._allMessage || [],d);

            if (!this._showMessageRunning){
                this._scrollMessage();
                // var img = new ccui.ImageView('img/public/bg_paomadeng.png',1)
                // img.setAnchorPoint(0,1);
                // img.setPosition(-35,this.ui_background.height-6);
                // this.ui_background.removeAllChildren();
                // this.ui_background.addChild(img);
            }
        },
        _scrollMessage: function () {
            var me = this;
            var w = 640;
            if (!this._allMessage || this._allMessage.length == 0 || !cc.isNode(me.ui_background) ) {
                return;
            }else{
                me.ui_background.show();
            }
            this._lastOne = false;
            this._showMessageRunning = true;

            var msg = this._allMessage.shift();
            var item = G.frame.liaotian.createItem(msg);
            var width = item.getContentSize().width;
            me.ui_paomadeng.addChild(item);
            item.setPositionX(w);
            item.setPositionY(-20);
            item.runActions([
                cc.moveTo((width + w/2)/100,cc.p(w/2 - width,-20)),
                cc.callFunc (function () {
                me._lastOne = true;
                me._scrollMessage();
                }),
                cc.moveTo((w/2 + 10)/100,cc.p(-width - 50,-20)),
                cc.callFunc (function () {
                    if (me._lastOne){
                        me.ui_background.hide();
                        me.ui_paomadeng.removeAllChildren();
                        delete me._showMessageRunning;
                        delete me._lastOne;
                        G.view.paomadeng.removeFromParent(true);
                        delete G.view.paomadeng;
                    }
                }
            )]);
        },
        onAniShow:function() {
            var me = this;

        }
    });
})();
;;(function () {
    var ID = 'login';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me.preLoadRes = ['fuwuqi.plist', 'fuwuqi.png'];
            me._super(json, id,{action:true});
        },
        setNewServerData: function (data) {
            var me = this;

            var obj = {};
            // obj = cc.mixin(obj, data, true);
            // var len = obj.order.length;

            var obj = {data:{}, order:[]};
            var len = 0;

            var ext_server_data = G.class.getConf('extservers').server;
            for (var i = 0; i < ext_server_data.length; i++) {
                var eData = {};
                eData = cc.mixin(eData, ext_server_data[i], true);
                eData['idx'] = len + i + 1;
                eData['sid'] = 's' + eData['idx'];
                obj.data[eData.sid] = eData;
                obj.order.push(eData.sid);
            }

            me.allServers = obj;
            return obj;
        },
        showUI: function (action) {
            var me = this;
            me.ui.nodes.txt_ver.show();
            me.ui.nodes.text_bb.show();
            me.ui.nodes.txt_ghzh.show();
            me.ui.nodes.btn_dl.show();
            me.ui.nodes.bg_qufu.show();

        },
        getSvrList: function () {
            var me = this, url = G.serverListUrl;
            X.ajax.get(url, {}, function (txt) {
                cc.log('getSvrList=' + txt);
                G.SERVERLIST = JSON.parse(txt);
                if (G.serverListUrl == 'http://v3.legu.cc/hommdata/?app=serverlist') {
                    G.SERVERLIST = me.setNewServerData(G.SERVERLIST);
                }
                // if (G.SERVERLIST.now){
                //     G.time = G.SERVERLIST.now;
                //     var time_gap = G.time - G.SERVERLIST.data[0].starttime;
                //     var day_gap = Math.floor(time_gap/86400);
                //     if(day_gap < 3){
                //         me.nodes.txt_zt.setString(L('TUIJIAN'));
                //     }else if(day_gap < 7){
                //         me.nodes.txt_zt.setString(L('serverState2'));
                //     }
                // }

                if (me.lastSvr) {
                    //如果有上次登陆数据，则更新区名ip等数据
                    if (G.SERVERLIST.data[me.lastSvr.sid]) {
                        //这个sid还存在的话
                        me.changeServer(me.lastSvr.sid);
                    } else {
                        //sid在列表里已经不存在了
                        var firstSid = G.SERVERLIST.order[0];
                        me.changeServer(firstSid);
                    }
                } else {
                    //设置第一个区默认选择
                    var firstSid = G.SERVERLIST.order[0];
                    //2018-12-6：从未进入过某个区的话，会进入这个逻辑，这里增加逻辑，通过svrgroup来判断和实现负载均衡
                    var _svrData = G.SERVERLIST.data[firstSid];

                    if(_svrData.svrgroup !=null && _svrData.svrgroup!=""){
                        //如果有组，则从组别中选人数最少的服务器进入
                        me._svrGroup = _svrData.svrgroup;
                        //遍历记录，找到group相同的区服
                        var _sameGroupSids = [];
                        for(var _o=0;_o<G.SERVERLIST.order.length;_o++){
                            var __sid = G.SERVERLIST.order[_o];
                            if( G.SERVERLIST.data[__sid] && G.SERVERLIST.data[__sid].svrgroup == me._svrGroup){
                                _sameGroupSids.push({"sid":__sid,"usernum": G.SERVERLIST.data[__sid].un || 0 });
                            }
                        }

                        if(_sameGroupSids.length>0){
                            //按usernum从小到达排序
                            _sameGroupSids.sort(function (a, b) {
                                return a.usernum < b.usernum ? -1 : 1;
                            });
                            var _minNum = _sameGroupSids[0].usernum; //人数最少的区

                            //如果某个区的人数和最小的相差100以内的话，都可以参与随机选择
                            var _canChoose = [];
                            cc.each(_sameGroupSids,function(__sinfo){
                                if( Math.abs(__sinfo.usernum-_minNum) < 100 ){
                                    _canChoose.push( __sinfo.sid );
                                }
                            });

                            if(_canChoose.length>0){
                                firstSid = X.arrayRand(_canChoose);
                            }
                        }
                    }

                    me.changeServer(firstSid);
                }
            }, function () {
                me.ui.setTimeout(function () {
                    me.getSvrList();
                }, 1500);
            });
        },

        //___getSvrList: function () {
        //    var me = this;
        //
        //    G.SERVERLIST = {"data":{},"order":[]};
        //    G.SERVERLIST = me.setNewServerData(G.SERVERLIST);
        //    if (G.SERVERLIST.now) G.time = G.SERVERLIST.now;
        //
        //    G.frame.gonggao.checkShow();
        //    if (me.lastSvr) {
        //        //如果有上次登陆数据，则更新区名ip等数据
        //        if (G.SERVERLIST.data[me.lastSvr.sid]) {
        //            //这个sid还存在的话
        //            me.changeServer(me.lastSvr.sid);
        //        } else {
        //            //sid在列表里已经不存在了
        //            var firstSid = G.SERVERLIST.order[0];
        //            me.changeServer(firstSid);
        //        }
        //    } else {
        //        //设置第一个区默认选择
        //        var firstSid = G.SERVERLIST.order[0];
        //        me.changeServer(firstSid);
        //    }
        //},

        getLastServer: function (dl) {
            var me = this;
            var lastSvr = X.cache('_lastServer_');
            var lastAllSvr = X.cache('_lastAllServer_');

            if(!lastSvr && !lastAllSvr){
                //是第一次启动游戏
                me._firstRunGame = true;
            }
            if(!dl){
                if (lastAllSvr && lastAllSvr[0] != "") {
                    me.lastSvr = JSON.parse(lastAllSvr);
                    me.setServerData(me.lastSvr[0], dl);
                }
            }else{
                if (lastSvr && lastSvr[0] != "") {
                    me.lastSvr = JSON.parse(lastSvr);
                    me.setServerData(me.lastSvr, dl);
                }
            }

            if (lastAllSvr && lastAllSvr != "") {
                me.lastAllSvr = JSON.parse(lastAllSvr);
            }
        },
        changeServer : function(sid){
            var me = this;
            var data = G.SERVERLIST.data[sid];
            me.changeServerByData(data);
        },
        changeServerByData : function(data){
            var me = this;
            me.setServerData(data);
        },
        fmtServerNameByData : function(data){
            var me = this;
            var _name = data.name+"";
            if(data.svrgroup && me._svrGroup && data.svrgroup == me._svrGroup){
                var _nameSplit = _name.split(' ');
                _name = _nameSplit[ _nameSplit.length -1 ];
            }
            return _name;
        },
        setServerData: function (data,dl) {
            var me = this;

            cc.log('setServerData', data);
            me.lastSvr = data;
            cc.isNode(me.ui) && me.ui.nodes.txt_fwq.setString(me.fmtServerNameByData(data));
            // me.ui.nodes.txt_fwq.setTextColor(cc.color(G.gc.COLOR.n4));
            G._SERVERNAME = data.name;
            G._SERVERID = data.sid;
            me.curServData = data;
            if(!dl){
                var c = {
                    0:'img/fuwuqi/img_fuwuqi_zt1.png',
                    1:'img/fuwuqi/img_fuwuqi_zt1.png',
                    2:'img/fuwuqi/img_fuwuqi_zt1.png',
                    3:'img/fuwuqi/img_fuwuqi_zt3.png',
                };
                if(data.s < 4){
                    me.ui.nodes.img_zt.setBackGroundImage(c[data.s], 1);
                }else{
                    me.ui.nodes.img_zt.removeBackGroundImage();
                }
            }

            X.cache('_lastServer_', JSON.stringify(data));
            // me.setAllServCache(data);

            G._SOCKET = data.ips;
            G._API = 'http://' + X.arrayRand(data.ipw);

            //G._API = 'http://homm1.legu.cc:6288';
            //G._SOCKET = 'homm1.legu.cc:6287';
            cc.log('setAPI=' + G._API);
            cc.log('setSocket=' + G._SOCKET);
            G.event.emit('setServerData', data);
        },
        setAllServCache: function (data) {
            var me = this;
            if (!data) return;

            cc.log('setAllServCache=' + JSON.stringify(data));
            var arr;
            if (!X.cache('_lastAllServer_')) {
                arr = [].concat(data);
            } else {
                arr = JSON.parse(X.cache('_lastAllServer_'));
                var idx = X.arrayFind(arr, data.sid, 'sid');
                if (idx == -1) {
                    arr.unshift(data);
                } else {
                    if (idx > 0) {
                        arr.splice(idx, 1);
                        arr.unshift(data);
                    }
                }
            }
            me.lastAllSvr1 = arr;
            cc.log('lastAllSvr=' + JSON.stringify(arr));
            X.cache('_lastAllServer_', JSON.stringify(arr));
        },
        onOpen: function () {
            var me = this;

            me._firstRunGame = false; //是否第一次安装
            me._svrGroup = null; //最新的组别标识

            //X.audio.setMusicVolume((X.cache('music') || 50) / 100);
            //X.audio.setEffectsVolume((X.cache('effect') || 50) / 100);

            me.ui.nodes.bg_denglu_qf.setTouchEnabled(true);
            me.ui.nodes.bg_denglu_qf.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (!G.SERVERLIST) {
                        G.tip_NB.show(L('loadingSvrlist'));
                    } else {
                        G.frame.xuanfu.show();
                    }
                }
            });

            me.ui.nodes.btn_gg.click(function () {
                me.ui.nodes.btn_gg.setTouchEnabled(false);
                G.frame.gonggao.data({
                    title: L("GG"),
                    okCall: function () {
                        me.ui.nodes.btn_gg.setTouchEnabled(true);
                        G.frame.gonggao.remove();
                    },
                    richText: L("ZWNR"),
                    autoRemove: true,
                }).show();
            });

            me.onInit();

            G.event.on('loginToLogic', function () {
                me.setAllServCache(me.curServData);
            });

            //G.win.start.reCheckVersion();
            var login = function (name, password) {
                if (name.length == 0) {
                    G.tip_NB.show(L('QSRYXYHM'));
                    return;
                }
                var _sid = G.frame.login.lastSvr.sid;
                if(isNaN(_sid))_sid=0;
                G.class.loginfun.doLogin(name, X.time(), '7dd395bfc1c214b9cf64ae50d13bd7ea',_sid, function () {
                    X.cache('name', name);
                    X.cache('password', password);
                    me.remove();
                });
            };

            if ('keyboard' in cc.sys.capabilities) {
                cc.eventManager.addListener({
                    event: cc.EventListener.KEYBOARD,
                    onKeyPressed: function (key, event) {
                        // cc.log('key down======', key);
                    },
                    onKeyReleased: function (key, event) {
                        cc.log('key up======', key);
                        if (key == '13') {  //enter键
                            if (!G._API) {
                                G.tip_NB.show(L('choosesvrfirst'));
                                return;
                            }
                            me.getLastServer();
                            var name = X.cache('name');
                            var password = X.cache('password');
                            if (!name) {
                                G.frame.login_tk.show();
                            } else {
                                (me._loginLogic || login)(name, password);
                            }
                        }
                    }
                }, me.ui);
            } else {
                cc.log('keyboard not support======', 1);
            }
        },
        onInit: function () {
            var me = this;
            me._onInit();
        },
        _onInit: function () {
            //便于diff中复写
            var me = this;
            // var mask_dl = me.ui.finds('mask_dl');
            //me.ui.nodes.text_bb.setString(X.cache('name') || '');

            var login = function (name, password) {
                if (name.length == 0) {
                    G.tip_NB.show(L('QSRYXYHM'));
                    return;
                }
                var _sid = G.frame.login.lastSvr.sid;
                if(isNaN(_sid))_sid=0;
                G.class.loginfun.doLogin(name, X.time(), '7dd395bfc1c214b9cf64ae50d13bd7ea',_sid, function () {
                    X.cache('name', name);
                    X.cache('password', password);
                    me.remove();
                });
            };
            me.ui.nodes.btn_dl.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    sender.setTouchEnabled(false);
                    me.ui.setTimeout(function () {
                        sender.setTouchEnabled(true);
                    }, 3000);
                    //这里的整个方法会在diff中被复写，不要做必要逻辑
                    if (!G._API) {
                        G.tip_NB.show(L('choosesvrfirst'));
                        return;
                    }
                    me.getLastServer(true);
                    var name = X.cache('name');
                    var password = X.cache('password');
                    if (!name) {
                        G.frame.login_tk.show();
                    } else {
                        (me._loginLogic || login)(name, password);
                    }
                }
            });

            me.ui.nodes.btn_ghzh.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.login_tk.show();
                }
            });


        },
        onShow: function () {
            var me = this;

			delete G.class.loginfun.otherClientlogin;

            var btn_hh = me.ui.nodes.bg_denglu_qf;
            var btn_gg = me.ui.nodes.btn_gg;
            var ghzh = me.ui.nodes.btn_ghzh;
			//me.ui.nodes.mask.setBackGroundImage('img/bg.png',0);
			if(G.gameName&&G.gameName!="fangzhi"){
				me.ui.finds('Text_1').hide();
			}

			if(G.owner&&G.owner!=='dev'){
				ghzh.hide();
			}
            var btn_dl = me.ui.nodes.btn_dl;
            if(!G.__quanfugonggaoShowed && !cc.GLOBALTISHEN){
                var lay = me.zhezhao = new ccui.Layout();
                lay.zIndex = 999;
                lay.setContentSize(10000,10000);
                lay.setTouchEnabled(true);
                lay.setName("zhezhao");
                cc.director.getRunningScene().addChild(lay);
            }
            var bg = me.ui.nodes.bg_denglu;
            bg.removeBackGroundImage();

            if(G.gameName=='fangzhifengbao') {
                X.spine.show({
                    json: "spine/denglu_shui.json",
                    addTo: bg,
                    x: bg.width / 2,
                    y: bg.height / 2,
                    z: 0,
                    cache: true,
                    autoRemove: false,
                    onload: function (node) {
                        node.stopAllAni();
                        node.setTimeScale(1);
                        node.opacity = 255;
                        node.runAni(0, "animation", true);
                    }
                });
            } else {
                G.class.ani.show({
                    json:'beijing',
                    addTo:bg,
                    x:bg.width/2,
                    y:bg.height/2,
                    repeat:true,
                    autoRemove:false,
                    onload: function(node, action){
                        X.forEachChild(node,function(node){
                            var _action = node.getActionByTag(node.getTag());
                            if(_action)_action.gotoFrameAndPlay(0,true);
                        });
                        G.class.ani.show({
                            json: "ani_denglu",
                            addTo: node.finds("niutourongqil_2"),
                            x: 0,
                            y: 0,
                            repeat: true,
                            autoRemove: false,
                        })
                    }
                });
            }

            X.audio.playMusic('sound/denglu.mp3', true);
            //初始化声音和音效的音量
            var _music = X.cache('music');
            if(_music==null|| isNaN(_music) || _music==""){
                _music=20;
            }else{
                _music = _music*1;
            }
            X.audio.setMusicVolume(_music / 100);

            var _effect = X.cache('effect');
            if(_effect==null|| isNaN(_effect) || _effect==""){
                _effect=60;
            }else{
                _effect = _effect*1;
            }
            X.audio.setEffectsVolume(_effect / 100);

            if (X.cache('_lastServer_')) {
                var s = JSON.parse(X.cache('_lastServer_'));
                if (cc.isArray(s)) {
                    X.cache('_lastServer_', '');
                }
            }
            me.getLastServer();
            me.getSvrList();

            me.loadPreRes();
            me.emit('loginAniOvered');
			if(G.gameLogo&&G.gameLogo!=""){
				me.ui.finds('logo').setBackGroundImage(G.gameLogo,0);
			}else{
				me.ui.finds('logo').setBackGroundImage('img/logo.png',0);
			}


            //IOS已经过审了的包，需要换LOGO，为了避免logo热更覆盖到其他游戏，单独重置该包
            if(G.TiShening == 'fangzhizhengba1107'){
                me.ui.finds('logo').setBackGroundImage('img/logo_buluoshilian.png',0);
                me.ui.finds('mask$').setBackGroundImage('_nopic_.png',0);
                me.ui.finds('panel_dltm').setBackGroundImage('_nopic_.png',0);
            }

            if(G.TiShening == 'chuangtayinngxiong1211'){
                me.ui.finds('logo').hide();//setBackGroundImage('img/logo_chuangta.png',0);
                me.ui.finds('mask$').setBackGroundImage('img/bg/bg_ctyx.jpg',0);
                me.ui.finds('panel_dltm').setBackGroundImage('img/bg/bg_ctyx.jpg',0);
            }

            me.ui.setTimeout(function () {
                cc.log('me.lastSvr===',me.lastSvr);
                if(me.lastSvr && me.lastSvr.sid == '70')return; //提审服不弹公告
                G.frame.gonggao.data({
                    okCall: function () {
                        G.frame.gonggao.remove();
                    }
                }).checkShow(function(){
                    cc.isNode(me.zhezhao) && me.zhezhao.removeFromParent();
                });
            },1000);
            me.ui.setTimeout(function(){
                !G.frame.gonggao.isShow && cc.isNode(me.zhezhao) && me.zhezhao.removeFromParent();
            },3000);

            G.VERSION && G.VERSIONCODE && me.ui.finds('txt_bb').setString(G.VERSION+'.'+G.VERSIONCODE);

            if(G.banHaoText && G.banHaoText != ""){
                me.ui.finds("Text_1").setString(G.banHaoText);
            }

            cc.log('cc.GLOBALTISHEN===',cc.GLOBALTISHEN);
            if(cc.GLOBALTISHEN){
                //如果是特殊的提审服，则不显示登陆界面，直接进游戏
                me.ui.hide();
                G.event.once('setServerData', function(){
                    me.ui.nodes.btn_dl.triggerTouch(ccui.Widget.TOUCH_ENDED);
                });
            }
        },
        onRemove: function () {
            var me = this;
        },
        loadPreRes: function () {
            var me = this;

            X.loadPlist([
                'public.png','public.plist','public_ico.png','public_ico.plist','title_wz.plist','title_wz.png',
                'zhenfa.plist', 'zhenfa.png', 'tujing.plist', 'tujing.png','public2.png','public2.plist',
                "plist_qizhi.png","plist_qizhi.plist"
            ]);
        }
    });

    G.frame[ID] = new fun('denglu.json', ID);
    G.previewSkillAni = function (name, repeat) {
        var me = G.frame.login;
        if (!me._previewSkillAniMask) {
            me._previewSkillAniMask = new ccui.Layout();
            me._previewSkillAniMask.setContentSize(C.WS);
            me._previewSkillAniMask.setTouchEnabled(true);
            me._previewSkillAniMask.setBackGroundColorType(ccui.Layout.BG_COLOR_SOLID);
            me._previewSkillAniMask.setBackGroundColor(cc.color('#000000'));
            me.ui.addChild(me._previewSkillAniMask);
        }
        me._previewSkillAniMask.removeAllChildren(true);
        me._previewSkillAniMask.show();
        G.class.ani.show({
            json: name,
            addTo: me._previewSkillAniMask,
            x: me._previewSkillAniMask.width / 2,
            y: me._previewSkillAniMask.height / 2,
            repeat: repeat,
            autoRemove: !repeat,
            cache: false,
            onend: function (node, action) {
                if (!repeat) {
                    me._previewSkillAniMask.hide();
                    node.removeFromParent(true);
                }
            }
        });
    }
})();

;;/**
 * Created by admin on 2018/1/6.
 */
(function () {
    var ID = 'login_tk';
    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action:true});
        },
        setContents: function (view) {
            var me = this;

            me.nodes.txt_srzh.setPlaceHolder(X.cache('name') || '');

            var login = function (name,password) {
                if (name.length == 0){
                    G.tip_NB.show(L('QSRYXYHM'));
                    return;
                }
                var _sid = G.frame.login.lastSvr.sid;
                if(isNaN(_sid))_sid=0;

                G.class.loginfun.doLogin(name,X.time(),'7dd3958751c214b9cf64ae50d13bd7ea',_sid,function(){
                    X.cache('name',name);
                    X.cache('password',password);
                    G.frame.login.remove();
                    me.remove(false);
                });
            };
            me.nodes.btn_denglu_dl.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var name = me.nodes.txt_srzh.getString().trim();
                    if (name == '') {
                        name = me.nodes.txt_srzh.getPlaceHolder().trim();
                    }

                    //设置登录过的服务器
                    if(G.frame.login.last_data){
                        var arr = JSON.parse(X.cache('_lastAllServer_'));
                        var idx = X.arrayFind(arr, G.frame.login.last_data.sid, 'sid');
                        if (idx == -1) {
                            arr.unshift(G.frame.login.last_data);
                        }
                        X.cache('_lastAllServer_', JSON.stringify(arr));
                    }

                    var password = me.nodes.txt_srmm.getString();
                    (me._loginLogic || login)(name, password);
                }
            });
            //登陆界面的注册按钮
            // view.nodes.btn_zc.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         view.nodes.panel_1.hide();
            //         view.nodes.panel_2.show();
            //         G.frame.login.emit("loginFormChange", {"s": "reg"});
            //     }
            // });
            //已有账号
            // view.nodes.txt_yyzh.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         view.nodes.panel_2.hide();
            //         view.nodes.panel_1.show();
            //         G.frame.login.emit("loginFormChange", {"s": "login"});
            //     }
            // });
            //游客登陆
            // view.nodes.txt_ykdl.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         me._guestLoginLogic && me._guestLoginLogic();
            //     }
            // });
            //注册界面注册按钮
            // view.nodes.btn_zcbks.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         var name = view.nodes.txt_zhsr.getString();
            //         var password = view.nodes.txt_mmsr.getString();
            //         me._regLogic && me._regLogic(name, password);
            //     }
            // });
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.btn_guanbi.click(function (sender, type) {
                me.remove(false);
            });
            //
            // me.ui.render({
            //     top_title: L('UI_TITLE_DENGLU')
            // });
        },
        onOpen: function () {
            var me = this;
            me.bindBtn();
        },
        onShow: function () {
            var me = this;
            me.setContents();
        },
        onRemove: function () {
            var me = this;
        }
    });

    G.frame[ID] = new fun('denglu_tip_zhmm.json', ID);
})();
;;/**
 * Created by admin on 2018/1/6.
 */
(function () {
    var ID = 'login_zc';
    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action:true});
        },
        setContents: function (view) {
            var me = this;

            //登陆界面的注册按钮
            // view.nodes.btn_zc.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         view.nodes.panel_1.hide();
            //         view.nodes.panel_2.show();
            //         G.frame.login.emit("loginFormChange", {"s": "reg"});
            //     }
            // });
            //已有账号
            // view.nodes.txt_yyzh.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         view.nodes.panel_2.hide();
            //         view.nodes.panel_1.show();
            //         G.frame.login.emit("loginFormChange", {"s": "login"});
            //     }
            // });
            //游客登陆
            // view.nodes.txt_ykdl.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         me._guestLoginLogic && me._guestLoginLogic();
            //     }
            // });
            //注册界面注册按钮
            // view.nodes.btn_zcbks.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         var name = view.nodes.txt_zhsr.getString();
            //         var password = view.nodes.txt_mmsr.getString();
            //         me._regLogic && me._regLogic(name, password);
            //     }
            // });
        },
        bindUI: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
            var panel_dh = me.ui.finds('panel_dh');
            var bg = panel_dh.finds('bg_denglu_tk');
            me.btn_sj = bg.finds('Button_1');

//          me.ui.nodes.btn_guanbi.click(function (sender, type) {
//              me.remove(false);
//          });

            //创建随机角色名
            var name = me.nodes.txt_srzh;
            name.setString(me.createRandomName()); //L('SMR')
            name.setColor(cc.color(G.gc.COLOR.n4));
            me.btn_sj.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    name.setString(me.createRandomName());
                    X.editbox.create(me.nodes.txt_srzh);
                    X.LOG.add(L('SJQM'), {click: 1});
                }
            });
            //注册名字
            me.ui.nodes.btn_denglu_dl.touch(function (sender, type) {
                if(type === ccui.Widget.TOUCH_BEGAN){
                    var n = name.getString();
                    G.ajax.send('user_register',[n],function(data) {
                        if (!data) return;
                        var data = X.toJSON(data);
                        if (data.s === 1) {
                            G.guidevent.emit('set_player_name');
                            G.event.emit('dologin',{});
                            G.event.emit('createrole',{});
                            me.remove();
                        }
                    },true);
                }
            })

        },
        createRandomName: function () {
            var firstName = _FIRSTNAME;
            // var midName = _MIDNAME;
            var lastName = _LASTNAME;
            var name = X.arrayRand(firstName)+X.arrayRand(lastName);

            return name;
        },
        onOpen: function () {
            var me = this;
            me.bindBtn();
            me.nodes.txt_srzh.setTextVerticalAlignment(1);
            me.nodes.txt_srzh.setTextHorizontalAlignment(0);
        },
        onShow: function () {
            var me = this;
            // me.setContents();
            me.DATA = me.data();
            
            //me.ui.nodes.btn_guanbi.hide();
            X.editbox.create(me.nodes.txt_srzh);
            me.bindUI();
            me.bindBtn();
        },
        onRemove: function () {
            var me = this;
        }
    });

    G.frame[ID] = new fun('inputname.json', ID);
})();
;;/**
 * Created by ys on 2018/8/16.
 */
(function () {
    //帮助界面
    var ID = 'tishi_fwq';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            // me.singleGroup = "f6";
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            cc.sys.isObjectValid(me.nodes.mask) && me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.DATA = me.data();
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            // me.nodes.mask.setBackGroundColorOpacity(255 * 0.7);
            var data = me.DATA;
            var layName = me.nodes.panel_bt;
            var txtIntr = me.nodes.panel_nr;
            // var txt_h = txtIntr.height;

            me.nodes.panel_top.setPositionY(cc.director.getWinSize().height/2);

            layName.removeAllChildren();
            var strName = data.title || L('BZ');

            var rhName = new X.bRichText({
                size:24,
                maxWidth:layName.width,
                lineHeight:32,
                color:'#ffe386',
                family:G.defaultFNT,
            });
            rhName.text(strName);
            rhName.setPosition(cc.p(layName.width / 2 - rhName.trueWidth() / 2,layName.height / 2 - rhName.trueHeight() / 2));
            layName.addChild(rhName);

            var rt = new X.bRichText({
                size: 20,
                lineHeight: 24,
                color: '#fff8e1',
                maxWidth: txtIntr.width,
                family: G.defaultFNT,
            });
            rt.text(data.intr);
            rt.setAnchorPoint(0,1);
            rt.setPositionY(txtIntr.height - 15);
            txtIntr.addChild(rt);
        },
    });

    G.frame[ID] = new fun('tishi_fwq.json', ID);
})();
;;/**
 * Created by LYF on 2018/7/19.
 */
(function () {
    //每日试炼购买次数
    var ID = 'meirishilian_gm';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;

            // me.nodes.txt_title.setString(L("GM"));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();

        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('tishi.json', function (view) {
                me.ui.nodes.panel_nr.addChild(view);
                me.view = view;
                me.view.nodes.text_xian.setString("----------------------------------");
                me.view.nodes.text_ts.setString(L("TSVIP"));
                me.view.nodes.text_ts.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
                me.view.nodes.text_ts.setTextColor(cc.color('#804326'));
                cc.enableScrollBar(me.view.nodes.panel_txt);
                me.setContents();
                me.setButton();
            });
        },
        onHide: function () {
            var me = this;
        },
        setButton: function(){
            var me  = this;
            var btn = new ccui.Button();
            btn.setTouchEnabled(true);
            btn.setAnchorPoint(C.ANCHOR[5]);
            btn.setTitleFontSize(24);
            btn.setTitleColor(cc.color(G.gc.COLOR.n13));
            me.view.nodes.panel_btn.addChild(btn);
            btn.setPosition(me.view.nodes.panel_btn.width / 2, me.view.nodes.panel_btn.height / 2);
            btn.setTitleFontName(G.defaultFNT);
            btn.loadTextureNormal('img/public/btn/btn1_on.png', ccui.Widget.PLIST_TEXTURE);
            btn.setTitleText(L('BTN_OK'));
            btn.click(function () {
                if(me.DATA.maxnum - me.DATA.buynum < 1){
                    G.tip_NB.show(L("GMCSBZ"));
                    return;
                }
                if(P.gud.rmbmoney < G.class.meirishilian.getCon().buyneed[me.DATA.buynum + 1][0].n){
                    G.tip_NB.show(L("ZSBZ"));
                    return;
                }
                G.ajax.send("mrsl_buynum", [me.type], function (d) {
                    if(!d) return;
                    var d = JSON.parse(d);
                    if(d.s == 1){
                        G.tip_NB.show(L("GMCG"));
                        G.frame.meirishilian.getData(function () {
                            G.frame.meirishilian.setCS();
                            me.setContents();
                        });
                        G.hongdian.getData("mrsl", 1, function () {
                            G.frame.meirishilian.checkRedPoint();
                        })
                    }
                }, true);
            })
        },
        setContents: function () {
            var me = this;
            me.DATA = G.frame.meirishilian.DATA;
            me.type = G.frame.meirishilian.type;
            var num = new ccui.Text();
            var num1 = me.DATA.maxnum - me.DATA.buynum
            num.setString(' '+ num1);
            num.setTextColor(cc.color('#78ff2f'));
            num.setFontSize(24);
            num.setFontName(G.defaultFNT);
            var icon = new ccui.ImageView(G.class.getItemIco(G.class.meirishilian.getCon().buyneed[me.DATA.buynum + 1][0].t), 1);
            var str = X.STR(L("GMSLCS"),G.class.meirishilian.getCon().buyneed[me.DATA.buynum + 1][0].n);
            var _maxWidth = me.view.nodes.panel_txt.width;
            var rh = new X.bRichText({
                size: 24,
                maxWidth: _maxWidth,
                lineHeight: 26,
                family: G.defaultFNT,
                color: '#804326'
            });
            rh.text(str, [icon,num]);
            if(!str.indexOf('<br>') && rh.trueHeight() <= 26){
                me.view.nodes.panel_txt.x += (me.view.nodes.panel_txt.width/2 - rh.trueWidth()/2);
            }
            me.view.nodes.panel_txt.removeAllChildren();
            me.view.nodes.panel_txt.addChild(rh);
            me.view.nodes.panel_txt.setPositionY(190);
        },
    });
    G.frame[ID] = new fun('ui_tip_tishi.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/13.
 */
(function () {
    //每日试炼
    var ID = 'meirishilian';

    var fun = X.bUi.extend({
        extConf: [
            "jinbi",
            "exp",
            "hero"
        ],
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
            me.nodes.btn_jia.click(function (sender, type) {
                G.frame.meirishilian_gm.data({
                    data: me.DATA,
                    type: me.type
                }).show();
            });

            me.nodes.btn_bz.click(function (sender, type) {
                G.frame.help.data({
                    intr:L("TS2")
                }).show();
            });

            me.nodes.btn_fh.click(function (sender, type) {
                me.remove();
            });

            me.nodes.btn_xsl1.click(function () {
                me.setContents(false);
            });
            
            me.nodes.btn_xsl2.click(function () {
                me.setContents(true);
            });

            me.nodes.slrw.setTouchEnabled(true);
            me.nodes.slrw.click(function (sender) {
                if(sender.children[0]) {
                    sender.children[0].runAni(0, "atk", false);
                    sender.children[0].addAni(0, "wait", true, 0);
                }
            });

            me.ui.finds("btn_slzd").click(function () {
                if(me.nodes.text_sycs.getString() * 1 < 1) {
                    G.tip_NB.show(L("TZCSBZ"));
                    return;
                }
                var conf = G.class.meirishilian.getConfByType(me.type);
                var obj = {
                    pvType:'pvshilian',
                    data: {
                        type: me.type,
                        npc: conf[me.typeLevel[me.type]].monster,
                        prize: conf[me.typeLevel[me.type]].prize,
                        nandu: me.typeLevel[me.type]
                    }
                };
                G.frame.yingxiong_fight.data(obj).show();
            });

            me.nodes.text_jbsl.setString(L("FENGSHOU") + L("SILIAN"));
            me.nodes.text_jysl.setString(L("JY") + L("SILIAN"));
            me.nodes.text_yxsl.setString(L("WUWEI") + L("SILIAN"));

            X.radio([me.nodes.ico_1, me.nodes.ico_2, me.nodes.ico_3], function (sender) {
                me.changeType(sender.getName().split("_")[1][0]);
            }, {
                callback1: function (sender) {
                    var parent = sender.getParent();

                    if(parent.ani) {
                        parent.ani.show();
                    }else {
                        G.class.ani.show({
                            json: "ani_meirishilian",
                            addTo: parent.children[4],
                            x: 90,
                            y: 70,
                            repeat: true,
                            autoRemove: false,
                            onload: function (node) {
                                parent.ani = node;
                            }
                        })
                    }
                    parent.children[3].setOpacity(255);
                    parent.children[1].show();
                },
                callback2: function (sender) {
                    var parent = sender.getParent();

                    if(parent.ani) parent.ani.hide();
                    parent.children[3].setOpacity(255 * 0.6);
                    parent.children[1].hide();

                    var key = me.extConf[parseInt(sender.getName().split("_")[1][0]) - 1];
                    if(me.typeLevel[key]) {
                        me.typeLevel[key] = undefined;
                    }
                }
            });

            var sPos;
            me.ui.finds("Image_16").setTouchEnabled(true);
            me.ui.finds("Image_16").touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_BEGAN) {
                    sPos = sender.getTouchBeganPosition();
                } else if (type == ccui.Widget.TOUCH_MOVED) {

                } else if (type == ccui.Widget.TOUCH_ENDED || type == ccui.Widget.TOUCH_CANCELED) {
                    var ePos = sender.getTouchEndPosition();
                    if (ePos.x - sPos.x < -10) {
                        if(me.typeLevel[me.type] == X.keysOfObject(G.class.meirishilian.getConfByType(me.type)).length) {
                            return;
                        }
                        me.setContents(true);
                    } else if (ePos.x - sPos.x > 10) {
                        if(me.typeLevel[me.type] == 1) {
                            return;
                        }
                        me.setContents(false);
                    }
                }
            })
        },
        changeType: function(type) {
            var me = this;

            if(me.type && me.type == me.extConf[type - 1]) return;

            me.type = me.extConf[type - 1];
            me.ui.finds("wz1").setBackGroundImage("img/meirishilian/wz_shilian" + type + ".png", 1);
            me.ui.finds("bg_sl").loadTexture("img/bg/bg_shilian" + type + ".jpg");

            me.setContents();
            me.getData(function () {
                me.setCS();
            });
        },
        setCS: function(){
            var me = this;
            me.nodes.text_sycs.setString(me.DATA.lessnum);
        },
        onOpen: function () {
            var me = this;
            X.audio.playEffect("sound/openshilian.mp3", false);
            me.fillSize();
            me.initUi();
            me.bindBtn();

            me.typeLevel = {};
            me.nodes.txt_slwz1.setTextColor(cc.color(G.gc.COLOR.n15));
        },
        checkRedPoint: function() {
            var me = this;
            var data = G.DATA.hongdian.mrsl;
            var obj = {
                "jinbi": "ico_1",
                "exp": "ico_2",
                "hero": "ico_3"
            };
            for (var i in data) {
                if(data[i] > 0) {
                    G.setNewIcoImg(me.nodes[obj[i]], .85);
                    me.nodes[obj[i]].getChildByName("redPoint").setPosition(110, -15);
                }else {
                    G.removeNewIco(me.nodes[obj[i]]);
                }
            }
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("mrsl_open", [me.type], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            })
        },
        onShow: function () {
            var me = this;

            me.checkRedPoint();
            me.nodes.ico_1.triggerTouch(ccui.Widget.TOUCH_ENDED);

            me.ui.setTimeout(function(){
                G.guidevent.emit('meirishilianOpenOver');
            },200);
        },
        onHide: function () {
            var me = this;
            me.event.emit('hide');
            G.hongdian.getData("mrsl", 1);
        },
        setContents: function (bool) {
            var me = this;
            var curLevel;
            var conf = G.class.meirishilian.getConfByType(me.type);
            var keys = X.keysOfObject(conf);
            var btn = me.ui.finds("btn_slzd");

            if(!me.typeLevel[me.type]) {
                for (var i = 0; i < keys.length; i ++) {
                    var need = conf[keys[i]].openlv;
                    if(P.gud.lv >= need && ((!keys[i + 1] || P.gud.lv < conf[keys[i + 1]].openlv))) {
                        curLevel = me.typeLevel[me.type] = parseInt(keys[i]);
                        break;
                    }
                }
                if(!curLevel) {
                    curLevel = me.typeLevel[me.type] = 1;
                }
            }else {
                if(bool) {
                    curLevel = me.typeLevel[me.type] += 1;
                }else {
                    curLevel = me.typeLevel[me.type] -= 1;
                }
            }


            me.nodes.txt_xsjbq.setString(G.class.meirishilian.getCon().title[curLevel * 1 - 1]);

            if(curLevel == 1) me.nodes.btn_xsl1.hide();
            else me.nodes.btn_xsl1.show();

            if(curLevel == keys.length) me.nodes.btn_xsl2.hide();
            else me.nodes.btn_xsl2.show();

            X.alignCenter(me.nodes.panel_wp, conf[curLevel].prize, {
                touch: true
            });

            if(P.gud.lv < conf[curLevel].openlv) {
                btn.setTouchEnabled(false);
                btn.setBright(false);
                me.nodes.txt_slwz1.setString("lv" + conf[curLevel].openlv);
                me.nodes.img_slzd.hide();
                me.nodes.txt_slwz1.show();
                me.nodes.txt_slwz1.setTextColor(cc.color("#B0B0B0"));
            } else {
                btn.setTouchEnabled(true);
                btn.setBright(true);
                me.nodes.img_slzd.show();
                me.nodes.txt_slwz1.hide();
            }

            me.ui.finds("Text_1").setString(L("ZHANLI") + "：" + conf[curLevel].zhanli);

            var enemy = G.class.npc.getById(conf[curLevel].monster);
            if(enemy) {
                X.setHeroModel({
                    parent: me.nodes.slrw,
                    data: enemy[0]
                })
            }

        },
    });
    G.frame[ID] = new fun('xinshilian.json', ID);
})();
;;/**
 * Created by LYF on 2018/8/8.
 */
(function () {
    //礼品兑换
    var ID = 'lipinduihuan';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });

            me.nodes.btn_duihuan.click(function () {
                var code = me.nodes.wz_1.getString();
                if(code.trim() == "") {
                    G.tip_NB.show(L("QSRDHM"));
                    return;
                }
                X.ajax.get(
                    X.STR(G.check_card_url, P.gud.uid, encodeURIComponent(P.gud.name), code, G.owner||""), {},
                    function (txt) {
                        var d = X.toJSON(txt);
                        if(d.result == 0) {
                            G.ajax.send("user_getcard", [d.code], function (data) {
                                data = X.toJSON(data);
                                if(data.s == 1){
                                    G.frame.jiangli.data({
                                        prize: data.d
                                    }).show();
                                    //me.remove();  不存在的方法
                                }
                            })
                        }else{
                            G.tip_NB.show(d.result);
                        }
                    }
                )

            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
        },
        onHide: function () {
            var me = this;
        },
    });
    G.frame[ID] = new fun('likaduihuan.json', ID);
})();
;;/**
 * Created by wfq on 2018/7/5.
 */
(function () {
    //玩家-更换列表
    var ID = 'player_changhead';

    var fun = X.bUi.extend({
        extConf:{
            defaultStar:3
        },
        ctor: function (json, id) {
            var me = this;
            // me.singleGroup = "f3";
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;

            setPanelTitle(me.nodes.panel_bt, L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function(){
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
            cc.enableScrollBar(me.nodes.listview_1);
            cc.enableScrollBar(me.nodes.scrollview_);
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.flagId = P.gud.head;
            me.getData(function () {
                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            // me.DATA = {
            //     avaterlist:['1005']
            // };
            // callback && callback();

            G.ajax.send('user_avaterlist',[],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            },true);
        },
        setContents: function () {
            var me = this;

            var panel = me.ui;

            var scrollview = panel.nodes.scrollview_;
            cc.enableScrollBar(scrollview);
            cc.enableScrollBar(me.nodes.listview_1);
            scrollview.removeAllChildren();

            var data = me.DATA.avaterlist;

            var treeStarData = G.class.hero.getHidArrByStar(me.extConf.defaultStar);
            data = me.setHeadData(data,treeStarData);

            // 只有在配置中存在的英雄才处理
            var inConfHeros = [];
            cc.each(data,function(hid){
                if(G.class.zaoxing.getById('head',hid) || G.class.zaoxing.getById('head',hid.split("_")[0])){
                    inConfHeros.push(hid);
                }
            });
            data = inConfHeros;

            if(P.gud.vip >= 5) {
                data.push("1000");
            }

            data.sort(function (a,b) {

                return a * 1 < b * 1 ? -1 : 1;
            });

            var table = me.table = new X.TableView(scrollview,panel.nodes.list_flag,5, function (ui, data) {
                me.setItem(ui, data);
            },null,null,10, 2);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setHeadData: function(data, allData){
            for(var i in data){
                if(!X.inArray(allData, data[i])) {
                    allData.push(data[i]);
                }
            }
            return allData;
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);

            X.render({
                panel_tx: function (node) {
                    node.removeBackGroundImage();
                    node.setBackGroundImage('img/public/ico/ico_bg' + 0 + '.png', 1)
                },
                panel_flag: function(node){
                    node.setScale(.7);
                    node.removeBackGroundImage();

                    var img;
                    if(data.split("_").length > 1) {
                        img = G.class.zaoxing.getById('head',data.split("_")[0]).cond[1].toString();
                        img[img.length - 1] = "a";
                    } else {
                        img = G.class.zaoxing.getById('head',data).cond[1];
                    }
                    node.setBackGroundImage('ico/itemico/' + G.class.fmtItemICON(img) + '.png',0);
                },
                img_confirm: function (node) {
                    node.hide();

                    if (me.flagId == data) {
                        node.show();
                    }
                },
            },ui.nodes);

            ui.data = data;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    if (sender.data == me.flagId) {
                        return;
                    }

                    G.ajax.send('user_changeavater',[sender.data],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                            me.remove();
                            G.frame.setting.player.setContents();
                            G.view.toper.updateHead();
                        }
                    },true);


                }
            });
        },
    });

    G.frame[ID] = new fun('ui_top5.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/26.
 */
(function () {
    //玩家改名
    var ID = 'player_gm';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.DATA = me.data();
            // new X.bView('gaiming.json', function (view) {
            //     me._view = view;
            //     me.ui.nodes.panel_nr.removeAllChildren();
            //     me.ui.nodes.panel_nr.addChild(view);
            //     me.setContents();
            //     view.setTouchEnabled(true);
            // });
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var panel = me;

            X.render({
                panel_bt:function(node){
                    var rh = new X.bRichText({
                        size: 30,
                        maxWidth: node.width,
                        lineHeight: 32,
                        color: "#fff8e1",
                        family: G.defaultFNT,
                    });
                    rh.setPosition(cc.p(165, 0));
                    rh.text(L('XIUGAI') + L('MINGZI'));
                    node.addChild(rh);

                },
                txt_title: function (node) {
                    node.setString(me.DATA.info);
                },
                panel_input2: function (node) {
                    var txtInput = node.finds('txt_input$');

                    txtInput.setPlaceHolder(me.DATA.placeholder);
                    // txtInput.setPlaceHolderColor(cc.color(G.gc.COLOR.n11));
                },
                btn_confirm2: function (node) {
                    node.finds('txt_sl$').hide();
                    node.finds('token_zs').hide();
                    node.finds('txt_confirm2').hide();

                    var need = [].concat(me.DATA.need);
                    if (need) {
                        node.finds('txt_sl$').show();
                        node.finds('token_zs').show();
                        node.finds('txt_confirm2').show();
                        setTextWithColor(node.finds('txt_sl$'), need[0].n, G.gc.COLOR[G.class.getOwnNum(need[0].t, need[0].a) >= need[0].n ? 'n1' : 5]);
                    } else {
                        node.setTitleText(L('BTN_OK'));
                    }
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            var txt = panel.nodes.panel_input2.finds('txt_input$').getString().trim();
                            var callback = me.DATA.callback;
                            callback && callback(txt);
                        }
                    });
                }
            }, me.nodes);
        },

    });

    G.frame[ID] = new fun('gaiming.json', ID);
})();
;;/**
 * Created by wfq on 2018/7/5.
 */
(function () {
    //玩家信息
    G.class.setting_player = X.bView.extend({
        ctor: function (type) {
            var me = this;
            G.frame.setting.player = me;
            me._type = type;
            me._super("wanjiaxinxi.json");
        },
        initUi: function () {
            var me = this;

        },
        bindBtn: function () {
            var me = this;
        },
        setOptions:function(){
            var me = this;

            me._music = X.cache('music');
            me._effect = X.cache('effect');
            me.sl_music.setPercent(me._music);
            me.sl_effect.setPercent(me._effect);

            if (me._music == '0'){
                me._music = 0;
                me.nodes.btn_music.isbright = false;
                me.nodes.btn_music.loadTextureNormal('img/setting/btn_setting_off1.png',1);
            }else{
                if (!me._music) me._music = 100;
                me._music *= 1;
                me.nodes.btn_music.isbright = true;
                me.nodes.btn_music.loadTextureNormal('img/setting/btn_setting_on1.png',1);
            }
            me.sl_music.setPercent(me._music);

            if (me._effect == '0'){
                me._effect = 0;
                me.nodes.btn_sound.isbright = false;
                me.nodes.btn_sound.loadTextureNormal('img/setting/btn_setting_off2.png',1);
            }else{
                if (!me._effect) me._effect = 50;
                me._effect *= 1;
                me.nodes.btn_sound.isbright = true;
                me.nodes.btn_sound.loadTextureNormal('img/setting/btn_setting_on2.png',1);
            }
            me.sl_effect.setPercent(me._effect);
        },
        onOpen: function () {
            var me = this;
            me.initUi();
            me.bindBtn();
            // me.setOptions();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var panel = me.ui;
            panel.finds("txt_name$_0").hide();

            X.render({
                bg_gonghui_jdt2: function (node) {
                    var maxExp = G.class.getConf('player')[P.gud.lv].maxexp;

                    var per = Math.floor(P.gud.exp / maxExp * 100);

                    node.setPercent(per);
                    node.removeAllChildren();
                    var text = new ccui.Text(P.gud.exp + " / " + maxExp, G.defaultFNT, 16);
                    text.setTextColor(cc.color(G.gc.COLOR.n8));
                    X.enableOutline(text,'#66370e',2);
                    text.setAnchorPoint(0.5, 0.5);
                    text.setPosition(node.width / 2, node.height / 2);
                    node.addChild(text);
                },
                txt_viplv:P.gud.vip,
                ico_vip1: function(node) {
                    node.setBackGroundImage(X.getVipIcon(P.gud.vip));
                },
                panel_ico: function (node) {
                    node.removeAllChildren();
                    var wid = G.class.shead(P.gud);
                    wid.lv.hide();
                    wid.setPosition(cc.p(node.width / 2,node.height / 2));
                    node.addChild(wid);
                },
                txt_name:function(node){
                    node.setString(P.gud.name);
                    node.setTextColor(cc.color('#804326'));
                    node.setPosition(panel.finds("txt_name$_0").getPosition());
                    // X.enableOutline(node, '#2a1c0f', 1);
                },
                txt_dj:P.gud.lv,
                txt_bh:function (node) {
                    var str = L('BIANHAO') + '：<font color=' + G.gc.COLOR.n104 + '>' + P.gud.uuid + '</font>';
                    var rh = new X.bRichText({
                        size:20,
                        maxWidth:node.width,
                        lineHeight:32,
                        family: G.defaultFNT,
                        color:G.gc.COLOR.n3
                    });
                    rh.text(str);
                    rh.setPosition(cc.p(0,node.height - rh.trueHeight()));
                    node.removeAllChildren();
                    node.addChild(rh);
                },
                txt_gh:function (node) {
                    var str = L('GONGHUI') + '：<font color=' + G.gc.COLOR.n104 + '>' + (P.gud.ghname || L('WU')) + '</font>';
                    var rh = new X.bRichText({
                        size: 20,
                        maxWidth: node.width,
                        lineHeight: 32,
                        family: G.defaultFNT,
                        color: G.gc.COLOR.n3
                    });
                    rh.text(str);
                    rh.setPosition(cc.p(0, node.height - rh.trueHeight()));
                    node.removeAllChildren();
                    node.addChild(rh);
                },
                btn_xiugai: function (node) {
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            var need = {a:'attr',t:'rmbmoney',n:P.gud.isrenamed ? 500 : 0};
                            G.frame.player_gm.data({
                                title:L('XIUGAI') + L('MINGZI'),
                                info:L('PLAYER_NAME_INFO'),
                                placeholder:L('PLAYER_NAME_TIP'),
                                need:need,
                                callback: function (data) {
                                    G.ajax.send('user_rename',[data],function(d) {
                                        if(!d) return;
                                        var d = JSON.parse(d);
                                        if(d.s == 1) {
                                            // G.tip_NB.show(X.createPrizeInfo(need,0,5));
                                            //G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                                            G.frame.player_gm.remove();
                                            G.view.toper.updateData();
                                        }
                                    },true);
                                }
                            }).show();
                        }
                    });
                },
                btn_gh: function (node) {
                    node.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.frame.shejiao.show();
                        }
                    });
                },
                btn_duihuan: function (node) {
                    node.click(function (sender, type) {
                        G.frame.lipinduihuan.show();
                    })
                },
                btn_change: function (node) {
                    node.click(function () {
                        jsbHelper.callNative(null,null,{
                            act:'logout'
                        });
                        G.restart();
                    })
                }
            },me.nodes);

            var attrArr = ['jinbi','rmbmoney','useexp','jifen',2001,2003];
            for (var i = 0; i < attrArr.length; i++) {
                var attr = attrArr[i];
                var txtAttr = me.nodes['txt_sz' + (i + 1)];
                var layAttr = me.nodes['panel_token' + (i + 1)];

                if(i < 4) {
                    txtAttr.setString(X.fmtValue(P.gud[attr]));
                }else {
                    txtAttr.setString(X.fmtValue(G.class.getOwnNum(attr, "item")));
                }
                layAttr.setBackGroundImage(G.class.getItemIco(attr),1);
            }
        },
    });
})();
;;/**
 * Created by LYF on 2018/6/27.
 */
(function () {
    //任务 & 成就
    var ID = 'renwu';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action:true});
            // me.preLoadRes = ["jingjichang.png", "jingjichang.plist"];
        },
        initUi: function () {
            var me = this;

            me.topMenu = new G.class.topMenu(me, {
                btns: X.clone(G.class.menu.get('renwu'))
            });
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function (sender, type) {
                me.remove();
            })
        },
        viewUI: function(){
            var me = this;

            if(me.type == 1){
                me.view.nodes.panel_top.hide();
                me.view.nodes.panel_top1.show();
                me.view.nodes.panel_refresh.hide();
                me.view.nodes.panel_list._setHeight(610);
                me.view.nodes.panel_list.setPositionY(620);
                ccui.helper.doLayout(me.view.nodes.panel_list);
            }else {
                me.view.nodes.panel_top.show();
                me.view.nodes.panel_top1.hide();
                me.view.nodes.panel_refresh.show();
                me.view.nodes.panel_list._setHeight(490);
                me.view.nodes.panel_list.setPositionY(546.0204);
                ccui.helper.doLayout(me.view.nodes.panel_list);
            }
        },
        changeType: function(sender) {
            var me = this;
            var type = sender.data.id;

            if(sender.disable) {
                G.tip_NB.show(sender.show);
                return;
            }

            me.type = type;

            if(me.isfirst) {
                me.viewUI();
                me.setContents();
                me.isfirst = false;
            }else {
                me.getData(function () {
                    me.viewUI();
                    me.setContents();
                })
            }
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("task_open", [me.type], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            })
        },
        onOpen: function () {
            var me = this;


            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            me.type = me.data().type;
            me.isfirst = true;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;

            new X.bView("task.json", function (node) {
                me.ui.finds("p_nr").addChild(node);
                me.view = node;
                var type = me.data().type;
                me.topMenu.changeMenu(type);
                me.checkRedPoint();
                cc.enableScrollBar(me.view.nodes.listview_bx);
            })
        },
        checkRedPoint: function() {
            var me = this;
            var tag = ["dailytask", "succtask"];
            var isHave = [false, false];
            var data = G.DATA.hongdian;

            for(var i in tag) {
                if(data[tag[i]] > 0) {
                    isHave[i] = true;
                }
            }

            for(var i = 0; i < me.nodes.listview.getChildren().length; i ++) {
                var ch = me.nodes.listview.getChildren()[i];
                if(isHave[i] > 0) {
                    G.setNewIcoImg(ch);
                    ch.getChildByName("redPoint").setPosition(108, 60);
                }else {
                    G.removeNewIco(ch);
                }
            }

        },
        onHide: function () {
            var me = this;
            var tag = ["succtask", "dailytask"];
            me.event.emit('hide');
            G.hongdian.getData(tag, 1);
        },
        setContents: function () {
            var me = this;
            var data = me.setData(me.DATA.tasklist);
            var dd = [];
            var prize = [];

            for(var i = 0; i < data.length; i ++){
                if(data[i].stype == 1) {
                    prize.push(data[i]);
                }else {
                    dd.push(data[i]);
                }
            }

            if(!cc.isNode(me.view)){
                return;
            }

            if(me.type == 2) me.setBarAndTime(prize);
            else me.setSuc();
            cc.enableScrollBar(me.view.nodes.scrollview);
            me.view.nodes.scrollview.removeAllChildren();
            var table = me.table = new X.TableView(me.view.nodes.scrollview, me.view.nodes.list, 1, function (ui, data) {
                me.setTask(ui, data);
            }, null, null, 8,10);
            table.setData(dd);
            table.reloadDataWithScroll(true);
        },
        setSuc: function() {
            var me = this;

            me.view.nodes.txt_cjdsz.setString(P.gud.success);
        },
        setTask: function(ui, data){
            X.autoInitUI(ui);
            var me = this;
            var conf = G.class.task.getTaskByTaskId(data.taskid);
            var str = X.STR(conf.title, data.pval);

            ui.nodes.txt_name.setString(str);
            ui.nodes.txt_jdt.setString(data.nval + "/" + data.pval);
            ui.nodes.img_jdt.setPercent(data.nval / data.pval * 100);
            X.enableOutline(ui.nodes.txt_jdt, "#584115", 1);

            if(data.nval < data.pval) {
                if(conf.tujing == 0){
                    ui.nodes.btn_go.hide();
                    ui.nodes.img_received.hide();
                    ui.nodes.btn_receive.hide();
                }else{
                    ui.nodes.btn_go.show();
                    ui.nodes.img_received.hide();
                    ui.nodes.btn_receive.hide();
                }
            }else{
                if(data.isreceive == 1){
                    ui.nodes.img_received.show();
                    ui.nodes.btn_go.hide();
                    ui.nodes.btn_receive.hide();
                }else{
                    ui.nodes.btn_receive.show();
                    ui.nodes.btn_receive.setTitleColor(cc.color(G.gc.COLOR.n13))
                    ui.nodes.btn_go.hide();
                    ui.nodes.img_received.hide();
                }
            }

            ui.nodes.img_item.removeAllChildren();
            for(var i = 0; i < conf.prize.length; i ++){
                var item = G.class.sitem(conf.prize[i]);
                // item.setScale(.8);
                item.setAnchorPoint(0.5, 0.5);
                item.setPosition(item.width / 2 + i * 120, ui.nodes.img_item.height / 2);
                ui.nodes.img_item.addChild(item);
                G.frame.iteminfo.showItemInfo(item);
            }

            ui.nodes.btn_receive.click(function (sender, type) {
                G.ajax.send("task_receive", [me.type, data.taskid], function (d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.frame.jiangli.data({
                            prize: d.d.prize
                        }).show();
                        me.getData(function () {
                            me.setContents();
                        });
                        G.hongdian.getData(["succtask", "dailytask"], 1, function () {
                            me.checkRedPoint();
                        })
                    }
                })
            });
            ui.nodes.btn_go.click(function (sender, type) {
                X.tiaozhuan(conf.tujing);
            })
        },
        setBarAndTime: function(dd){
            var me = this;
            var list = me.view.nodes.list_bx;
            var listView = me.view.nodes.listview_bx;

            listView.setItemsMargin(55);
            listView.removeAllChildren();

            dd.sort(function (a, b) {
                return a.pval * 1 < b.pval ? -1 : 1;
            });

            me.view.nodes.img_tiao2.setPercent(dd[0].nval / dd[0].pval * 100);

            for (var i = 1; i < 4; i ++) {
                var jdt = me.view.nodes["img_tiao" + (i + 2)];
                jdt.setPercent(((dd[3].nval - 3) - (i - 1) * 3) / 3 * 100);
            }

            for (var i = 0; i < dd.length; i ++) {
                var li = list.clone();
                var d = dd[i];
                (function (li, d, i) {
                    X.autoInitUI(li);
                    var img = i == dd.length - 1 ? "img_task_bx1" : "img_task_bx2";
                    li.show();
                    li.nodes.text_cs2.setFontName(G.defaultFNT);
                    li.nodes.text_cs2.setString((d.nval > d.pval ? d.pval : d.nval) + "/" + d.pval);
                    li.nodes.text_cs2.setTextColor(cc.color(G.gc.COLOR.n5));
                    X.enableOutline(li.nodes.text_cs2,'#4A1D09',2);
                    li.data = d.prize;
                    li.id = d.taskid;
                    li.is = d.nval >= d.pval ? true : false;
                    if(d.isreceive) {
                        li.nodes.img_ylq.show();
                        li.nodes.panel_bx.setBackGroundImage("img/task/" + img + "_d.png", 1);
                        li.setTouchEnabled(false);
                    }else {
                        li.setTouchEnabled(true);
                        if(d.nval >= d.pval) {
                            X.addBoxAni({
                                parent: li.nodes.panel_bx,
                                boximg: "img/task/" + img + ".png"
                            })
                        }else {
                            li.nodes.panel_bx.setBackGroundImage("img/task/" + img + ".png", 1);
                        }
                    }
                    li.click(function (sender) {
                        if(!sender.is) {
                            G.frame.jiangliyulan.data({
                                prize: sender.data
                            }).show();
                            return;
                        }
                        me.ajax("task_receive", [me.type, sender.id], function (str, data) {
                            if(data.s == 1) {
                                G.frame.jiangli.data({
                                    prize: data.d.prize
                                }).show();
                                me.getData(function () {
                                    me.setContents();
                                });
                                G.hongdian.getData(["succtask", "dailytask"], 1, function () {
                                    me.checkRedPoint();
                                });
                            }
                        });
                    });
                    listView.pushBackCustomItem(li);
                })(li, d, i);
            }

            X.timeout(me.view.nodes.txt_time, X.getTodayZeroTime() + 24 * 3600,function () {
                me.getData(function () {
                    me.setContents();
                });
            });
        },
        setData: function (data) {
            for(var i = 0; i < data.length; i ++){
                var n = data[i].nval;
                var p = data[i].pval;
                var is = data[i].isreceive;
                if(n < p){
                    data[i].rank = 2;
                }else{
                    if(is == 0){
                        data[i].rank = 1;
                    }else{
                        data[i].rank = 3;
                    }
                }
            }
            data.sort(function (a, b) {
                if(a.rank != b.rank) {
                    return a.rank < b.rank ? -1 : 1;
                }else if(a.taskid != b.taskid){
                    return parseInt(a.taskid) > parseInt(b.taskid) ? -1 : 1;
                }
            });
            return data;
        }
    });
    G.frame[ID] = new fun('ui_tip10.json', ID);
})();
;;/**
 * Created by lsm on 2018/7/7.
 */
(function () {
    //设置
    var ID = 'setting';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
            var btns = me.btns;
            X.radio(btns, function (sender) {
                var name = sender.getName();
                var name2type = {
                    0:0,
                    1:1,
                    2:2,
                    3:3,
                };
                me.changeType(name2type[name]);
            });
        },
        bindBtn: function () {
            var me = this;
			
            me.ui.nodes.mask.click(function(){
                //X.cache('music',X.audio.getMusicVolume()*100);
                //X.cache('effect',X.audio.getEffectsVolume()*100);
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initTop();
            me.initUi();
            me.bindBtn();
        },
        initTop:function(){
            var me = this;
            var listview = me.nodes.listview;
            me.btns = [];
            var conf = {
                0:L("WANJIA"),
                1:L('XuanXing'),
                2:L('BangZhu'),
                3:L('FanKui')
            };
            for(var i =0;i<4;i++){
                var list = me.nodes.list.clone();
                setitme(list,conf[i],i);
                listview.pushBackCustomItem(list);
            }
            function setitme(ui,data,idx){
                X.autoInitUI(ui);
                ui.nodes.txt_name.setString(data);
                ui.nodes.btn_1.setName(i)
                ui.setTouchEnabled(true);
                ui.setSwallowTouches(false);
                ui.show();
                me.btns.push(ui.nodes.btn_1);
            }
            for(var i = 0; i < me.btns.length; i ++){
                me.btns[i].getChildren()[0].setTextColor(cc.color("#FFE8C0"));
                X.enableOutline(me.btns[i].getChildren()[0], "#2A1C0F", 2);
            }
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            var type = (me.data() && me.data().tztype) || 1;
            if(type == 1){
                me.btns[0].triggerTouch(ccui.Widget.TOUCH_ENDED)
            }else{
                me.changeType(type);  
            }
        },
        onHide: function () {
            var me = this;
        },
        
        setContents: function () {
            var me = this;

        },
        getData: function(callback, errCall) {
            var me = this;
            G.ajax.send('friend_open', [], function(d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                } else {
                    errCall && errCall();
                }
            }, true);
        },
        changeType: function (type) {
            var me = this;

            if (me.curType && me.curType == type) {
                return;
            }

            me.curType = type;

            var viewConf = {
                "0": G.class.setting_player,
                "1": G.class.setting_options,
                "2": G.class.setting_help,
                "3": G.class.setting_feedback,
            };
            me._panels = me._panels || {};
            for (var _type in me._panels) {
                cc.isNode(me._panels[_type]) && me._panels[_type].hide();
            }
            if (!cc.isNode(me._panels[type])) {
                me._panels[type] = new viewConf[type](type);
                me.ui.nodes.panel_nr.addChild(me._panels[type]);
            }
            me._panels[type].show();
        },
    });

    G.frame[ID] = new fun('setting.json', ID);
})();
;;/**
 * Created by lsm on 2018/6/27
 */
(function() {
    //反馈
    G.class.setting_feedback = X.bView.extend({
        ctor: function(type) {
            var me = this;
            me._type = type;
            me._super('setting_feedback.json');
        },
        refreshPanel: function() {
            var me = this;
            me.setContents();
        },
        bindBTN: function() {
            var me = this;
            me.nodes.btn_commit.click(function(){
                G.frame.setting.remove();
            });
        },
        onOpen: function() {
            var me = this;
            me.bindBTN();
            me.nodes.txtfield.getVirtualRenderer().setLineHeight(40);
        },
        onShow: function() {
            var me = this;
            me.refreshPanel();
        },
        onRemove: function() {
            var me = this;

        },
        setContents: function() {
            var me = this;
            me.nodes.txtfield.setString(L("FK"));
        }
    });
})();
;;/**
 * Created by lsm on 2018/7/7
 */
(function() {
    //帮助
    G.class.setting_help = X.bView.extend({
        ctor: function(type) {
            var me = this;
            me._type = type;
            me._super('setting_help.json');
        },
        refreshPanel: function() {
            var me = this;
            me.getData(function() {
                me.DATA[1] = G.class.support.getHelp();
                me.DATA[2] = G.class.support.getProblem();
                me.nodes.page3.triggerTouch(ccui.Widget.TOUCH_ENDED);
            });
        },
        bindBTN: function() {
            var me = this;
        },
        initUi:function(){
            var me = this;
            var btns = me.ui.finds('panel_page').children;
            X.radio(btns, function (sender) {
                var name = sender.getName();
                var name2type = {
                    page1$:1,
                    page2$:2,
                    page3$:3,
                };
                me.setContents(name2type[name]);
            });
        },
        onOpen: function() {
            var me = this;
            me.initUi();
            me.bindBTN();
            cc.enableScrollBar(me.nodes.listview);
        },
        onShow: function() {
            var me = this;
            me.refreshPanel();
            me.nodes.page2.setEnabled(true);
        },
        onRemove: function() {
            var me = this;

        },
        getData:function(callback){
            var me = this;
            if (me.DATA) {
                callback && callback.call(me);
                return;
            }
            me.DATA = {};
            // G.ajax.send('gonggao_getlist',null,function(data){
            //     data = X.toJSON(data);
            //     if (data.s == 1) {
            //         me.DATA[3] = data.d;
            //         callback && callback.call(me);
            //     }
            // },true);
            if(!G.gonggaoUrl || G.gonggaoUrl=="")return;
            var url = G.gonggaoUrl+"&channel="+ (G.CHANNEL||"") +"&owner="+ (G.owner||"") +"&gamename="+ (G.gameName||"") + "&channelid="+ (G.channelId||"");
            X.ajax.get(url,{},function(txt) {
                var d = X.toJSON(txt);
                me.DATA[3] = d;
                callback && callback(d);
            });

        },
        setContents: function (type) {
            var me = this;
            var listview = me.nodes.listview;
            listview.removeAllChildren();
            cc.enableScrollBar(me.nodes.listview, false);
            var list = me.nodes.list;
            me.posy = 0;
            var data = me.ContentData = me.DATA[type];
            for(var i in data){
                var item = list.clone();
                item.idx = i;
                me.setItem(item);
                listview.pushBackCustomItem(item);
                item.show();
            }
        },
        
        setItem: function (item) {
            var me = this;
            X.autoInitUI(item);
            me.defBtnPos = item.nodes.btn_list.getPosition();
            me.defBtnPos.y = 66;
            me.defInfoPos = item.nodes.panel_info.getPosition();
            item.nodes.txt_title.setString(me.ContentData[item.idx].title);
            X.enableOutline(item.nodes.txt_title,'#7b531a',2);
            // item.setContentSize(item.width,item.height + me.richHeight);
            item.nodes.btn_list.setPositionY(item.height);
            // item.nodes.panel_info.setPositionY(item.height - item.nodes.btn_list.height);
            item.nodes.btn_list.setTouchEnabled(true);
            item.nodes.btn_list.setSwallowTouches(false);
            item.isExt = false;
            item.nodes.img_arrow_off.show();
            item.nodes.btn_list.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE){
                    var item = this;
                    item.isExt = !item.isExt;
                    if (item.isExt) {
                        me.showContent(item);
                    }else{
                        me.hideContent(item,true);
                    }
                }
            },item);
        },
        showContent: function (item) {
            var me = this;
            var idx = item.idx;
            X.autoInitUI(item);
            me.setItemContent(item);
            item.setContentSize(item.width,item.height + me.richHeight);
            item.nodes.btn_list.setPositionY(item.height);
            item.nodes.panel_info.setPositionY(item.height - item.nodes.btn_list.height + 10);
            me.updateListViewSize(item.height + me.richHeight,idx);
        },
        setItemContent:function(item){
            var me = this;
            var idx = item.idx;
            var data = me.ContentData[idx];
            var rt =new X.bRichText({
                size: 22,
                maxWidth:item.nodes.btn_list.width - 30,
                lineHeight:36,
                color:'#804326',
                family: G.defaultFNT
            });
            rt.text(data.content);
            rt.setAnchorPoint(0,0);
            me.richHeight = rt.trueHeight() + 30;
            me.defWidth =  item.nodes.btn_list.width;
            rt.setPosition(10,me.richHeight * 0.6);
            item.nodes.panel_info.removeAllChildren();
            item.nodes.panel_info.addChild(rt);
            item.nodes.panel_info.setContentSize(cc.size(me.defWidth - 10, me.richHeight));
            item.nodes.panel_info.setBackGroundImage('img/public/bg_xinxi12.png',1);
            rt.setPosition(7,(item.nodes.panel_info.height - rt.trueHeight()) / 2);
            item.nodes.img_arrow_on.show();
            item.nodes.img_arrow_off.hide();
            item.nodes.txt_title.setString(data.title);  
        },
        hideContent: function (item,isUpdate) {
            var me = this;
            var idx = item.idx;
            var h = item.height;
            item.nodes.img_arrow_on.hide();
            item.nodes.img_arrow_off.show();
            item.nodes.panel_info.removeAllChildren();
            // item.nodes.btn_list.setPositionY(0);
            item.nodes.btn_list.setPosition(me.defBtnPos);
            item.nodes.panel_info.setPosition(me.defInfoPos);
            item.nodes.panel_info.setContentSize(item.nodes.btn_list.width,0);
            item.nodes.panel_info.removeBackGroundImage();
            item.setContentSize(item.nodes.btn_list.getContentSize());
            if (isUpdate) {
                me.updateListViewSize(-h, idx);
            }
        },
        updateListViewSize: function (h, startIdx) {
            var me = this;
            var listView = me.nodes.listview;
            var y = listView.getInnerContainer().y;
            var children = listView.getChildren();
            var allH = 0;
            for (var i = 0; i < children.length; i++){
                var child = children[i];
                allH += child.height;
            }
            var size = listView.getInnerContainerSize();
            if (allH < listView.getContentSize().height){
                listView.setInnerContainerSize(listView.getContentSize());
                //listView.getInnerContainer().setPositionY(0);
                var ah = 0;
                for (var i = 0; i < children.length; i++){
                    var child = children[i];
                    child.setPositionY(listView.getContentSize().height - ah);
                    ah += child.height;
                }

                me.ui.setTimeout(function () {
                    // listView.scrollToTop(0.1,true);
                },0,0,0.01);
            }else{
                size.height = allH;
                listView.setInnerContainerSize(size);
                y -= h;
                //listView.getInnerContainer().setPositionY(y > 0 ? 0 : y);
                var ah = 0;
                for (var i = startIdx; i > -1; i--){
                    var child = children[i];
                    child.setPositionY(child.y + h);
                }

                me.ui.setTimeout(function () {
                    if (y >= 0) {
                        // listView.scrollToBottom(0.1, true);
                    }else{
                        var minY = listView.getContentSize().height - listView.getInnerContainerSize().height;
                        var per = (y - minY)/-minY;
                        // listView.scrollToPercentVertical(per,0.1,true);
                    }
                },0,0,0.01);
            }
        },
    });
})();
;;/**
 * Created by lsm on 2018/6/27
 */
(function() {
    //好友列表
    G.class.setting_options = X.bView.extend({
        ctor: function(type) {
            var me = this;
            me._type = type;
            me._super('setting_option.json');
        },
        refreshPanel: function() {
            var me = this;
            me.setOptions();
            me.setContents();
        },
        bindBTN: function() {
            var me = this;
            me.nodes.btn_change.click(function(){
                var code = me.nodes.text_lpmmc.getString();
                if(code.trim() == "") {
                    G.tip_NB.show(L("QSRDHM"));
                    return;
                }
                X.ajax.get(
                    X.STR(G.check_card_url, P.gud.uid, encodeURIComponent(P.gud.name), code, G.owner||""), {},
                    function (txt) {
                        var d = X.toJSON(txt);
                        if(d.result == 0) {
                            G.ajax.send("user_getcard", [d.code], function (data) {
                                data = X.toJSON(data);
                                if(data.s == 1){
                                    G.frame.jiangli.data({
                                        prize: data.d
                                    }).show();
                                    //me.remove();  不存在的方法
                                }
                            })
                        }else{
                            G.tip_NB.show(d.result);
                        }
                    }
                )
            });

            me.nodes.btn_music.zIndex = 9999;
            me.nodes.btn_music.click(function(sender){
                if (!sender.isbright){
                    sender.isbright = true;
                    sender.loadTextureNormal('img/setting/btn_setting_on1.png',1);

                    var _musicVal = X.cache("music")
                    if(_musicVal==null)_musicVal=50;
                    me.setMusicVol(_musicVal);

                    //X.audio.setMusicVolume(me._music / 100 || 50 / 100);
                    //me.sl_music.setPercent(me._music || 50);
                }else{
                    sender.isbright = false;
                    sender.loadTextureNormal('img/setting/btn_setting_off1.png',1);
                    //X.audio.setMusicVolume(0);
                    //me.sl_music.setPercent(0);
                    me.setMusicVol(0);
                }
            });
            me.nodes.btn_sound.zIndex = 9999;
            me.nodes.btn_sound.click(function(sender){
                if (!sender.isbright){
                    sender.isbright = true;
                    sender.loadTextureNormal('img/setting/btn_setting_on2.png',1);
                    //X.audio.setEffectsVolume(me._effect / 100 || 50 / 100);
                    //me.sl_effect.setPercent(me._effect || 50);
                    //X.cache("effect", me._effect || 50);
                    var _musicVal = X.cache("effect")
                    if(_musicVal==null)_musicVal=50;
                    me.setEffVol(_musicVal);
                }else{
                    sender.isbright = false;
                    sender.loadTextureNormal('img/setting/btn_setting_off2.png',1);
                    //X.audio.setEffectsVolume(0);
                    //me.sl_effect.setPercent(0);
                    //X.cache("effect", 0);
                    me.setEffVol(0);
                }
            });

            me.sliderHandler = function (sender,type) {
                if (type == ccui.Slider.EVENT_PERCENT_CHANGED){
                    var t = sender.type,
                        percent = sender.getPercent();
                    if (t == 'effect'){
                        //X.audio.setEffectsVolume(percent/100);
                        //X.cache("effect", percent);
                        //me._effect = percent;
                        me.setEffVol(percent);

                        if (percent == 0){
                            me.nodes.btn_sound.isbright = false;
                            me.nodes.btn_sound.loadTextureNormal('img/setting/btn_setting_off2.png',1);
                        }else if (percent > 0 && !me.nodes.btn_sound.isbright){
                            me.nodes.btn_sound.isbright = true;
                            me.nodes.btn_sound.loadTextureNormal('img/setting/btn_setting_on2.png',1);
                        }
                    }else if (t == 'music'){
                        //X.audio.setMusicVolume(percent/100);
                        //X.cache("music", percent);
                        //me._music = percent;

                        me.setMusicVol(percent);
                        if (percent == 0){
                            me.nodes.btn_music.isbright = false;
                            me.nodes.btn_music.loadTextureNormal('img/setting/btn_setting_off1.png',1);
                        }else if (percent > 0 && !me.nodes.btn_music.isbright){
                            me.nodes.btn_music.isbright = true;
                            me.nodes.btn_music.loadTextureNormal('img/setting/btn_setting_on1.png',1);
                        }
                    }
                }
            };

            me.sl_music =  me.nodes.img_slider1;
            me.sl_effect =  me.nodes.img_slider2;
            me.sl_music.type = 'music';
            me.sl_effect.type = 'effect';
            me.sl_music.addEventListener(me.sliderHandler,me);
            me.sl_effect.addEventListener(me.sliderHandler,me);
        },

        //0~100
        setEffVol : function(num){
            var me = this;
            X.audio.setEffectsVolume(num/100*1.0);
            cc.isNode(me.sl_effect) && me.sl_effect.setPercent(num*1);
            X.cache("effect", num+"");
        },
        setMusicVol : function(num){
            var me = this;
            X.audio.setMusicVolume(num/100*1.0);
            cc.isNode(me.sl_music) && me.sl_music.setPercent(num*1);
            X.cache("music", num+"");
        },

        onOpen: function() {
            var me = this;
            me.bindBTN();

            me.nodes.text_lpmmc.setTextVerticalAlignment(1);
            X.editbox.create(me.nodes.text_lpmmc);
        },
        onShow: function() {
            var me = this;
            me.refreshPanel();
        },
        onRemove: function() {
            var me = this;

        },
        setContents: function() {
            var me = this;
            me.setUserInfo();
        },
        onNodeShow: function() {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }
        },
        setOptions:function(){
            var me = this;

            me._music = X.cache('music');
            me._effect = X.cache('effect');
            me.sl_music.setPercent(me._music);
            me.sl_effect.setPercent(me._effect);

            if (me._music == '0'){
                me._music = 0;
                me.nodes.btn_music.isbright = false;
                me.nodes.btn_music.loadTextureNormal('img/setting/btn_setting_off1.png',1);
            }else{
                if (!me._music) me._music = 100;
                me._music *= 1;
                me.nodes.btn_music.isbright = true;
                me.nodes.btn_music.loadTextureNormal('img/setting/btn_setting_on1.png',1);
            }
            me.sl_music.setPercent(me._music);

            if (me._effect == '0'){
                me._effect = 0;
                me.nodes.btn_sound.isbright = false;
                me.nodes.btn_sound.loadTextureNormal('img/setting/btn_setting_off2.png',1);
            }else{
                if (!me._effect) me._effect = 50;
                me._effect *= 1;
                me.nodes.btn_sound.isbright = true;
                me.nodes.btn_sound.loadTextureNormal('img/setting/btn_setting_on2.png',1);
            }
            me.sl_effect.setPercent(me._effect);
        },
        setUserInfo:function(){
            var me = this;
            var tx = me.nodes.panel_tx;
            var name = me.nodes.txt_name;
            var id = me.nodes.txt_id;

            var head = G.class.shead(P.gud);
            head.setAnchorPoint(0,0);
            tx.addChild(head);
            name.setString(P.gud.name);

            var rt =new X.bRichText({
                size: 22,
                maxWidth:id.width,
                lineHeight:36,
                family: G.defaultFNT,
                color:'#804326'
            });
            rt.text(X.STR(L('UUID'),P.gud.uuid));
            // rt.setAnchorPoint(0,0);
            id.addChild(rt);
        }
    });
})();
;;/**
 * Created by llx on 2018/11/26.
 */

(function() {
    //聊天框
    G.class.liaotiankuang = X.bView.extend({
        ctor: function(type) {
            var me = this;
            G.frame.liaotiankuang = me;
            me._type = type;
            me._super('setting_liaotiankuang.json');
        },
        initUi: function () {
            var me = this;
        },
        onOpen: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;
            me.flagId = P.gud.chatborder
            me.getData(function(){
                me.setContents();
            });
            cc.enableScrollBar(me.nodes.scrollview_ltk);
        },

        setContents: function(){
            var me= this;
            var scrollview = me.nodes.scrollview_ltk;
            var chatborder = G.class.zaoxing.getChat()
            var data=[];
            for(var i in chatborder){
                data[i] = chatborder[i];
                data[i].rank = i;
            }
            data.sort(function (a,b){
                if(a.rank != b.rank){
                    return a.rank < b.rank ?-1 : 1;
                }
            });
            var table = me.table = new X.TableView(scrollview, me.nodes.list_ltk,1,
                function (ui, data) {
                    me.setItem (ui, data);
                },null, null,10 ,8);
            table.setData(data);
            table.reloadDataWithScroll(true);

        },
        setHeadData:function(data, allData){
            for(var i in data) {
                if(!X.inArray(allData, data[i])) {
                    allData.push(data[i]);
                }
            }
            return allData;
        },

        setItem: function (ui, data) {
            var me = this;
            X.autoInitUI(ui);
            ui.nodes.btn_qwhq.hide();
            ui.nodes.img_txgoudi.hide();

            ui.nodes.btn_qwhq.click(function () {
                X.tiaozhuan(data.tiaozhuan)
            });

            if(data.rank == 1) {
                ui.nodes.img_txgoudi.show();
            } else if(data.rank == 2) {
                if(P.gud.vip >= 11) {
                    ui.nodes.img_txgoudi.show();
                } else {
                    ui.nodes.btn_qwhq.show();
                }
            } else {
                if(X.inArray(me.DATA.v, data.rank)) {
                    ui.nodes.img_txgoudi.show();
                } else {
                    ui.nodes.btn_qwhq.show();
                }
            }

            if(!data.tiaozhuan) {
                ui.nodes.btn_qwhq.hide();
            }


            X.render({
                img_ltk:function (node) {

                    node.loadTexture('img/public/chat_0'+ data.rank + '.png', 1)
                },
                txt_ltkwz1:data.name,
                txt_ltkwz2:data.intr,
                img_txgou:function(node) {
                    if(me.flagId==data.rank){
                        node.show();
                        me.oldui=ui;
                    }else{
                        node.hide();
                    }
                },
                txt_yj: function (node) {
                    if(data.rank == 1 || data.rank == 2) {
                        node.setString(L("YJ"));
                    } else {
                        if(!X.inArray(me.DATA.v, data.rank)) {
                            node.setString(X.moment(data.ptime, {
                                d: "{1}天",
                                h: "{1}小时",
                                mm: "{1}分钟",
                                j: "1分以内"
                            }));
                        } else {
                            node.setString(X.moment(me.DATA.time[data.rank] - G.time));
                        }
                    }
                }

            }, ui.nodes);
            if(data.rank==1){
                ui.nodes.txt_ltkwz1.setTextColor(cc.color("#c9721a"));
                ui.nodes.txt_ltkwz2.setTextColor(cc.color("#804326"));
            }else if(data.rank== 4){
                ui.nodes.txt_ltkwz1.setTextColor(cc.color("#ff2e1d"));
                ui.nodes.txt_ltkwz2.setTextColor(cc.color("#f5ff37"));
            } else {
                ui.nodes.txt_ltkwz1.setTextColor(cc.color("#f5ff37"));
                ui.nodes.txt_ltkwz2.setTextColor(cc.color("#f5ff37"));
            }
            ui.nodes.img_txgoudi.setTouchEnabled(true);
            ui.nodes.img_txgoudi.touch(function (sender, type){
                if(type == ccui.Widget.TOUCH_NOMOVE) {
                    if (sender.data == me.flagId){
                        return;
                    }
                    G.ajax.send('user_changeborder',['chatborder', data.rank],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                            me.oldui.nodes.img_txgou.hide();
                            ui.nodes.img_txgou.show();
                            me.oldui=ui;
                            G.view.toper.updateHead();

                        }
                    },true);
                }
            })
        },
        getData: function(callback){
            var me= this;
            G.ajax.send('user_getborder',['chat'],function(d){
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1){
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        onRemove: function() {
            var me = this;

        }

    });
})();
;;/**
 * Created by llx on 2018/11/26.
 */
(function (){
    //头像和框
    var ID = 'shejiao'

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;
            me.topMenu = new G.class.topMenu(me, {
                btns: X.clone(G.class.menu.get('shejiao'))
            });
            me.nodes.listview.setTouchEnabled(true);
        },
        changeType: function (sender) {
            var me = this;
            if(sender.data){
                var type = sender.data.id;
            }else{
                var type = sender;
            }
            if(sender.disable) {
                G.tip_NB.show(sender.show);
                return;
            }
            me.curType = type;
            var viewConf = {
                "1": G.class.touxiang,
                "2": G.class.touxiangkuang,
                "3": G.class.liaotiankuang
            };

            var newView = new viewConf[type];
            me.ui.nodes.panel_nr.addChild(newView);

            if(cc.isNode(me._panels)){
                me._panels.removeFromParent();
                me._panels = newView;
            }else{
                me._panels = newView;
            }

            // me._panels = me._panels || {};
            // for (var _type in me._panels) {
            //     cc.isNode(me._panels[_type]) && me._panels[_type].hide();
            // }
            // if (!cc.isNode(me._panels[type])) {
            //     me._panels[type] = new viewConf[type](type);
            //     me.ui.nodes.panel_nr.addChild(me._panels[type]);
            // }
            // me._panels[type].isShow = true;
            // for(var i in me._panels) {
            //     if(i != type) {
            //         me._panels[i].isShow = false;
            //     }
            // }
            // me._panels[type].show();
        },
        bindBtn: function() {
            var me = this;
            me.ui.nodes.mask.click(function(){
                me.remove();
            })
        },

        onOpen:function() {
            var me = this;
            me.fillSize();
            me.bindBtn();
            me.initUi();
        },

        onShow: function() {
            var me = this;
            var type = (me.data() && me.data().tztype) || 1;
            me.topMenu.changeMenu(type);
        },

    });
    G.frame[ID] = new fun('setting.json', ID);
})();
;;/**
 * Created by llx on 2018/11/26.
 */

(function() {
    //头像
    G.class.touxiang = X.bView.extend({
        extConf:{
            defaultStar:3
        },
        ctor: function(type) {
            var me = this;
             G.frame.touxiang = me;
            me._type = type;
            me._super('setting_touxiang.json');
        },

        bindBtn: function() {
            var me = this;
        },

        onOpen: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;
            me.flagId = P.gud.head;
            me.getData(function () {
                me.setContents();
            });
            cc.enableScrollBar(me.nodes.scrollview_tx);
        },
        getData: function(callback) {
            var me= this;
            G.ajax.send('user_avaterlist',[], function(d){
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1){
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;
            var scrollview = me.nodes.scrollview_tx;
            var data = me.DATA.avaterlist;

            var treeStarData = G.class.hero.getHidArrByStar(me.extConf.defaultStar);
            data = me.setHeadData(data,treeStarData);

            //只有在配置中存在的英雄才能处理
            var inConfHeros = [];
            cc.each(data,function(hid){
                if(G.class.zaoxing.getById('head',hid) || G.class.zaoxing.getById
                ('head',hid.split("_")[0])){
                    inConfHeros.push(hid);
                }
            });
            data = inConfHeros;

            if(P.gud.vip >= 5) {
                data.push("1000");
            }

            data.sort(function (a,b){
                return a * 1 < b * 1 ? -1 : 1;
            });

            var table = me.table = new X.TableView(scrollview,me.nodes.list_flag,5,
                function (ui, data) {
                    me.setItem(ui, data);
                },null,null,10, 10);
            table.setData(data);
            table.reloadDataWithScroll(true);

        },
        setHeadData:function(data, allData){
            for(var i in data) {
                if(!X.inArray(allData, data[i])) {
                    allData.push(data[i]);
                }
            }
            return allData;
        },
        setItem: function (ui, data) {
            var me = this;
            X.autoInitUI(ui);

            X.render({
                panel_tx: function (node) {
                    node.removeBackGroundImage();
                    node.setBackGroundImage('img/public/ico/ico_bg' + 0 + '.png', 1)
                },
                panel_flag: function(node){
                    node.setScale(.9);
                    node.removeBackGroundImage();
                    var img;
                    if(data.split("_").length > 1) {
                        img = G.class.zaoxing.getById('head',data.split("_")[0]).cond
                            [1].toString();
                        img[img.length - 1] = "a";
                    } else {
                        img = G.class.zaoxing.getById('head',data).cond[1];
                    }
                    node.setBackGroundImage('ico/itemico/' + G.class.fmtItemICON(img) + '.png',0);
                },
                img_confirm: function (node) {
                    node.hide();
                    if (me.flagId == data) {
                        node.show();
                    } else {
                        node.hide();
                    }
                },
            },ui.nodes);

            ui.data = data;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    if (sender.data == me.flagId) {
                        return;
                    }
                    G.ajax.send('user_changeavater',[sender.data],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                            G.view.toper.updateHead();
                            me.flagId = sender.data;

                            var chr = me.table.getAllChildren();
                            
                            for (var i in chr) {
                                if(chr[i].data == me.flagId) {
                                    chr[i].finds("img_confirm$").show();
                                } else {
                                    chr[i].finds("img_confirm$").hide();
                                }
                            }
                        }
                    },true);


                }
            });
        }

    });
})();
;;/**
 * Created by llx on 2018/11/26.
 */

(function() {
    //头像框
    G.class.touxiangkuang= X.bView.extend({
        ctor: function(type) {
            var me = this;
            G.frame.touxiangkuang = me;
            me._type = type;
            me._super('setting_touxiangkuang.json');
        },
        initUi: function () {
            var me = this;
        },
        onOpen: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;
            me.flagId = P.gud.headborder;
            cc.enableScrollBar(me.nodes.scrollview_txk);
           // me.setContents();
            me.getData(function(){
                me.setContents();
            });
        },


        setContents: function(){
            var me= this;
            var scrollview = me.nodes.scrollview_txk;
            var headborder = G.class.zaoxing.getHeadBorder();
            var data=[];
            for(var i in headborder){

                 data[i] = headborder[i];
                 data[i].rank = i;
            }
            data.sort(function (a,b){
               if(a.rank != b.rank){
                   return a.rank < b.rank ?-1 : 1;
               }
            });
            var table = me.table = new X.TableView(scrollview, me.nodes.list_txk,1,
            function (ui, data) {
                me.setItem (ui, data);
            },null, null,10 ,8);
            table.setData(data);
            table.reloadDataWithScroll(true);

        },
        setHeadData:function(data, allData){
            for(var i in data) {
                if(!X.inArray(allData, data[i])) {
                    allData.push(data[i]);
                }
            }
            return allData;
        },
        setItem: function (ui, data) {
            var me = this;
            X.autoInitUI(ui);
            if(data.cond.length == 2){
                ui.nodes.img_txgoudi.show();
                if(data.rank == 2) {
                    if (P.gud.vip >= 12) {
                        ui.nodes.img_txgoudi.show();
                    } else {
                        ui.nodes.img_txgoudi.hide();
                        ui.nodes.btn_qwhq.show();
                        ui.nodes.txt_yxq.hide();
                        ui.nodes.txt_yj.hide();
                        ui.nodes.btn_qwhq.click(function () {
                            X.tiaozhuan(37);
                        });
                    }
                }
            }else{
                if(data.rank == 3){
                    if(X.inArray(me.DATA.v, data.rank)) {
                        ui.nodes.img_txgoudi.show();
                    } else {
                        ui.nodes.img_txgoudi.hide();
                        ui.nodes.btn_qwhq.show();
                        ui.nodes.txt_yxq.hide();
                        ui.nodes.txt_yj.hide();
                        ui.nodes.btn_qwhq.click(function(){
                            X.tiaozhuan(10);
                        });
                    }
                }
            }
            X.render({
                panel_txk:function (node) {
                    node.removeBackGroundImage();
                    node.setBackGroundImage('img/public/head_0'+ data.rank + '.png', 1)
                },
                panel_tx:function(node) {
                    node.removeAllChildren();
                    var head = G.class.shead(P.gud, null, null, true);
                    head.setAnchorPoint(0.5, 0.5);
                    head.setPosition(node.width / 2 - 2, node.height / 2);
                    head.kuang.hide();
                    head.background.hide();
                    head.lv.hide();
                    node.addChild(head);

                },
                txt_txkwz1:data.name,
                txt_txkwz2:data.intr,
                img_txgou:function(node) {
                    if(me.flagId==data.rank){
                        node.show();
                        me.oldui=ui;
                    }else{
                        node.hide();
                    }
                },
                txt_yj: function (node) {
                    if(me.DATA.time[data.rank]) {
                        node.setString(X.moment(me.DATA.time[data.rank] - G.time));
                    } else {
                        node.setString(L("YJ"));
                    }
                }

            }, ui.nodes);
            if(data.rank==1){
                ui.nodes.txt_txkwz1.setTextColor(cc.color("#c9721a"));
            }else if(data.rank==2){
                ui.nodes.txt_txkwz1.setTextColor(cc.color("#fb5e1e"));
            }else if(data.rank==3){
                ui.nodes.txt_txkwz1.setTextColor(cc.color("#fb192d"));
            }
            ui.nodes.img_txgoudi.setTouchEnabled(true);
            ui.nodes.img_txgoudi.touch(function (sender, type){
                if(type == ccui.Widget.TOUCH_NOMOVE) {
                    if (sender.data == me.flagId){
                        return;
                    }
                    G.ajax.send('user_changeborder',['headborder', data.rank],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                            G.view.toper.updateHead();
                            me.oldui.nodes.img_txgou.hide();
                            ui.nodes.img_txgou.show();
                            me.oldui=ui;
                            G.view.toper.updateHead();

                        }
                    },true);
                }
            })
        },
        getData: function(callback){
            var me= this;
            G.ajax.send('user_getborder',['head'],function(d){
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1){
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        onRemove: function() {
            var me = this;

        }

    });
})();
;;/**
 * Created by LYF on 2018/6/2.
 */
(function () {
    //神兵选择
    var ID = 'shenqi_xuanze';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;

            me.nodes.txt_title.setString(L("SQCD"));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            me.sqid = me.data() && me.data().sqid || "";
            me.curId = me.sqid;
            me.callback = me.data() && me.data().callback || undefined;
            me.callback1 = me.data() && me.data().callback1 || undefined;
            me.sqidArr = me.data() && me.data().sqArr || undefined;
            me.idx = me.data() && me.data().idx;
            me.ui.finds("listview").show();
            cc.enableScrollBar(me.ui.finds("listview"));
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback) {
            var me = this;

            G.ajax.send('artifact_open', [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;
            
            new X.bView("shenbing_chuandai.json", function (node) {
                me.ui.addChild(node);
                node.hide();
                me.list = node.finds("list1");
                me.setContents();
            })
        },
        onHide: function () {
            var me = this;

            if(me.sqid !== me.curId) {
                me.callback && me.callback(me.curId);
            }else {
                me.callback1 && me.callback1();
            }
        },
        setContents: function () {
            var me = this;
            var conf = G.class.shenqi.get();
            var keys = X.keysOfObject(conf);

            me.ui.finds("listview").removeAllChildren();

            for(var i = 0; i < keys.length; i ++) {
                me.setItem(conf[keys[i]], i + 1);
            }
        },
        setItem: function (conf, sqid) {
            var me = this;
            var list = me.list.clone();

            list.finds("shenbing").x += 38;
            list.finds("shenbing").y += 25;
            list.finds("shenbing").zIndex = 888;
            // list.finds("btn1").loadTextureNormal("img/shenbing/shenbing_diban" + sqid + ".png", 1);
            list.finds("btn1").loadTextures("img/shenbing/shenbing_diban" + sqid + ".png","img/shenbing/shenbing_diban" + sqid + ".png",'img/shenbing/shenbing_diban_hui.png',1);
            if(P.gud.artifact < sqid || !P.gud.artifact) {
                list.finds("btn1").setBright(false);
                list.finds("btn2").hide();
                list.finds("btn3").hide();
                list.finds("btn4").hide();
                var img_sb = list.finds("shenbing");
                img_sb.setPosition(0,0);
                // img_sb.setScale(0.5);
                img_sb.setBackGroundImage("img/shenbing/shenbing_wq_0" + sqid + ".png", 0);
                list.finds("btn4").click(function () {
                    G.frame.shenqi.show();
                    me.remove();
                })
                // G.class.ani.show({
                //     json: "shenbing_0" + sqid,
                //     addTo: img_sb,
                //     x: img_sb.width / 2,
                //     y: img_sb.height / 2,
                //     repeat: true,
                //     autoRemove: false,
                //     onload: function(node, action) {
                //         action.gotoFrameAndPause(0);
                //         // X.forEachChild(node,function(n){
                //         //     if(n instanceof cc.Sprite ){
                //         //         n.setColor(cc.color('#666666'));
                //         //     }
                //         // })
                //     }
                // });
            }else {
                list.finds("btn1").setBright(true);
                list.finds("btn2").show();
                list.finds("btn3").hide();
                var img_sb = list.finds("shenbing");
                // img_sb.setScale(0.5);
                img_sb.setPosition(0,0);
                img_sb.setBackGroundImage("img/shenbing/shenbing_wq_0" + sqid + ".png", 0);
                G.class.ani.show({
                    json: "ani_shenbing_peidaitexiao0" + sqid,
                    addTo: list.finds("btn1"),
                    x: list.finds("btn1").width / 2,
                    y: list.finds("btn1").height / 2,
                    repeat: true,
                    autoRemove: false,
                });
                // var act1 = cc.moveBy(1, 0, 10);
                // var act2 = cc.moveBy(1, 0, -10);
                // var act = cc.sequence(act1, act2);
                // img_sb.runAction(act.repeatForever());
                // G.class.ani.show({
                //     json: "shenbing_0" + sqid,
                //     addTo: img_sb,
                //     x: img_sb.width / 2,
                //     y: img_sb.height / 2,
                //     repeat: true,
                //     autoRemove: false,
                //     onload: function(node, action) {
                //         var act1 = cc.moveBy(1, 0, 10);
                //         var act2 = cc.moveBy(1, 0, -10);
                //         var act = cc.sequence(act1, act2);
                //         node.setTag(7456);
                //         node.runAction(act.repeatForever());
                //     }
                // });
                if(me.sqidArr) {
                     if(X.inArray(me.sqidArr, sqid) && me.sqidArr[me.idx] !== sqid) {
                         list.finds("yzb").show();
                         list.finds("btn2").show();
                         // G.class.ani.show({
                         //     json: "ani_shenbing_peidaitexiao0" + sqid,
                         //     addTo: list.finds("btn1"),
                         //     x: list.finds("btn1").width / 2,
                         //     y: list.finds("btn1").height / 2,
                         //     repeat: true,
                         //     autoRemove: false
                         // });
                         // list.finds("btn3").show();
                         // list.finds("btn3").getChildren()[0].setString(L("XX"));
                         list.finds("btn2").click(function () {
                             G.tip_NB.show(L("BKXXQTDWSQ"));
                         })
                     }else {
                         if(sqid == me.curId) {
                             list.finds("yzb").show();
                             list.finds("btn2").show();
                             // list.finds("btn3").hide();
                             list.finds("btn2").click(function () {
                                 me.curId = "";
                                 me.setContents();
                             })
                         }else {
                             list.finds("yzb").hide();
                             list.finds("btn3").show();
                             list.finds("btn3").click(function () {
                                 me.curId = sqid;
                                 me.setContents();
                             });
                         }
                     }
                }else {
                    if(sqid == me.curId) {
                        list.finds("yzb").show();
                        
                        list.finds("btn2").show();
                        list.finds("btn3").hide();
                        // list.finds("btn3").getChildren()[0].setString(L("XX"));
                        list.finds("btn2").click(function () {
                            me.curId = "";
                            me.setContents();
                        })
                    }else {
                        list.finds("yzb").hide();
                        list.finds("btn2").hide();
                        list.finds("btn3").show();
                        list.finds("btn3").click(function () {
                            me.curId = sqid;
                            me.setContents();
                        });
                    }
                }
            }
            list.finds("btn_xqdi").click(function () {
                var artifact = me.DATA.artifact[sqid];
                if(!artifact) {
                    artifact = {
                        lv: 1,
                        djlv: 0
                    }
                }
                if(artifact.lv > 1){
                    G.frame.shenqi_xq.data({
                        id: sqid,
                        jh: true,
                        lv: artifact.lv,
                        djlv: artifact.djlv,
                    }).show();
                }else{
                    G.frame.shenqi_xq1.data({
                        id: sqid,
                    }).show();
                }
            });
            list.finds('btn_xq').click(function(){
                var artifact = me.DATA.artifact[sqid];
                if(!artifact) {
                    artifact = {
                        lv: 1,
                        djlv: 0
                    }
                }
                if(artifact.lv > 1){
                    G.frame.shenqi_xq.data({
                        id: sqid,
                        jh: true,
                        lv: artifact.lv,
                        djlv: artifact.djlv,
                    }).show();
                }else{
                    G.frame.shenqi_xq1.data({
                        id: sqid,
                    }).show();
                }
            });
            me.ui.finds("listview").pushBackCustomItem(list);
        }
    });
    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by LYF on 2018/9/13.
 */
(function () {
    //神器
    var ID = 'shenqi';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me.preLoadRes = ['gonghui.plist', 'gonghui.png'];
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_fh.click(function () {
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.sethui();
            me.nodes.list1.finds("p1").setEnabled(true);

        },
        sethui: function() {
            var me = this;
            var num = P.gud.artifact || 0;

            for(var i = 1; i < 6; i ++) {
                if(num >= i - 1) {
                    me.nodes["list" + i].show();
                    me.ui.finds("hui_" + i).hide();
                }else {
                    me.nodes["list" + i].hide();
                    me.ui.finds("hui_" + i).show()
                }
            }
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback) {
            var me = this;

            G.ajax.send('artifact_open', [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;

            me.action.playWithCallback("animation0", false, function () {
                me.setContents();
                me.checkRedPoint();
                me.ui.setTimeout(function () {
                    G.guidevent.emit("tulongzhiluOpenOver");
                }, 300)
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            function setBtn(target, data, idx) {
                if(idx == 1) G.frame.shenqi.nodes.btn_hmzr = target;
                target.setBright(data ? false : true);
                target.idx = idx;
                target.click(function (sender) {
                    if(!data) {
                        G.tip_NB.show(L("SQ_QXWC"));
                        return;
                    }
                    if(G.guide.view){
                        G.frame.shenqi_info.data({
                            id: idx,
                            artifact: data,
                        }).show();
                    }else if(G.frame.shenqi_info.curId && G.frame.shenqi_info.curId != idx){
                        G.frame.shenqi_info.data({
                            id: sender.idx,
                            artifact: data,
                        }).show();
                    }
                    me.remove();
                })
            }

            for(var i = 1; i < 6; i ++) {
                setBtn(me.nodes["list" + i].finds("p1"), me.DATA.artifact[i], i);
            }
        },
        checkRedPoint: function() {
            var me = this;
            var isHave = false;

            for(var i = 0; i < 6; i ++) {
                G.removeNewIco(me.nodes["list" + i]);
            }

            var idx = X.keysOfObject(me.DATA.artifact).length;
            var task = G.class.shenqi.getTaskById(idx);

            for(var i in me.DATA.task) {
                if(me.DATA.task[i].val >= task[i].val && me.DATA.task[i].finish < idx) {
                    isHave = true;
                    break;
                }
            }

            if(isHave) {
                G.setNewIcoImg(me.nodes["list" + idx]);
                me.nodes["list" + idx].getChildByName("redPoint").setPosition(idx % 2 == 0 ? {x: 500, y: 140} : {x: 300, y: 140});
            }
        },
        checkShow: function () {
            var me = this;
            if(G.guide.view && !P.gud.artifact){
                me.show();
            }else if(!P.gud.artifact || P.gud.artifact < 5){
                me.getData(function(){
                    G.frame.shenqi_info.data({
                        id: P.gud.artifact ? P.gud.artifact + 1 : 1,
                        artifact: me.DATA.artifact[P.gud.artifact],
                    }).show();
                });
            }else if(P.gud.artifact && P.gud.artifact == 5){
                 G.frame.shenqi_list.show();
            }
            // if(P.gud.artifact && P.gud.artifact == 5) {
            //     G.frame.shenqi_list.show();
            // }else {
            //     me.show();
            // }
        }
    });
    G.frame[ID] = new fun('shenbing.json', ID);
})();
;;    /**
 * Created by LYF on 2018/6/2.
 */
(function () {
    //神器信息
    var ID = 'shenqi_info';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.shenbing.click(function(sender, type){
                G.frame.shenqi_xq1.data({
                    id: me.curId,
                }).show();
            });

            me.nodes.btn_wz.touch(function(sender, type){
                if(type == ccui.Widget.TOUCH_ENDED){
                 G.frame.shenqi_xq1.data({
                    id: me.curId,
                }).show();                   
               }
           });

            me.nodes.btn_fh.click(function () {
                me.remove();
            });
            me.ui.finds('btn_tulong').click(function(){
                G.frame.shenqi.show();
                // me.remove();
            });
            me.ui.finds("btn_tanxian").click(function () {
                G.frame.tanxian.show();
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.defNr2 = me.ui.finds("bg2").getSize();  
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.isActive = 0;
            me.curId = me.data().id;
            me.DATA = G.frame.shenqi.DATA.task;
            me.conf = G.class.shenqi.getComById(me.curId);
            me.task = G.class.shenqi.getTaskById(me.curId);
            me.setContents();
            me.ui.setTimeout(function () {
                G.guidevent.emit("shenqi_infoOpenOver");
            }, 300);
            me.ui.finds("shenbing").getChildByTag(7456) && me.ui.finds("shenbing").getChildByTag(7456).removeFromParent();
            G.class.ani.show({
                json: "ani_shenbing_bg",
                addTo: me.ui.finds("shenbing"),
                x: me.ui.finds("shenbing").width / 2,
                y: 102,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    node.zIndex = -20;
                    node.setTag(7456);
                }
            })
        },
        onHide: function () {
            var me = this;
            G.hongdian.getData("artifact", 1);
        },
        setContents: function () {
            var me = this;

            me.setSkill();
            me.setJDT();
            me.setTask();
            me.showToper();
            if(P.gud.artifact >= me.curId) {
                me.nodes.liebiao_neirong.hide();
                me.nodes.liebiao_neirong2.show();
                me.nodes.shenbingwz.loadTexture("img/shenbing/wz6.png", 1);
                me.nodes.panel_hx1.finds("txt_sz1$").setString(L("atk") + "+" + G.class.shenqi.getBuffByIdAndLv(me.curId, 1).buff.atk);
                me.ui.finds("panel_hx1$_0").finds("txt_sz1$").setString(L("hp") + "+" + G.class.shenqi.getBuffByIdAndLv(me.curId, 1).buff.hp);
            }else {
                me.nodes.shenbingwz.loadTexture("img/shenbing/wz"+ me.curId +".png", 1);
                me.nodes.liebiao_neirong.show();
                me.nodes.liebiao_neirong2.hide();
            }
        },
        setSkill: function () {
            var me = this;
            var conf = G.class.shenqi.getSkillByIdAndDj(me.curId, 0);
            var str1 = "<font node=1></font>  " + conf.skillname;
            var img = new ccui.ImageView("ico/skillico/" + conf.skillico + ".png", 0);
            var btn_wz = me.nodes.btn_wz;
            var wz = btn_wz.getChildren()[0];
            wz.setTouchEnabled(false);
            img.setScale(.44);
            var str2 = conf.intr;
            var str = '<font color=#ffe983>' + me.conf.name + '</font>';        
            me.createRh(str,wz);

            var rh1 = new X.bRichText({
                size: 20,
                maxWidth: me.nodes.neirong1.width,
                lineHeight: 31,
                color: "#ffeae0",
                family: G.defaultFNT
            });
            rh1.text(str1, [img]);
            rh1.setAnchorPoint(0, 0.5);
            rh1.setPosition(2, me.nodes.neirong1.height / 2 - 5);
            me.nodes.neirong1.removeAllChildren();
            me.nodes.neirong1.addChild(rh1);

            var rh2 = new X.bRichText({
                size: 20,
                maxWidth: me.nodes.neirong2.width,
                lineHeight: 15,
                color: "#ffd2b0",
                family: G.defaultFNT
            });
            rh2.text(str2);
            rh2.setAnchorPoint(0, 1);
            rh2.setPosition(0, me.nodes.neirong2.height);
            me.nodes.neirong2.removeAllChildren();
            me.nodes.neirong2.addChild(rh2);
            me.ui.finds("bg2").setContentSize(me.defNr2);
            if(rh2.height > me.nodes.neirong2.height) {
                me.ui.finds("bg2").setContentSize(cc.size(me.ui.finds("bg2").width,me.ui.finds("bg2").height + (rh2.height - me.nodes.neirong2.height)));
            }
            me.nodes.shenbing.getChildByTag(7456) && me.nodes.shenbing.getChildByTag(7456).removeFromParent();
            G.class.ani.show({
                json: "shenbing_0" + me.curId,
                addTo: me.nodes.shenbing,
                x: me.nodes.shenbing.width / 2,
                y: me.nodes.shenbing.height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    var act1 = cc.moveBy(1, 0, 10);
                    var act2 = cc.moveBy(1, 0, -10);
                    var act = cc.sequence(act1, act2);
                    node.setTag(7456);
                    node.runAction(act.repeatForever());
                }
            })
        },
        createRh:function(str,lay,color){
            var rh = new X.bRichText({
                size: 24,
                maxWidth: lay.width,
                lineHeight: 32,
                family: G.defaultFNT,
                eachText: function(node){
                    X.enableOutline(node,'#000000');
                }
            });
            rh.text(str);
            rh.setAnchorPoint(0, 0);
            rh.setPosition((lay.width - rh.width) / 2, (lay.height - rh.height) / 2);
            lay.removeAllChildren();
            lay.addChild(rh);
        },
        setJDT: function () {
            var me = this;
            var isOk = 0;
            var data = me.DATA;
            var task = me.task;
            var keys = X.keysOfObject(task);

            if(P.gud.artifact < me.curId || !P.gud.artifact) {
                for(var i = 0; i < keys.length; i ++) {
                    if(data[keys[i]] && data[keys[i]].finish == me.curId){
                        isOk ++;
                    }
                }
                me.isActive = isOk;
                me.nodes.txt2.setString(isOk + "/" + keys.length);
                me.nodes.jdt.setPercent(isOk / keys.length * 100);
            }else {
                if(me.isActive == keys.length - 1) {
                    me.nodes.txt2.setString(keys.length + "/" + keys.length);
                    me.nodes.jdt.setPercent(100);
                    if(me.curId == 5) {
                        //所有神器激活动画
                        G.frame.jiangli.once("hide", function () {
                            G.class.ani.show({
                                json: "ani_shenbing_jihuo",
                                addTo: me.ui,
                                x: me.ui.width / 2 - 40,
                                y: me.ui.height / 2,
                                repeat: false,
                                autoRemove: true,
                                onload: function(node, action) {
                                    node.setTag(7456);
                                    node.finds("shenqi").setBackGroundImage("img/shenbing/shenbing_wq_0" + me.curId + ".png", 0);
                                },
                                onend: function (node, action) {
                                    G.frame.shenqi_list.show();
                                    me.ui.setTimeout(function () {
                                        me.remove();
                                    }, 1000);

                                }
                            });
                        });
                    }else {
                        //神器激活动画
                        G.frame.jiangli.once("hide", function () {
                            G.class.ani.show({
                                json: "ani_shenbing_jihuo",
                                addTo: me.ui,
                                x: me.ui.width / 2 - 40,
                                y: me.ui.height / 2,
                                repeat: false,
                                autoRemove: true,
                                onload: function (node, action) {
                                    node.zIndex = 999;
                                    node.finds("shenqi").setBackGroundImage("img/shenbing/shenbing_wq_0" + me.curId + ".png", 0);

                                    if(P.gud.artifact >= me.curId) {
                                        me.nodes.liebiao_neirong.hide();
                                        me.nodes.liebiao_neirong2.show();
                                        me.nodes.shenbingwz.loadTexture("img/shenbing/wz6.png", 1);
                                        me.nodes.panel_hx1.finds("txt_sz1$").setString(L("atk") + "+" + G.class.shenqi.getBuffByIdAndLv(me.curId, 1).buff.atk);
                                        me.ui.finds("panel_hx1$_0").finds("txt_sz1$").setString(L("atk") + "+" + G.class.shenqi.getBuffByIdAndLv(me.curId, 1).buff.hp);
                                    }else {
                                        me.nodes.shenbingwz.loadTexture("img/shenbing/wz"+ me.curId +".png", 1);
                                        me.nodes.liebiao_neirong.show();
                                        me.nodes.liebiao_neirong2.hide();
                                    }
                                },
                            });
                        });
                    }
                }else if(me.isActive == 0){
                    me.nodes.txt2.setString(L("yjh"));
                    me.nodes.jdt.setPercent(100);
                }
            }
        },
        setTask: function() {
            var me = this;
            var data = me.DATA;
            var task = me.task;
            var keys = X.keysOfObject(task);
            var arr = [];

            for(var i = 0; i < keys.length; i ++) {
                var taskclone = X.clone(task[keys[i]]);
                taskclone['typeid'] = keys[i];
                arr.push(taskclone);
            }

            arr.sort(function (a, b) {
                return a.p > b.p;
            });

            for(var i = 0; i < arr.length; i ++) {
                var curtask = arr[i];
                me.setItem(curtask, data[curtask.typeid], curtask.typeid, i);
            }
        },
        setItem: function (conf, data, index, idx) {
            var me = this;
            var list = me.nodes.list.clone();

            X.autoInitUI(list);

            var item = G.class.sitem(conf.prize[0]);
            item.setPosition(list.finds("ico").width / 2, list.finds("ico").height / 2);
            list.finds("ico").addChild(item);

            if(P.gud.artifact >= me.curId) {
                list.finds("Text_27").setString(X.STR(conf.title, conf.val, conf.val));
                list.nodes.btn1_on.show();
                list.nodes.btn2_on.hide();
                list.nodes.btn1_on.setBright(false);
                list.nodes.btn1_on.setTouchEnabled(false);
                list.nodes.btn1_on.finds("txt1").setTextColor(cc.color("#6c6c6c"));
            }else {
                list.finds("Text_27").setString(X.STR(conf.title,
                    data ? (data.val > conf.val ? conf.val : data.val) : 0, conf.val));
                if(!data){
                    data = {};
                    data.val = 0;
                }
                if(data.val >= conf.val) {
                    list.nodes.btn1_on.show();
                    list.nodes.btn2_on.hide();
                    G.setNewIcoImg(list.nodes.btn1_on, .95);
                    list.nodes.btn1_on.setBright(data.finish == me.curId ? false : true);
                    list.nodes.btn1_on.setTouchEnabled(data.finish == me.curId ? false : true);
                    data.finish == me.curId ? G.removeNewIco(list.nodes.btn1_on) : G.setNewIcoImg(list.nodes.btn1_on, .95);
                    list.nodes.btn1_on.finds("txt1").setTextColor(cc.color(data.finish == me.curId ? "#6c6c6c" : "#2f5719"));
                }else {
                    list.nodes.btn1_on.hide();
                    list.nodes.btn2_on.show();
                }
            }

            list.nodes.btn2_on.click(function () {
                X.tiaozhuan(conf.toid);
                me.remove();
                G.frame.shenqi.remove();
            });

            if(idx == 0) G.frame.shenqi_info.nodes.btnfirst = list.nodes.btn1_on;
            if(index == "maxmap") G.frame.shenqi_info.nodes.btn_tanxian = list.nodes.btn2_on;

            list.nodes.btn1_on.click(function () {

                G.ajax.send('artifact_receive', [index, me.curId], function (d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.frame.jiangli.data({
                            prize: d.d.prize
                        }).show();
                        G.frame.shenqi.getData(function () {
                            me.DATA = G.frame.shenqi.DATA.task;
                            me.setJDT();
                            me.setItem(conf, me.DATA[index], index, idx);
                        });
                    }
                }, true);
            });
            list.show();
            list.setPosition(0, 0);
            me.nodes["liebiao" + (idx + 1)].removeAllChildren();
            me.nodes["liebiao" + (idx + 1)].addChild(list);
        }
    });
    G.frame[ID] = new fun('shenbing_2.json', ID);
})();
;;/**
 * Created by LYF on 2018/9/13.
 */
(function () {
    //神器列表
    var ID = 'shenqi_list';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
            me.lvUpPanel = me.ui.nodes.shenbing_shengji;
            me.sjUpPanel = me.ui.nodes.shenbing_jinjie;
            me.lvUpPanel.setTouchEnabled(false);
            me.sjUpPanel.setTouchEnabled(false);
            var data = me.DATA.artifact;
            var keys = X.keysOfObject(data);
            cc.enableScrollBar(me.nodes.listview1,false);
            function setBtn(conf,sqid) {
                var list = me.nodes.list1.clone();
                X.autoInitUI(list);
                list.show();
                list.nodes.txt_name.setString(conf.name);
                list.setName(sqid);
                list.nodes.ico.setBackGroundImage("img/shenbing/" + conf.shenqiicon + ".png", 0);
                list.setTouchEnabled(true);
                me.nodes.listview1.pushBackCustomItem(list);
                G.class.ani.show({
                    json: "ani_meirishilian",
                    addTo: list.nodes.panel_dh,
                    x: list.nodes.panel_dh.width / 2,
                    y: list.nodes.panel_dh.height / 2,
                    repeat: true,
                    autoRemove: false,
                });
                me.topBtns.push(list);
            }

            for(var i = 0; i < keys.length; i ++) {
                setBtn(G.class.shenqi.getComById(keys[i]),keys[i]);
            }

            X.radio(me.topBtns, function (sender) {
                me.topChangeType({
                    1: 1,
                    2: 2,
                    3: 3,
                    4: 4,
                    5: 5
                }[sender.getName()])
            }, {
                callback1: function (sender) {
                    sender.finds('txt_name$').setOpacity(255);
                    sender.finds("img_light$").setVisible(true);
                    sender.finds("panel_dh$").setVisible(true);
                    sender.finds("ico$").runActions(cc.sequence(cc.scaleTo(0.1, 1.1, 1.1), cc.scaleTo(0.1, 1, 1)));
                    X.enableOutline(sender.finds('txt_name$'),'#000000');
                },
                callback2: function (sender) {
                    sender.finds('txt_name$').setOpacity(255 * 0.6);
                    sender.finds("img_light$").setVisible(false);
                    sender.finds("panel_dh$").setVisible(false);
                    X.enableOutline(sender.finds('txt_name$'),'#000000');
                },
                color: ["#FFE8C0", "#FFE8C0"],
            });
            me.setDownMenu();
        },
        topChangeType: function(type) {
            var me = this;

            if(me.type == type) return;
            G.DATA.sqid = type - 1;
            me.type = type;

            if(me.isFrist) {
                me.setContents()
            }else {
                me.getData(function () {
                    me.setContents();
                })
            }
        },
        changeType:function(sender){
            var me = this; 
            me.curIdx = sender.data.id;
            if(me.curIdx == 1){
                me.setLvUpInfo(me.type);
            }else{
                me.setSjUpInfo(me.type);
            }
            me.setShenqi(me.type);
            me.setSQmiaoshu(me.type);
            me.setChongZhu();
            me.setTopZy();
        },
        setTopZy:function(){
            var me = this;
            var txt_jb = me.nodes.txt_jb;
            var txt_zs = me.nodes.txt_zs;
            var btn_jia1 = me.nodes.btn_jia1;
            var btn_jia2 = me.nodes.btn_jia2;
            var token_zs = me.nodes.panel_top.finds('panel_db2').finds('token_zs');
            var url;
            var num;
            if(me.curIdx == 1){
                url = G.class.getItemIco(2017);
                num = G.class.getOwnNum(2017,'item');
            }else{
                url = G.class.getItemIco(2018);
                num = G.class.getOwnNum(2018,'item');
            }
            txt_jb.setString(X.fmtValue(P.gud.jinbi));
            token_zs.loadTexture(url,1);
            txt_zs.setString(X.fmtValue(num));
            btn_jia1.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.dianjin.show();
                    G.frame.dianjin.once("hide", function() {
                        txt_jb.setString(P.gud.jinbi);

                        me.downMenu.changeMenu(me.curIdx);
                    });
                }
            });
        },
        setLvUpInfo:function(type){
            var me = this;
            me.lvUpPanel.show();
            me.sjUpPanel.hide();
            var panel = me.lvUpPanel;
            X.autoInitUI(panel);
            var jbneed = panel.nodes.txt_xh1;
            var jtneed = panel.nodes.txt_xh2;
            var btn_lvup = panel.nodes.btn_up_jj;
            var conf = G.class.shenqi.getComById(type);
            var data = me.DATA.artifact[type];
            var upneed = G.class.shenqi.getUpLvNeedByLv(data.lv);
            var sqbuff = G.class.shenqi.getBuffByIdAndLv(type,data.lv).buff;

            btn_lvup.setTitleText(L("SHENGJI"));
            btn_lvup.setTitleColor(cc.color("#2f5719"));

            if(data.lv == conf.maxlv) {
                btn_lvup.hide();
                jbneed.hide();
                jtneed.hide();
                panel.finds("bg_xinxi1").hide();
                panel.finds("bg_xinxi1_0").hide();
                panel.finds("token_jb").hide();
                panel.finds("token_jy").hide();
            }else {
                btn_lvup.show();
                jbneed.show();
                jtneed.show();
                panel.finds("bg_xinxi1").show();
                panel.finds("bg_xinxi1_0").show();
                panel.finds("token_jb").show();
                panel.finds("token_jy").show();
            }

            panel.finds("token_jy").loadTexture(G.class.getItemIco(upneed[1].t), 1);
            setTextWithColor(jbneed,X.fmtValue(P.gud.jinbi) + '/' + X.fmtValue(upneed[0].n),P.gud.jinbi < upneed[0].n ? '#ff4e4e' : '#ffffff');
            setTextWithColor(jtneed,X.fmtValue(G.class.getOwnNum(upneed[1].t,upneed[1].a)) + '/' + X.fmtValue(upneed[1].n),G.class.getOwnNum(upneed[1].t,upneed[1].a) < upneed[1].n ? '#ff4e4e' : '#ffffff');
            if(P.gud.jinbi < upneed[0].n){
                X.enableOutline(jbneed,'#740000');
            }else{
                X.enableOutline(jbneed,'#000000');
            }
            if(G.class.getOwnNum(upneed[1].t,upneed[1].a) < upneed[1].n){
                X.enableOutline(jtneed,'#740000');
            }else{
                X.enableOutline(jtneed,'#000000');
            }
            // me.setLvupSx(sqbuff);
            me.nodes.txt_gj.setString(X.STR(L('SHENQI_atk'),sqbuff.atk));
            me.nodes.txt_xl.setString(X.STR(L('SHENQI_hp'),sqbuff.hp));
            btn_lvup.click(function(sender, type) {
                G.ajax.send('artifact_lvup', [me.type,'lv'], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        me.DATA.artifact[me.type] =  d.d;
                        G.class.ani.show({
                            json: 'ani_shenbing_shengji',
                            addTo: me.ui.finds('shenbing'),
                            x: me.ui.finds('shenbing').width / 2,
                            y: me.ui.finds('shenbing').height / 2 + 20,
                            repeat: false,
                            autoRemove: true,
                            onend:function(){
                                me.downMenu.changeMenu(me.curIdx);
                            }
                        });
                    }
                });
            }, 500);
        },
        setLvupSx:function(sqbuff){
            var me = this;
            var panel = me.lvUpPanel;
            var xinxi_neirong = panel.finds('xinxi_neirong');
            var pos = [cc.p(40,80),cc.p(40,30),cc.p(310,30)];
            var str = [];
            str.push(L('SHENQI_JBJC'));
            str.push(X.STR(L('SHENQI_atk'),sqbuff.atk));
            str.push(X.STR(L('SHENQI_hp'),sqbuff.hp));
            xinxi_neirong.removeAllChildren();
            for(var i = 0; i<pos.length; i++){
                var lay = new ccui.Layout();
                lay.setContentSize(cc.size(570,50));
                lay.setPosition(pos[i]);
                me.createSxRh(str[i],lay);
                xinxi_neirong.addChild(lay);
            }
        },
        createSxRh:function(str,lay,color){
            var rh = new X.bRichText({
                size: 24,
                maxWidth: lay.width,
                lineHeight: 36,
                family: G.defaultFNT,
                color: '#804326'
            });
            rh.text(str);
            rh.setAnchorPoint(0, 0);
            rh.setPosition(0, (lay.height - rh.height) / 2);
            lay.removeAllChildren();
            lay.addChild(rh);
        },
        setSjUpInfo:function(type){
            var me = this;
            me.lvUpPanel.hide();
            me.sjUpPanel.show();
            var panel = me.sjUpPanel;
            X.autoInitUI(panel);
            var conf = G.class.shenqi.getComById(type);
            var data = me.DATA.artifact[type];
            var skillconf = G.class.shenqi.getSkillByIdAndDj(type,data.djlv);
            var upneed = G.class.shenqi.getUpDjNeedByDj(data.djlv > 23 ? 23 : data.djlv);
            var skillname = panel.nodes.txt_dj;
            var skillico = panel.nodes.ico_jn;
            var skillintr = panel.nodes.txt_jnm;
            var jbneed = panel.nodes.txt_xh1;
            var jtneed = panel.nodes.txt_xh2;
            var btn_sjup = panel.nodes.btn_up;

            if(data.djlv == conf.maxdengjie) {
                btn_sjup.hide();
                jbneed.hide();
                jtneed.hide();
                panel.finds("bg_xinxi1").hide();
                panel.finds("bg_xinxi1_0").hide();
                panel.finds("token_jb").hide();
                panel.finds("token_jt").hide();
                panel.nodes.txt_huizi.hide();
            }else {
                btn_sjup.show();
                jbneed.show();
                jtneed.show();
                panel.finds("bg_xinxi1").show();
                panel.finds("bg_xinxi1_0").show();
                panel.finds("token_jb").show();
                panel.finds("token_jt").show();
                me.nodes.txt_huizi.show();
            }

            panel.finds("token_jt").loadTexture(G.class.getItemIco(upneed[1].t), 1);
            skillname.setString(skillconf.skillname + '+' + data.djlv);
            skillico.setBackGroundImage('ico/skillico/' + skillconf.skillico + '.png',0);
            skillintr.setFontSize(18);
            skillintr.setString(skillconf.intr);
            setTextWithColor(jbneed,X.fmtValue(P.gud.jinbi) + '/' + X.fmtValue(upneed[0].n),P.gud.jinbi < upneed[0].n ? '#ff4e4e' : '#ffffff');
            setTextWithColor(jtneed,X.fmtValue(G.class.getOwnNum(upneed[1].t,upneed[1].a)) + '/' + X.fmtValue(upneed[1].n),G.class.getOwnNum(upneed[1].t,upneed[1].a) < upneed[1].n ? '#ff4e4e' : '#ffffff');
            if(P.gud.jinbi < upneed[0].n){
                X.enableOutline(jbneed,'#680000');
            }else{
                X.enableOutline(jbneed,'#000000');
            }
            if(G.class.getOwnNum(upneed[1].t,upneed[1].a) < upneed[1].n){
                X.enableOutline(jtneed,'#680000');
            }else{
                X.enableOutline(jtneed,'#000000');
            }
            var step = (data.djlv + 1) * 5;
            if(data.lv < step){
                // me.nodes.txt_huizi.show();
                me.nodes.txt_huizi.setString(X.STR(L('SHENQI_XXJ'),step));
                me.nodes.txt_huizi.setTextColor(cc.color("#6c6c6c"));
                btn_sjup.setBright(false);
                btn_sjup.setTouchEnabled(false);
            }else{
                me.nodes.txt_huizi.setString(L("SHENGJI"));
                me.nodes.txt_huizi.setTextColor(cc.color("#2f5719"));
                btn_sjup.setBright(true);
                btn_sjup.setTouchEnabled(true);
            }
            btn_sjup.click(function(sender, type) {
                G.ajax.send('artifact_lvup', [me.type,'djlv'], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        me.DATA.artifact[me.type] =  d.d;
                        G.class.ani.show({
                            json: 'ani_shenbing_jinjie',
                            addTo: me.ui.finds('shenbing'),
                            x: me.ui.finds('shenbing').width / 2,
                            y: me.ui.finds('shenbing').height / 2 + 20,
                            repeat: false,
                            autoRemove: true,
                            onend: function() {
                                me.downMenu.changeMenu(me.curIdx);
                            }
                        });
                    }
                });
            }, 500);
        },
        //设置神器技能描述(时间紧，数值都是程序算的)
        setSQmiaoshu:function(type){
            var me = this;
            var data = me.DATA.artifact[type];
            var lay1 = me.ui.nodes.neirong1;
            var lay2 = me.ui.nodes.neirong2;
            var bg = me.ui.finds('shenbing_miaoshu').finds('bg2');
            bg.height = 170;
            bg.width = 230;
            bg.setAnchorPoint(0.5, 1);
            bg.x = bg.width / 2;
            lay1.x = bg.width / 2;
            lay2.x = bg.width / 2;
            me.ui.finds('shenbing_miaoshu').x = 0;
            var rh = new X.bRichText({
                size: 18,
                maxWidth: bg.width,
                lineHeight: 20,
                family: G.defaultFNT,
                color: '#fbc647'
            });
            rh.text(L('SHENQI_JNJC_NAME'));
            rh.setAnchorPoint(0.5, 0);
            rh.setPosition(0, (lay1.height - rh.height) / 2);
            lay1.removeAllChildren();
            lay1.addChild(rh);

            var rh1 = new X.bRichText({
                size: 18,
                maxWidth: bg.width,
                lineHeight: 20,
                family: G.defaultFNT,
            });
            var str1 = '';
            var skillbuff = G.class.shenqi.getComById(type).skillbuff;
            for(var i in skillbuff){
                var skillbuff_name = X.keysOfObject(skillbuff[i]);
                // var shenqi_killbuff = i <= data.djlv ? L('SHENQI_KILLBUFF1') : L('SHENQI_KILLBUFF1_H');
                var shenqi_jndj = i <= data.djlv ? L('SHENQI_JNDJ1') : L('SHENQI_JNDJ1_H');

                if(skillbuff_name == "speed"){
                    str_buff = X.STR(shenqi_jndj, '+'+i, L(skillbuff_name), skillbuff[i][skillbuff_name]);
                    str_kongge = "";
                }else{
                    str_buff =  X.STR(shenqi_jndj, i < 10 ? ('  +'+i) : '+'+i , L(skillbuff_name), (skillbuff[i][skillbuff_name] / 10) + '%');
                    str_kongge = "";
                }
                str1 += "<br>  " + str_buff;
                // str1 += str_kongge;
            }
            rh1.text(str1);
            rh1.setAnchorPoint(0.5, 0);
            rh1.setPosition(10, (lay2.height - rh1.height) / 2 + 5);
            lay2.removeAllChildren();
            lay2.addChild(rh1);
        },
        setShenqi:function(type){
            var me = this;
            var conf = G.class.shenqi.getComById(type);
            var data = me.DATA.artifact[type];
            var panel = me.nodes.panel_top.finds('shenbing');
            var btn_wz = me.nodes.btn_wz;
            var wz = btn_wz.getChildren()[0];
            wz.setTouchEnabled(false);
            // var shenqi_img = me.nodes.shenbing;
            var shenqilv = me.nodes.wz_dj;
            shenqilv.setString(L('dengji') + ' ' +  data.lv);
            // shenqi_img.setBackGroundImage('img/shenbing/shenbing_wq_0' + type + '.png',0);
            var str = '<font color=#ffe983>' + conf.name + '</font>' + '<font color=#ffb47d>+' + data.djlv + '</font>';        
            me.createRh(str,wz);
            me.sqid = type;
            me.sqlv = conf.maxlv;
            me.sqdjlv = conf.maxdengjie;

            me.nodes.shenbing.removeAllChildren();

            G.class.ani.show({
                json: "shenbing_0" + type,
                addTo: me.nodes.shenbing,
                x: me.nodes.shenbing.width / 2,
                y: me.nodes.shenbing.height / 2 - 50,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    var act1 = cc.moveBy(1, 0, 10);
                    var act2 = cc.moveBy(1, 0, -10);
                    var act = cc.sequence(act1, act2);
                    node.runAction(act.repeatForever());
                }
            })

        },
        createRh:function(str,lay,color){
            var rh = new X.bRichText({
                size: 24,
                maxWidth: lay.width,
                lineHeight: 32,
                family: G.defaultFNT,
                eachText: function(node){
                    X.enableOutline(node,'#000000');
                }
            });
            rh.text(str);
            rh.setAnchorPoint(0, 0);
            rh.setPosition((lay.width - rh.width) / 2, (lay.height - rh.height) / 2);
            lay.removeAllChildren();
            lay.addChild(rh);
        },
        bindBtn: function () {
            var me = this;

            me.nodes.shenbing.click(function(){
                // if(me.sqlv > 1){
                //     G.frame.shenqi_xq.data({
                //         id: me.sqid,
                //         jh: true,
                //         lv: me.sqlv,
                //         djlv: me.sqdjlv,
                //     }).show();
                // }else{
                //     G.frame.shenqi_xq1.data({
                //         id: me.sqid,
                //     }).show();
                // }
                G.frame.shenqi_xq.data({
                    id: me.sqid,
                    jh: true,
                    lv: me.sqlv,
                    djlv: me.sqdjlv,
                }).show();
            });

            me.nodes.btn_wz.touch(function(sender, type){
                if(type == ccui.Widget.TOUCH_ENDED){
                    // if(me.sqlv > 1){
                    //     G.frame.shenqi_xq.data({
                    //         id: me.sqid,
                    //         jh: true,
                    //         lv: me.sqlv,
                    //         djlv: me.sqdjlv,
                    //     }).show();
                    // }else{
                    //     G.frame.shenqi_xq1.data({
                    //         id: me.sqid,
                    //     }).show();
                    // }
                    G.frame.shenqi_xq.data({
                        id: me.sqid,
                        jh: true,
                        lv: me.sqlv,
                        djlv: me.sqdjlv,
                    }).show();
                }
            });

            me.nodes.btn_fh.click(function () {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            me.topBtns = [];
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.nodes.btn_jia2.hide();
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback) {
            var me = this;

            G.ajax.send('artifact_open', [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            me.isFrist = true;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;

            me.topBtns[G.DATA.sqid || 0].triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        onHide: function () {
            var me = this;
        },
        setDownMenu:function(){
            var me = this;
            me.nodes.list.hide();
            var view = me.nodes.down_shengjijinjie;
            X.autoInitUI(view);
            me.downMenu = new G.class.topMenu(me, {
                btns: X.clone(G.class.menu.get('shenqi'))
            },view);
        },
        setChongZhu:function(){
            var me = this;
            var btn_czsq = me.nodes.down_shengjijinjie.finds('btn_czsq');
            var data = me.DATA.artifact[me.type];
            if(data.lv > 1){
                btn_czsq.show();
            }else{
                btn_czsq.hide();
            }
            var chongzhu = function(){
                G.ajax.send('artifact_recast', [me.type], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        me.DATA.artifact[me.type] = d.d.artifact[me.type];
                        me.downMenu.changeMenu(me.curIdx);
                    }
                });
            };
            btn_czsq.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var str = L('SHENQICHONGZHU');
                    G.frame.alert.data({
                        sizeType: 3,
                        cancelCall: null,
                        okCall: function() {
                            chongzhu();
                        },
                        richText: str
                    }).show();
                }
            });
        },
        setContents: function () {
            var me = this;
            me.downMenu.changeMenu(1);
        },
        setShenqiXiangQin:function(){
            var me = this;

        }
    });
    G.frame[ID] = new fun('shenbing3.json', ID);
})();
;;/**
 * Created by ys on 2018/9/15.
 */
(function () {
    //神器
    var ID = 'shenqi_xq';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.finds('panel_1').click(function () {
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback) {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('zhuangbei_tip4.json', function (view) {
                me._view = view;
                me.defHeight = me._view.height;
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me.curId = me.data().id;
                me.setContents();
                view.setTouchEnabled(true);
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var view = me._view;
            var id = me.curId;
            var conf = G.class.shenqi.getComById(id);
            var data = me.data();
            var listview = view.nodes.pan;
            var buff, jnnr, bt, atk, hp, skillbuff, skillbuff_bt1, skillbuff_bt2;

            if(me.data().jh){
                buff = G.class.shenqi.getBuffByIdAndLv(id, data.lv).buff;
                jnnr = G.class.shenqi.getSkillByIdAndDj(id, data.djlv);
                bt = X.STR(L('SHENQI_bt'), conf.name, data.lv);
                skillbuff_bt1 = L('SHENQI_JCJC');
                skillbuff_bt2 = L('SHENQI_JNJC');
                atk = buff.atk;
                hp = buff.hp;
                skillbuff = conf.skillbuff;

                var txt_jnnr = view.nodes.txt_jnnr;
                var ico_jn = view.nodes.ico_jn;
                view.nodes.txt_bt.setString(bt);
                view.nodes.ico_jn.setBackGroundImage('img/shenbing/' + conf.shenqiicon + '.png',0);
                txt_jnnr.setString(jnnr.intr);
                txt_jnnr.setFontSize(18);
                txt_jnnr.height = 100;
                txt_jnnr.width = 380;
                ico_jn.setPositionX(35);
                ico_jn.setPositionY(ico_jn.y - 15); 
                txt_jnnr.setPositionY(txt_jnnr.y - 15);

                var str = "";
                var str1 = "";
                var str_buff = "";
                var str_kongge = "";
                str += skillbuff_bt1;
                str += "<br>" + X.STR(L('SHENQI_atk'), atk) + '         ' + X.STR(L('SHENQI_hp'), hp);
                // str += "<br>";
                str1 += "<br>" + skillbuff_bt2;

                for(var i in skillbuff){

                    var skillbuff_name = X.keysOfObject(skillbuff[i]);
                    var shenqi_killbuff = i <= data.djlv ? L('SHENQI_KILLBUFF') : L('SHENQI_KILLBUFF_H');
                    var shenqi_jndj = i <= data.djlv ? L('SHENQI_JNDJ') : L('SHENQI_JNDJ_H');

                    if(skillbuff_name == "speed"){
                        str_buff = X.STR(shenqi_killbuff, L(skillbuff_name), skillbuff[i][skillbuff_name]);
                        str_kongge = "                ";
                    }else{
                        str_buff =  X.STR(shenqi_killbuff, L(skillbuff_name), (skillbuff[i][skillbuff_name] / 10) + '%');
                        str_kongge = "          ";
                    }
                    str1 += "<br>" + str_buff;
                    str1 += str_kongge;
                    str1 += X.STR(shenqi_jndj, i);
                }

                var rh = new X.bRichText({
                    size:18,
                    maxWidth:listview.width,
                    lineHeight:28,
                    family:G.defaultFNT,
                    color: G.gc.COLOR.n5,
                });
                var rh1 = new X.bRichText({
                    size:18,
                    maxWidth:listview.width,
                    lineHeight:28,
                    family:G.defaultFNT,
                    color: G.gc.COLOR.n5,
                });
                rh.text(str);
                rh1.text(str1);
                listview.addChild(rh);
                listview.addChild(rh1);
                rh.setPositionY(140);
                rh1.setPositionY(17);
                var offsetY = rh.trueHeight() + rh1.trueHeight();
                var bg = view.finds('bg_1');
                bg.setContentSize( cc.size(bg.width,bg.height + offsetY + 10));
                ccui.helper.doLayout(bg);
                listview.setPosition(cc.p(32,listview.y + 40));
                bg.setPositionY(bg.y + view.nodes.txt_jnnr.height + view.nodes.txt_bt.height + 110);
            }
            view.nodes.panel_bg.setPositionY(-50);
        },
        checkShow: function () {
            var me = this;
        }
    });
    G.frame[ID] = new fun('panel_nr.json', ID);
})();
;;/**
 * Created by ys on 2018/9/15.
 */
(function () {
    //神器
    var ID = 'shenqi_xq1';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.finds('panel_1').click(function () {
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback) {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView('zhuangbei_tip5.json', function (view) {
                me._view = view;
                me.defHeight = me._view.height;
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me.curId = me.data().id;
                me.setContents();
                view.setTouchEnabled(true);
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var view = me._view;
            var id = me.curId;
            var conf = G.class.shenqi.getComById(id);
            var listview = view.nodes.pan;
            var buff, jnnr, bt, atk, hp, skillbuff, skillbuff_bt1, skillbuff_bt2;

                buff = G.class.shenqi.getBuffByIdAndLv(id, 1).buff;
                jnnr = G.class.shenqi.getSkillByIdAndDj(id, 0);
                bt = conf.name;
                skillbuff_bt1 = L('SHENQI_JCSX');
                atk = buff.atk;
                hp = buff.hp;
                skillbuff = conf.skillbuff;

                var txt_jnnr = view.nodes.txt_jnnr;
                var ico_jn = view.nodes.ico_jn;
                view.nodes.txt_bt.setString(bt);
                view.nodes.ico_jn.setBackGroundImage('img/shenbing/' + conf.shenqiicon + '.png',0);
                txt_jnnr.setString(jnnr.intr);
                txt_jnnr.setFontSize(18);
                txt_jnnr.height = 100;
                txt_jnnr.width = 380;
                ico_jn.setPosition(cc.p(28,ico_jn.y - 10));
                txt_jnnr.setPosition(cc.p(txt_jnnr.x + 3, txt_jnnr.y - 15));

                var str = "";
                str += skillbuff_bt1;
                str += "   ";
                str += X.STR(L('SHENQI_atk'), atk) + '      ' + X.STR(L('SHENQI_hp'), hp);
                var rh = new X.bRichText({
                    size:18,
                    maxWidth:listview.width,
                    lineHeight:28,
                    family:G.defaultFNT,
                    color: G.gc.COLOR.n5,
                });
                rh.text(str);
                listview.addChild(rh);
                listview.setPosition(cc.p(listview.x + 5 , listview.y - 10));
                var offsetY = rh.trueHeight();
                var bg = view.finds('bg_1');
                bg.setContentSize( cc.size(bg.width,bg.height + offsetY + 5));
                ccui.helper.doLayout(bg);
                bg.setPositionY(bg.y + 20);
        },
        checkShow: function () {
            var me = this;
        }
    });
    G.frame[ID] = new fun('panel_nr.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/25.
 */
(function () {
    //饰品-升级
    var ID = 'shipin_shengji';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            setPanelTitle(me.ui.nodes.txt_title,L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        refreshPanel: function () {
            var me = this;

            if (G.frame.shipin_shengji.selectedData) {
                delete G.frame.shipin_shengji.selectedData;
            }
            me.setContents();
        },
        showTable: function () {
            var me = this;

            if (!me.panelScrollview) {
                me.panelScrollview = new G.class.ui_scrollview('shipin');
                me.ui.nodes.panel_nr1.removeAllChildren();
                me.ui.nodes.panel_nr1.addChild(me.panelScrollview);
            } else {
                me.panelScrollview.refreshPanel();
            }

        },
        showBottom: function () {
            var me = this;

            if (!me.panelBottom) {
                me.panelBottom = new G.class.ui_shengji('shipin');
                me.ui.nodes.panel_nr2.removeAllChildren();
                me.ui.nodes.panel_nr2.addChild(me.panelBottom);
            } else {
                me.panelBottom.refreshPanel();
            }

        },
        setContents: function () {
            var me = this;

            me.showTable();
            me.showBottom();
        },
    });

    G.frame[ID] = new fun('ui_tip3.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/25.
 */
(function () {
    //饰品-吞噬选择
    var ID = 'shipin_tunshixuanze';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.finds('panel_1').touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.curType = '5';
            me.item = me.data().item;
            me.curTid = me.item.data.tid;
            me.curId = me.item.data.spid;
            me.conf = G.class.shipin.getById(me.curId);

            me.ui.nodes.panel_nr.removeAllChildren();

            new X.bView('zhuangbei_tip1.json', function (view) {
                me._view = view;

                me.defHeight = me._view.height;
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
                view.setTouchEnabled(true);
            });
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;


            me.setTop();
            me.setBtns();
        },
        setTop: function () {
            var me = this;

            var panel = me._view;
            var conf = me.conf;

            var btnHqtj = panel.nodes.btn_hqtj;
            var layIco = panel.nodes.panel_1;
            var layBuff = panel.nodes.panel_2;
            var txtName = panel.nodes.text_1;
            var txtType = panel.nodes.text_2;
            var txtHqtj = panel.finds('text_hqtj');
            var layYx = panel.nodes.panel_4;

            layIco.removeAllChildren();
            layBuff.removeAllChildren();
            layYx.removeAllChildren();

            //头像
            var wid = G.class.sshipin(conf);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);

            // 名字
            setTextWithColor(txtName,conf.name,G.gc.COLOR[conf.color || 1]);
            // 类型
            txtType.setString(L('ZHUANGBEI_TYPE_' + me.curType));

            // buffar
            var str = '';
            var buffArr = X.fmtBuff(conf.buff);
            for (var i = 0; i < buffArr.length; i++) {
                var bObj = buffArr[i];
                str += bObj.tip + '<br>';
            }
            var rh = new X.bRichText({
                size:22,
                maxWidth:layBuff.width,
                lineHeight:34,
                color:G.gc.COLOR.n5,
                family:G.defaultFNT,
            });
            if(conf.intr){
                str += conf.intr + "<br>";
            }
            if (!conf.zhongzu || conf.zhongzu == '') {
                rh.text(str);
            } else {
                //种族特性

                var zzBuffArr = X.fmtBuff(conf.zhongzubuff);
                str += '<font size=20 color='+ G.gc.COLOR.n10 +'>' + X.STR(L('ZHONGZU_NEED'),L('zhongzu_' + conf.zhongzu)) + '</font>' + '<br>';

                for (var i = 0; i < zzBuffArr.length; i++) {
                    var zzbObj = zzBuffArr[i];
                    str += '<font color=' + G.gc.COLOR.n10 + '>' + zzbObj.tip + '</font><br>';
                }

                rh.text(str);
            }
            var offsetY = rh.trueHeight();
            panel.nodes.panel_bg.setContentSize( cc.size(panel.nodes.panel_bg.width,panel.nodes.panel_bg.height + offsetY + panel.nodes.panel_3.height + 10));
            ccui.helper.doLayout( panel.nodes.panel_bg);

            rh.setPosition(cc.p(0,0));
            layBuff.addChild(rh);
        },
        setBtns: function () {
            var me = this;

            var panel = me._view;
            var layBtns = panel.nodes.panel_3;

            layBtns.removeAllChildren();

            var state = {
                btns:[
                    {
                        setBtn: function (item) {
                            // 加入一个
                            item.loadTextureNormal('img/public/btn/btn3_on.png',1);
                            item.setTitleText(L('BTN_ADD1'));
                            item.setTitleColor(cc.color(G.gc.COLOR.n14));
                            item.touch(function (sender, type) {
                                if (type == ccui.Widget.TOUCH_ENDED) {
                                    if(me.conf.color > 3){
                                        var str = X.STR(L("OKCOLOR"), me.conf.color == 4 ? L("CCOLOR"):L("HCOLOR"));
                                        G.frame.alert.data({
                                            title: L("TS"),
                                            cancelCall: function () {
                                                me.remove();
                                            },
                                            okCall: function () {
                                                var callback = me.data().callback;
                                                callback && callback({id:me.curTid,num:1,spid:me.curId});
                                                var lessnum = G.frame.beibao.DATA.shipin.list[me.curTid].num - G.frame.shipin_shengji.selectedData[me.curId];
                                                me.item.num.setString(lessnum);
                                            },
                                            richText: str,
                                        }).show();
                                    }else{
                                        var callback = me.data().callback;
                                        callback && callback({id:me.curTid,num:1,spid:me.curId});
                                        var lessnum = G.frame.beibao.DATA.shipin.list[me.curTid].num - G.frame.shipin_shengji.selectedData[me.curId];
                                        me.item.num.setString(lessnum);
                                    }



                                }
                            });
                        }
                    },
                    {
                        setBtn: function (item) {
                            //加入十个
                            item.setTitleText(L('BTN_ADD10'));
                            item.setTitleColor(cc.color(G.gc.COLOR.n13));
                            item.touch(function (sender, type) {
                                if (type == ccui.Widget.TOUCH_ENDED) {
                                    if(me.conf.color > 3){
                                        var str = X.STR(L("OKCOLOR"), me.conf.color == 4 ? L("CCOLOR"):L("HCOLOR"));
                                        G.frame.alert.data({
                                            title: L("TS"),
                                            cancelCall: function () {
                                                me.remove();
                                            },
                                            okCall: function () {
                                                var callback = me.data().callback;
                                                callback && callback({id:me.curTid,num:10,spid:me.curId});
                                                var lessnum = G.frame.beibao.DATA.shipin.list[me.curTid].num - G.frame.shipin_shengji.selectedData[me.curId];
                                                me.item.num.setString(lessnum);
                                            },
                                            richText: str,
                                        }).show();
                                    }else{
                                        var callback = me.data().callback;
                                        callback && callback({id:me.curTid,num:10,spid:me.curId});
                                        var lessnum = G.frame.beibao.DATA.shipin.list[me.curTid].num - G.frame.shipin_shengji.selectedData[me.curId];
                                        me.item.num.setString(lessnum);
                                    }

                                }
                            });
                        }
                    }
                ]
            };

            var btn = new ccui.Button();
            var img = 'img/public/btn/btn1_on.png';
            btn.loadTextures(img,'','',1);
            btn.setTitleFontName(G.defaultFNT);
            btn.setTitleFontSize(24);
            X.autoLayout_new({
                parent:layBtns,
                item:btn,
                num:state.btns.length,
                mapItem: function (item) {
                    var idx = item.idx;
                    var btnsConf = state.btns;
                    btnsConf[idx].setBtn(item);
                }
            });

        }
    });

    G.frame[ID] = new fun('panel_nr.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/25.
 */
(function () {
    //饰品-详情
    var ID = 'shipin_xq';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.finds('panel_1').touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.curType = '5';
            me.curId = me.data().id;

            me.curXbId = G.frame.yingxiong_xxxx.curXbId;
            me.conf = G.class.shipin.getById(me.curId);
            me.heroData = G.frame.yingxiong.getHeroDataByTid(me.curXbId);
            //是否需要双显示
            me.state = me.data().state;
            me.ui.nodes.panel_nr.removeAllChildren();

            new X.bView('zhuangbei_tip1.json', function (view) {
                me._view = view;

                me.defHeight = me._view.height;
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents(view,true);
                view.setTouchEnabled(true);
            });

            if (me.state == 'tihuan') {
                new X.bView('zhuangbei_tip1.json', function (view) {
                    me._view2 = view;
                    var heroData = G.frame.yingxiong.getHeroDataByTid(me.curXbId);
                    var curXBid = heroData && heroData.weardata && heroData.weardata[me.curType];
                    me.conf2 = G.class.shipin.getById(curXBid);
                    me.ui.nodes.panel_nr.addChild(view);
                    me.setContents(view,false);
                    view.setTouchEnabled(true);
                });
            }
        },
        onHide: function () {
            var me = this;
        },
        setContents: function (panel,bool) {
            var me = this;

            panel.nodes.panel_bg.setTouchEnabled(true);

            me.setTop(panel,bool);
            me.setBtns(panel,bool);
        },
        setTop: function (panel,bool) {
            var me = this;

            var conf = bool ? me.conf : me.conf2;

            //var btnHqtj = panel.nodes.btn_hqtj;
            var layIco = panel.nodes.panel_1;
            var layBuff = panel.nodes.panel_2;
            var txtName = panel.nodes.text_1;
            var txtType = panel.nodes.text_2;
            var txtHqtj = panel.finds('text_hqtj');
            var layYx = panel.nodes.panel_4;

            // btnHqtj.show();
            layIco.removeAllChildren();
            layBuff.removeAllChildren();
            layYx.removeAllChildren();
            layYx.removeBackGroundImage();

            var heroData = me.heroData;
            // // 英雄
            // var hero = G.class.shero(heroData);
            // hero.setPosition(cc.p(layYx.width / 2,layYx.height / 2));
            // layYx.addChild(hero);

            //头像
            var wid = G.class.sshipin(conf);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);

            // btnHqtj.click(function (sender, type) {
            //     G.frame.shipin_shengji.show();
            // });

            // if (me.state != 'chuandai') {
            //     layYx.setBackGroundImage('img/public/btn/btn1_on.png',1);
            //     var txt = new ccui.Text(L("SHENGJI"), G.defaultFNT, 24);
            //     txt.setTextColor(cc.color("#2f5719"));
            //     txt.setAnchorPoint(0.5, 0.5);
            //     txt.setPosition(layYx.width / 2, layYx.height / 2);
            //     layYx.addChild(txt);
            //     layYx.touch(function (sender, type) {
            //         if (type == ccui.Widget.TOUCH_ENDED) {
            //             G.frame.shipin_shengji.once('show', function () {
            //                 me.remove();
            //             }).show();
            //         }
            //     });
            // }
            if(!conf.upid){
                layYx.hide();
            }
            if(me.state == "tihuan"){
                panel.nodes.panel_4.hide();
            }

            // 名字
            setTextWithColor(txtName,conf.name,G.gc.COLOR[conf.color || 1]);
            // 类型
            txtType.setString(L('ZHUANGBEI_TYPE_' + me.curType));

            // buffar
            var str = '';
            // conf.buff = {
            //     atk:10,
            //     def:10,
            //     hp:20
            // };
            var buffArr = X.fmtBuff(conf.buff);
            for (var i = 0; i < buffArr.length; i++) {
                var bObj = buffArr[i];
                if(i == 0){
                    str += bObj.tip;
                }else{
                    str += "<br>" + bObj.tip
                }
            }
            var offsetY;
            var rh = new X.bRichText({
                size:22,
                maxWidth:layBuff.width,
                lineHeight:34,
                color:G.gc.COLOR.n5,
                family:G.defaultFNT,
            });
            if(conf.intr){
                str += "<br>" + conf.intr;
            }
            if (!conf.zhongzu || conf.zhongzu == '') {
                str += '<br><font size=20>' + ' ' + '</font>';
                rh.text(str);
            } else {
                //种族特性
                var zzBuffArr = X.fmtBuff(conf.zhongzubuff);
                if (me.state != 'tihuan' || (me.state == 'tihuan' && !bool)) {
                    //需要展示是否激活状态
                    var yxZhongzu = me.heroData.zhongzu;
                    var isJihuo = conf.zhongzu == yxZhongzu;

                    str += '<br><font size=20 color='+ G.gc.COLOR[isJihuo ? 'n7' :'n10'] +'>' + X.STR(L('ZHONGZU_NEED'),L('zhongzu_' + conf.zhongzu)) + '</font>';

                    for (var i = 0; i < zzBuffArr.length; i++) {
                        var zzbObj = zzBuffArr[i];
                        str += '<br><font color=' + G.gc.COLOR[isJihuo ? 'n7' :'n10'] + '>' + zzbObj.tip + '</font>';
                    }
                } else {
                    str += '<br><font size=20 color='+ G.gc.COLOR.n10 +'>' + X.STR(L('ZHONGZU_NEED'),L('zhongzu_' + conf.zhongzu)) + '</font>';

                    for (var i = 0; i < zzBuffArr.length; i++) {
                        var zzbObj = zzBuffArr[i];
                        str += '<br><font color=' + G.gc.COLOR.n10 + '>' + zzbObj.tip + '</font>';
                    }
                }
                str += '<br><font size=20>' + ' ' + '</font>';
                rh.text(str);
            }

            // offsetY = rh.trueHeight() + 50;
            // panel.nodes.panel_bg.height += offsetY;
            // ccui.helper.doLayout(panel.nodes.panel_bg);
            var offsetY = rh.trueHeight();
            rh.setPosition(cc.p(0,-15));
            layBuff.addChild(rh);
            if (me.state == 'tihuan') {
                if (!bool) {
                    panel.nodes.panel_3.height = 0;
                }
            }

            // 移动两个panel位置
            if (me.state == 'tihuan') {
                if (bool) {
                    panel.nodes.panel_bg.y = panel.nodes.panel_bg.y + panel.nodes.panel_bg.height / 2 + offsetY / 2 + 5;
                    panel.nodes.panel_bg.setContentSize( cc.size(panel.nodes.panel_bg.width,panel.nodes.panel_bg.height + offsetY + panel.nodes.panel_3.height + 20));
                    ccui.helper.doLayout( panel.nodes.panel_bg);
                } else {
                    rh.setPosition(cc.p(0,-95));
                    panel.nodes.panel_bg.y = panel.nodes.panel_bg.y - panel.nodes.panel_bg.height / 2 - offsetY / 2 - 30;
                    panel.nodes.panel_bg.setContentSize( cc.size(panel.nodes.panel_bg.width,panel.nodes.panel_bg.height + offsetY -20));
                    ccui.helper.doLayout( panel.nodes.panel_bg);
                }
            }else{
                panel.nodes.panel_bg.setContentSize( cc.size(panel.nodes.panel_bg.width,panel.nodes.panel_bg.height + offsetY + panel.nodes.panel_3.height + 20));
                ccui.helper.doLayout( panel.nodes.panel_bg);
            }
        },
        setBtns: function (panel,bool) {
            var me = this;

            var layBtns = panel.nodes.panel_3;
            var laysj = panel.nodes.panel_4;
            laysj.setTouchEnabled(true);

            layBtns.removeAllChildren();

            var state2num = {
                tihuan:{
                    num:1,
                    btns:[{
                        setBtn: function (item) {
                            item.setTitleText(L('BTN_TIHUAN'));
                            item.setTitleColor(cc.color(G.gc.COLOR.n13));
                            item.touch(function (sender, type) {
                                if (type == ccui.Widget.TOUCH_ENDED) {
                                    G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[me.curXbId]));
                                    G.ajax.send('hero_wearshipin',[me.curId,me.curXbId],function(d) {
                                        if(!d) return;
                                        var d = JSON.parse(d);
                                        if(d.s == 1) {

                                            me.remove();
                                            if (G.frame.shipin_xuanze.isShow) {
                                                G.frame.shipin_xuanze.remove();
                                            }
                                            G.tip_NB.show(L('TIHUAN') + L('SUCCESS'));
                                            G.frame.yingxiong_xxxx.emit('updateInfo');
                                            G.class.ani.show({
                                                x: G.frame.yingxiong_xxxx.zb.panel.width / 2,
                                                y: G.frame.yingxiong_xxxx.zb.panel.height / 2,
                                                json: "ani_dianjitexiao",
                                                addTo: G.frame.yingxiong_xxxx.zb.panel,
                                                repeat: false,
                                                autoRemove: true,
                                                onload: function (node) {
                                                    node.zIndex = 10;
                                                }
                                            })
                                        }
                                    },true);
                                }
                            });
                        }
                    }]
                },
                xiexia:{
                    num: me.conf.upid ? 3 : 2,
                    btns:[
                        {
                            setBtn: function (item) {
                                // 脱下
                                item.loadTextureNormal('img/public/btn/btn3_on.png',1);
                                item.setTitleText(L('BTN_TUOXIA'));
                                item.setTitleColor(cc.color(G.gc.COLOR.n14));
                                if(!item.data) item.data = [];
                                item.touch(function (sender, type) {
                                    if (type == ccui.Widget.TOUCH_ENDED) {
                                        //卸下
                                        X.audio.playEffect("sound/zhuangbei.mp3");
                                        G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[me.curXbId]));
                                        G.ajax.send('hero_takeoff',[me.curXbId,'5'],function(d) {
                                            if(!d) return;
                                            var d = JSON.parse(d);
                                            if(d.s == 1) {

                                                me.remove();
                                                G.frame.yingxiong_xxxx.emit('updateInfo');
                                            }
                                        },true);
                                    }
                                });
                            }
                        },
                        {
                            setBtn: function (item) {
                                //替换
                                item.setTitleText(L('BTN_TIHUAN'));
                                item.setTitleColor(cc.color(G.gc.COLOR.n13));
                                item.touch(function (sender, type) {
                                    if (type == ccui.Widget.TOUCH_ENDED) {
                                        // 替换时打开饰品选择界面
                                        G.frame.shipin_xuanze.data({type:1}).once('show', function () {
                                            me.remove();
                                        }).show();
                                    }
                                });
                            }
                        },
                        {
                            setBtn: function (item) {
                                item.setTitleText(L('BTN_SHENGJI'));
                                item.setTitleColor(cc.color(G.gc.COLOR.n13));
                                if(!item.data) item.data = [];
                                item.touch(function () {
                                    G.frame.shipin_shengji.once('show', function () {
                                        me.remove();
                                    }).show();
                                })
                            }
                        }
                    ]
                },
                chuandai:{
                    num:1,
                    btns:[{
                        setBtn: function (item) {
                            //穿上
                            item.setTitleText(L('BTN_CHUANSHANG'));
                            item.setTitleColor(cc.color(G.gc.COLOR.n13));
                            if(!item.data) item.data = [];
                            item.touch(function (sender, type) {
                                if (type == ccui.Widget.TOUCH_ENDED) {
                                    X.audio.playEffect("sound/zhuangbei.mp3");
                                    G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[me.curXbId]));
                                    G.ajax.send('hero_wearshipin',[me.curId,me.curXbId],function(d) {
                                        if(!d) return;
                                        var d = JSON.parse(d);
                                        if(d.s == 1) {

                                            me.remove();
                                            if (G.frame.shipin_xuanze.isShow) {
                                                G.frame.shipin_xuanze.remove();
                                            }
                                            G.tip_NB.show(L('CHUANSHANG') + L('SUCCESS'));
                                            G.frame.yingxiong_xxxx.emit('updateInfo');
                                            G.class.ani.show({
                                                x: G.frame.yingxiong_xxxx.zb.panel.width / 2,
                                                y: G.frame.yingxiong_xxxx.zb.panel.height / 2,
                                                json: "ani_dianjitexiao",
                                                addTo: G.frame.yingxiong_xxxx.zb.panel,
                                                repeat: false,
                                                autoRemove: true,
                                                onload: function (node) {
                                                    node.zIndex = 10;
                                                }
                                            })
                                        }
                                    },true);
                                }
                            });
                        }
                    }]
                },
            };

            if (bool) {
                var btn = new ccui.Button();
                var img = 'img/public/btn/btn1_on.png';
                btn.loadTextures(img,'','',1);
                btn.setTitleFontName(G.defaultFNT);
                btn.setTitleFontSize(24);
                X.autoLayout_new({
                    parent:layBtns,
                    item:btn,
                    num:state2num[me.state].num,
                    mapItem: function (item) {
                        var idx = item.idx;
                        var btnsConf = state2num[me.state].btns;
                        btnsConf[idx].setBtn(item);
                    }
                });
            }

        }
    });

    G.frame[ID] = new fun('panel_nr.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/25.
 */
(function () {
    //饰品-选择
    var ID = 'shipin_xuanze';

    var fun = X.bUi.extend({
        extConf:{
            1:{
                data: function () {
                    var data = G.frame.beibao.DATA.shipin.list;

                    var keys = X.keysOfObject(data);
                    return keys;
                },
                sort: function (a,b) {
                    var dataA = G.frame.beibao.DATA.shipin.list[a],
                        dataB = G.frame.beibao.DATA.shipin.list[b];
                    var confA = G.class.shipin.getById(dataA.spid),
                        confB = G.class.shipin.getById(dataB.spid);

                    if (confA.color != confB.color) {
                        return confA.color * 1 > confB.color * 1 ? -1 : 1;
                    }else if(confA.star != confB.star){
                        var starA = confA.star * 1 || 0;
                        var starB = confB.star * 1 || 0;
                        return starA > starB ? -1 : 1;
                    }else{
                        return confA.id * 1 > confB.id * 1 ? -1 : 1;
                    }
                }
            }
        },
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        bindUI: function () {
            var me = this;
            setPanelTitle(me.nodes.txt_title, L('UI_TITLE_XZSP'));

            me.nodes.mask.click(function(){
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;


            me.bindUI();
        },
        onShow: function () {
            var me = this;

            me.curXbId = G.frame.yingxiong_xxxx.curXbId;
            me.heroConf = G.DATA.yingxiong.list[me.curXbId];
            me.curType = me.data().type;

            new X.bView('zhuangbei_zbxz.json',function(view){
                me._view = view;
                me.ui.nodes.panel_nr.removeAllChildren();

                me.ui.nodes.panel_nr.addChild(view);
                // G.frame.yingxiong_xxxx.getNextBuff('dengjielv', me.curXbId, function(buff){
                me.setContents();
                // });
            });
        },
        onRemove: function () {
            var me = this;
        },
        setContents:function() {
            var me = this;

            me.fmtItemList();
        },
        fmtItemList: function () {
            var me = this;
            var view = me._view;
            var scrollview = view.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();

            var data = me.extConf[me.curType].data();

            if (data.length < 1) {
                view.finds("img_zwnr").show();
                return;
            }

            data.sort(me.extConf[me.curType].sort);

            var table = me.table = new X.TableView(scrollview,me._view.nodes.list,5, function (ui, data) {
                me.setItem(ui, data);
            },null,null,3,5);
            table.setData(data);
            table.reloadDataWithScroll(true);
            scrollview.getChildren()[0].getChildren()[0].x -= 2;
        },
        setItem: function (ui, data) {
            var me = this;
            if (data == null) {
                ui.hide();
                return;
            }
            ui.setName(data);
            X.autoInitUI(ui);
            var d = G.frame.beibao.DATA.shipin.list[data];

            var widget = G.class.sshipin(d);
            widget.setScale(.95);
            widget.setAnchorPoint(0.5,1);
            widget.setPosition(cc.p( ui.width*0.5, ui.height ));
            ui.removeAllChildren();
            ui.addChild(widget);

            ui.data = d.spid;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function(sender, type){
                if(type == ccui.Widget.TOUCH_NOMOVE){
                    var state = me.heroConf.weardata && me.heroConf.weardata['5'] ? 'tihuan' : 'chuandai';
                    G.frame.shipin_xq.data({id:sender.data,state:state}).show();
                }
            });
            ui.show();
        },
    });

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/2.
 */
(function () {
    //十字军远征
    var ID = 'shizijunyuanzheng';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me.preLoadRes=['yuanzheng.png','yuanzheng.plist',"jingjichang.png","jingjichang.plist"];
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_sc.click(function (sender, type) {
                G.frame.shop.data({
                    type: "3",
                    name: "yzsd"
                }).show();
            });

            me.nodes.btn_bz.click(function (sender, type) {
                G.frame.help.data({
                    intr:L("TS7")
                }).show();
            });

            me.nodes.btn_fh.click(function (sender, type) {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            X.audio.playEffect("sound/openyuanzheng.mp3");
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.levelConf = G.class.shizijunyuanzheng.getLevel();
            me.CONF = G.class.shizijunyuanzheng.getConf();
            me.nodes.Img_djgbj.hide();
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("shizijun_open", [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    me.iszchd = d.d.iszchd > 0 ? d.d.iszchd / 100 : 1;
                    callback && callback();
                }
            })
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;
            me.showToper();
            // me.showMainMenu();
            me.nodes.panel_bx.hide();
            me.nodes.panel_gq.hide();
            me.setContents();
            me.nodes.panel_bg.setBackGroundImage("img/bg/bg_yuanzheng.jpg", 0);
            me.nodes.panel_bg.setPositionX(479);
            me.nodes.scrollview_dt.innerWidth = me.nodes.panel_bg.width - 1;
            me.nodes.scrollview_dt.setBounceEnabled(true);
            me.setMax();
            me.setTime();
            me.ui.setTimeout(function(){
                G.guidevent.emit('shizijunyuanzhengOpenOver');
            },200);
        },
        setMax: function() {
            var me = this;
            var scrollview = me.nodes.scrollview_dt,
                innerContent = scrollview.getInnerContainer();

            innerContent.update = function (dt) {
                if(innerContent.x > 124) {
                    innerContent.x = 124;
                }else if(innerContent.x < -442) {
                    innerContent.x = -442;
                }
            };
            innerContent.scheduleUpdate();
        },
        onHide: function () {
            var me = this;
            me.event.emit('hide');
            G.hongdian.getData("shizijun", 1);
        },
        setContents: function () {
            var me = this;
            var level = me.levelConf.level;
            var keys = X.keysOfObject(level);
            var boxPosition = me.levelConf.prizeBox;
            var keys1 = X.keysOfObject(boxPosition);

            me.nodes.panel_bg.removeAllChildren();
            G.class.ani.show({
                json: "ani_shizijun",
                addTo: me.nodes.panel_bg,
                x: me.nodes.panel_bg.width/2 + 2,
                y: me.nodes.panel_bg.height/2 - 20,
                repeat: true,
                autoRemove: false,
            });

            for(var i = 0; i < keys.length; i ++){
                me.setLevel(level[keys[i]].position, i);
            }
            for(var i = 0; i < keys1.length; i ++){
                me.setBox(boxPosition[keys1[i]].position, i);
            }
            me.setSupply();
        },
        setSupply: function() {
            var me = this;
            var supply = [];
            var conf = G.class.shizijunyuanzheng.getSupply();

            me.nodes.lview.removeAllChildren();

            for (var i in conf) {
                var item = G.class.shizijun_supply(i, conf[i], (me.DATA.supply && me.DATA.supply[i]) || 0);
                supply.push(item);
            }
            X.center(supply, me.nodes.lview, {});
        },
        setBox: function(position,idx){
            var me = this;
            var box = me.nodes.panel_bx.clone();
            var prize = me.CONF.base.boxprize[idx];

            box.show();
            box.removeBackGroundImage();
            

            if (me.DATA.passlist.length >= prize[0]) {
                if (X.inArray(me.DATA.prizelist, idx) == false) {
                    //可领取
                    X.addBoxAni({
                        parent:box,
                        boximg:"img/yuanzheng/img_yz_bx.png"
                    });
                } else {
                    //已领取
                    box.setBackGroundImage("img/yuanzheng/img_yz_bx_d.png", 1);
                }
            } else {
                // 未达成
                box.setBackGroundImage("img/yuanzheng/img_yz_bx.png", 1);
            }
            box.setPosition(position.x, position.y);
            me.nodes.panel_bg.addChild(box);
            box.zIndex = 999999;
            box.setTouchEnabled(true);
            box.getChildren()[0].touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_ENDED){
                    if(me.DATA.passlist.length >= prize[0] && X.inArray(me.DATA.prizelist, idx) == false){
                        G.ajax.send("shizijun_getprize", [idx], function (d) {
                            if (!d) return;
                            var d = JSON.parse(d);
                            if (d.s == 1) {
                                G.frame.jiangli.data({
                                    prize: d.d.prize
                                }).show();
                                me.getData(function () {
                                    me.setContents();
                                })
                            }
                        })
                    }else{
                        var prizeArr = X.clone(prize[1]);
                        for(var i in prizeArr) {
                            prizeArr[i].n = parseInt(prizeArr[i].n * me.iszchd);
                        }
                        prizeArr.push({a: "item", t: "shenmi"});
                        G.frame.jiangliyulan.data({
                            prize: prizeArr
                        }).show();
                    }
                }
            })
        },
        setLevel: function (conf, idx) {
            var me = this;
            var isOK = false;
            var level = me.nodes.panel_gq.clone();
            level.show();
            X.autoInitUI(level);

            level.zIndex = 999999;
            level.nodes.text_gq.setString(idx + 1);
            level.nodes.text_gq.setTextColor(cc.color("#F6EBCD"));
            X.enableOutline(level.nodes.text_gq, "#74391C", 2);
            level.setPosition(conf.x, conf.y);
            me.nodes.panel_bg.addChild(level);
            if(me.DATA.passlist.length == idx){
                // level.nodes.panel_gq1.setBackGroundImage("img/yuanzheng/img_yz_gq1.png", 1);
                // level.nodes.panel_qp.setBackGroundImage("img/yuanzheng/img_yz_gq2.png", 1);
                level.nodes.text_gq.hide();
                G.class.ani.show({
                    json: "ani_shizijun_shan",
                    addTo: level.nodes.panel_dh,
                    x: level.nodes.panel_dh.width/2,
                    y: level.nodes.panel_dh.height/2,
                    repeat: true,
                    autoRemove: false,
                    onload: function (node) {
                        node.finds("Text_1").setString(idx + 1);
                    }
                });
            }else if(me.DATA.passlist.length > idx){
                level.nodes.panel_gq1.setBackGroundImage("img/yuanzheng/img_yz_gq1.png", 1);
                level.nodes.panel_qp.setBackGroundImage("img/yuanzheng/img_yz_gq2.png", 1);
            }else{
                level.nodes.panel_gq1.setBackGroundImage("img/yuanzheng/img_yz_gq1.png", 1);
                // level.nodes.panel_qp.setBackGroundImage("img/yuanzheng/img_yz_gq2_h.png", 1);
                level.nodes.text_gq.setString("");
                // level.nodes.panel_gq1.setBackGroundImage("img/yuanzheng/img_yz_gq1.png", 1);
            }
            if(me.DATA.passlist.length > idx) isOK = true;
            level.nodes.panel_qp.setTouchEnabled(true);
            level.nodes.panel_btn.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_NOMOVE){
                    if(idx > me.DATA.passlist.length){
                        G.tip_NB.show(L("QTGSYGQ"));
                        return;
                    }
                    var conf = me.DATA.rival[idx.toString()];
                    G.frame.sizijunyuanzheng_dsxx.data({conf: conf, idx: idx, isOk: isOK}).show();
                }
            })
        },
        setTime: function () {
            var me = this;
            var timeTxt = new ccui.Text();
            // timeTxt.setTextColor(cc.color(G.gc.COLOR[5]));
            // timeTxt.setFontName(G.defaultFNT);
            // timeTxt.setFontSize(40);
            // me.ui.addChild(timeTxt);
            // timeTxt.setPosition(300, 400);
            X.timeout(timeTxt, X.getTodayZeroTime() + 24 * 3600,function () {
                // if(G.frame.yingxiong_fight.isShow) G.frame.yingxiong_fight.remove();
                // if(G.frame.sizijunyuanzheng_dsxx.isShow) G.frame.sizijunyuanzheng_dsxx.remove();
                // me.remove();
                if(G.frame.fight.isShow){
                    G.frame.fight.once("hide", function () {
                        X.uiMana.closeAllFrame();
                    })
                }else{
                    X.uiMana.closeAllFrame();
                }
            });
        }
    });
    G.frame[ID] = new fun('yuanzheng.json', ID);
})();
;;/**
 * Created by LYF on 2018/11/21.
 */
(function () {
    //十字军-购买
    var ID = 'shizijun_buy';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id);
        },
        initUi: function () {
            var me = this;

            me.nodes.txt_jnnr.setString(X.STR(L("DQZWSFGM"), me.conf.name, me.conf.need[0].n));

            var data = {a: "item", t: "crusader" + me.id, n: 1};
            var item = G.class.sitem(data);
            item.setAnchorPoint(0.5, 0.5);
            item.setPosition(me.nodes.panel_1.width / 2, me.nodes.panel_1.height / 2);
            G.frame.iteminfo.showItemInfo(item);
            me.nodes.panel_1.addChild(item);
        },
        bindBtn: function () {
            var me = this;

            if(cc.isNode(me.nodes.mask)) {
                me.nodes.mask.click(function () {
                    me.remove();
                })
            }

            me.nodes.btn_3.click(function () {

                me.ajax("shizijun_useitem", [me.id, me.tid], function (str, data) {
                    if(data.s == 1) {
                        for (var i in data.d) {
                            G.frame.shizijunyuanzheng.DATA[i] = data.d[i];
                        }
                        me.remove();
                        G.tip_NB.show(L("SYCG"));
                        G.frame.shizijun_use.curId = undefined;
                        G.frame.shizijun_use.setHeroList();
                    }
                })
            })
        },
        onOpen: function () {
            var me = this;

            me.id = me.data().id;
            me.tid = me.data().tid;
            me.conf = G.class.shizijunyuanzheng.getSupply()[me.id];

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
        },
        onHide: function () {
            var me = this;
        },
    });
    G.frame[ID] = new fun('yuanzheng_goumaibuji.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/2.
 */
(function () {
    //关卡信息
    var ID = 'sizijunyuanzheng_dsxx';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.setTouchEnabled(true);
            me.nodes.mask.click(function (sender, type) {
                me.remove();
            });


            if(me.DATA.isOk) {
                me.nodes.btn_zd.hide();
                me.nodes.text_zd.hide();
                me.nodes.img_zd.hide();
                me.nodes.img_ytz.show();
            }
            me.nodes.btn_zd.click(function (sender, type) {
                var obj = {
                    pvType:'pvshizijun',
                    idx:me.DATA.idx,
                    prize: G.class.shizijunyuanzheng.getConf().base.passprize[me.DATA.idx.toString()]
                };
                G.frame.yingxiong_fight.data(obj).show();
            })
        },
        onOpen: function () {
            var me = this;

            me.DATA = me.data();

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var arr = [];
            var me = this;
            var sqid = "";
            var enemyConf = me.DATA.conf.rival;
            var headData = me.DATA.conf.headdata;
            var tx = G.class.shead(headData);
            tx.setPosition(me.nodes.panel_tx.width / 2, me.nodes.panel_tx.height / 2);
            me.nodes.text_mz.setString(headData.name);
            me.nodes.panel_tx.addChild(tx);
            if(me.DATA.conf.isnpc){
                me.nodes.text_zdl1.setString(999999);
                me.nodes.text_wz.setString("S100");
            }else{
                me.nodes.text_zdl1.setString(me.DATA.conf.zhanli);
                me.nodes.text_wz.setString(me.DATA.conf.sname);
            }

            for (var i in enemyConf) {
                if(enemyConf[i].sqid) {
                    sqid = enemyConf[i].sqid;
                    enemyConf.splice(i, 1);
                    break;
                }
            }

            for(var i in enemyConf){
                var list = me.nodes.list_ico1.clone();
                var conf = enemyConf[i];
                var enemy = G.class.shero(conf);
                var hp = conf.hp >= conf.maxhp? 100 : conf.hp / conf.maxhp * 100;
                if(me.DATA.isOk) hp = 0;
                enemy.setHP(hp, true);
                enemy.setPosition(list.width / 2, list.height / 2);
                enemy.setArtifact(sqid);
                list.addChild(enemy);
                if(hp <= 0){
                    var yzw = new ccui.ImageView("img/public/img_yzw.png", 1);
                    yzw.setPosition(list.width / 2, list.height / 2 - 1);
                    list.addChild(yzw);
                    enemy.setEnabled(false);
                }
                list.setAnchorPoint(0.5, 0.5);
                arr.push(list);
            }
            X.center(arr, me.nodes.panel_ico1, {
                scale: .7
            });
            X.alignCenter(me.nodes.panel_ico2, G.class.shizijunyuanzheng.getConf().base.passprize[me.DATA.idx.toString()], {
                name: "",
                touch: true,
                scale: .8,
                callback: function () {
                    
                }
            });
        },
    });
    G.frame[ID] = new fun('yuanzheng_dsxx.json', ID);
})();
;;G.class.shizijun_supply = function (id, conf, num) {
    if(!id || !conf) return;

    var btn = new ccui.Button;
    btn.idx = id;
    btn.num = num;
    btn.loadTextureNormal("img/yuanzheng/bg_wpk" + id + ".png", 1);

    var icon = new ccui.Button;
    icon.loadTextureNormal("img/yuanzheng/daoju" + id + ".png", 1);
    icon.setAnchorPoint(0.5, 0.5);
    icon.setPosition(btn.width / 2, btn.height / 2);
    icon.setTouchEnabled(false);
    btn.addChild(icon);

    var numTxt = new ccui.Text(num, G.defaultFNT, 16);
    numTxt.setTextColor(cc.color("#f6ebcd"));
    numTxt.setAnchorPoint(0.5, 0.5);
    numTxt.setPosition(btn.width / 2 + btn.width / 4, btn.height / 4);
    X.enableOutline(numTxt, "#000000", 2);
    numTxt.zIndex = 999;
    btn.addChild(numTxt);

    var keys = X.keysOfObject(conf.buff);

    for (var i = 0; i < keys.length; i ++) {
        var str = L(keys[i]) + X.STR("<font color=#5ce624>+{1}</font>", keys[i] == "hp" ? conf.buff[keys[i]] + "%" : conf.buff[keys[i]]);
        var rh = new X.bRichText({
            size: 16,
            maxWidth: btn.width,
            lineHeight: 32,
            family: G.defaultFNT,
            color: "#f6ebcd",
            eachText: function (node) {
                X.enableOutline(node, "#000000", 2);
            }
        });
        rh.text(str);
        rh.setAnchorPoint(0.5, 0.5);
        rh.setPosition(btn.width / 2, 0 - i * rh.height);
        rh.zIndex = 999;
        btn.addChild(rh);
    }
    if(conf.intr) {
        var str = conf.intr;
        var rh = new X.bRichText({
            size: 16,
            maxWidth: btn.width,
            lineHeight: 32,
            family: G.defaultFNT,
            color: "#f6ebcd",
            eachText: function (node) {
                X.enableOutline(node, "#000000", 2);
            }
        });
        rh.text(str);
        rh.setAnchorPoint(0.5, 0.5);
        rh.setPosition(btn.width / 2, 0);
        rh.zIndex = 999;
        btn.addChild(rh);
    }

    btn.click(function (sender) {
        G.frame.shizijun_use.data(sender.idx).show();
    });

    return btn;
};
;;/**
 * Created by LYF on 2018/11/21.
 */
(function () {
    //远征-选择
    var ID = 'shizijun_use';

    var fun = X.bUi.extend({
        extConf:{
            data: function (id) {
                var data = G.DATA.yingxiong.list;
                var keys = X.keysOfObject(data);
                var arr = [];
                for (var i = 0; i < keys.length; i++) {
                    var tid = keys[i];
                    var heroData = data[tid];
                    if (heroData.lv > 39) {
                        if(id == 1) {
                            if(G.frame.shizijunyuanzheng.DATA.status[tid]
                                && G.frame.shizijunyuanzheng.DATA.status[tid].hp < G.frame.shizijunyuanzheng.DATA.status[tid].maxhp
                                && G.frame.shizijunyuanzheng.DATA.status[tid].hp >= 1)
                            {
                                arr.push(tid);
                            }
                        } else if(id == 2) {
                            if(!G.frame.shizijunyuanzheng.DATA.status[tid]
                                || (G.frame.shizijunyuanzheng.DATA.status[tid] && G.frame.shizijunyuanzheng.DATA.status[tid].nuqi < 100))
                            {
                                arr.push(tid);
                            }
                        } else {
                            if(G.frame.shizijunyuanzheng.DATA.status[tid] && G.frame.shizijunyuanzheng.DATA.status[tid].hp <= 0)
                            {
                                arr.push(tid);
                            }
                        }
                    }
                }
                return arr;
            },
            getSort: function (arr, str1, str2, str3, str4) {
                var data = [];
                var heroData = [];
                var hidData = [];
                var sortArr = [];
                var zz = {
                    5:0, //神圣
                    6:1, //暗影
                    4:2, //自然
                    3:4, //邪能
                    2:5, //奥术
                    1:6 //亡灵
                };
                for(var i = 0; i < arr.length; i ++){
                    heroData.push(G.DATA.yingxiong.list[arr[i]]);
                    if(!heroData[i].tid) heroData[i].tid = arr[i];
                }
                for(var i = 0, j = heroData.length; i < j; i += 1){
                    var conf = heroData[i];
                    var q = conf[str1];
                    var w = conf[str2];
                    var e = zz[conf[str3]];
                    var r = conf[str4];
                    if(!sortArr[q]){
                        sortArr[q] = [];
                    }
                    if(!sortArr[q][w]){
                        sortArr[q][w] = [];
                    }
                    if(!sortArr[q][w][e]){
                        sortArr[q][w][e] = [];
                    }
                    if(!sortArr[q][w][e][r]){
                        sortArr[q][w][e][r] = [];
                    }
                    sortArr[q][w][e][r].push(heroData[i]);
                }
                var index = heroData.length - 1;
                for(var i in sortArr){
                    for(var j in sortArr[i]){
                        for (var k in sortArr[i][j]){
                            for(var l in sortArr[i][j][k]){
                                for(var m in sortArr[i][j][k][l]){
                                    data[index --] = sortArr[i][j][k][l][m];
                                }
                            }
                        }
                    }
                }
                for(var i = 0; i < data.length; i ++){
                    hidData.push(data[i].tid);
                }
                return hidData;
            }
        },
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;

            me.ui.finds("Text_1").setString(G.class.shizijunyuanzheng.getSupply()[me.id].desc);
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });

            me.nodes.btn_shiyong.click(function () {
                if(!me.curId) {
                    G.tip_NB.show(L("QXZSYYX"));
                    return;
                }
                if(!G.frame.shizijunyuanzheng.DATA.supply || !G.frame.shizijunyuanzheng.DATA.supply[me.id]) {
                    G.frame.shizijun_buy.data({id: me.id, tid: me.curId}).show();
                    return;
                }
                me.ajax("shizijun_useitem", [me.id, me.curId], function (str, data) {
                    if(data.s == 1) {
                        for (var i in data.d) {
                            G.frame.shizijunyuanzheng.DATA[i] = data.d[i];
                        }
                        me.curId = undefined;
                        G.tip_NB.show(L("SYCG"));
                        me.setHeroList();
                        G.frame.shizijunyuanzheng.setSupply();
                    }
                })
            })
        },
        onOpen: function () {
            var me = this;

            me.id = me.data();
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setHeroList();
        },
        setHeroList: function () {
            var me = this;
            var data = me.extConf.getSort(me.extConf.data(me.id), "star", "lv", "zhongzu", "hid");

            if(data.length < 1) {
                me.nodes.zwnr.show();
            } else {
                me.nodes.zwnr.hide();
            }

            if(!me.table) {
                var table = me.table = new X.TableView(me.ui.finds("scrollview"), me.nodes.list, 5, function (ui, data) {
                    me.setItem(ui, data);
                }, null, null, 25);
                table.setData(data);
                table.reloadDataWithScroll(true);
            } else {
                me.table.setData(data);
                me.table.reloadDataWithScroll(false);
            }
        },
        setItem: function (ui, data) {
            var me = this;
            var heroData = G.DATA.yingxiong.list[data];
            var wid = G.class.shero(heroData);
            var state = G.frame.shizijunyuanzheng.DATA.status;
            wid.setScale(.8);
            wid.setAnchorPoint(0.5, 0.5);
            wid.setPosition(ui.width / 2, ui.height / 2);

            if(state[data] && state[data].hp <= 0) {
                wid.setEnabled(false);
                wid.setHP(0, false);
                wid.setNQ(0, false);
            }else if(state[data]){
                wid.setEnabled(true);
                wid.setNQ(state[data].nuqi, true);
                wid.setHP(state[data].hp / state[data].maxhp * 100, true);
            } else {
                wid.setEnabled(true);
                wid.setNQ(50, true);
                wid.setHP(100, true);
            }

            ui.removeAllChildren();
            ui.addChild(wid);
            ui.data = data;
            ui.setSwallowTouches(false);

            if(me.curId && me.curId == ui.data) {
                ui.children[0].setGou(true);
            } else {
                ui.children[0].setGou(false);
            }

            ui.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_NOMOVE) {
                    sender.children[0].setGou(true);
                    me.curId = sender.data;
                    me.checkGou();
                }
            });
        },
        checkGou: function () {
            var me = this;
            var children = me.table.getAllChildren();

            for (var i in children) {
                if(children[i].data != me.curId) {
                    children[i].children[0].setGou(false);
                }
            }
        }
    });
    G.frame[ID] = new fun('yuanzheng_xuanze.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/6.
 */
(function () {
    //商店
    var ID = 'shop';

    var fun = X.bUi.extend({
        extConf:{
            maxnum:3
        },
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
            me.ui.nodes.tip_title.setString(L(me.data().name));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();


            me.shopConf = G.class.shop.getById(me.curType);
            me.curAttr = me.shopConf.need[0];
            me.showAttr = me.shopConf.show[0];
            cc.isNode(me.nodes["zhuangshi_" + me.curType]) && me.nodes["zhuangshi_" + me.curType].show();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            me.curType = me.data().type;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;
            me.needScroll = true;
            me.setContents();
        },
        onHide: function () {
            var me = this;
            me.event.emit('hide');
        },
        getData: function (callback) {
            var me = this;

            G.ajax.send('shop_open', [me.curType], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    if(me.curType == 1) {
                        G.view.mainView.getAysncBtnsData(function () {
                            me.DATA.shop.shopitem = [].concat(G.DATA.asyncBtnsData.herocoming, me.DATA.shop.shopitem);
                            callback && callback();
                        });
                    }else {
                        callback && callback();
                    }
                }
            });
        },
        refreshData: function () {
            var me = this;

            me.needScroll = false;
            me.getData(function () {
                me.setContents();
            });
        },
        refreshPanel: function () {
            var me = this;

            //刷新界面显示
            me.getData(function () {
                var data = me.filterData();
                me.table.setData(data);
                me.table.reloadDataWithScroll(false);
                if(me.refresh) me.refresh = 0;

                me.setRefreshBtn();
                me.setAttr();
            })
        },
        setContents: function () {
            var me = this;

            var scrollview = me.nodes.scrollview_sp;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();
            var list = me.getNewItem();

            var data = me.filterData();
            var table = me.table = new X.TableView(scrollview,list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,1);
            table.setData(data);
            table.reloadDataWithScroll(me.needScroll);
            if(me.refresh) me.refresh = 0;

            me.setRefreshBtn();
            me.setAttr();
        },
        // 设置每行
        setItem: function (ui,data) {
            var me = this;

            for (var i = 0; i < 3; i++) {
                var parent = ui.finds('panel_wp' + (i + 1) + '$');
                var child = parent.getChildren()[0];
                child.hide();
                var dd = data[i];
                if (dd) {
                    me.setChildItem(child,dd);
                    child.show();
                }
            }

            ui.setTouchEnabled(false);
            ui.show();
        },
        //设置一行的子项
        setChildItem: function (ui,data) {
            var me = this;

            X.autoInitUI(ui);
            var imgKapian = ui.nodes.img_kapian1;
            var layIco = ui.nodes.ico_tb;
            // var txtName = ui.nodes.text_1;
            var imgAttr = ui.nodes.image_jb;
            var txtAttr = ui.nodes.text_jinbi;
            var imgZhekou = ui.nodes.img_zkbg;
            var txtZhekou = ui.nodes.text_zk;
            var imgYgm = ui.nodes.img_ygm;
            //倒计时
            var panelDjs = ui.nodes.panel_djs;
            var txtDjs = ui.nodes.txt_djs;
            // 限购次数
            // var panelXg = ui.nodes.panel_xgcs;
            // var txtXg = ui.nodes.txt_xgsl;

            panelDjs.hide();
            // panelXg.hide();
            layIco.removeAllChildren();
            imgZhekou.hide();
            txtZhekou.setString('');
            imgYgm.hide();

            // 道具
            var wid = G.class.sitem(data.item);
            if(me.refresh) wid.refresh();
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);

            G.frame.iteminfo.showItemInfo(wid);
            wid.setTouchEnabled(true);
            wid.setSwallowTouches(true);

            //设置名字
            // setTextWithColor(txtName,wid.conf.name,G.gc.COLOR[wid.conf.color || 1]);

            // 消耗货币
            imgAttr.loadTexture(G.class.getItemIco(data.need[0].t),1);
            txtAttr.setString(data.need[0].n);

            //折扣
            if (data.sale && data.sale != 10) {
                imgZhekou.show();
                txtZhekou.setString(data.sale + 'z');
                X.enableOutline(txtZhekou,'#1d9600',2);
            }

            //是否显示限购
            if (data.buynum == 0) {
                imgYgm.show();
                txtAttr.hide();
                imgAttr.hide();
            }else{
                imgYgm.hide();
                txtAttr.show();
                imgAttr.show();
            }

            if(data.buynum > 0) {
                ui.finds("xiangou").show();
                ui.finds("wz1").setString(X.STR(L("XG"), data.buynum));
            }else {
                ui.finds("xiangou").hide();
            }

            //限购倒计时
            if (panelDjs.timer) {
                panelDjs.clearTimeout(panelDjs.timer);
                delete panelDjs.timer;
            }

            if (data.buynum > 0 && data.buytime && data.buytime > G.time) {
                panelDjs.show();
            }

            if(data.etime) {
                panelDjs.show();
                if(data.etime - G.time > 24 * 3600 * 2) {
                    txtDjs.setString(X.moment(data.etime - G.time));
                }else {
                    X.timeout(txtDjs, data.etime, function () {
                        X.uiMana.closeAllFrame();
                    })
                }
            }

            //整个卡牌除道具显示区域外可点击购买
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.data = data;
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    if(sender.data.hdid) {
                        me.hdUse(sender.data);
                        return;
                    }
                    if (sender.data.buynum == 0) {
                        G.tip_NB.show(L('SHOP_ITEM_OVER'));
                        return;
                    }
                    if(G.class.getOwnNum(me.showAttr.t,me.showAttr.a) < data.need[0].n){
                        var name;
                        if(me.showAttr.a == "attr"){
                            name = G.class.attricon.getById(me.showAttr.t).name;
                        }else{
                            name = G.class.getItem(me.showAttr.t).name;
                        }
                        G.tip_NB.show(name  + L("BUZU"));
                        return;
                    }
                    if (G.class.shop.checkIsShowAlert(me.curType)) {
                        var str = L('SHOP_NEED_BUY');
                        G.frame.alert.data({
                            sizeType:3,
                            cancelCall:null,
                            okCall: function () {
                                me.buy({
                                    prize: data.item,
                                    idx:sender.data.idx,
                                    num:1
                                });
                            },
                            autoClose:true,
                            richText:str
                        }).show();
                    } else {
                        me.buy({
                            prize: data.item,
                            idx:sender.data.idx,
                            num:1
                        });
                    }
                }
            });
        },
        hdUse: function(data) {
            var me = this;

            var str = L('SHOP_NEED_BUY');
            G.frame.alert.data({
                sizeType:3,
                cancelCall:null,
                okCall: function () {
                    G.ajax.send('huodong_use',[data.hdid, 1, data.index],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            G.frame.jiangli.data({
                                prize:[].concat(d.d.prize)
                            }).show();
                            me.refreshPanel();
                        }
                    },true);
                },
                autoClose:true,
                richText:str
            }).show();
        },
        // 获得组合后的新模板
        getNewItem: function () {
            var me = this;

            var list = me.nodes.list_mb;
            var list2 = me.nodes.list;

            // var interval = (list.width - me.extConf.maxnum * list2.width) / (me.extConf.maxnum - 1);
            for (var i = 0; i < me.extConf.maxnum; i++) {
                var lay = list.finds('panel_wp' + (i + 1) + '$');
                lay.setTouchEnabled(false);
                lay.removeAllChildren();
                var item = list2.clone();
                item.setAnchorPoint(cc.p(0.5,0.5));
                item.setPosition(cc.p(lay.width / 2,lay.height / 2));
                lay.addChild(item);
                // item.setPosition(cc.p(item.width / 2 + (item.width + interval) * i,list.height / 2));
                // list.addChild(item);
            }

            return list;
        },
        //组合成需要显示的数据
        filterData: function () {
            var me = this;

            var data = me.DATA.shop.shopitem;

            var newData = [],
                arr=[];
            for (var i = 0; i < data.length; i++) {
                var d = data[i];
                //if (i % me.extConf.maxnum == 0) {
                //    arr = [];
                //}
                arr.push(d);
                if ((i + 1) % me.extConf.maxnum == 0) {
                    newData.push(arr);
                    arr = [];
                }
            }
            if(arr.length > 0) {
                newData.push(arr);
            }

            return newData;
        },
        // 设置场景动画
        setAni: function () {
            var me = this;

            var layLeft = me.nodes.panel_zs1;
            var layRight = me.nodes.panel_zs2;
        },
        // 设置刷新按钮
        setRefreshBtn: function () {
            var me = this;

            var btnRe = me.nodes.btn_1;
            var imgAttr = me.nodes.img_zs;
            var txtAttr = me.nodes.text_2;
            var imgMf = me.nodes.img_wz;
            var imgSx = me.nodes.img_wz2;
            var conf = me.shopConf;
            var data = me.DATA;

            if(me.curType == "1" || me.curType == "5") imgSx.setString(L("CZ"));

            imgAttr.hide();
            txtAttr.hide();
            imgMf.hide();
            imgSx.hide();
            //如果商店不需要刷新，隐藏刷新按钮
            var freeTime = data.shop.freetime;
            if (conf.rseconds == -1 && conf.need.length < 1) {
                btnRe.hide();
                return;
            }else if(conf.rseconds == -1 && conf.need.length > 0){
                imgSx.show();
                imgAttr.show();
                txtAttr.show();
                if(conf.need[0].n == 20000){
                    conf.need[0].n = '2万';
                }
                txtAttr.setString(conf.need[0].n);
                imgAttr.loadTexture(G.class.getItemIco(conf.need[0].t),1);
            }else if (conf.rseconds !== -1 && freeTime - G.time < 0) {
                imgMf.show();
            }else if(conf.rseconds !== -1 && freeTime - G.time > 0){
                imgSx.show();
                imgAttr.show();
                txtAttr.show();
                if(conf.need[0].n == 20000){
                    conf.need[0].n = '2万';
                }
                txtAttr.setString(conf.need[0].n);
                imgAttr.loadTexture(G.class.getItemIco(conf.need[0].t),1);
            }

            btnRe.setTouchEnabled(true);
            btnRe.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if(G.class.getOwnNum(conf.need[0].t, conf.need[0].a) < conf.need[0].n){
                        var name;
                        if(conf.need[0].a == "attr"){
                            name = G.class.attricon.getById(conf.need[0].t).name;
                        }else{
                            name = G.class.getItem(conf.need[0].t).name;
                        }
                        G.tip_NB.show(name + L("BUZU"));
                        return;
                    }
                    G.ajax.send('shop_shuaxin',[me.curType],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            me.refresh = 1;
                            G.tip_NB.show(L('SHUAXIN') + L('SUCCESS'));
                            me.DATA.shop = d.d.shopinfo;
                            me.refreshPanel();
                        }
                    },true);
                }
            });
        },
        // 设置货币信息
        setAttr: function () {
            var me = this;
            var imgAttr = me.nodes.token_lhs;
            var txtAttr = me.nodes.txt_sl;
            me.ui.finds('panel_lhs').show();
            imgAttr.loadTexture(G.class.getItemIco(me.showAttr.t), 1);
            txtAttr.setString(X.fmtValue(G.class.getOwnNum(me.showAttr.t,me.showAttr.a)));
        },
        buy: function (args) {
            var me = this;

            var num = args.num;
            var idx = args.idx;
            var shopid = me.curType;
            
            G.ajax.send('shop_buy',[shopid,idx],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {

                    me.DATA.shop = d.d.shopinfo;

                    // G.tip_NB.show(L('GOUMAI') + L('SUCCESS'));
                    G.frame.jiangli.data({
                        prize:[].concat(args.prize)
                    }).show();

                    me.refreshPanel();
                }
            },true);
        }

    });

    G.frame[ID] = new fun('shangdian.json', ID);
})();
;;/**
 * Created by LYF on 2018/7/5.
 */
(function () {
    //首冲
    var ID = 'shouchong';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function (sender, type) {
                me.remove();
            });

            // X.radio([me.nodes.btn_1, me.nodes.btn_2, me.nodes.btn_3], function (sender) {
            //     var name = sender.getName();
            //     var name2type = {
            //         btn_1$: 1,
            //         btn_2$: 2,
            //         btn_3$: 3
            //     };
            //
            //     me.changeType(name2type[name]);
            // })
            var btn_arr = [me.nodes.btn_1, me.nodes.btn_2, me.nodes.btn_3];
            me.nodes.btn_1.setEnabled(true);
            me.nodes.btn_1.setBright(false);
            me.nodes.btn_1.click(function (sender, type) {
                me.changeType(1);
                setbtn(1);
            });
            me.nodes.btn_2.click(function (sender, type) {
                me.changeType(2);
                setbtn(2);
            });
            me.nodes.btn_3.click(function (sender, type) {
                me.changeType(3);
                setbtn(3);
            });
            var setbtn = function (type) {
                for (var i = 0; i < 3; i++) {
                    if (type == i + 1) {
                        btn_arr[i].setBright(false);
                        btn_arr[i].finds('txt_wz').setTextColor(cc.color("#ffffff"));
                        X.enableOutline(btn_arr[i].finds('txt_wz'), "#B25800", 2);
                    } else {
                        btn_arr[i].setBright(true);
                        btn_arr[i].finds('txt_wz').setTextColor(cc.color("#AFC9E1"));
                        X.disableOutline(btn_arr[i].finds('txt_wz'));
                    }
                }
            }


        },
        changeType: function (type) {
            var me = this;

            if (me.type && me.type == type) return;

            me.type = type;
            me.getData(function () {
                me.setContents();
            });
        },
        getData: function (callback) {
            var me = this;
            G.ajax.send("shouchong_open", [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    me.typeData = me.DATA.shouchong[me.type];
                    callback && callback();
                }
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();

            me.nodes.btn_1.hide();
            me.nodes.btn_2.hide();
            me.nodes.btn_3.hide();
            me.setContents();
            me.checkRedPoint();
        },
        checkRedPoint: function () {
            var me = this;
            var data = G.DATA.hongdian.shouchonghaoli;
            for (var i in data) {
                if (data[i] > 0) {
                    G.setNewIcoImg(me.nodes["btn_" + i], .95);
                } else {
                    G.removeNewIco(me.nodes["btn_" + i]);
                }
            }
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.nodes.btn_shouchong_qcz.opacity = 0;
            me.nodes.btn_shouchong_lq.opacity = 0;
        },
        show: function (conf) {
            var me = this;
            var _super = this._super;
            me.type = 1;
            this.getData(function () {
                _super.apply(me, arguments);
            });
        },
        onHide: function () {
            var me = this;
            me.bg_action.play("out", false);
            G.hongdian.getData("shouchonghaoli", 1);
        },
        setContents: function () {
            var me = this;
            var config = G.class.getConf("shouchong");
            var conf = config[me.type];
            var isFinish = true;
            // me.nodes.panel_dh.removeAllChildren();
            if (me.type == 1) {
                me.nodes.txt_sx1.setString("2310");
                me.nodes.txt_sx2.setString("664");
                me.nodes.txt_sx3.setString("22410");
                me.nodes.txt_sx4.setString("606");
                me.nodes.Panel_dj.finds("txt_djmsz").setString("100");
                me.nodes.Panel_dj.show();
            } else {
                me.nodes.Panel_dj.hide();
            }
            me.nodes.panel_dh.removeAllChildren();
            G.class.ani.show({
                json: "ani_shouchong" + me.type,
                addTo: me.nodes.panel_dh,
                x: me.nodes.panel_dh.width / 2,
                y: me.nodes.panel_dh.height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    var hid_arr = ['41065', '43023', '52025'];
                    var rw = node.finds("rw$");
                    rw.removeBackGroundImage();
                    rw.removeAllChildren();
                    X.setHeroModel({
                        parent: rw,
                        data: {
                            hid: hid_arr[me.type - 1]
                        },
                        scaleNum: me.type == 0 ? 1.2 : 1
                    });
                    rw.setAnchorPoint(0.95, -0.03);
                    rw.setFlippedX(true);
                    rw.setScale(1.2);

                    
                    if (me.type == "1" && !me.bg_action) {
                        action.playWithCallback("in", false, function() {
                            action.play("xunhuan", true);
                        })
                    }else{
                        action.play("xunhuan", true);
                    }
                    me.bg_action = action;
                }
            });
            for (var i in me.DATA.shouchong) {
                var pz = G.class.getConf("shouchong")[i];
                if (me.DATA.shouchong[i].rec.length !== pz.prize.length) {
                    isFinish = false;
                    break;
                }
            }
            if (isFinish) {
                G.view.mainView.ui.finds("shouchong").hide();
                me.remove();
                return;
            }
            me.ui.finds("txt_ycz").setString(X.STR(L("YCY"), me.DATA.paynum));
            for (var i in me.DATA.shouchong) {
                if (me.DATA.shouchong[i].show) {
                    me.nodes["btn_" + i].show();
                }
            }
            var islq = true;
            var listview = me.nodes.listview;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();
            var list_x = (listview.width - me.nodes.list.width * 3) / 2;
            listview.setItemsMargin(list_x);
            for (var i = 0; i < conf.prize.length; i++) {
                var list = me.nodes.list.clone();
                var prize = conf.prize[i];
                X.autoInitUI(list);
                X.alignCenter(list.nodes.panel_ico, prize, {
                    touch: true,
                    mapItem: function (item) {
                        item.setScale(.8);
                    }
                });
                if (me.typeData.rec.length > i) {
                    list.nodes.img_xb_ylq.show();
                }
                list.nodes.txt_ts.setString(X.STR(L("DJT"), i + 1));
                list.show();
                listview.pushBackCustomItem(list);
            }
            if(me.typeData.rec.length == conf.prize.length) {
                me.nodes.img_ylq.show();
            }else {
                me.nodes.img_ylq.hide();
            }
            while (me.ui.finds("ui").getChildByTag(777777)) {
                me.ui.finds("ui").getChildByTag(777777).removeFromParent();
            }
            if (me.DATA.paynum < conf.paynum) {
                me.nodes.btn_shouchong_lq.hide();
                me.nodes.btn_shouchong_qcz.show();
                G.class.ani.show({
                    json: "ani_shouchong_quchongzhi",
                    addTo: me.ui.finds("ui"),
                    x: me.nodes.btn_shouchong_qcz.x,
                    y: me.nodes.btn_shouchong_qcz.y,
                    repeat: true,
                    autoRemove: false,
                    onload: function (node, action) {
                        node.setTag(777777);
                    }
                })
            } else {

                me.nodes.btn_shouchong_qcz.hide();
                me.nodes.btn_shouchong_lq.show();
                var idx = me.typeData.rec.length;
                if (me.typeData.rec.length == conf.prize.length || G.time < me.typeData.chkrectime[idx]) {
                    me.nodes.btn_shouchong_lq.setBright(false);
                    islq = false;
                    if(me.typeData.rec.length == conf.prize.length) {
                        me.nodes.btn_shouchong_lq.hide();
                    }
                    // me.nodes.btn_shouchong_lq.setTouchEnabled(false);
                } else {
                    G.class.ani.show({
                        json: "ani_shouchong_lingqu",
                        addTo: me.ui.finds("ui"),
                        x: me.nodes.btn_shouchong_lq.x,
                        y: me.nodes.btn_shouchong_lq.y,
                        repeat: true,
                        autoRemove: false,
                        onload: function (node, action) {
                            node.setTag(777777);
                        }
                    });
                    me.nodes.btn_shouchong_lq.setBright(true);
                    me.nodes.btn_shouchong_lq.setTouchEnabled(true);
                }
            }
            me.nodes.btn_shouchong_qcz.click(function (sender, type) {
                G.frame.chongzhi.show();
                me.remove();
            });
            me.nodes.btn_shouchong_lq.click(function (sender, type) {
                if (!islq) return;
                G.ajax.send("shouchong_recprize", [me.type, idx], function (d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.frame.jiangli.data({
                            prize: d.d.prize
                        }).show();
                        me.getData(function () {
                            me.setContents();
                        });
                        G.hongdian.getData("shouchonghaoli", 1, function () {
                            me.checkRedPoint();
                        })
                    }
                })
            });
        },
    });
    G.frame[ID] = new fun('shouchong.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/29.
 */
 (function () {
    //探险
    var ID = 'tanxian';

    var fun = X.bUi.extend({
        extConf: {
            city: {
                'maxContleft': 20,
                'maxContRight': -1350
            },
        },
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f2";
            me.fullScreen = true;
            me._super(json, id, {action: true});
            me.preLoadRes = ["jiesuojianzhu.png", "jiesuojianzhu.plist"];
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            var btnXs = me.nodes.btn_xsrw;
            var btnMap = me.nodes.btn_worldmap;
            btnMap.show();
            var btnTg = me.nodes.btn_tgjl;
            var btnPh = me.nodes.btn_ph;
            var btnHc = me.nodes.btn_fhzc;
            var btnKs = me.nodes.btn_kstx;
            var btnBq = me.nodes.btn_woyaobianqiang;
            var btnSq = me.nodes.btn_sq;
            if(P.gud.lv < 6) {
                btnSq.hide();
            }
            var panel_xsrwdh = me.nodes.panel_xsrwdh;
            panel_xsrwdh.setAnchorPoint(0.5,0.5);
            panel_xsrwdh.setPosition(cc.p(btnXs.width/2, btnXs.height/2));
            btnXs.setZoomScale(0);
            //悬赏积分
            btnXs.click(function(sender,type){
                var xslv = G.class.opencond.getLvById("xuanshangrenwu");
                if(P.gud.lv < xslv){
                    G.tip_NB.show(X.STR(L("XYLVKQ"), xslv));
                    return;
                }else{
                    G.frame.xuanshangrenwu.show();
                }
            });
            // 世界地图
            btnMap.click(function (sender, type) {
                G.frame.tanxian_map.data({
                    tztype: G.class.tanxian.getNanduById(P.gud.maxmapid > me.maxGqid ? me.maxGqid : P.gud.maxmapid)
                }).show();
            });
            // 通关奖励
            btnTg.click(function (sender, type) {
                G.frame.tanxian_tgprize.show();
            });
            // 排行
            btnPh.click(function (sender, type) {
                G.ajax.send('rank_open', [1], function (d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.frame.tanxian_phb.data(d.d).show();
                    }
                }, true);

            });

            // me.nodes.btn_sq.click(function () {
            //     G.frame.shenqi.show();
            // });
            //返回主城
            // btnHc.click(function(sender,type){
            //     // G.frame.main.show();
            //     me.remove();
            // });
            //快速探险
            btnKs.click(function (sender, type) {
                G.frame.tanxian_kstx.show();
            });
            btnBq.click(function () {
                G.frame.woyaobianqiang.show();
            });
            G.class.ani.show({
                json: "ani_xiaotubiao_shenqi",
                addTo: btnSq,
                x: btnSq.width / 2,
                y: btnSq.height / 2,
                repeat: true,
                autoRemove: false
            });
            btnSq.click(function(){
                G.frame.shenqi.checkShow();
            });
            G.class.ani.show({
                json: "ani_xiaotubiao_renwu",
                addTo: me.nodes.btn_mrrw,
                x: me.nodes.btn_mrrw.width / 2,
                y: me.nodes.btn_mrrw.height / 2,
                repeat: true,
                autoRemove: false
            });
            me.nodes.btn_mrrw.click(function () {
                G.frame.renwu.data({type: 2}).show();
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();

            me.showMainMenu();
            // me.showToper();
            //判断maxmapid是否过界
            me.maxGqid = G.class.tanxian.getCurMaxGqid();
            var maxmapid = P.gud.maxmapid > me.maxGqid ? me.maxGqid : P.gud.maxmapid;
            me.maxmapid = maxmapid || P.gud.mapid;
            me.curArea = G.class.tanxian.getAreaById(P.gud.mapid);
            me.curNandu = G.class.tanxian.getNanduById(P.gud.mapid);
            me.isPrize = true;
            me.bindMove();
        },
        onAniShow: function () {
            var me = this;
            G.guidevent.emit('tanxianOpenOver');
        },
        show: function (conf) {
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me, arguments);
            });
        },
        onShow: function () {
            var me = this;

            me.setContents();
            G.guidevent.emit('tanxianrefreshDataOver');
            me.yuan_jdl(P.gud.jifen, 0, true);
            G.frame.chongzhi.once("hide", function () {
                me.getData();
            });
            cc.enableScrollBar(me.nodes.ListView_sytsts);
            me.nodes.Panel_sytsts.hide();
            me.nodes.Panel_sytsts.setCascadeOpacityEnabled(true);
            me.nodes.baozangdianji.setSwallowTouches(false);
            me.nodes.ListView_sytsts.setCascadeOpacityEnabled(true);
            G.view.mainMenu.set_fhzc(2);
            G.view.mainMenu.checkRedPoint('tanxian');
            G.hongdian.checkTask();
            G.hongdian.checkSQ();
        },
        onHide: function () {
            var me = this;

            me.event.emit('hide');
            G.hongdian.getData("tanxian", 1, function () {
                G.hongdian.getData("guajitime", 1, function () {
                    G.hongdian.checkTX();
                })
            });
        },
        refreshData: function () {
            var me = this;

            me.getData(function () {
                me.maxGqid = G.class.tanxian.getCurMaxGqid();
                var maxmapid = P.gud.maxmapid > me.maxGqid ? me.maxGqid : P.gud.maxmapid;
                me.maxmapid = maxmapid || P.gud.mapid;
                me.setContents();
                G.guidevent.emit('tanxianrefreshDataOver');
            });
        },
        getData: function (callback) {
            var me = this;

            G.ajax.send('tanxian_main', [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            });
        },
        setContents: function () {
            var me = this;

            me.checkRedPoint();
            me.setBtns();
            me.setDropInfo();
            me.setArea();
            me.setSimulateFight();

            me.scrollToGuanqia(P.gud.mapid);
            me.nodes.panel_zd.setTouchEnabled(false);
            me.nodes.Panel_lvsy.hide()
        },
        checkRedPoint: function () {
            var me = this;
            var arr = [];
            var isHavePoint = false;
            var conf = G.class.tanxian.getTgprize();
            var pass = me.DATA.passprizeidx;

            for (var i = 0; i < conf.length; i++) {
                if (me.maxmapid - 1 >= conf[i][0]) {
                    arr.push(i);
                }
            }
            for (var i = 0; i < arr.length; i++) {
                if (!X.inArray(pass, arr[i])) {
                    isHavePoint = true;
                    break;
                }
            }
            if (isHavePoint) {
                me.nodes.btn_tgjl.removeAllChildren();
                G.setNewIcoImg(me.nodes.btn_tgjl, .8);
                G.class.ani.show({
                    json: "ani_tongguanjiangli",
                    addTo: me.nodes.btn_tgjl,
                    x: me.nodes.btn_tgjl.width / 2,
                    y: me.nodes.btn_tgjl.height / 2,
                    repeat: true,
                    autoRemove: false,
                    onload: function (node, action) {
                        node.setTag(777888);
                        action.setTimeSpeed(0.75);
                    }
                })
            } else {
                G.removeNewIco(me.nodes.btn_tgjl);
                while (me.nodes.btn_tgjl.getChildByTag(777888)) {
                    me.nodes.btn_tgjl.getChildByTag(777888).removeFromParent();
                }
                me.nodes.btn_tgjl.opacity = 255;
            }
            if (me.DATA.freetxnum) {
                G.setNewIcoImg(me.nodes.btn_kstx, .92);
            } else {
                G.removeNewIco(me.nodes.btn_kstx);
            }
            if(G.DATA.hongdian.guajitime > 0){
                G.setNewIcoImg(me.nodes.btn1_on, .8);
            }else{
                G.removeNewIco(me.nodes.btn1_on);
            }
        },
        //设置右下角按钮事件
        setBtns: function () {
            var me = this;

            //挑战领主 下一关 解锁 世界地图
            var btnTz = me.nodes.btn_tzlz;
            var btnXyg = me.nodes.btn_xyg;
            var btnJs = me.nodes.btn_js;
            var btnMap = me.nodes.btn_sjdt;

            btnTz.hide();
            btnXyg.hide();
            btnJs.hide();
            btnMap.hide();

            while (me.ui.finds("panel_ui").getChildByTag(777)) {
                me.ui.finds("panel_ui").getChildByTag(777).removeFromParent();
            }

            var isAll = false;
            var gjmapid = P.gud.mapid;
            var gqArr = G.class.tanxian.getIdArrByNanduAndArea(me.curNandu, me.curArea);
            if (P.gud.maxmapid > gqArr[9] && P.gud.mapid % 10 == 0) {
                isAll = true;
            }

            //当前关卡已通关，如果是该章节最后一关，下一关未解锁时，显示解锁条件；已解锁时，显示世界地图；
            // 如果不是最后关卡，下一关未解锁时，显示解锁条件；已解锁时，显示下一关
            // if (isAll) {
            //     btnMap.show();
            //     G.class.ani.show({
            //         json: "ani_tiaozhan",
            //         addTo: me.ui.finds("panel_ui"),
            //         x: 418,
            //         y: 165,
            //         repeat: true,
            //         autoRemove: false,
            //         onload: function (node, action) {
            //             node.setTag(777);
            //         }
            //     });
            // } else {
                if (gjmapid < P.gud.maxmapid) {
                    var last = G.class.tanxian.checkIsLastByGqid(gjmapid);
                    var nextGqid = gjmapid * 1 + 1,
                    openlv;
                    var lv = P.gud.lv;

                    //是本章节最后关卡
                    if (last) {
                        var curMaxGqid = G.class.tanxian.getCurMaxGqid();
                        var nextConf = G.class.tanxian.getById(nextGqid);
                        if (nextGqid == curMaxGqid || !nextConf || nextGqid == me.maxmapid || isAll) {
                            //已经达到当前允许的最大关卡，或者极致关卡
                            //显示世界地图
                            btnMap.show();
                            G.class.ani.show({
                                json: "ani_tiaozhan",
                                addTo: me.ui.finds("panel_ui"),
                                x: 418,
                                y: 165,
                                repeat: true,
                                autoRemove: false,
                                onload: function (node, action) {
                                    node.setTag(777);
                                }
                            });
                            if(P.gud.mapid == 10 && P.gud.maxmapid == 11) {
                                G.class.ani.show({
                                    json: "ani_xinshou_arrow",
                                    addTo: me.ui.finds("panel_ui"),
                                    x: 418,
                                    y: 165,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node, action) {
                                        G.frame.tanxian.arrow = node;
                                        node.setTag(777);
                                    }
                                });
                            }
                        } else {
                            openlv = G.class.tanxian.getNeedlvByGqid(nextGqid);
                            if (lv >= openlv) {
                                // 显示下一关
                                btnXyg.show();
                                G.class.ani.show({
                                    json: "ani_tiaozhan",
                                    addTo: me.ui.finds("panel_ui"),
                                    x: 418,
                                    y: 165,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node, action) {
                                        node.setTag(777);
                                    }
                                });
                            } else {
                                // 显示解锁
                                btnJs.show();
                                btnJs.setTouchEnabled(false);
                                var txtJs = btnJs.finds('txt_fhzc');
                                txtJs.setString(X.STR(L('X_LV_JS'), openlv));
                            }
                        }

                    } else {
                        // 不是本章节最后关卡
                        openlv = G.class.tanxian.getNeedlvByGqid(nextGqid);
                        if (lv >= openlv) {
                            // 显示下一关
                            btnXyg.show();
                            G.class.ani.show({
                                json: "ani_tiaozhan",
                                addTo: me.ui.finds("panel_ui"),
                                x: 418,
                                y: 165,
                                repeat: true,
                                autoRemove: false,
                                onload: function (node, action) {
                                    node.setTag(777);
                                }
                            });
                        } else {
                            // 显示解锁
                            btnJs.show();
                            btnJs.setTouchEnabled(false);
                            var txtJs = btnJs.finds('txt_fhzc');
                            txtJs.setString(X.STR(L('X_LV_JS'), openlv));
                        }
                    }
                } else if (gjmapid == me.maxmapid) {
                    //当前关卡未通关，显示挑战boss
                    var opelv = G.class.tanxian.getNeedlvByGqid(P.gud.maxmapid);
                    if(P.gud.lv >= opelv) {
                        btnTz.show();
                        G.class.ani.show({
                            json: "ani_tiaozhan",
                            addTo: me.ui.finds("panel_ui"),
                            x: 418,
                            y: 165,
                            repeat: true,
                            autoRemove: false,
                            onload: function (node, action) {
                                node.setTag(777);
                            }
                        });
                    }else {
                        btnJs.show();
                        btnJs.setTouchEnabled(false);
                        var txtJs = btnJs.finds('txt_fhzc');
                        txtJs.setString(X.STR(L('X_LV_JS'), opelv));
                    }

                }
            // }


            // 下一关
            btnXyg.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    sender.setTouchEnabled(false);
                    me.changeGuanqia(P.gud.mapid * 1 + 1, true);
                    me.ui.setTimeout(function () {
                        sender.setTouchEnabled(true);
                    }, 3000);
                    // G.ajax.send('tanxian_changegjmap',[P.gud.mapid * 1 + 1],function(d) {
                    //     if(!d) return;
                    //     var d = JSON.parse(d);
                    //     if(d.s == 1) {
                    //         G.tip_NB.show(L('GUAJI') + L('SUCCESS'));
                    //         me.refreshData();
                    //     }
                    // },true);
                }
            });
            //世界地图
            btnMap.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.tanxian_map.data({
                        tztype: G.class.tanxian.getNanduById(P.gud.maxmapid > me.maxGqid ? me.maxGqid : P.gud.maxmapid)
                    }).show();
                }
            });
            //挑战按钮
            btnTz.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var obj = {
                        pvType: 'pvguanqia',
                        data: {}
                    };
                    G.frame.yingxiong_fight.data(obj).show();

                    // G.ajax.send('tanxian_fightboss',[],function(d) {
                    //     if(!d) return;
                    //     var d = JSON.parse(d);
                    //     if(d.s == 1) {
                    //
                    //     }
                    // },true);
                }
            });
        },
        // 切换关卡
        changeGuanqia: function (mapid, isAni) {
            var me = this;

            G.ajax.send('tanxian_changegjmap', [mapid], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    // G.tip_NB.show(L('GUAJI') + L('SUCCESS'));
                    me.refreshData();
                    me.updateGuanqias();

                    if(mapid == me.maxmapid && isAni) {
                        me.playShouYi();
                    }
                    me.ui.setTimeout(function () {
                        G.guidevent.emit('changeGuanqiaOver');
                    }, 300);
                }
            }, true);
        },
        playShouYi: function() {
            var me = this;
            var addArr = [];

            var curArr = G.class.tanxian.get()[me.maxmapid].gjprize;
            var DropInfo = G.class.tanxian.get()[me.maxmapid - 1].gjprize;

            for(var i in DropInfo) {
                if(curArr[i] > DropInfo[i]) {
                    var str = [];
                    str.push(i);
                    str.push(curArr[i]);
                    addArr.push(str);
                }
            }

            if(addArr.length > 0) {
                me.nodes.Panel_sytsts.show();
                me.nodes.Panel_sytsts.opacity = 255;
                me.nodes.ListView_sytsts.removeAllChildren();
                for(var i = 0; i < addArr.length; i ++) {
                    var list = me.nodes.Panel_lvsy.clone();
                    (function (list) {
                        X.autoInitUI(list);
                        list.show();
                        list.setCascadeOpacityEnabled(true);
                        list.nodes.list_syts.setCascadeOpacityEnabled(true);
                        list.nodes.token_tanxiansy.setBackGroundImage(G.class.getItemIco(addArr[i][0]), 1);
                        list.nodes.txt_szsy.setString(DropInfo[addArr[i][0]] * 12 + "/m → " + addArr[i][1] * 12 + "/m");
                        list.nodes.txt_szsy.setTextColor(cc.color("#F6EBCD"));
                        X.enableOutline(list.nodes.txt_szsy, "#1e1e1e", 2);
                        me.nodes.ListView_sytsts.pushBackCustomItem(list);
                        G.class.ani.show({
                            json: "ani_tanxianshouyi",
                            addTo: list,
                            x: list.width / 2,
                            y: list.height / 2,
                            repeat: false,
                            autoRemove: true,
                        })
                    })(list);
                }
                var act = cc.fadeOut(2);
                me.nodes.Panel_sytsts.runAction(act);
            }
        },
        setGuaJiTime: function(){
            var me = this;
            var currTime = me.DATA.gjtime;
            var tqConf = G.class.vip.get()[P.gud.vip];
            var h = 8;

            if(P.gud.vip > 0) {
                for(var i in tqConf.tq) {
                    if(tqConf.tq[i][0] == 107) {
                        h += tqConf.tq[i][1];
                    }
                }
            }


            var setText = function(){
                me.nodes.txt_gkxx.setString(X.STR(L("DQGJSC"), X.timeLeft(currTime, 'h:mm:s')));
                if(currTime / 3600 >= h) {
                    currTime +=0;
                }else {
                    currTime +=1;
                }
            };

            setText();

            if(me.gjTimer){
                me.ui.clearInterval(me.gjTimer);
                delete me.gjTimer;
            }
            me.gjTimer = me.ui.setInterval(function(){
                setText();
            }, 1000);

        },
        //掉落信息
        setDropInfo: function () {
            var me = this;

            var panel = me.ui.finds('panel_dlxx');
            var btnCk = me.ui.nodes.btn_laiyuan;
            var btnLq = me.btnLq = me.nodes.btn1_on;
            // var layName = me.nodes.txt_gkxx;
            var arr = [];
            var data = me.DATA;
            var conf = G.class.tanxian.get()[me.maxmapid];
            var keys = X.keysOfObject(conf.gjprize);
            if (!btnLq.data) btnLq.data = [];
            // layName.setString(L("DQGJSY"));
            me.setGuaJiTime();

            me.nodes.txt_topgkxx.setString(conf.name);

            for(var i = 0; i < keys.length; i ++) {
                var img = new ccui.ImageView(G.class.getItemIco(keys[i]), 1);
                var str = X.STR("<font node=1></font>{1}/m", conf.gjprize[keys[i]] * 12);
                var rh = new X.bRichText({
                    size: 22,
                    maxWidth: me.nodes["panel_top" + (i + 1)].width,
                    lineHeight: 36,
                    family: G.defaultFNT,
                    color: "#F6EBCD"
                });
                rh.text(str, [img]);
                rh.setAnchorPoint(0, 0.5);
                rh.setPosition(0, me.nodes["panel_top" + (i + 1)].height / 2);
                me.nodes["panel_top" + (i + 1)].removeAllChildren();
                me.nodes["panel_top" + (i + 1)].addChild(rh);
            }

            if (data.gjprize.length < 1) {
                data.gjprize = [
                {a: "attr", t: "useexp", n: 0},
                {a: "attr", t: "jinbi", n: 0},
                {a: "attr", t: "exp", n: 0},
                {a: "attr", t: "jifen", n: 0}
                ];
            }
            for (var i = 0; i < data.gjprize.length; i++) {
                var prize = data.gjprize[i];
                var ui = me.nodes.list_dlxq.clone();
                var layout = me.nodes["panel_" + (i + 1)];
                setItem(ui, prize, layout);
            }

            function setItem(ui, data, list) {
                X.autoInitUI(ui);
                var layAttr = ui.nodes.token_tanxian;
                var txtAttr = ui.nodes.txt_sz;
                var add = G.class.tanxian.getVipAdd(data.t);
                var dd = G.class.tanxian.getGjPerValueByAttr(me.maxmapid, data.t);

                ui.data = data;

                ui.per = Math.ceil((G.class.tanxian.getGjPerValueByAttr(me.maxmapid, data.t) || 0) + add * (G.class.tanxian.getGjPerValueByAttr(me.maxmapid, data.t) || 0));
                layAttr.setBackGroundImage(G.class.getItemIco(data.t), 1);
                txtAttr.setString(X.fmtValue(data.n));
                ui.setAnchorPoint(0.5, 0.5);
                ui.setPosition(list.width / 2, list.height / 2);
                ui.show();
                list.removeAllChildren();
                list.addChild(ui);
                arr.push(ui);
            }

            var checkBtn = function (arr) {
                btnLq.setTouchEnabled(false);
                btnLq.setEnableState(false);
                btnLq.finds('txt_lq').setTextColor(cc.color(G.gc.COLOR.n15));

                for (var i = 0; i < arr.length; i++) {
                    var child = arr[i];
                    if (cc.isNode(child.nodes.txt_sz) && child.nodes.txt_sz.getString() * 1 > 0) {
                        btnLq.setTouchEnabled(true);
                        btnLq.setEnableState(true);
                        btnLq.finds('txt_lq').setTextColor(cc.color(G.gc.COLOR.n13));
                        break;
                    }
                }
            };

            //每5秒刷新一次奖励信息
            if (me.timer_ref) {
                panel.clearTimeout(me.timer_ref);
                delete me.timer_ref;
            }
            var n = 0;
            me.timer_ref = panel.setInterval(function () {
                for (var i = 0; i < arr.length; i++) {
                    var child = arr[i];
                    n++;
                    cc.isNode(child.nodes.txt_sz) && child.nodes.txt_sz.setString(X.fmtValue(child.data.n += child.per));
                }
                checkBtn(arr);
            }, 5000);

            // 领取
            // btnLq.setTouchEnabled(true);
            checkBtn(arr);
            btnLq.hide();
            btnLq.click(function (sender) {
                var max = G.class.tanxian.getMax();
                var cur = arr[3].nodes.txt_sz.getString();
                function f() {
                    var dq_jifen = P.gud.jifen;
                    G.ajax.send('tanxian_recgjprize', [], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            function receive(){
                                if (d.d.prize.length < 1) {
                                    G.tip_NB.show(L('ZW') + L('JIANGLI'));
                                    return;
                                }
                                for (var jf in d.d.prize) {
                                    if (d.d.prize[jf].t == 'jifen') {
                                        me.yuan_jdl(dq_jifen, d.d.prize[jf].n);
                                        continue;
                                    }
                                }
                                me.movePrize(G.view.mainMenu.ui,
                                    G.view.mainMenu.ui.convertToWorldSpace({x: G.frame.tanxian.prizeBox.x + 50, y: G.frame.tanxian.prizeBox.y - 100}),
                                    G.view.mainMenu.nodes.btn_beibao.getPosition());
                                G.frame.jiangli.data({
                                    prize: [].concat(d.d.prize)
                                }).show();

                                me.getData(function() {
                                    me.setDropInfo();
                                    me.setPrizeJinBi();
                                    me.isPrize = false;
                                    me.ui.setTimeout(function(){
                                        me.prizeBox.runAni(0, "baoxiang_jingzhi", false);
                                    },300);
                                    me.ui.setTimeout(function(){
                                        me.prizeBox.runAni(0, "baoxiang_daiji", true);
                                        me.isPrize = true;
                                    },5000);
                                });
                                G.hongdian.getData("guajitime", 1, function() {
                                    me.checkRedPoint();
                                })
                            }
                            if (me.jingBiAni) {
                                me.jingBiAni.playWithCallback('bao',false,function(){
                                    receive()
                                })
                            } else {
                                receive();
                            }
                        } else {
                            X.audio.playEffect("sound/dianji.mp3", false);
                        }
                    }, true);
                }

                if (parseInt(cur) + P.gud.jifen > max) {
                    if(P.gud.lv >= G.class.opencond.getLvById("xuanshangrenwu")) {
                        var str = X.STR(L("JFCGSX"), P.gud.jifen, max, cur);
                        G.frame.alert.data({
                            title: L("TS"),
                            cancelCall: null,
                            okCall: function () {
                                f();
                            },
                            richText: str,
                        }).show();
                    }else {
                        f();
                    }
                } else {
                    f();
                }

            }, 500);

            //查看
            panel.finds("bg_xinxi8").setTouchEnabled(true);
            panel.finds("bg_xinxi8").click(function () {
                G.frame.tanxian_gjprize.data(P.gud.mapid).show();
            });
            btnCk.click(function () {
                G.frame.tanxian_gjprize.data(P.gud.mapid).show();
            });
        },
        //区域
        setArea: function () {
            var me = this;

            // img_tanxian_gk1.png   关卡的三个小图

            //相同区域是不重复设置关卡
            if (me.oldArea == me.curArea) {
                return;
            }

            me.oldArea = me.curArea;

            me.initMap();
            me.setGuanqia();
        },
        initMap: function () {
            var me = this;

            // me.nodes.panel_bj.setPositionY(1309);
            // me.nodes.bg_zhong.setPositionY(766);
            var scrollview = me.nodes.scrollview_dt;
            var conf = G.class.tanxian.getExtConf().base.area[me.curArea];
            // me.nodes.bg_qian.setBackGroundImage('img/bg/' + conf.bigimg,0);
            var size = scrollview.getInnerContainerSize();
            scrollview.setInnerContainerSize(cc.size(me.nodes.bg_qian.width, size.height));
            me.nodes.panel_light.setBackGroundImage('img/bg/wu-' + me.curArea + '.png', 0);
            me.nodes.panel_light.setBackGroundImageScale9Enabled('img/bg/wu-' + me.curArea + '.png');
            me.bindMove();

        },
        bindMove: function () {
            var me = this;
            var scrollview = me.nodes.scrollview_dt,
            innerContent = scrollview.getInnerContainer();

            scrollview.setSwallowTouches(false);
            scrollview.addCCSEventListener(function (sender, type) {
                if (type === ccui.ScrollView.EVENT_SCROLLING) {
                    me.setMax();
                }
            });
            var img0 = me.nodes.bg_hou;
            var img1 = me.nodes.bg_zhong;
            var img2 = me.nodes.bg_qian;
            var guan = G.class.tanxian.getAreaById(P.gud.mapid);
            img0.setBackGroundImage('img/bg/beijing_0' + guan + '_h.png', 0);
            img1.setBackGroundImage('img/bg/beijing_0' + guan + '_z.png', 0);
            img2.setBackGroundImage('img/bg/beijing_0' + guan + '_q.png', 0);

            innerContent.update = function (dt) {
                // [0,-1350]

                img0.x = this.x * 0.3;
                img1.x = this.x * 0.5;
            };
            innerContent.scheduleUpdate();
        },
        setMax: function () {
            var me = this;
            var scrollview = me.nodes.scrollview_dt,
            innerContent = scrollview.getInnerContainer();
            if (innerContent.x > me.extConf.city.maxContleft) {
                innerContent.x = me.extConf.city.maxContleft;
            } else if (innerContent.x < me.extConf.city.maxContRight) {
                innerContent.x = me.extConf.city.maxContRight;
            }
        },
        setGuanqia: function () {
            var me = this;

            var guan = G.class.tanxian.getAreaById(P.gud.mapid);
            var scrollview = me.nodes.scrollview_dt;
            cc.enableScrollBar(scrollview);
            me.nodes.bg_qian.show();
            // me.curArea = G.class.tanxian.getAreaById(P.gud.mapid);
            // me.curNandu = G.class.tanxian.getNanduById(P.gud.mapid);
            var gqArr = G.class.tanxian.getIdArrByNanduAndArea(me.curNandu, me.curArea);

            me.guanqiaArr = [];
            me.nodes.bg_qian.removeAllChildren();

            while (me.nodes.bg_qian.getChildByTag(989898)) {
                me.nodes.bg_qian.getChildByTag(989898).removeFromParent();
            }
            G.class.ani.show({
                json: "ani_tanxian" + guan,
                addTo: me.nodes.bg_qian,
                x: me.nodes.bg_qian.width / 2,
                y: me.nodes.bg_qian.height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    node.setTag(989898);
                    node.zIndex = 0;
                    if(guan == 8) {
                        // node.getChildren()[0].getChildren()[1].positionType = 0;
                    }
                    for (var i = 0; i < gqArr.length; i++) {
                        var id = gqArr[i];
                        var item = me.nodes.panel_gq.clone();
                        item.idx = i;
                        me.setItem(item, id);
                        me.nodes.bg_qian.addChild(item);
                        item.show();
                        // item.zIndex = 100;
                        me.guanqiaArr.push(item);
                    }
                }
            });
        },
        setItem: function (ui, data) {
            var me = this;

            var conf = G.class.tanxian.getById(data);
            X.autoInitUI(ui);
            var layIco = ui.nodes.panel_gqwz;
            var layGj = ui.nodes.bg_tanxian_wjwz;
            var layPlayer = ui.nodes.panel_wjtx;


            layPlayer.removeAllChildren();
            layGj.hide();

            layIco.setTouchEnabled(false);
            layGj.setTouchEnabled(false);
            layPlayer.setTouchEnabled(false);
            ui.nodes.panel_wjxx.setTouchEnabled(false);
            ui.nodes.panel_wjxx.zIndex = 100;
            ui.zIndex = 100;

            ui.nodes.panel_zsp.setPositionX(0);
            ui.nodes.panel_zsp.zIndex = 99;
            if (data % 10 == 5) {
                ui.nodes.panel_zsp.removeBackGroundImage();
                if (me.maxmapid < data) {
                    ui.nodes.panel_zsp.setBackGroundImage('img/tanxian/img_tanxian_gk2_zs_h.png', 1);
                    ui.nodes.panel_zsp.setPositionX(-6);
                } else {
                    ui.nodes.panel_zsp.setBackGroundImage('img/tanxian/img_tanxian_gk2_zs.png', 1);
                    ui.nodes.panel_zsp.setPositionX(-1);
                }
                ui.nodes.panel_zsp.show();
                ui.nodes.panel_wjxx.setPositionY(me.nodes.panel_zsp.height * 1.65);
                ui.zIndex = 200;
            } else if (data % 10 == 0) {
                ui.nodes.panel_zsp.removeBackGroundImage();
                if (me.maxmapid < data) {
                    ui.nodes.panel_zsp.setBackGroundImage('img/tanxian/img_tanxian_gk3_zs_h.png', 1);
                    ui.nodes.panel_zsp.setPositionX(-5);
                } else {
                    ui.nodes.panel_zsp.setBackGroundImage('img/tanxian/img_tanxian_gk3_zs.png', 1);
                }
                ui.nodes.panel_zsp.show();
                ui.nodes.panel_wjxx.setPositionY(me.nodes.panel_zsp.height * 1.65);
                ui.zIndex = 200;
            }

            if (data == P.gud.mapid) {
                layGj.show();
                var widget = G.class.shead(P.gud);
                widget.lv.hide();
                X.addCenterChild(layPlayer, widget);
                widget.setScale(0.5);
                ui.nodes.panel_wjxx.show();
                var act1 = cc.moveBy(0.5, 0, 10);
                var act2 = cc.moveBy(0.5, 0, -10);
                var act = cc.sequence(act1, act2);
                ui.nodes.panel_wjxx.runAction(act.repeatForever());
                ui.zIndex = 50;
            }else {
                ui.zIndex = 10;
            }
            ui.setName(data);
            ui.setPosition(cc.p(conf.pos.x, conf.pos.y - 20));
            layIco.setBackGroundImage('img/tanxian/img_tanxian_gk' + conf.level + '.png', 1);
            layIco.show();
            if (ui.button) {
                ui.button.removeFromParent(true);
                delete ui.button;
            }
            if (me.maxmapid < data) {
                layIco.hide();
                var button = ui.button = new ccui.Button;
                button.loadTextureNormal('img/tanxian/img_tanxian_gk' + conf.level + '.png', 1);
                button.setAnchorPoint(0, 0);
                button.setPosition(layIco.getPosition());
                button.setTouchEnabled(false);
                button.setBright(false);
                button.setName("button");
                ui.addChild(button);
            }
            ui.data = data;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    if (me.maxmapid < sender.data) {
                        G.tip_NB.show(L('TX_NEED_JS'));
                        return;
                    }

                    var cnf = G.class.tanxian.getById(sender.data);
                    if (P.gud.lv < cnf.needlv) {
                        G.tip_NB.show(X.STR(L('NEED_X_LV'), cnf.needlv));
                        return;
                    }

                    G.frame.tanxian_gjprize.data(sender.data).show();
                }
            });
        },

        //更新关卡
        updateGuanqias: function () {
            var me = this;

            me.curArea = G.class.tanxian.getAreaById(P.gud.mapid);
            me.curNandu = G.class.tanxian.getNanduById(P.gud.mapid);
            var gqArr = G.class.tanxian.getIdArrByNanduAndArea(me.curNandu, me.curArea);

            var guanqiaArr = me.guanqiaArr;
            for (var i = 0; i < guanqiaArr.length; i++) {
                var item = guanqiaArr[i];
                me.setItem(item, gqArr[i]);
            }
            var num = (P.gud.mapid * 1 + 9) % 10;
            var tx1 = me.guanqiaArr[num].nodes.panel_wjxx;
            tx1.zIndex = 100;
            var conf = G.class.tanxian.getExtConf().base.area[me.curArea];
            var imgArr = conf.fightimg.split('.');
            imgArr[0] = imgArr[0] + '_1';
            var img2 = imgArr.join('.');
            me.ui.finds('bg_battle1').setBackGroundImage('img/bg/' + conf.fightimg, 0);
            me.ui.finds('bg_battle2').setBackGroundImage('img/bg/' + img2, 0);
            G.class.ani.show({
                addTo: tx1,
                json: 'ani_tanxiantongguan',
                x: 215,
                y: 20,
                repeat: false,
                autoRemove: true,
                onload: function (node) {
                    node.setScaleX(1.5);
                }
            });
        },
        scrollToGuanqia: function (id) {
            var me = this;

            var panel = me.nodes.bg_bj;
            var scrollview = me.nodes.scrollview_dt;
            //计算出来的值可能有偏差
            // var gqNode = panel.finds(id.toString());
            // var pos = scrollview.convertToNodeSpace(gqNode.getParent().convertToNodeSpace(gqNode.getPosition()));
            // var per = pos.x / scrollview.getInnerContainerSize().width;
            var per = ((parseInt(id) + 9) % 10) / 10;
            if (per > 0.7) {
                per = 1
            }
            ;
            if (per < 0.3) {
                per = 0
            }
            ;
            cc.sys.isNative && scrollview.scrollToPercentHorizontal(Math.floor(per * 100), 0.7, false);
        },
        playPrizeAni: function () {
            var me = this;

            var gjprize = [{
                a: "attr",
                t: "useexp",
                n: 0
            },
            {
                a: "attr",
                t: "jinbi",
                n: 0
            },
            {
                a: "attr",
                t: "exp",
                n: 0
            },
            {
                a: "attr",
                t: "jifen",
                n: 0
            }
            ];
            var endPos = cc.p(600, 1000);
            for (var i = 0; i < gjprize.length; i++) {
                var parent = me.nodes["panel_" + (i + 1)];
                var bPos = parent.getParent().convertToWorldSpace(parent.getPosition());

                var img = new ccui.ImageView();
                img.loadTexture(G.class.getItemIco(gjprize[i].t), 1);
                img.setPosition(bPos);
                me.ui.addChild(img);
                (function (img) {
                    var action1 = cc.moveTo(0.5, endPos);
                    img.runAction(cc.sequence(action1, cc.callFunc(function () {
                        img.removeFromParent();
                    })));
                })(img);

            }

        },

        yuan_jdl: function (jifen_dq, jifen_jia, begin) {
            var me = this;
            var jindu_max = G.class.tanxian.getMax();
            var bg = me.ui.nodes.panel_xsrwdh;
            var dq = parseInt(100 * jifen_dq / jindu_max);
            var end = parseInt(100 * (jifen_dq+jifen_jia) / jindu_max);
            var jindu_dq = dq > 100 ? 100 : dq;
            var jindu_end = end > 100 ? 100 : end;

            bg.removeAllChildren();
            if(begin){
                var to2 = cc.progressFromTo(1, 0, jindu_dq);
            }else{
                var to2 = cc.progressFromTo(0.5, jindu_dq, jindu_end);
            }
            var right = new cc.ProgressTimer(new cc.Sprite('#img/tanxian/img_tanxian_xsrw.png'));
            right.type = cc.ProgressTimer.TYPE_RADIAL;
            // right.setReverseDirection(true);
            bg.addChild(right);
            right.x = bg.width/2;
            right.y = bg.height/2;
            if(jindu_end < 100){
                right.runAction(cc.sequence(to2, cc.callFunc(function (){
                    me.ui.nodes.txt_xsds.setString(P.gud.jifen);
                })));
            }else{
                right.runAction(cc.sequence(to2,cc.callFunc(function () {
                    G.class.ani.show({
                        json: "ani_tanxian_daojishi",
                        addTo: bg,
                        repeat: true,
                        autoRemove: false,
                    });
                    me.ui.nodes.txt_xsds.setString(P.gud.jifen);
                })));
            }
        },
        showSqAni: function () {
            var me = this;



            G.class.ani.show({
                json: "ani_jiesuoxinwanfa",
                addTo: me.ui.finds("panel_ui"),
                x: me.ui.finds("panel_ui").width / 2,
                y: me.ui.finds("panel_ui").height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    node.ui.finds("Panel_2").setBackGroundImage("img/jiesuojianzhu/img_shenbing.png", 1);
                    node.ui.finds("htx_3").hide();
                    node.ui.finds("Text_1").setString(L("SQ"));

                    me.ui.setTimeout(function () {
                        me.nodes.btn_sq.show();
                        G.view.mainView.ui.finds("btn_sq").show();
                        G.guidevent.emit("shenqianiover");
                        node.removeFromParent();
                    }, 1000);
                },
            });
        }
    });

G.frame[ID] = new fun('tanxian.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/29.
 */
(function () {
    //探险-挂机奖励信息
    var ID = 'tanxian_gjprize';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            setPanelTitle(me.ui.nodes.txt_title,L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.DATA = me.data();
            new X.bView('tanxian_tip_jl.json', function (view) {
                me._view = view;
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me._view.nodes.btn_qd.click(function (sender, type) {
                    me.remove();
                });
                me.setContents();
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var panel = me._view;
            var maxGqid = G.class.tanxian.getCurMaxGqid();
            var conf = G.class.tanxian.getById(P.gud.maxmapid > maxGqid ? maxGqid : P.gud.maxmapid);

            var obj = {
                txt_yxjy:'jinbi',
                txt_jb:'useexp',
                txt_wjjy:'exp',
                txt_xsjf:'jifen'
            };
            panel.nodes.btn_gj.hide();
            for (var key in obj) {
                var attr = obj[key];
                panel.nodes[key].setString(conf.gjprize[attr] * 12 + '/m');
            }

            if (me.DATA == P.gud.mapid) {
                panel.nodes.btn_gj.hide();
                panel.nodes.btn_qd.hide();
                panel.nodes.gj_jl.show();
            } else {
                panel.nodes.btn_gj.show();
                panel.nodes.btn_qd.hide();
                panel.nodes.gj_jl.hide();
            }

            panel.nodes.btn_gj.click(function (sender, type) {
                if(type == ccui.Widget.TOUCH_ENDED){
                    G.ajax.send("tanxian_changegjmap", [me.DATA], function (d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            G.frame.tanxian.refreshData();
                            G.frame.tanxian.updateGuanqias();
                            me.remove();
                        }
                    })
                }
            });
            // panel.finds('Button_1').touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         G.frame.tanxian.changeGuanqia(me.DATA);
            //         me.remove();
            //     }
            // });

            me.setTable();
        },
        setTable: function () {
            var me = this;

            var panel = me._view;
            var conf = G.class.tanxian.getById(me.DATA);
            var prize = [];

            for (var i = 0; i < conf.randgroup.length; i++) {
                var rand = conf.randgroup[i];
                prize = prize.concat(G.class.diaoluo.getById(rand));
            }
            if(G.frame.tanxian.DATA.isopen == 1){
                var jiangjuan = {a: "item", t: "2016", n: 0};
                var n = prize.length;
                prize[n] = jiangjuan;
            }
            var scrollview = panel.nodes.scrollview_hdjl;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();
            panel.nodes.list_hdjl.hide();

            var table = me.table = new X.TableView(scrollview,panel.nodes.list_hdjl,3, function (ui, data) {
                setItem(ui, data);
            },null,null,7, 2);
            table.setData(prize);
            table.reloadDataWithScroll(true);

            function setItem(ui, data) {
                ui.removeAllChildren();

                var wid = G.class.sitem(data, null, null, true);
                wid.setPosition(cc.p(ui.width / 2,ui.height / 2));
                ui.addChild(wid);

                ui.setTouchEnabled(true);
                ui.setSwallowTouches(false);

                G.frame.iteminfo.showItemInfo(wid);
            }
        }
    });

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/29.
 */
(function () {
    //探险-快速探险
    var ID = 'tanxian_kstx';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;

            // setPanelTitle(me.ui.nodes.txt_title,L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            var data = G.frame.tanxian.DATA;
            me.setContents();
            if((data.maxbuytxnum - data.txnum) < 1 && !data.isadventure){
                G.frame.alert.data({
                    title: L("GM"),
                    cancelCall: null,
                    okCall: function () {
                        X.tiaozhuan(31);
                        me.remove();
                    },
                    richText: L("GMTXTQ"),
                    sizeType: 3
                }).show();
            }
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var data = G.frame.tanxian.DATA;

            var panel = me.ui;
            var txtName = panel.nodes.txt_title;
            var layMf = panel.nodes.txt_nr;
            var layZs = panel.nodes.txt_nr1;
            var panelBtn = panel.nodes.panel_btn;

            panelBtn.removeAllChildren();
            panelBtn.removeBackGroundImage();
            layMf.removeAllChildren();
            layZs.removeAllChildren();

            //名称
            txtName.setString(L('UI_TITLE_' + me.ID()));

            // 消耗
            var str1 = '';
            if (data.freetxnum > 0) {
                str1 = L('TANXIAN_KSTX_1')  + '<br><br>' + X.STR(L('TANXIAN_KSTX_2'),data.freetxnum);

            } else {
                var need = G.class.tanxian.getKstxNeed(data.txnum);
                str1 = L('TANXIAN_KSTX_1')  + '<br>' + X.STR(L('TANXIAN_KSTX_3'),data.maxbuytxnum - data.txnum,need[0].n,P.gud.rmbmoney);
            }
            var rh1 = new X.bRichText({
                size:18,
                maxWidth:layMf.width,
                lineHeight:30,
                color:G.gc.COLOR.n5,
                family:G.defaultFNT
            });
            rh1.text(str1);
            rh1.setAnchorPoint(0,1);
            rh1.setPosition(cc.p(0,layMf.height - 5));
            layMf.addChild(rh1);

            //特权
            var str2 = X.STR(L('TANXIAN_KSTX_4'), data.zchuodong ? 13 : 8);
            var tq = "<br>" + (data.isadventure ? X.STR(L("TQYJH"), parseInt((data.tqpasstime - G.time) / (24 * 3600))) : L("TQZTWJH"));
            str2 += tq;
            var rh2 = new X.bRichText({
                size:18,
                maxWidth:layZs.width,
                lineHeight:30,
                color:G.gc.COLOR.n5,
                family:G.defaultFNT
            });
            rh2.text(str2);
            rh2.setAnchorPoint(0,1);
            rh2.setPosition(cc.p(0,layZs.height - 20));
            layZs.addChild(rh2);

            var btn = me.nodes.btn_kstx = new ccui.Button();
            var img = 'img/public/btn/btn1_on.png';
            btn.loadTextures(img,'','',1);
            btn.setTitleText(L('BTN_KSTX'));
            btn.setTitleFontSize(24);
            btn.setTitleFontName(G.defaultFNT);
            btn.setTitleColor(cc.color(G.gc.COLOR.n13));


            btn.setPosition(cc.p(panelBtn.width / 2,panelBtn.height / 2));
            panelBtn.addChild(btn);

            btn.click(function () {
                var dq_jifen = P.gud.jifen;
                G.ajax.send('tanxian_fasttx',[],function(d) {
                    if(!d) return;
                    var d = JSON.parse(d);
                    if(d.s == 1) {
                        // for (var key in d.d) {
                        //     if (key == 'prize') {
                        //         continue;
                        //     }
                        //     G.frame.tanxian.DATA[key] = d.d[key];
                        // }
                        G.frame.tanxian.checkRedPoint();
                        G.frame.tanxian.getData();
                        G.class.ani.show({
                            json: "ani_kuaisutiaozhan",
                            addTo: G.frame.tanxian.ui,
                            repeat: false,
                            autoRemove: true,
                            // onkey: function (node, action, event) {
                            //     if(event == "hit"){
                            //     }
                            // }
                            onload: function(node, action){
                                X.audio.playEffect("sound/kuaisu.mp3", false);
                                G.DATA.tanxianAni = true;
                            },
                            onend: function (node, action) {
                                G.frame.jiangli.data({
                                    prize:[].concat(d.d.prize)
                                }).show();
                                G.DATA.tanxianAni = false;
                                G.event.emit("aniEnd");
                                for(var jf in d.d.prize){
                                    if(d.d.prize[jf].t == 'jifen'){
                                        G.frame.tanxian.yuan_jdl(dq_jifen,d.d.prize[jf].n);
                                        continue;
                                    }
                                }
                            }
                        });

                        me.remove();
                    }
                },true)
            }, 2000);


            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
            
            me.ui.setTimeout(function(){
            	G.guidevent.emit('tanxian_kstx_showover');
            },500);
        },
    });

    G.frame[ID] = new fun('ui_top4.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/31.
 */
(function () {
    //探险-大地图
    var ID = 'tanxian_map';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me.fullScreen = true;
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
            me.maxGqid = G.class.tanxian.getCurMaxGqid();
            me.maxmapid = P.gud.maxmapid > me.maxGqid ? me.maxGqid : P.gud.maxmapid;
            var curMaxNandu = G.class.tanxian.getNanduById(me.maxmapid);

            me.nodes.btn_gb.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            var btns = [me.nodes.btn_nandu0,me.nodes.btn_nandu1,me.nodes.btn_nandu2,me.nodes.btn_nandu3,me.nodes.btn_nandu4,me.nodes.btn_nandu5,me.nodes.btn_nandu6];
            var btnArr = [];
            var no = [];
            var num = [];
            for(var i = 0; i < btns.length; i ++){
                if((i + 1) <= curMaxNandu){
                    btnArr.push(btns[i]);
                }else{
                    num.push(i);
                    no.push(btns[i]);
                }
            }
            for(var i = 0; i < no.length; i ++){
                var level = no[i];
                (function (level) {
                    var suo = new ccui.ImageView("img/tanxian/btn_tanxian_nandu"+ num[i] +"_d.png", 1);
                    suo.setAnchorPoint(0.5, 0.5);
                    suo.setPosition(level.width / 2, level.height / 2);
                    level.addChild(suo);
                    level.setBright(false);
                    level.click(function () {
                        G.tip_NB.show(L("TXNDBG"));
                    })
                })(level)

            }
            X.radio(btnArr, function (sender) {
                var name = sender.getName();

                var name2type = {
                    btn_nandu0$:1,
                    btn_nandu1$:2,
                    btn_nandu2$:3,
                    btn_nandu3$:4,
                    btn_nandu4$:5,
                    btn_nandu5$:6,
                    btn_nandu6$:7
                };
                me.changeType(name2type[name]);
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();

            cc.enableScrollBar(me.nodes.listview);
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            // me.maxGqid = G.class.tanxian.getCurMaxGqid();
            // me.maxmapid = P.gud.maxmapid > me.maxGqid ? me.maxGqid : P.gud.maxmapid;
            me.nodes['btn_nandu' + (G.class.tanxian.getNanduById(P.gud.mapid) - 1)].triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        onHide: function () {
            var me = this;
        },
        changeType: function (type) {
            var me = this;
            me.cur = undefined;
            me.curType = type;
            me.setContents();
        },
        setContents: function () {
            var me = this;

            var curType = me.curType;
            var panel = me.ui;
            var imgSuo = panel.finds('panel_suo');
            imgSuo.hide();

            me.ui.finds('bg_tanxian_map').loadTexture("img/bg/map_tanxian_nandu"+(curType - 1)+".png");

            var mapid = P.gud.mapid;
            var maxmapid = me.maxmapid;

            var curMaxArea = G.class.tanxian.getAreaById(maxmapid);
            var curGjArea = G.class.tanxian.getAreaById(mapid);
            var curMaxNandu = G.class.tanxian.getNanduById(maxmapid);
            var curGjNandu = G.class.tanxian.getNanduById(mapid);

            var areaConf = G.class.tanxian.getExtConf().base.area;
            var keys = X.keysOfObject(areaConf);

            var ani_pos_x = [-20, 0, 0, 15, 20, 25, 20, -15];
            var ani_pos_y = [0, 0, 0, -10, -5, -30, 5, 10];
            var ani_arr = [
                "ani_tanxian_nanduxuanze_PT",
                "ani_tanxian_nanduxuanze_KN",
                "ani_tanxian_nanduxuanze_DY",
                "ani_tanxian_nanduxuanze_EM",
                "ani_tanxian_nanduxuanze_SW",
                "ani_tanxian_nanduxuanze_jw",
            ];
            var ani_x = [34,34,37,34,34,34];
            var ani_y = [30,30,30,30,26,30];
            var ani_scale = [1.1,1.1,1.3,1.3,1.2,1.1];

            var max_btn = me.nodes['btn_nandu' + (curMaxNandu - 1)];
            if(me.curType < curMaxNandu){
                max_btn.removeAllChildren();
                var num = curMaxNandu - 2;
                G.class.ani.show({
                    json: ani_arr[num],
                    addTo:max_btn,
                    x:ani_x[num],
                    y:ani_y[num],
                    repeat:true,
                    autoRemove:false,
                    onload :function (node, action) {
                        node.setScale(ani_scale[num]);
                    }
                });
                G.class.ani.show({
                    json: "ani_tanxian_nanduxuanze",
                    addTo: max_btn,
                    x: max_btn.width / 2,
                    y: max_btn.height / 2,
                    repeat: true,
                    autoRemove: false,
                    onload: function (node, action) {
                        node.setScale(1.1);
                    }
                })
            }else{
                max_btn.removeAllChildren();
            }


            for (var i = 0; i < keys.length; i++) {
                var areaid = keys[i];
                var area = areaConf[areaid];
                var imgArea = panel.nodes["btn_" + area.img.split("_")[1]];
                var pos = G.class.getConf("tanxian_com").mapPosition[i + 1];
                while (imgArea.getChildByTag(999777)) {
                    imgArea.getChildByTag(999777).removeFromParent();
                }
                while (imgArea.getChildByTag(123456)){
                    imgArea.getChildByTag(123456).removeFromParent();
                }
                while (imgArea.getChildByTag(89890)) {
                    imgArea.getChildByTag(89890).removeFromParent();
                }
                if (curMaxNandu * 1 > curType) {
                    imgArea.setBright(true);
                    if (curGjArea * 1 == areaid * 1 && curGjNandu * 1 == curType) {
                        var imgFight = me.nodes.panel_zd.clone();
                        imgFight.removeBackGroundImage();
                        G.class.ani.show({
                            json: 'ani_qicaijian',
                            addTo:imgFight,
                            x:imgFight.width / 2 + ani_pos_x[i],
                            y:imgFight.height / 2 + ani_pos_y[i],
                            repeat:true,
                            autoRemove:false,
                            onload : function (node) {
                                // node.setScale(1.5);
                            }
                        });
                        imgFight.setTag(999777);
                        imgFight.setPosition(cc.p(imgArea.width / 2 - imgFight.width / 2,imgArea.height / 2 - imgFight.height / 2));
                        imgArea.addChild(imgFight);
                        imgFight.show();
                    }
                } else if (curMaxNandu * 1 == curType) {
                    if (curMaxArea * 1 >= areaid * 1) {
                        imgArea.setBright(true);
                        if (curGjArea * 1 == areaid * 1 && curGjNandu * 1 == curType) {
                            var imgFight = me.nodes.panel_zd.clone();
                            imgFight.removeBackGroundImage();
                            G.class.ani.show({
                                json: 'ani_qicaijian',
                                addTo:imgFight,
                                x:imgFight.width / 2 + ani_pos_x[i],
                                y:imgFight.height / 2 + ani_pos_y[i],
                                repeat:true,
                                autoRemove:false,
                                onload : function (node) {
                                    // node.setScale(1.5);
                                }
                            });
                            imgFight.setTag(999777);
                            imgFight.setPosition(cc.p(imgArea.width / 2 - imgFight.width / 2,imgArea.height / 2 - imgFight.height / 2));
                            imgArea.addChild(imgFight);
                            imgFight.show();
                        }
                        if(((curGjArea == curMaxArea && curGjNandu !== curMaxNandu) && (i + 1) == curMaxArea)
                            || ((curGjArea !== curMaxArea && curGjNandu !== curMaxNandu) && (i + 1) == curMaxArea)
                            || ((curGjArea !== curMaxArea && curGjNandu == curMaxNandu) && (i + 1) == curMaxArea)){
                            me.cur = imgArea;!
                            G.class.ani.show({
                                json: "ani_tanxianjiesuo",
                                addTo: imgArea,
                                x: imgArea.width / 2,
                                y: imgArea.height / 2,
                                repeat: false,
                                autoRemove: true,
                                onload: function (node, action) {
                                    action.play("out", false);
                                },
                                onend: function (node, action) {
                                    if(me.cur) {
                                        G.class.ani.show({
                                            json: "ani_xinshou_arrow",
                                            addTo: me.cur,
                                            x: me.cur.width / 2,
                                            y: me.cur.height / 2,
                                            repeat: true,
                                            autoRemove: false,
                                            onload: function (node, action) {
                                                node.setTag(89890);
                                            }
                                        })
                                    }
                                }
                            })
                        }
                    } else {
                        imgArea.setBright(false);
                    }
                } else {
                    imgArea.setBright(false);
                }

                imgArea.data = areaid;
                imgArea.curType = curType;
                imgArea.setTouchEnabled(true);
                imgArea.touch(function (sender, type) {
                    if (type == ccui.Widget.TOUCH_ENDED) {
                        function alert() {
                            G.frame.alert.data({
                                sizeType: 3,
                                cancelCall: null,
                                okCall: function () {
                                    var idsArr = G.class.tanxian.getIdArrByNanduAndArea(me.curType, sender.data);
                                    var newGqid;
                                    if (idsArr[idsArr.length - 1] >= me.maxmapid) {
                                        newGqid = me.maxmapid;
                                    } else if (idsArr[idsArr.length - 1] < me.maxmapid) {
                                        newGqid = idsArr[idsArr.length - 1];
                                    }

                                    G.frame.tanxian.changeGuanqia(newGqid);
                                    me.ui.setTimeout(function () {
                                        me.remove();
                                    }, 300);
                                },
                                richText: L('TANXIAN_MAP_TIP2')
                            }).show();
                        }

                        if (sender.curType > curMaxNandu * 1) {
                            G.tip_NB.show(L('TANXIAN_MAP_TIP_1'));
                        } else if (sender.curType == curMaxNandu * 1) {
                            if (sender.data * 1 > curMaxArea * 1) {
                                G.tip_NB.show(L('TANXIAN_MAP_TIP_1'));
                                return;
                            }

                            if (sender.data == curGjArea && me.curType == G.class.tanxian.getNanduById(P.gud.mapid)) {
                                G.tip_NB.show(L("TANXIAN_MAP_TIP3"));
                                return;
                            }

                            alert();
                        } else {
                            alert();
                        }
                    }

                });
            }

            var maxMapid = maxmapid - 1 ? maxmapid - 1 : 1;
            var isLast = G.class.tanxian.checkIsLastByGqid(maxmapid);
            if (isLast) {
                if (curMaxArea == X.keysOfObject(G.class.tanxian.getExtConf().base.area).length) {
                    //难度的最后一关，需要在下一难度按钮上增加动画
                } else {
                    //本区域的最后一关，需要在当前难度的下一区域上增加动画

                }
            }
        },
    });

    G.frame[ID] = new fun('tanxian_nandu.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/4.
 */
(function () {
    //探险-排行榜
    var ID = 'tanxian_phb';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            me.nodes.text_zdjl.setString(L("PHB"));
            // me.ui.finds("text_zdjl").setString(L("PHB"));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.curType = 1;
            new X.bView("ui_paihangbang.json", function (view) {
                me.view = view;
                me.nodes.panel_nr.addChild(view);
                me.view.nodes.panel_rank.height -= 103;
                ccui.helper.doLayout(me.view.nodes.panel_rank);
                X.viewCache.getView('ui_list2.json', function (node) {
                    me.list = node.nodes.list_rank;
                    me.DATA = me.data();
                    me.setContents();
                });
            });

        },
        onHide: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            G.ajax.send('rank_open', [me.curType], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;

            var scrollview = me.view.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            var listview = me.view.nodes.listview;
            cc.enableScrollBar(listview);
            scrollview.removeAllChildren();



            var data = me.DATA;
            if (data.ranklist.length < 1) {
                cc.isNode(me.ui.finds('zwnr')) && me.ui.finds('zwnr').show();
                return;
            } else {
                cc.isNode(me.ui.finds('zwnr')) && me.ui.finds('zwnr').hide();
            }
            me.setMyRank();
            for (var i = 0; i < data.ranklist.length; i++) {
                data.ranklist[i].rank = i + 1;
            }
            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8, 10);
            table.setData(data.ranklist);
            table.reloadDataWithScroll(true);
            scrollview.getChildren()[0].getChildren()[0].x = -1;
        },
        setItem: function (ui, data) {
            X.autoInitUI(ui);
            var layPh = ui.nodes.img_rank;
            var txtPh = ui.nodes.sz_phb;
            var layIco = ui.nodes.panel_tx;
            var txtName = ui.nodes.txt_name;
            var txtGuanqia = ui.nodes.txt_number;
            ui.nodes.txt_title.setString(L('GUANQIA'));

            layPh.hide();
            txtPh.setString('');
            layIco.removeAllChildren();
            if (data.rank < 0) {
                txtPh.setString(0);
            } else if (data.rank < 4) {
                layPh.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                layPh.show();
            } else {
                txtPh.setString(data.rank);
                txtPh.show();
            }

            var wid = G.class.shead(data.headdata);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);
            wid.data = data.headdata;
            wid.setTouchEnabled(true);
            wid.icon.setTouchEnabled(false);
            wid.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    G.frame.wanjiaxinxi.data({
                        pvType: 'zypkjjc',
                        uid: sender.data.uid
                    }).checkShow();
                }
            });

            txtName.setString(data.headdata.name);
            txtGuanqia.setString(data.maxmapid > 560 ? 560 : data.maxmapid);

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            layPh.setTouchEnabled(false);

        },
        //显示我的排行
        setMyRank: function () {
            var me = this;

            var rank = me.DATA.myrank;
            var list = me.list.clone();
            X.autoInitUI(list);
            var txtPh = me.view.nodes.fnt_player;
            var layIco = list.nodes.panel_tx;
            var txtName = list.nodes.txt_name;
            var txtGuanqia = me.view.finds('txt_level_0');

            list.nodes.bg_list.hide();
            list.nodes.txt_title.setString(L('GUANQIA'));

            layIco.removeAllChildren();
            txtPh.removeAllChildren();
            if (rank < 0) {
                txtPh.setString("");
                me.view.finds('wsb_player').show();
            } else{
                txtPh.setString(rank);
            }
            // else if (rank < 4) {
            //     txtPh.setBackGroundImage('img/public/img_paihangbang_' + rank + '.png', 1);
            // }

                var wid = G.class.shead(P.gud);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);

            var maxGqid = G.class.tanxian.getCurMaxGqid();
            txtName.setString(P.gud.name);
            txtGuanqia.setString(P.gud.maxmapid > maxGqid ? maxGqid : P.gud.maxmapid);

            layIco.setTouchEnabled(false);
            // list.setPosition(me.view.nodes.list_player.width / 2, me.view.nodes.list_player.height / 2 - list.height / 2);

            // me.view.nodes.list_player.addChild(list);
            me.view.nodes.panel_player.show();
        }
    });

    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/31.
 */
(function () {
    var _fun = {

    };

    for (var key in _fun) {
        G.frame.tanxian[key] = _fun[key];
    }
})();
;;/**
 * Created by wfq on 2018/7/4.
 */
(function () {
    var me = G.frame.tanxian;
	
	var posObj;
    var rolesObj = {};
    
    
    var _fun = {
    	//模拟战斗
        setSimulateFight:function() {
        	//填充背景图相关
        	if(me.ssFightStarted)return;
        	
        	me.ssFightStarted = true;
        	if(me._nextBossTimer){
        		me.ui.clearTimeout(me._nextBossTimer);
        		delete me._nextBossTimer;
        	}
        	
        	posObj = G.class.tanxian.getSimulateFight().pos;
    		me._fightPanel = me.nodes.panel_battle;
    		me.timeSpeed = 2;
    		
            var conf = G.class.tanxian.getExtConf().base.area[me.curArea];
            var imgArr = conf.fightimg.split('.');
            imgArr[0] = imgArr[0] + '_1';
            var img2 = imgArr.join('.');
            me.ui.finds('bg_battle1').setBackGroundImage('img/bg/' + conf.fightimg,0);
            me.ui.finds('bg_battle2').setBackGroundImage('img/bg/' + img2,0);

            me.nodes.panel_battle.removeAllChildren();
            me.nodes.panel_battle.show();

            //todo?前12随机3个？前12？
            var heros = G.DATA.yingxiong.list;
            var herosArr = X.keysOfObject(heros);
            var fightHeroTidArr = herosArr.splice(0,3);
            
            var posNum = 1;
            //添加位置
            rolesObj = {};
            for (var i = 0; i < fightHeroTidArr.length; i++) {
                var tid = fightHeroTidArr[i];
                rolesObj[tid] = JSON.parse(JSON.stringify(heros[tid]));
                rolesObj[tid].pos = posObj[posNum];
                rolesObj[tid].zIndex = 1400-posObj[posNum].y;
                rolesObj[tid].rid = tid;
                rolesObj[tid].idx = posNum;
                posNum++;
            }
			
			var _boss = me.getBossInfo();
            cc.mixin(rolesObj,_boss,true);
            
            me.roleList = {};
            var needLoad = Object.keys(rolesObj).length;
            for (var rid in rolesObj) {
                me.initRole(rolesObj, rid , function(){
                	needLoad--;
                    if (needLoad == 0) {
                        cc.callLater(function(){
                        	me.fmtTranLog();
                        });
                    }
                });
            }
            me.setPrizeBox();
            me.setPrizeJinBi();
        },
        
        _nextBoss : function(){
        	if(me.roleList['boss'])return;
        	
        	var _boss = me.getBossInfo();
        	cc.mixin(rolesObj,_boss,true);
        	
        	me.initRole(rolesObj, 'boss' , function(){
                cc.callLater(function(){
                	me.fmtTranLog();
                });
            });
        },
        
        getBossInfo : function () {
            //添加boss
            var bossArr = G.gc.npc[G.class.tanxian.getById(P.gud.mapid).boss];
            var boss = X.arrayRand(bossArr);
            var res = {};
            res['boss'] = boss;
            res['boss'].pos = posObj[4];
            res['boss'].zIndex = 1400-posObj[4].y;
            res['boss'].rid = 'boss';
            res['boss'].idx = 4;
            return res;
        },
        initRole : function (data,rid,callback) {
        	var roleData = data[rid];
        	
        	roleData.loadRoleOver = function(node){
        		//加载完毕后逐渐显示
                node.opacity = 0;
                if(rid == "boss") {
                    G.class.ani.show({
                        json: "ani_tanxian_guaiwushuaxin",
                        addTo: me.nodes.panel_battle,
                        x: roleData.pos.x,
                        y: roleData.pos.y + 100,
                        repeat: false,
                        autoRemove: true,
                        onload:function(node, action){
                            action.setTimeSpeed(1.2);
                        },
                        onkey: function (aaa,action,event) {
                            if (event == 'chuxian') {
                                node.opacity = 255;
                                callback && callback();
                            }
                        },
                    })
                }else {
                    node.runActions([
                        cc.fadeIn(0.5)
                    ]);
                    callback && callback();
                }

        	};
            var role = new G.class.Role(roleData);
            role.data._defaultPos = roleData.pos;
            role.data._defaultZindex = roleData.zIndex;
            
            role.data.side = rid == 'boss' ? 1 : 0;   
            role.setPosition( roleData.pos );
            role.zIndex = roleData.zIndex;
            
            var value = G.class.tanxian.getSimulateFight().scale[roleData.idx];
			role.setScale(value * (rid == 'boss' ? -1 : 1),value);
                        
            //role.scaleX = rid == 'boss' ? -1 : 1;   
            role.speed(2);
            me.roleList[rid] = role;
            me.nodes.panel_battle.addChild( me.roleList[ rid ] );
        },
        setPrizeBox:function(){
            var me = this;
            X.spine.show({
                json: 'spine/' + 'xiangzi' + '.json',
                // json:'spine/'+ 41066 +'.json',
                addTo: me.nodes.panel_battle,
                cache: true,
                x: 285,
                y: 340,
                z: 0,
                autoRemove: false,
                onload: function(node) {
                    node.stopAllAni();
                    node.setTimeScale(1);
                    node.opacity = 255;
                    node.setScale(1);
                    node.runAni(0, "baoxiang_daiji", true);
                    node.setZOrder(1102);
                    var lay = me.boxLay = new ccui.Layout();
                    lay.setContentSize(cc.size(200,100));
                    lay.setTouchEnabled(true);
                    G.frame.tanxian.nodes.box = lay;
                    node.addChild(lay);
                    node.setCompleteListener(function(trackIndex, loopCount) {
                        node.runAni(0, "baoxiang_daiji", true);
                    });
                    me.prizeBox = node;
                    lay.touch(function(sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            if (!me.isPrize) {
                                G.tip_NB.show(L('tanxian_gj_error'));
                                return;
                            }
                            node.runAni(0, "baoxiang_taoyue", false);
                            me.btnLq.triggerTouch(ccui.Widget.TOUCH_ENDED);
                        }
                    });
                },
            })
        },
        setPrizeJinBi:function(){
            var me = this;
            var panel = me.nodes.panel_battle;
            var jbtouch = me.nodes.baozangdianji;
            var h = me.DATA.gjtime / 3600;
            var m = me.DATA.gjtime / 60;
            var num = 0;
            var time = 0;
            if(m >= 11 && h < 2){
                num = 1;
                time = 2 * 3600 - me.DATA.gjtime;
            }else if(h >= 2 && h < 4){
                num = 2;
                time = 4 * 3600 - me.DATA.gjtime;
            }else if(h >= 4){
                num = 3;
            }
            panel.getChildByTag(7777) && panel.getChildByTag(7777).removeFromParent();
            me.jingBiAni && delete me.jingBiAni;
            if(num > 0){
                G.class.ani.show({
                    json: "ani_jingbi" + num,
                    addTo: panel,
                    x: panel.width / 2,
                    y: panel.height / 2 + num *  20,
                    repeat: false,
                    autoRemove: false,
                    onload: function(node, action) {
                        action.play('daiji',true);
                        node.setZOrder(1101);
                        node.setTag(7777);
                        me.jingBiAni = action;
                        me.nodes.baozangdianji.click(function(){
                            me.boxLay.triggerTouch(ccui.Widget.TOUCH_ENDED);
                        });
                    }
                });
            }
            // me.timeEvent && me.clearTimeout(me.timeEvent);
            me.timeEvent && delete me.timeEvent;
            if(time){
                var t = time * 1000;
                me.timeEvent = me.ui.setTimeout(function(){
                    me.setPrizeJinBi();
                },t);  
            }
        },
        bossDeadPrize:function(){
            var me = this;
            var boss = me.nodes.panel_battle.finds('boss');
            if(!cc.isNode(boss))return;

            boss.getChildByTag(7456) && boss.getChildByTag(7456).removeFromParent();

            G.class.ani.show({
                json: "ani_tanxian_siwang",
                addTo: me.nodes.panel_battle,
                x: boss.x,
                y: boss.y,
                repeat: false,
                autoRemove: false,
                onload: function(node, action) {
                    node.setTag(7456);
                },
                onend: function () {
                    me.movePrize(me.nodes.panel_battle, G.class.tanxian.getSimulateFight().pos[4], cc.p(me.prizeBox.x + 50,me.prizeBox.y + 40))
                }
            });
        },
        movePrize: function(parent, target, end) {
            var me = this;
            // var end = me.prizeBox.getPosition();
            var end = end;
            // end = cc.p(end.x / 2, end.y / 2);
            var num = parseInt(Math.random() * 6 + 15);
            var prize = ['useexp', 'jinbi', 'exp', 'jifen'];
            var icons = [];
            var action = [
                function(node) {
                    node.runActions([
                        cc.moveTo(1, end),
                        cc.callFunc(function() {
                            node.removeFromParent();
                        })
                    ]);
                },
                function(node) {
                    var start = node.getPosition();
                    node.runActions([
                        cc.bezierTo(1, [
                            start,
                            cc.p(start.x - start.x / 3, start.y - start.y / 3),
                            end
                        ]),
                        cc.callFunc(function() {
                            node.removeFromParent();
                        })
                    ]);

                },
                function(node) {
                    node.runActions([
                        cc.jumpTo(1, end, 50, 1),
                        cc.callFunc(function() {
                            node.removeFromParent();
                        })
                    ]);
                },
            ];
            for (var i = 0; i < num; i++) {
                var icon = new ccui.ImageView(G.class.getItemIco(prize[i % 4]), 1);
                var x = parseInt(Math.random() * 30 + target.x);
                var y = parseInt(Math.random() * 60 + target.y);
                icon.setPosition(cc.p(x,y));
                parent.addChild(icon,1103);
                icons.push(icon);
            }
            for (var k = 0; k < icons.length; k++) {
                var icon = icons[k];
                (function(icon, k) {
                    me.ui.setTimeout(function() {
                        var sun = parseInt(Math.random() * 6 + 1);
                        action[sun % 3](icon);
                    }, k * 20);
                })(icon, k);
            }
        },
        fmtTranLog : function(){
        	var me = this;
        	var logs = [];
        	
        	var rolekeys = [];
        	for(var rid in me.roleList){
        		if(rid != 'boss')rolekeys.push(rid);
        	}
        	
        	for(var round=0;round < X.rand(1,3);round++){
        		for(var rid in me.roleList){
        			
	        		if(rid != 'boss'){
	        			var heroConf = G.class.hero.getById(me.roleList[rid].data.hid);
	        			var ifXP = X.rand(1,100)<30;
	        			logs.push({
	                        act:'atk',
	                        actType: ifXP?"xpskill":"normalskill",
	                        from:rid,
	                        skillid: ifXP ? heroConf.xpskill : heroConf.normalskill,
	                        to:{
	                            boss:{
	                                atkType: ifXP?"xpskill":"normalskill",
	                                dps:-1,
	                                ifBaoJi:false,
	                                ifJingZhun:false
	                            }
	                        }
	                    });
	                    logs.push({r:"boss","v": -1, "nv": 1,"act": "hp"});
	                    logs.push({from: rid , act: "stopAct"});
	        		}else{
	        			var heroConf = G.class.hero.getById(me.roleList[rid].data.hid);
	        			var ifXP = X.rand(1,100)<30;
			            var data = {
			                act:'atk',
			                actType: ifXP?"xpskill":"normalskill",
			                from:'boss',
			                skillid: ifXP ? heroConf.xpskill : heroConf.normalskill,
			                to:{}
			            };
			            var atkTid = X.arrayRand(rolekeys);
			            data.to[atkTid] = {
			                atkType:ifXP?"xpskill":"normalskill",
			                dps:-1,
			                ifBaoJi:false,
			                ifJingZhun:false
			            };
			            logs.push(data);
			            logs.push({r:atkTid,"v": -1, "nv": 1,"act": "hp"});
			            logs.push({from: rid , act: "stopAct"});
	        		}
	        	}
        	}
        	
        	//确保最后是由我方英雄出手，boss死亡
        	var rid = rolekeys[0];
        	var heroConf = G.class.hero.getById(me.roleList[rid].data.hid);
			var ifXP = X.rand(1,100)<30;
			logs.push({
                act:'atk',
                actType: ifXP?"xpskill":"normalskill",
                from:rid,
                skillid: ifXP ? heroConf.xpskill : heroConf.normalskill,
                to:{
                    boss:{
                        atkType: ifXP?"xpskill":"normalskill",
                        dps:-1,
                        ifBaoJi:false,
                        ifJingZhun:false
                    }
                }
            });
            logs.push({r:"boss","v": -1, "nv": 1,"act": "hp"});
            logs.push({"to": "boss", "canFuHuo": false, "act": "dead"});
            logs.push({from: rid , act: "stopAct"});
	                    
        	me.tranSimulateRound( logs );
        },
        
        tranSimulateRound: function (data,callback) {
            var me = this;

            data = [].concat(data);

            var fight = function () {
            	me.timeSpeed = 2;
                if (data.length < 1) {
                    me.bossDeadPrize();
                    me._nextBossTimer = me.ui.setTimeout(function(){
                    	me._nextBoss();
                    },1000);
                    return;
                }
                var act = data.shift();
                var _actFunctionKey = 'act_' + act.act;
                if (me[_actFunctionKey]) {
                    me[_actFunctionKey](act, function () {
                        fight();
                    });
                }
            };
            fight();
        },
        
        act_atk : function(data,callback){
            //普通攻击
            return G.frame.fight.act_atk.call(this,data,callback);
        },
        act_hp : function(data,callback){
            var me = this;
            var fromID = data.r;
            var from = me.roleList[fromID];
            if(!from)return callback();
			from.byatk();
            callback && callback();
        },
        _parseSkillAni : function(data,skillAniconf,callback){
        	data._isTanXianSimularFight = true;
        	return G.frame.fight._parseSkillAni.call(this,data,skillAniconf,callback);
        },
        _addSkillAni : function(fromPosition,toPosition,skillAniconf,callback,extData){
        	return G.frame.fight._addSkillAni.call(this,fromPosition,toPosition,skillAniconf,callback,extData);
        	//me.nodes.panel_zd.addChild(view);
        	//return view;
        },
        hit_ani: function(from,topos,skillAni){
        	return G.frame.fight.hit_ani.call(this,from,topos,skillAni);
        },
        _addAniAt : function(pos,aniFile,callback){
            return G.frame.fight._addAniAt.call(this,pos,aniFile,callback);
        },
        _shake : function(shakeLevel){
        	
        },
        act_dead : function(data,callback){
        	G.frame.fight.act_dead.call(this,data,callback);
        	delete me.roleList['boss'];
        },
        act_stopAct : function(data,callback){
            var me = this;
            me.ui.setTimeout(function(){
            	var _from = me.roleList[ data.from ];
                if (cc.isNode(_from) ){
                	_from.zIndex = _from.data._defaultZindex;
                	_from.runActions([
                		cc.moveTo(0.2,_from.data._defaultPos)
                	]);	
                }
                me.ui.setTimeout(function(){
                	callback && callback();
                },300);
            },600)
        }
    };
    cc.mixin(me,_fun,true);
})();
;;/**
 * Created by wfq on 2018/6/4.
 */
(function () {
    //探险-通关奖励
    var ID = 'tanxian_tgprize';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            me.ui.nodes.tip_title.setString(L("TGJL"));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.btn_guanbi.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            // G.frame.tanxian.DATA.passprizeidx = [0,1];
            // P.gud.maxmapid = 60;

            new X.bView('tongguanjiangli.json', function (view) {
                me._view = view;
                me._view.nodes.panel_tgjl.show();
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                X.viewCache.getView('tongguanjiangli_list.json', function (node) {
                    me.list = node.finds('list_nr');
                    me.setContents();
                    me.ui.setTimeout(function(){
                    	G.guidevent.emit('tanxian_tgprize_showover');
                    },500);
                });
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var panel = me._view;
            var prize = [].concat(G.class.tanxian.getTgprize());
            me.gotarr = G.frame.tanxian.DATA.passprizeidx;
            me.sortData(prize);

            var scrollview = panel.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();

            me.list.hide();
			
			me.nodes._firstLQBtn=null;
            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8, 10);
            table.setData(prize);
            table.reloadDataWithScroll(true);
            // scrollview.getChildren()[0].getChildren()[0].setPositionX(7);
        },
        setItem: function(ui, data) {
            var me = this;

            X.autoInitUI(ui);
            // var prize = [].concat(G.class.tanxian.getTgprize());
            var txtName = ui.nodes.wz_title;
            var layWp = ui.nodes.ico_jlwp;
            var btnLq = ui.nodes.btn1_on;
            var layXs = ui.nodes.bg_xuanshangrenwu_jdt;
            var ylq = ui.nodes.img_ylq;
            var maxGqid = G.class.tanxian.getCurMaxGqid();
            var maxmapid = P.gud.maxmapid > maxGqid ? maxGqid : P.gud.maxmapid;

            layWp.removeAllChildren();
            btnLq.hide();
            layXs.hide();
            data[3] ? ylq.show() : ylq.hide();
            var dqgk = maxmapid - 1;
            txtName.setString(X.STR(L('TANXIAN_TXDQ_CENG'),data[0],maxmapid - 1,data[0]));
            X.alignItems(layWp,data[1],'left',{
                touch:true,
                interval:15
            });


            if (!X.inArray(me.gotarr, data[2]) && maxmapid - 1 >= data[0]) {
                btnLq.show();
            }
            
            //第一个领奖按钮映射出去，方便新手指导
            if(me.nodes._firstLQBtn==null){
            	me.nodes._firstLQBtn = btnLq;
            }

            layWp.setTouchEnabled(false);
            ui.setTouchEnabled(false);

            btnLq.data = data[2];
            btnLq.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.ajax.send('tanxian_recpassprize',[sender.data],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            G.frame.jiangli.data({
                                prize:[].concat(d.d.prize)
                            }).show();
                            G.frame.tanxian.getData(function () {
                                me.setContents();
                                G.frame.tanxian.checkRedPoint();
                            });
                        }
                    },true);
                }
            });
        },
        sortData: function (data) {
            for (var i = 0; i < data.length; i++) {
                var p = data[i];
                p[2] = i;
                if (X.inArray(G.frame.tanxian.DATA.passprizeidx, i)) {
                    p[3] = 1;
                } else {
                    p[3] = 0;
                }
            }

            //2是索引，3是是否领取
            data.sort(function (a,b) {
                if (a[3] != b[3]) {
                    return  a[3] < b[3] ? -1 : 1;
                } else {
                    a[2] < b[2] ? -1 : 1;
                }
            });
        }
    });

    G.frame[ID] = new fun('ui_tip1.json', ID);
})();
;;/**
 * Created by LYF on 2018-12-28
 */
(function () {
    var ID = "diaowen_select";

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        bindUI: function () {
            var me = this;
            setPanelTitle(me.nodes.txt_title, L('UI_TITLE_DWXZ'));

            me.nodes.mask.click(function(){
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;

            me.maxNum = me.data().maxNum;
            me.selectedArr = [];
            me.curNum = me.selectedArr.length;

            for (var i in me.data().selected) {
                me.selectedArr.push(me.data().selected[i]);
            }
        },
        onShow: function () {
            var me = this;
            me.bindUI();

            new X.bView('ui_tip_xuanze.json',function(view){
                me._view = view;
                cc.enableScrollBar(view.nodes.scrollview);
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
            });
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var view = me._view;
            var data = G.frame.diaowen.getNoInArr(me.selectedArr);

            view.nodes.btn_xz.click(function () {
                if(me.selectedArr.length == me.curNum) me.remove();
                else {
                    me.data().callback && me.data().callback(me.selectedArr);
                    me.remove();
                }
            });

            view.nodes.txt_title.y = 318;
            view.nodes.txt_title.setString(L("CACKDWXQ"));

            cc.isNode(view.finds('img_zwnr')) && view.finds('img_zwnr').hide();
            if (data.length < 1) {
                cc.isNode(view.finds('img_zwnr')) && view.finds('img_zwnr').show();
                return;
            }

            if(!me.table) {
                var table = me.table = new X.TableView(view.nodes.scrollview, view.nodes.list, 5, function (ui, data) {
                    me.setItem(ui, data);
                }, null, null, 1, 3);
                table.setData(data);
                table.reloadDataWithScroll(true);
            } else {
                me.table.setData(data);
                me.table.reloadDataWithScroll(false);
            }
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);
            ui.setName(data);
            ui.data = data;

            var d = G.frame.beibao.DATA.glyph.list[data];
            var widget = G.class.sglyph(d);
            widget.setScale(0.95);
            widget.setAnchorPoint(0.5,1);
            widget.setPosition(cc.p( ui.width*0.5, ui.height ));
            ui.nodes.panel_ico.removeAllChildren();
            ui.nodes.panel_ico.addChild(widget);

            if(X.inArray(me.selectedArr, ui.data)) {
                ui.nodes.img_gou.show();
            } else {
                ui.nodes.img_gou.hide();
            }

            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function(sender, type){
                if(type == ccui.Widget.LONG_TOUCH) {
                    me.isCK = true;
                    G.frame.diaowen_dwxq.data({
                        id: sender.data,
                        state: "ck",
                        noMask: true
                    }).show();
                }
                if(type == ccui.Widget.TOUCH_ENDED) {
                    if(!me.isCK) {
                        if(X.inArray(me.selectedArr, sender.data)) {
                            me.selectedArr.splice(X.arrayFind(me.selectedArr, sender.data), 1);
                        } else {
                            if(me.selectedArr.length == 5) {
                                G.tip_NB.show(L("SLYDSX"));
                                return;
                            }
                            me.selectedArr.push(sender.data);
                        }
                        me.checkGou();
                    } else {
                        me.isCK = false;
                        if(G.frame.diaowen_dwxq.isShow) G.frame.diaowen_dwxq.remove();
                    }
                }
            }, null, {emitLongTouch: true});
            ui.show();
        },
        checkGou: function () {
            var me = this;
            var chr = me.table.getAllChildren();

            for (var i in chr) {
                if(X.inArray(me.selectedArr, chr[i].data)) {
                    chr[i].nodes.img_gou.show();
                } else {
                    chr[i].nodes.img_gou.hide();
                }
            }
        }
    });

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by LYF on 2018-12-28
 */
(function () {
    var ID = "diaowenduihuan";

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        bindUI: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });

            if(G.frame.tiejiangpu.dw.DATA < 100) {
                me.nodes.btn_lq.setTouchEnabled(false);
                me.nodes.btn_lq.setBright(false);
                me.nodes.txt_lq.setTextColor(cc.color("#6c6c6c"));
            }

            me.nodes.btn_lq.click(function () {

                me.ajax("glyph_getrefineprize", [], function (str, data) {
                    if(data.s == 1) {
                        G.frame.jiangli.data({
                            prize: data.d.prize
                        }).show();
                        me.remove();
                    }
                })
            })
        },
        onOpen: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.bindUI();

            var wid = G.class.sitem({a: "item", t: 1009, n: 0});
            wid.setAnchorPoint(0.5, 0.5);
            wid.setPosition(me.nodes.panel_wpjl.width / 2, me.nodes.panel_wpjl.height / 2)
            G.frame.iteminfo.showItemInfo(wid);
            me.nodes.panel_wpjl.addChild(wid);
        },
        onRemove: function () {
            var me = this;

            G.frame.tiejiangpu.dw.setJDT();
        }
    });

    G.frame[ID] = new fun('diaowen_top4.json', ID);
})();
;;/**
 * Created by LYF on 2018/12/27.
 */
(function () {
    G.class.diaowenjinglian = X.bView.extend({
        ctor: function (conf) {
            var me = this;
            me.conf = conf;
            me._super('diaowenjinlian.json');
            G.frame.tiejiangpu.dw = me;
        },
        bindBtn:function () {
            var me = this;

            me.nodes.btn_bz.click(function () {
                G.frame.help.data({
                    intr:L("TS25")
                }).show();
            });

            me.nodes.btn_jl.click(function () {
                if(me.selectedArr.length < 1) {
                    G.tip_NB.show(L("QFRZSYGDW"));
                    return;
                }
                function f() {
                    me.ajax("glyph_refine", me.selectedArr, function (str, data) {
                        if(data.s == 1) {
                            me.action.playWithCallback("fenjie", false, function () {
                                if(data.d.prize && data.d.prize.length > 0) {
                                    G.frame.jiangli.data({
                                        prize: data.d.prize
                                    }).show();
                                }
                                me.setJDT();
                                me.setAttr();
                                for (var i = 1; i < 6; i ++) {
                                    var lay = me.nodes["panel_dw_" + i];
                                    lay.removeAllChildren();
                                    me.selectedArr = [];
                                }
                                me.action.play("xunhuan", true);
                            });
                        }
                    });
                }
                var isRed = false;
                for (var i in me.selectedArr) {
                    var data = G.frame.beibao.DATA.glyph.list[me.selectedArr[i]];
                    if(data.color == 5) {
                        isRed = true;
                        break;
                    }
                }
                if(isRed) {
                    G.frame.alert.data({
                        cancelCall: null,
                        okCall: function () {
                            f();
                        },
                        richText: L("CZHSPZ"),
                        sizeType: 3
                    }).show();
                } else {
                    f();
                }
            }, 1000);

            me.nodes.btn_yjjl.click(function () {
                for (var i = 1; i < 6; i ++) {
                    if(me.selectedArr.length == 5) {
                        G.tip_NB.show(L("JLCYM"));
                        return;
                    }
                    if(G.frame.diaowen.getNoInArrByRed(me.selectedArr).length < 1) {
                        G.tip_NB.show(L("ZWKFRDW"));
                        return;
                    }
                    var lay = me.nodes["panel_dw_" + i];
                    if(!lay.children[0]) {
                        var arr = G.frame.diaowen.getNoInArrByRed(me.selectedArr);
                        if(arr.length > 0) {
                            me.setDW(lay, arr[0]);
                        } else {
                            break;
                        }
                    }
                    me.setAni();
                    G.tip_NB.show(L("YJFRCG"));
                }
            });

            me.nodes.btn_fh.click(function () {
                G.frame.tiejiangpu.remove();
            });

            me.nodes.btn_jlz.click(function () {
                G.frame.diaowenduihuan.show();
            });

            for (var i = 1; i < 6; i ++) {
                (function (lay) {
                    lay.setTouchEnabled(true);
                    lay.click(function (sender) {
                        if(sender.children[0]) {
                            me.selectedArr.splice(X.arrayFind(me.selectedArr, sender.gid), 1);
                            sender.removeAllChildren();
                            me.setAni();
                        } else {
                            G.frame.diaowen_select.data({
                                callback: function (gidArr) {
                                    me.setLay(gidArr);
                                    me.setAni();
                                },
                                selected: me.selectedArr,
                                maxNum: 5
                            }).show();
                        }
                    })
                })(me.nodes["panel_dw_" + i]);
            }
        },
        setAni: function () {
            var me = this;

            if(G.frame.diaowen.getNoInArr(me.selectedArr).length < 1) {
                for (var i = 1; i < 6; i ++) {
                    me.nodes["img_jia" + i].hide();
                }
            } else {
                for (var i = 1; i < 6; i ++) {
                    me.nodes["img_jia" + i].show();
                }
            }
        },
        onOpen: function () {
            var me = this;

            for (var i = 1; i < 6; i ++) {
                me.nodes["img_jia" + i].runAction(cc.sequence(cc.fadeOut(1), cc.fadeIn(1)).repeatForever());
            }

            me.selectedArr = [];
            me.bindBtn();
        },
        onShow : function(){
            var me = this;

            G.class.ani.show({
                json: "ani_diaowen_jinglian",
                addTo: me.nodes.panel_dh,
                x: me.nodes.panel_dh.width / 2,
                y: me.nodes.panel_dh.height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    action.play("xunhuan", true);
                    me.action = action;
                }
            });

            me.setAttr();
            me.setJDT();
            me.setAni();
        },
        getData: function(cb) {
            var me = this;

            me.ajax("glyph_getrefinenum", [], function (str, data) {
                if(data.s == 1) {
                    me.DATA = data.d;
                    cb && cb();
                }
            })
        },
        setAttr: function () {
            var me = this;

            me.nodes.text_jhsl.setString(G.class.getOwnNum("2024", "item"));
        },
        setDW: function (lay, gid) {
            var me = this;

            var wid = G.class.sglyph(G.frame.beibao.DATA.glyph.list[gid], true);
            wid.setAnchorPoint(0.5, 0.5);
            wid.setPosition(lay.width / 2, lay.height / 2);
            lay.removeAllChildren();
            lay.addChild(wid);
            lay.gid = gid;

            me.selectedArr.push(gid);
        },
        setJDT: function () {
            var me = this;

            me.getData(function () {
                me.nodes.img_jdt1.setPercent(me.DATA);
                me.ui.finds("wz_1").setString(me.DATA);
            });
        },
        setLay: function (gidArr) {
            var me = this;

            for (var i = 1; i < 6; i ++) {
                var lay = me.nodes["panel_dw_" + i];
                for (var j in gidArr) {
                    if(!X.inArray(me.selectedArr, gidArr[j]) && !lay.children[0]) {
                        me.setDW(lay, gidArr[j]);
                    }
                }
            }
        }
    });

})();
;;/**
 * Created by zhangming on 2018-05-14
 */

G.event.on('equipchange_over', function () {
    G.hongdian.checkHeCheng();
    if(G.frame.tiejiangpu.isShow) {
        if(G.frame.tiejiangpu.viewType == 1) {
            G.frame.tiejiangpu.checkTypeRedPoint();
        }
    }
});

(function () {
    //杂货铺
    var ID = 'tiejiangpu';
    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f2";
            me.fullScreen = true;
            me._super(json, id,{action:true});
        },
        bindUI: function () {
            var me = this;

            me.ui.finds('panle_2').setTouchEnabled(false);

            me.topMenu = new G.class.topMenu(me,{
                btns:X.clone(G.class.menu.get('tiejiangpu'))
            });

            me.nodes.btn_rl1.show();
            me.nodes.btn_zh1.show();
            me.nodes.btn_dwjl1.show();

            if(P.gud.lv < G.class.opencond.getLvById("glyphrefine")) {
                me.nodes.btn_dwjl1.checkLv = true;
                me.nodes.btn_dwjl1.show = X.STR(L("XJKQ"), G.class.opencond.getLvById("glyphrefine"));
            }


            X.radio([me.nodes.btn_rl1, me.nodes.btn_zh1, me.nodes.btn_dwjl1], function (sender) {
                var type = {
                    btn_rl1$: 1,
                    btn_zh1$: 2,
                    btn_dwjl1: 3
                };

                me.changeView(type[sender.getName()]);
            })
        },
        changeView: function(type) {
            var me = this;

            if(me.viewType && me.viewType == type) return;

            me.viewType = type;

            var bViewDown;
            var bViewUp;
            var bViewDW;
            if(type == 1) {
                bViewDown = me.bViewDown = new G.class.tiejiangpu_top();
                bViewUp = me.bViewUp = new G.class.tiejiangu_table();
                me.checkTypeRedPoint();
                me.nodes.listview.show();
            }else if(type == 2){
                bViewDown = me.bViewDown = new G.class.tiejiangpu_zhuanhuan_top();
                bViewUp = me.bViewUp = new G.class.tiejiangu_zhuanhuan_table();
                me.checkTypeRedPoint(true);
                me.nodes.listview.show();
            } else {
                me.nodes.listview.hide();
                bViewDW = me.bViewDW = new G.class.diaowenjinglian();
            }
            me.ui.finds('panle_1').removeAllChildren();
            me.ui.finds('panle_2').removeAllChildren();
            me.ui.finds('panle_3').removeAllChildren();

            if(bViewUp) {
                bViewUp.event.once("showed", function () {
                    me.topMenu.changeMenu(1);
                });
                me.ui.finds('panle_1').addChild(bViewUp);
            }
            if(bViewDown) {
                me.ui.finds('panle_2').addChild(bViewDown);
            }
            if(bViewDW) {
                me.ui.finds('panle_3').addChild(bViewDW);
            }

        },
        changeType: function(sender){
            var me = this;
            var type = sender.data.id;
            me._curType = type;

            if(me.viewType == 1) {
                me.bViewDown.refreshData(me.getData(type),type);
                me.bViewUp.refreshData(me.getEquipData(type),type);
            }else {
                me.bViewUp.refreshData(type);
            }
        },
        onOpen: function () {
            var me = this;
            X.audio.playEffect("sound/opentiejiangpu.mp3");
            me.bindUI();
            me.ui.finds('panle_1').setTouchEnabled(false);
        },
        checkTypeRedPoint: function(boll) {
            var me = this;

            if(boll) {
                for (var i in me.nodes.listview.children) {
                    G.removeNewIco(me.nodes.listview.children[i]);
                }
            } else {
                var redArr = G.hongdian.checkHeCheng();
                for(var i in redArr) {
                    if(redArr[i]) {
                        G.setNewIcoImg(me.nodes.listview.getChildren()[i]);
                        me.nodes.listview.getChildren()[i].getChildByName("redPoint").x = 107;
                    }else{
                        G.removeNewIco(me.nodes.listview.getChildren()[i]);
                    }
                }
            }
        },
        onShow: function () {
            var me = this;
            me.showToper();
            me.nodes.btn_rl1.triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        onAniShow: function () {
            var me = this;
        },
        onRemove: function () {
            var me = this;
            me.event.emit('hide');
        },
    });

    G.frame[ID] = new fun('ui_tip6.json', ID);
})();
;;/**
 * Created by zhangming on 2018-05-14
 */
(function () {
    var _fun = {
        // 背包数据
        getData: function (type) {
            var me = this;
            var data = G.frame.beibao.DATA.zhuangbei.list;
            var keys = X.keysOfObject(data);
            var arr = [];
            for(var idx in keys){
                var tid = keys[idx];
                var d = data[tid];
                if (type == d.type) {
                    var useNum = d.usenum || 0;
                    if (d.num > useNum && !d.usetid) {
                        arr.push(d);
                    }
                }
            }
            var obj = {};
            for(var idx in arr){
                obj[arr[idx].eid] = arr[idx];
            }
            return obj;
        },
        getEquipData: function (type) {
            var me = this;
            if(me.EquipArr)return me.EquipArr[type];
            me.EquipArr = {1:[],2:[],3:[],4:[]};
            var data = G.class.equip.get();
            for(var idx in data){
                var _type = data[idx].type;
                if(data[idx].need.length > 0){
                    me.EquipArr[_type].push(data[idx]);
                }
            }
            for(var i in me.EquipArr){
                me.EquipArr[i].sort(function (a,b) {
                    if(a.color == b.color){
                        return a.star > b.star ? 1 : -1;
                    }else {
                        return a.color > b.color ? 1 : -1;
                    }
                });
            }
            return me.EquipArr[type];
        }
    };

    for (var key in _fun) {
        G.frame.tiejiangpu[key] = _fun[key];
    }
})();
;;/**
 * Created by wfq on 2018/7/10.
 */
 (function () {
    //tiejiangpu_top
    G.class.tiejiangpu_top = X.bView.extend({
        ctor: function (conf) {
            var me = this;
            me.conf = conf;
            me._super('zhuangbei_hecheng.json');
        },
        refreshData :function (data,type) {
            var me = this;

            me._type=type;
            me.DATA = data;
        },
        getIdxData:function (data,type) {
            var me = this;
            me._curData = data;
            if(me._type != type)return;
            me.isShow && me._curData !== undefined && me.setContents();

        },
        setContents: function () {
            var me = this;
            var data = me.DATA;
            if(!data) return;
            var all = G.frame.tiejiangpu.bViewUp.tableView.getAllChildren();
            var widget = G.class.szhuangbei(me._curData);
            widget.setAnchorPoint(0.5,0.5);
            widget.setPosition(me.nodes.panel_tb3.width / 2, me.nodes.panel_tb3.height / 2 - 4);
            me.nodes.panel_tb3.removeAllChildren();
            me.nodes.panel_tb3.addChild(widget);
            widget.data.a = 'equip';
            G.frame.iteminfo.showItemInfo(widget);

            var need = me._curData.need;
            var widget2 = G.class.szhuangbei(need[0], null, null, false);
            widget2.setAnchorPoint(0.5,0.5);
            widget2.setPosition(me.nodes.panel_tb2.width / 2, me.nodes.panel_tb2.height / 2);
            me.nodes.panel_tb2.removeAllChildren();
            me.nodes.panel_tb2.addChild(widget2);
            G.frame.iteminfo.showItemInfo(widget2);

            var jdtBg = new ccui.Layout();
            jdtBg.setName('jdtBg');
            jdtBg.setBackGroundImage('img/public/jdt/img_sp_jdt_bg.png',1);
            jdtBg.setAnchorPoint(cc.p(0.5,0.5));
            jdtBg.setPosition(cc.p(widget.width / 2,-14));
            widget2.addChild(jdtBg);
            var jdt = me.jdt = new ccui.LoadingBar();
            jdt.loadTexture('img/public/jdt/img_sp_jdt2.png',1);
            jdt.setPosition(widget.width / 2,-14);
            jdt.setName('jdt');
            widget2.addChild(jdt);
            var txtJdt = me.txtjdt  = new ccui.Text('0/0','',14);
            txtJdt.setName('txtJdt');
            txtJdt.setFontName(G.defaultFNT);
            txtJdt.setPosition(cc.p(widget.width / 2,-14));
            txtJdt.setAnchorPoint(cc.p(0.5,0.5));
            X.enableOutline(txtJdt,'#66370e');
            widget2.addChild(txtJdt);

            for(var i in all){
                if(all[i].data.id == me._curData.id){
                    me.target = all[i];
                    break;
                }
            }

            me._buy();
            me.setBtns();
        },
        _buy:function (str, is) {
            var me = this;

            var widget = me.nodes.textfield_sl;
            var text = me.nodes.text_jb;
            var need = me._curData.need;
            var max = 0;

            if(need[0] && need[0].t && me.DATA[need[0].t]){
                max = me.DATA[need[0].t].num - me.DATA[need[0].t].usenum;
            }
            var maxNum = me.maxNum = (max/need[0].n) >> 0;

            var s = widget.getString();
            if(!str){
                widget.setString(maxNum);
                me.curNum = maxNum;
                text.setString(X.fmtValue(need[1].n * maxNum));
            }else if(((s > 0 || str == '+1') && ( s < maxNum || str == '-1')) && !is){
                var num = eval(s + str);
                widget.setString(num);
                me.curNum = num;
                text.setString(X.fmtValue(need[1].n * eval(s + str)));
            }else {
                str = str > maxNum ? maxNum : str;
                widget.setString(str);
                me.curNum = str;
                text.setString(X.fmtValue(need[1].n * str));
            }
            text.setTextColor(cc.color(G.gc.COLOR.n1));
            widget.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
            if(me.jdt){
                if (maxNum > 0) {
                    me.jdt.setPercent(100);
                    me.jdt.loadTexture('img/public/jdt/img_sp_jdt.png',1);
                } else {
                    me.jdt.setPercent(Math.floor(max / need[0].n * 100));
                }
                me.txtjdt && me.txtjdt.setString(max + '/' + need[0].n);
            }

        },
        bindBtn:function () {
            var me = this;

            var btn_jia = me.nodes.btn_jia;
            // btn_jia.loadTextureNormal('img/public/btn/btn_jia2.png', 1);
            btn_jia.click(function () {

                me._buy('+1');
                me.setBtns();
            });
            var btn_jian = me.nodes.btn_jian;
            // btn_jian.loadTextureNormal('img/public/btn/btn_jian.png', 1);
            btn_jian.click(function () {
                me._buy('-1');
                me.setBtns();
            });
            if(!me.nodes.btn_hc.data) me.nodes.btn_hc.data = [];
            me.nodes.btn_hc.click(function () {
                if(!me.DATA[me._curData.need[0].t] || me.DATA[me._curData.need[0].t].num < me._curData.need[0].n){
                    G.tip_NB.show(L("HCCLBZ"));
                    return;
                }
                if(P.gud[me._curData.need[1].t] < me._curData.need[1].n) {
                    G.tip_NB.show(L("jinbi") + L("BUZU"));
                    return;
                }
                var str = me.nodes.textfield_sl.getString();
                if(str > me.maxNum){
                 str = me.maxNum;
                 me.nodes.textfield_sl.setString(str);
             }else if(str < 0){
                 str = 0;
                 me.nodes.textfield_sl.setString(0);
             }
             var eid = me._curData.id;
             me.ajax('equip_hecheng',[eid,str], function (s, d) {
                if(d.s == 1){
                        me._buy();
                        X.audio.playEffect("sound/hechengzhuangbei.mp3");
                        me.action.playWithCallback("ronghe", false, function () {
                            me.DATA = G.frame.tiejiangpu.getData(me._type);
                            me.setBtns();
                            G.class.ani.show({
                                json: "ani_tiejiangpuhecheng",
                                addTo: me.ui,
                                x: 317,
                                y: 213,
                                repeat: false,
                                autoRemove: true,
                                onend: function (node, action) {
                                    G.frame.jiangli.data({
                                        prize: [{a: "equip", t: eid, n: str}]
                                    }).show();
                                }
                            });
                            me.checkAllRedPoint();
                            me.action.play("dengdai", true)
                        });
                    }else{
                        X.audio.playEffect("sound/dianji.mp3", false);
                    }
                });
         });

        },
        checkAllRedPoint: function() {
            var me = this;
            var children = G.frame.tiejiangpu.bViewUp.tableView.getAllChildren();

            for(var i = 0; i < children.length; i ++) {
                var child = children[i];
                G.frame.tiejiangpu.bViewUp.checkRedPoint(child.getChildren()[0]);
            }
        },
        onOpen: function () {
            var me = this;
        },
        onShow : function(){
            var me = this;
            me.bindBtn();
            me.isShow = this;
            X.setInput(me.nodes.textfield_sl, function () {
                me._buy(me.nodes.textfield_sl.getString(), true);
                me.setBtns();
            });
            G.class.ani.show({
                json: "ani_tiejiangpu_beijing",
                addTo: me.nodes.panel_dh,
                x: me.nodes.panel_dh.width / 2,
                y: me.nodes.panel_dh.height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    node.setTag(998877);
                    node.zIndex = -100;
                    me.action = action;
                    action.play("dengdai", false);
                }
            });
        },
        onNodeShow : function(){
            var me = this;

        },
        setBtns: function () {
            var me = this;

            var btnAdd = me.nodes.btn_jia;
            var btnPlus = me.nodes.btn_jian;

            btnAdd.setTouchEnabled(false);
            btnAdd.setEnableState(false);
            btnPlus.setTouchEnabled(false);
            btnPlus.setEnableState(false);

            if (me.curNum > 1) {
                btnPlus.setTouchEnabled(true);
                btnPlus.setEnableState(true);
            }
            if (me.curNum < me.maxNum) {
                btnAdd.setTouchEnabled(true);
                btnAdd.setEnableState(true);
            }
        }
    });

})();
;;/**
 * Created by LYF on 2018/11/15.
 */
(function () {
    //tiejiangu_table
    G.class.tiejiangu_zhuanhuan_table = X.bView.extend({
        ctor: function (conf) {
            var me = this;
            me.conf = conf;
            me._super('zhuangbei_zbxz2.json');
        },
        refreshData :function (type) {
            var me = this;
            me.type = type;
            me.DATA = me.getData(type);
            me.setContents();
        },
        bindBtn: function(){
            var me = this;

            me.ui.finds('$btn_fanhui').click(function(sender, type){
                G.frame.tiejiangpu.remove();
            });
        },
        setContents: function () {
            var me = this;
            var data = me.DATA;

            if(data.length < 1) {
                me.nodes.img_zw.show();
            }else {
                me.nodes.img_zw.hide();
            }

            if (!me.tableView) {
                me.tableView = new X.TableView(me.scrollview, me.nodes.panel_tb1, 5, function (ui, data, pos) {
                    me.setItem(ui, data, pos[0] * 5 + pos[1]);
                }, null, null, 1, 5);
                me.tableView.setData(data);
                me.tableView.reloadDataWithScroll(true);
            }else {
                me.tableView.setData(data);
                me.tableView.reloadDataWithScroll(true);
            }

            me.ui.setTimeout(function () {
                if (!me.isTouch) {
                    cc.isNode(me.tableView.getAllChildren()[0]) && me.tableView.getAllChildren()[0].triggerTouch(ccui.Widget.TOUCH_NOMOVE);
                }else {
                    if(cc.isNode(me.tableView.getAllChildren()[me.isTouch])) {
                        me.tableView.getAllChildren()[me.isTouch].triggerTouch(ccui.Widget.TOUCH_NOMOVE);
                    }else {
                        me.tableView.getAllChildren()[0].triggerTouch(ccui.Widget.TOUCH_NOMOVE);
                    }
                }
            }, 200);
        },
        getNum: function(wid) {
            var equip = G.frame.beibao.DATA.zhuangbei.list;

            for (var i in equip) {
                if(equip[i].eid == wid.data.id && equip[i].num > 0) {
                    return equip[i].num - equip[i].usenum;
                }
            }

            return 0;
        },
        setItem: function (ui, data, pos) {
            var me = this;
            if (!data) {
                ui.hide();
                return;
            }
            ui.setName(pos);


            var widget = G.class.szhuangbei(data);
            widget.setAnchorPoint(0.5,0.5);
            widget.setPosition(ui.width / 2, ui.height / 2);
            widget.setScale(.9);
            var num = me.getNum(widget);
            widget.num.setString(num > 0 ? num : "");
            widget.num.x -= 9;
            widget.num.y += 15;
            ui.idx = pos;
            ui.data = data;
            ui.removeAllChildren();
            ui.addChild(widget);
            ui.show();
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_NOMOVE){
                    me.isTouch = sender.idx;
                    me.selected = sender.children[0].data.id;
                    me.eid = sender.children[0].data.id;
                    me.btn = sender;
                    me.setXuanZhong(sender.getName());
                    G.frame.tiejiangpu.bViewDown && G.frame.tiejiangpu.bViewDown.getIdxData(sender.data);
                }
            });
            ui.show();
            ui.setTimeout(function () {
                if(me.selected && me.selected == ui.children[0].data.id) {
                    me.setXuanZhong(ui.getName())
                }
            }, 200)
        },
        setXuanZhong: function (name) {
            var me = this;

            if (me.tableView._table.getItemByName(name)) {
                if(me._lastXz){
                    cc.sys.isObjectValid(me._lastXz) && me._lastXz.setGou(false);
                }
                me._lastXz = me.tableView._table.getItemByName(name)[0].getChildren()[0];
                me._lastXz.setGou(true);
            }
        },
        onOpen: function () {
            var me = this;

            me.bindBtn();
            cc.enableScrollBar(me.nodes.scrollview_1);
        },
        onShow : function(){
            var me = this;

            me.nodes.panel_tb1.hide();
            me.scrollview = me.nodes.scrollview_1;
        },
        getData: function(type) {
            var arr = [];
            var data = G.class.equip.get();

            for (var i in data) {
                if(data[i].type == type && data[i].changeprize.length > 0) {
                    arr.push(data[i]);
                }
            }

            arr.sort(function (a, b) {
                if(a.color != b.color) {
                    return a.color < b.color ? -1 : 1;
                }else {
                    return a.star < b.star ? -1 : 1;
                }
            });

            return arr;
        },
    });

})();
;;/**
 * Created by LYF on 2018/11/15.
 */
(function () {
    //tiejiangpu_top
    G.class.tiejiangpu_zhuanhuan_top = X.bView.extend({
        ctor: function (conf) {
            var me = this;
            me.conf = conf;
            me._super('zhuangbei_zhuanhuan.json');
        },
        getMaxNum: function(data) {
            var equip = G.frame.beibao.DATA.zhuangbei.list;

            for (var i in equip) {
                if(equip[i].eid == data.id && equip[i].num > 0) {
                    return equip[i].num - equip[i].usenum;
                }
            }
            return 0;
        },
        getIdxData:function (data) {
            var me = this;
            me._curData = data;
            me.maxNum = me.getMaxNum(data);
            me.canMaxBuyNum = 0;
            me.curNum = 0;
            me.isShow && me.setContents();
        },
        getCanArr: function(data) {
            var arr = [];
            var conf = G.class.equip.get();

            for (var i in conf) {
                if(conf[i].star == data.star && conf[i].color == data.color && conf[i].id != data.id) {
                    arr.push(conf[i]);
                }
            }

            return arr;
        },
        setContents: function () {
            var me = this;

            var widget = G.class.szhuangbei(me._curData);
            widget.data.a = 'equip';
            widget.setAnchorPoint(0.5,0.5);
            widget.setPosition(me.nodes.panel_tb2.width / 2, me.nodes.panel_tb2.height / 2 - 4);
            me.nodes.panel_tb2.removeAllChildren();
            me.nodes.panel_tb2.addChild(widget);
            G.frame.iteminfo.showItemInfo(widget);

            var canArr = me.getCanArr(me._curData);

            for (var i = 0; i < canArr.length; i ++) {
                var lay = me.nodes["panel_tb" + (i + 3)];
                var equip = G.class.szhuangbei(canArr[i]);
                equip.data.a = "equip";
                equip.setAnchorPoint(0.5, 0.5);
                equip.setPosition(lay.width / 2, lay.height / 2 - 4);
                lay.removeAllChildren();
                lay.addChild(equip);
            }
            if(!me.eid || G.frame.tiejiangpu.bViewUp.eid != me.eid) {
                me.nodes.panel_tb3.triggerTouch(ccui.Widget.TOUCH_ENDED);
            }else {
                me.curTouch.triggerTouch(ccui.Widget.TOUCH_ENDED);
            }
            me.eid = G.frame.tiejiangpu.bViewUp.eid;
        },
        bindBtn:function () {
            var me = this;

            var btn_jia = me.nodes.btn_jia;
            btn_jia.click(function () {
                me.setBuyNum("+");
            });

            var btn_jian = me.nodes.btn_jian;
            btn_jian.click(function () {
                me.setBuyNum("-");
            });

            X.radio([me.nodes.panel_tb3, me.nodes.panel_tb4, me.nodes.panel_tb5], function (sender) {
                if(!sender.children[0]) return;
            }, {
                callback1: function (sender) {
                    sender.children[0].setGou(true);
                    me.setNum(sender.children[0]);
                    me.curTouch = sender;
                },
                callback2: function (sender) {
                    sender.children[0].setGou(false);
                }
            });

            if(!me.nodes.btn_hc.data) me.nodes.btn_hc.data = [];
            me.nodes.btn_hc.click(function () {
                if(me.maxNum == 0) {
                    G.tip_NB.show(L("ZBSLBZ"));
                    return;
                }
                if(me.canMaxBuyNum == 0) {
                    G.tip_NB.show(L("jinbi") + L("BUZU"));
                    return;
                }
                me.ajax("equip_change", [me._curData.id, me.curTouch.children[0].data.id, me.curNum], function (str, data) {
                    if(data.s == 1) {
                        X.audio.playEffect("sound/hechengzhuangbei.mp3");
                        me.action.playWithCallback("ronghe", false, function () {
                            G.frame.jiangli.data({
                                prize: data.d.prize,
                            }).show();
                            var btn = G.frame.tiejiangpu.bViewUp.btn;
                            btn.triggerTouch(ccui.Widget.TOUCH_NOMOVE);
                            G.frame.tiejiangpu.bViewUp.setItem(btn, btn.data, btn.idx);
                            me.action.play("ronghe", false);
                        });
                    }else {
                        X.audio.playEffect("sound/dianji.mp3", false);
                    }
                })
            }, 2000);
        },
        onOpen: function () {
            var me = this;
        },
        onShow : function(){
            var me = this;
            
            me.isShow = this;
            me.bindBtn();
            X.setInput(me.nodes.textfield_sl, function () {
                var num = parseInt(me.nodes.textfield_sl.getString());
                if(num < 1) {
                    me.curNum = 1;
                }else if(num > me.canMaxBuyNum) {
                    me.curNum = me.canMaxBuyNum;
                } else {
                    me.curNum = num;
                }
                me.setBtns();
                me.setBuyNum();
            });
            me.nodes.textfield_sl.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
            G.class.ani.show({
                json: "ani_tiejiangpu_ronglian",
                addTo: me.nodes.panel_dh,
                x: me.nodes.panel_dh.width / 2,
                y: me.nodes.panel_dh.height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    node.setTag(998877);
                    node.zIndex = -100;
                    me.action = action;
                    action.play("dengdai", true);
                }
            });
        },
        setNum: function(node) {
            var me = this;
            var need = me.need = node.conf.changeprize[0];

            for (var i = 1; i <= me.maxNum; i ++) {
                if(P.gud[need.t] >= i * need.n) {
                    me.curNum = me.canMaxBuyNum = i;
                }
            }
            me.setBtns();
            me.setBuyNum();
        },
        setBuyNum: function(str) {
            var me = this;

            if(!str) {
                me.nodes.textfield_sl.setString(me.curNum || 1);
            }else {
                if(str == "+") {
                    me.nodes.textfield_sl.setString(me.curNum += 1);
                }else {
                    me.nodes.textfield_sl.setString(me.curNum -= 1);
                }
                me.setBtns();
            }
            me.setMoney();
        },
        setMoney: function() {
            var me = this;

            me.nodes.text_jb.setString(X.fmtValue(me.curNum == 0 ? me.need.n : me.curNum * me.need.n));
        },
        setBtns: function () {
            var me = this;

            var btnAdd = me.nodes.btn_jia;
            var btnPlus = me.nodes.btn_jian;

            btnAdd.setTouchEnabled(false);
            btnAdd.setEnableState(false);
            btnPlus.setTouchEnabled(false);
            btnPlus.setEnableState(false);

            if (me.curNum > 1) {
                btnPlus.setTouchEnabled(true);
                btnPlus.setEnableState(true);
            }
            if (me.curNum < me.canMaxBuyNum) {
                btnAdd.setTouchEnabled(true);
                btnAdd.setEnableState(true);
            }
        },
        removePanel: function () {
            var me = this;

            me.nodes.panel_tb2.removeAllChildren();
            me.nodes.panel_tb3.removeAllChildren();
            me.nodes.panel_tb4.removeAllChildren();
            me.nodes.panel_tb5.removeAllChildren();
        }
    });

})();
;;/**
 * Created by wfq on 2018/7/10.
 */
(function () {
    //tiejiangu_table
    G.class.tiejiangu_table = X.bView.extend({
        ctor: function (conf) {
            var me = this;
            me.conf = conf;
            me._super('zhuangbei_zbxz2.json');
        },
        refreshData :function (data,type) {
            var me = this;


            me.DATA = data;
            me._type=type;
            me.isTouch = false;
            me.isShow && me.setContents();
        },
        bindBtn: function(){
            var me = this;
            me.ui.finds('$btn_fanhui').click(function(sender,type){
                G.frame.tiejiangpu.remove();
            });
        },
        setContents: function () {
            var me = this;
            var data = me.DATA;
            me.nodes.panel_tb1.hide();
            me.scrollview = me.nodes.scrollview_1;
            me.itemArr = [];
            if (!me.tableView) {
                me.tableView = new X.TableView(me.scrollview, me.nodes.panel_tb1, 5, function (ui, data, pos) {
                    me.setItem(ui, data, pos[0] * 5 + pos[1]);
                }, null, null, 1, 5);
            }
            me.tableView.setData(data);
            me.tableView.reloadDataWithScroll(true);

            if (!me.isTouch) {
                me.ui.setTimeout(function () {
                    me.tableView.cellByName(0)[0].triggerTouch(ccui.Widget.TOUCH_NOMOVE);
                },100);
            }
        },
        setItem: function (ui, data, pos) {
            var me = this;
            if (!data) {
                ui.hide();
                return;
            }
            ui.setName(pos);


            var widget = G.class.szhuangbei(data);
            widget.setAnchorPoint(0.5,0.5);
            widget.setPosition(ui.width / 2, ui.height / 2);
            me.checkRedPoint(widget);
            //暂时屏蔽图标
            widget.setScale(.9);
            ui.removeAllChildren();
            ui.data = data;
            ui.addChild(widget);
            ui.show();
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_NOMOVE){
                    me.setXuanZhong(sender.getName());
                    // me.setXuanZhong(sender.idx);
                    G.frame.tiejiangpu.bViewDown && G.frame.tiejiangpu.bViewDown.getIdxData(sender.data,me._type);
                    me.isTouch = true;
                }
            });
            // me.itemArr.push(widget);
            // if(pos == 0 && !me.isTouch){
            //      me.ui.setTimeout(function () {
            //          me.tableView.cellByName(0)[0].triggerTouch(ccui.Widget.TOUCH_NOMOVE);
            //      },200);
            // }
            ui.show();
        },
        checkRedPoint: function(target){
            if(X.checkHeCheng(target.data.need)) {
                G.setNewIcoImg(target, .9);
            }else{
                G.removeNewIco(target);
            }

        },
        setXuanZhong: function (name) {
            var me = this;

            if (me.tableView._table.getItemByName(name)) {
                if(me._lastXz){
                    cc.sys.isObjectValid(me._lastXz) && me._lastXz.setGou(false);
                }
                me._lastXz = me.tableView._table.getItemByName(name)[0].getChildren()[0];
                me._lastXz.setGou(true);
            }
        },
        // setXuanZhong:function(d) {
        //     var me = this;
        //     for(var j in me.itemArr) {
        //         if(d == me.itemArr[j].idx)
        //             me.itemArr[j].setHighlight(true);
        //         else
        //             me.itemArr[j].setHighlight(false);
        //     }
        // },
        onOpen: function () {
            var me = this;
            cc.enableScrollBar(me.nodes.scrollview_1);
        },
        onShow : function(){
            var me = this;
            me.setContents();
            me.isShow = true;
            me.bindBtn();

            //设置上方位置
            var txt_1 = me.finds('text_1');
            // me.setPosition(0,me.height - txt_1.y - txt_1.height);
        },
        onNodeShow : function(){
            var me = this;
        }
    });

})();
;;/**
 * Created by yaosong on 2018/12/28.
 */
(function () {
    //王者荣耀
    var ID = 'wangzherongyao';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action:true});
        },
        getData: function (callback) {
            var me = this;
             G.ajax.send('crosswz_main', [], function (data) {
                 if (!data) return;
                 var data = JSON.parse(data);
                 if (data.s == 1) {
                     me.DATA = data.d;
                     callback && callback();
                 }
             }, true);

        },
        setContents: function () {
            var me = this;

            var data = me.DATA;
            me.openNum = G.class.wangzherongyao.getOpenNum();
            var btnDLD = me.ui.nodes.dld;
            var btnZSS = me.ui.nodes.zss;
            var btnWZS = me.ui.nodes.wzs;

            btnDLD.setBright(false);
            btnZSS.setBright(false);
            btnWZS.setBright(false);
            X.enableOutline(me.nodes.txt_bm, "#4b4747", 2);
            me.btnGHZX.hide();
            me.btnJCWZ.hide();

            if (data.num >= me.openNum) {
                if (data.status == 3 || data.status == 4) {
                    btnDLD.setBright(true);
                    me.isDLDtime = true;
                    X.enableOutline(me.nodes.txt_bm, "#2C59A5", 2);
                    if (data.isbm && data.status == 3 && data.ldpknum && data.ldpknum > 0) {
                        G.setNewIcoImg(btnDLD, .7);
                        btnDLD.getChildByName("redPoint").setPosition(590, 170);
                    } else {
                        G.removeNewIco(btnDLD);
                    }
                }
                if (data.status == 5 || data.status == 6) {
                    btnZSS.setBright(true);
                }
                if (data.status == 7 || data.status == 8) {
                    btnWZS.setBright(true);
                }

                if (data.status == 6 || data.status == 7 || data.status == 8) {
                    me.btnJCWZ.show();
                    me.btnJCWZ.removeAllChildren();

                    if (data.status == 6 && P.gud.vip >= 1 && (!data.isyz || data.isyz == 0)) {
                        G.setNewIcoImg(me.btnJCWZ, .7);
                    } else {
                        G.removeNewIco(me.btnJCWZ);
                    }
                }
            }

            //是否可以晋级钻石赛
            if (data.num >= me.openNum && data.isbm && data.status >= 5 &&  data.isjjzs) {
                me.btnGHZX.show();
            }

            me.setBaseInfo();
            me.showBaoMing();
            me.setZDBM();

            btnDLD.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    if (data.num < me.openNum) {
                        var ssstr = L('WZRY_HUODONG_NOOPEN');
                        if (data.status == 1) {
                            ssstr = L('WZRY_HUODONG_BAOMING');
                        }
                        G.tip_NB.show(ssstr);
                        return;
                    }
                    if (data.status == 1 || data.status == 2) {
                        G.tip_NB.show(L('WZRY_MAIN_HD_NOOPEN'));
                    } else {
                        if (data.isbm == 0) {
                            G.tip_NB.show(L('WZRY_MAIN_DLD_NOBM'));
                            return;
                        }
                        G.frame.wangzherongyao_dld.data({status:me.DATA.status}).show();
                    }
                    // G.frame.wangzherongyao_dld.data({status:me.DATA.status}).show();
                }
            });

            btnZSS.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    if (data.num < me.openNum) {
                        var ssstr = L('WZRY_HUODONG_NOOPEN');
                        if (data.status == 1) {
                            ssstr = L('WZRY_HUODONG_BAOMING');
                        }
                        G.tip_NB.show(ssstr);
                        return;
                    }
                    if (data.status == 1 || data.status == 2 || data.status == 3 || data.status == 4) {
                        G.tip_NB.show(L('WZRY_MAIN_HD_NOOPEN'));
                    } else {
                        // if (data.isbm == 0) {
                        //     G.tip_NB.show(L('WZRY_MAIN_DLD_NOBM'));
                        //     return;
                        // }
                        G.frame.wangzherongyao_zuanshisai_fenzhu.show();
                    }
                    // G.frame.wangzherongyao_zuanshisai_fenzhu.checkShow();
                }
            });

            btnWZS.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    if (data.num < me.openNum) {
                        var ssstr = L('WZRY_HUODONG_NOOPEN');
                        if (data.status == 1) {
                            ssstr = L('WZRY_HUODONG_BAOMING');
                        }
                        G.tip_NB.show(ssstr);
                        return;
                    }
                    if (data.status != 7 && data.status != 8) {
                        G.tip_NB.show(L('WZRY_MAIN_HD_NOOPEN'));
                    } else {
                        // if (data.isbm == 0) {
                        //     G.tip_NB.show(L('WZRY_MAIN_DLD_NOBM'));
                        //     return;
                        // }
                        G.frame.wangzherongyao_wangzhesai.show();
                    }
                    // G.frame.wangzherongyao_wangzhesai.checkShow();
                }
            });
        },

        initUi: function () {
            var me = this;

            cc.enableScrollBar(me.ui.nodes.listview);
        },
        bindBtn: function () {
            var me = this;

            //更换阵型
            me.btnGHZX = me.ui.nodes.but_ghzx;
            me.btnGHZX.touch(function(sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    if (!me.getZXState()) {
                        G.tip_NB.show(L('WZRY_MAIN_ZX'));
                        return;
                    }

                    var str = L('WZRY_GHZX');
                    G.frame.alert.data({
                        close:true,
                        sizeType:3,
                        ok:{wz:L('GENGHUAN')},
                        okCall: function () {
                            G.frame.jingjichang_gjfight.data({
                                type: 'pvwz',
                                def: true,
                                callback: function(node) {
                                    var sdata = node.getDefendData();
                                    G.ajax.send('crosswz_upload', [sdata], function (data) {
                                        if (!data) return;
                                        var data = X.toJSON(data);
                                        if (data.s == 1) {
                                            X.cacheByUid("pvwz", sdata);
                                            G.tip_NB.show(L('BAOCUN') + L('SUCCESS'));
                                            G.frame.jingjichang_gjfight.remove();
                                        }
                                    },true);
                                }
                            }).show();
                        },
                        autoClose:true,
                        richText:str
                    }).show();

                }
            });

            //王者之巅
            me.btnWZZD = me.ui.nodes.but_wzry;
            me.btnWZZD.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    G.frame.wangzherongyao_ryzd.checkShow();
                }
            });

            //荣耀奖励
            me.btnRYJL = me.ui.nodes.but_pmjl;
            me.btnRYJL.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    G.frame.wangzherongyao_ryjl.show();
                }
            });
            //帮助
            me.btn_bz = me.ui.nodes.but_bz;
            me.btn_bz.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    G.frame.help.data({
                        intr: L('TS26')
                    }).show();
                }
            });
            me.btn_fanhui = me.ui.nodes.btn_fanhui;
            me.btn_fanhui.click(function(){
                me.remove();
            });

            //竞猜王者
            me.btnJCWZ = me.ui.nodes.but_jcwz;
            me.btnJCWZ.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    G.frame.wangzherongyao_jcwz.show();
                }
            });

        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        show: function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me, arguments);
            })
        },
        onShow: function () {
            var me = this;
            me.showToper();
            me.setContents();
        },
        onHide: function () {
            var me = this;
            G.hongdian.getData("crosswz", 1, function () {
                G.frame.jingjichang.isShow && G.frame.jingjichang.checkRedPoint();
            });
        },
        freshData: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        setBaseInfo: function () {
            var me = this;

            var data = me.DATA;
            var txtState = me.ui.nodes.jssj;
            var txtIntr = me.ui.nodes.sj;

            var stateConf = G.class.wangzherongyao.getStateById(data.status);
            if (me.timerHd) {
                me.ui.clearTimeout(me.timerHd);
                delete me.timerHd;
            }

            //活动未开启时显示
            if (data.status != 1 && data.num < me.openNum) {
                txtState.setString(G.class.wangzherongyao.getStateById(2).intr1);
                txtIntr.setString('');
                return;
            }

            if (data.status == 1 || data.status == 2) {
                var openNum = me.openNum;
                if (data.num >= openNum) {
                    txtState.setString(stateConf.intr);
                    me.timerHd = X.timeout(txtIntr,data.cd, function () {
                        me.freshData();
                    });
                } else {
                    txtState.setString(stateConf.intr1);
                    if (data.status == 1) {
                        txtIntr.setString(data.num);
                    } else{
                        txtIntr.setString('');
                    }
                }
            } else{
                txtState.setString(stateConf.intr);
                me.timerHd = X.timeout(txtIntr,data.cd, function () {
                    me.freshData();
                });
            }

        },
        showBaoMing: function () {
            var me = this;

            var d = me.DATA;
            var txtBm = me.txtBm = me.ui.nodes.bm;

            if (d.status != 1 && d.status != 2) {
                txtBm.hide();
                return;
            }

            if (d.isbm) {
                txtBm.show();
            } else {
                if (d.status == 1) {
                    var needLv = G.class.wangzherongyao.getOpen().lv;
                    var str = X.STR(L('WZRY_MAIN_tip_1'),needLv);
                    G.frame.alert.data({
                        sizeType:3,
                        ok: {wz: L("BAOMING")},
                        okCall: function () {
                            if(P.gud.lv < needLv){
                                G.tip_NB.show(L("DJBZ"));
                                return;
                            }
                            if(!me.DATA.ifformat){
                                G.frame.jingjichang_gjfight.data({
                                    type: 'pvwz',
                                    txt: L("BAOMING"),
                                    def: true,
                                    callback: function(node) {
                                        var data = node.getDefendData();
                                        G.ajax.send('wangzhe_baoming',[data], function (d) {
                                            if (!d) return;
                                            var d = X.toJSON(d);
                                            if (d.s == 1) {
                                                me.freshData();
                                                G.tip_NB.show(L('BAOMING') + L('SUCCESS'));
                                                d.d.prize && G.frame.jiangli.data({
                                                    prize: d.d.prize
                                                }).show();
                                                G.frame.jingjichang_gjfight.remove();
                                            }
                                        },true);
                                    }
                                }).show();
                            }else{
                                G.ajax.send('wangzhe_baoming',[], function (d) {
                                    if (!d) return;
                                    var d = X.toJSON(d);
                                    if (d.s == 1) {
                                        me.freshData();
                                        G.tip_NB.show(L('BAOMING') + L('SUCCESS'));
                                        d.d.prize && G.frame.jiangli.data({
                                            prize: d.d.prize
                                        }).show();
                                        G.frame.jingjichang_gjfight.remove();
                                    }
                                },true);
                            }
                            // me.DATA.isbm = 1;
                            // me.showBaoMing();
                        },
                        autoClose:true,
                        richText:str
                    }).show();
                }
            }
        },
        //获得阵型可点击状态
        getZXState: function () {
            var me = this;

            var data = me.DATA;
            var timeInterval = 30 * 60;
            var status = true;
            if (data.status == 5 || data.status == 6 || data.status == 7) {
                var arr = data.matchtime;
                for (var i = 0; i < arr.length; i++) {
                    var time = arr[i];
                    if (Math.abs(G.time - time) < timeInterval) {
                        status = false;
                        break;
                    }
                }
            }


            return status;
        },
        //自动报名
        setZDBM: function () {
            var me = this;

            var data = me.DATA;
            var checkbox = me.ui.nodes.fxk;
            var imgWz = me.ui.nodes.zdbm;
            imgWz.setTouchEnabled(true);
            imgWz.setSwallowTouches(true);
            if (data.iszdbm) {
                checkbox.show();
            } else {
                checkbox.hide();
            }

            var status = checkbox.isVisible();
            imgWz.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    set(checkbox);
                } else if (type == ccui.Widget.TOUCH_CANCELED) {
                    checkbox.setVisible(!status);
                }
            });


            function set(sender) {
                var needLv = G.class.wangzherongyao.getOpen().lv;
                if (P.gud.lv < needLv) {
                    G.tip_NB.show(X.STR(L('WZRY_BM_TIP_1'), needLv));
                    sender.hide();
                    return;
                }
                var bmCond = G.class.wangzherongyao.getZDBMCond();
                if (P.gud.vip < bmCond) {
                    G.tip_NB.show(L('WZRY_BM_TIP_2'));
                    sender.hide();
                    return;
                }
                G.ajax.send('wangzhe_autobm',[],function(d) {
                    if(!d) return;
                    var d = JSON.parse(d);
                    if(d.s == 1) {
                        for(var k in d.d) {
                            me.DATA[k] = d.d[k];
                        }
                        G.tip_NB.show(L('SHEZHI') + L('SUCCESS'));
                        me.setZDBM();
                    }
                },true);
            }
        }
    });

    G.frame[ID] = new fun('wangzherongyao_wzry.json', ID);
})();

;;/**
 * Created by yaosong on 2018/12/28.
 */
 (function () {
    //王者荣耀-大乱斗
    var ID = 'wangzherongyao_dld';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.preLoadRes = ['wangzherongyao3.plist','wangzherongyao3.png'];
            me.fullScreen = true;
            me._super(json, id);
        },
        getData: function (callback) {
            var me = this;

            G.ajax.send('wangzhe_dldopen',[], function (data) {
                if (!data) return;
                var data = X.toJSON(data);
                if (data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            },true);

        },
        initUI: function () {
            var me = this;
        },
        bindUI: function () {
            var me = this;

            me.ui.nodes.btn_fanhui.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            me.btnTz = me.ui.nodes.panel_rw;
            me.btnTz.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    G.ajax.send('crosswz_userdetails',[me.enemy.uid],function(rd) {
                        rd = X.toJSON(rd);

                        if (rd.s === 1) {
                            G.frame.wangzherongyao_wjxx.data({
                                frame:me.ID(), 
                                data: rd.d,
                                callback:function(){
                                    G.frame.wangzherongyao_wjxx.remove();
                                    G.frame.jingjichang_gjfight.data({
                                        type: 'pvwz',
                                        data: me.enemy.uid,
                                        callback: function(node) {
                                            var data = node.getDefendData();

                                            G.ajax.send("wangzhe_daluandou", [me.enemy.uid, data], function(d) {
                                                if (!d) return;
                                                var d = JSON.parse(d);
                                                if (d.s == 1) {

                                                    G.frame.fight.data({
                                                        pvType: 'pvwzdld',
                                                        prize: d.d.prize,
                                                        session: 0,
                                                        fightlength: d.d.fightres.length,
                                                        fightData:d.d,
                                                        callback: function(session) {
                                                            G.frame.fight.demo(d.d.fightres[session]);
                                                        }
                                                    }).once('hide', function() {
                                                        G.frame.jingjichang_gjfight.remove();
                                                        me.freshData();
                                                    }).demo(d.d.fightres[0]);
                                                }
                                            }, true);
                                        }
                                    }).show();
                                }
                            }).show();
                        }
                    },true);

                }
            });

            me.btnRank = me.ui.nodes.button_lqjl;
            me.btnRank.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    G.frame.wangzherongyao_dld_ph.show();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.showToper();
            me.initUI();
            me.bindUI();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            G.class.ani.show({
                json: "ani_gonghuiboss",
                addTo: me.nodes.dh_jian,
                x: me.nodes.dh_jian.width / 2,
                y: me.nodes.dh_jian.height / 2,
                repeat: true,
                autoRemove: false
            });
            me.nodes.dh_jian.setTouchEnabled(false);
            me.nodes.dh_jian.hide();

            me.status = me.data().status;
            me.getData(function () {
                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
            G.frame.wangzherongyao.freshData();
        },
        setContents: function () {
            var me = this;

            me.setTop();
            me.setCenter();
            me.setBottom();
        },
        freshData: function () {
            var me = this;

            me.getData(function () {
                me.setTop(true);
                me.setCenter();
                me.showFind();
                me.setBottom();
            });
        },
        setTop: function (isAni) {
            var me = this;

            var panel = me.ui.finds('panel_wz');
            var txtScore = me.ui.nodes.wz_fs1;
            var txtRank = me.ui.nodes.wz_pm1;
            var txtNum = me.ui.nodes.wz_tz1;

            var data = me.DATA;

            txtScore.setString(data.myinfo.jifen);
            var maxNum = G.class.wangzherongyao.getOpenNum();
            txtRank.setString(data.myinfo.rank > maxNum ? X.STR(L('X_rank'),maxNum) : data.myinfo.rank);
            txtNum.setString(data.myinfo.remainnum);

            for(var i=0;i<15;i++) {
                var img = me.ui.nodes["img_" + (i+1)];
                if (!img) continue;
                if (data.myinfo.fightdata[i] != undefined) {
                    img.show();
                    img.removeAllChildren();
                    img.setBackGroundImage("img/wangzherongyao/img_" + (data.myinfo.fightdata[i] == 0 ? "l" : "h") + "dian.png", 1);
                    (function (img,i) {
                        if(isAni && data.myinfo.fightdata[i + 1] == undefined) {
                            G.class.ani.show({
                                addTo:img,
                                json:"ani_wzry_shengfu",
                                x:img.width / 2,
                                y:img.height / 2,
                                cache: true,
                                repeat: false,
                                autoRemove: true,
                                onload: function (node,action) {
                                    action.play(data.myinfo.fightdata[i] == 0 ? "shengli" : "shibai", true);
                                }
                            });
                        }
                    })(img,i);
                } else {
                    img.hide();
                }
            }

        },
        setCenter: function () {
            var me = this;
            var layYx = me.ui.nodes.panel_rw;
            var layName = me.ui.nodes.name1;

            var data = me.DATA;

            // var myData = data.myinfo;
            var enemyData = me.enemy = data.toinfo;

            G.class.ani.show({
                json: "ani_wzry_shuaxin",
                addTo: me.nodes.panel_dh,
                x: me.nodes.panel_dh.width / 2,
                y: 0,
                repeat: false,
                autoRemove: true,
                onload: function (node, action) {
                    me.nodes.dh_jian.hide();
                    X.setHeroModel({
                        parent: layYx,
                        data: enemyData,
                    });
                    layYx.opacity = 100;
                    layYx.runActions([
                        cc.fadeIn(0.3),
                        cc.callFunc(function () {
                            me.nodes.dh_jian.show();
                        })
                    ])
                }
            });

            me.ui.nodes.qu1.setString(enemyData.ext_servername || '');
            me.ui.nodes.txt_name.setString(enemyData.name);
            me.ui.nodes.sz.setString(enemyData.zhanli || '');
            layName.show();
        },
        setBottom: function () {
            var me = this;

            var btnSx = me.ui.nodes.btn_tzds;
            var txtSyNum = me.ui.nodes.txt_cs;

            var data = me.DATA;

            txtSyNum.setString((data.myinfo.refrash || 0) + L("Ci"));

            if(!data.myinfo.refrash) {
                btnSx.setBright(false);
                txtSyNum.setTextColor(cc.color("#6c6c6c"));
            }

            btnSx.setTouchEnabled(true);
            btnSx.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    //me.showFind();
                    G.ajax.send('wangzhe_refighter',[], function (d) {
                        if (!d) return;
                        var d = X.toJSON(d);
                        if (d.s == 1) {
                            for(var k in d.d) {
                                for(var item in d.d[k]) {
                                    me.DATA[k][item] = d.d[k][item];
                                }
                            }
                            G.tip_NB.show(L('SX') + L('SUCCESS'));
                            me.setCenter();
                            me.showFind();
                            me.setBottom();
                        }
                    },true);
                }
            });
        },
        showFind: function () {
            var me = this;

            me.setFindAni(function () {
            });
            if (me.timer_1) {
                me.ui.clearTimeout(me.timer_1);
                delete me.timer_1;
            }
            me.timer_1 = me.ui.setTimeout(function () {
                me.refreshing = false;
                me.playAni();
                //me.setCenter();
                // me.ui.finds('czds').hide();
                // me.ui.finds('panel_rw3').show();
                // me.ui.finds('name2').show();
            },500);
        },
        setFindAni: function (callback) {
            var me = this;
            callback && callback();
            return;

            me.refreshing = true;
            var layYx = me.ui.nodes.panel_rw;

            var layName = me.ui.nodes.name1;

            layYx.hide();
            layName.hide();

            var txConf = G.class.zaoxing.getByType('head');
            var keys = X.keysOfObject(txConf);
            keys = X.arrayShuffle(keys);

            function play() {
                if (keys.length < 1) {
                    callback && callback();
                    return;
                }
                var key = keys.shift();
                var p = G.class.szaoxing({type:'head',id:key},false);
                p.setAnchorPoint(0,0);
                layIco.removeAllChildren();
                layIco.addChild(p);
                layIco.setTimeout(function () {
                    play();
                },10);
            }

            play();
        },
        playAni: function (callback) {
            var me = this;

            var layDh = me.ui.nodes.panel_dh;

            if (layDh.getChildByTag(11111)) {
                layDh.getChildByTag(11111).remove();
            }
            // G.class.ani.show({
            //     addTo:layDh,
            //     json:'ani_shuaxingds',
            //     x:layDh.width / 2,
            //     y:layDh.height / 2,
            //     repeat:false,
            //     autoRemove:true,
            //     onload: function (node, action) {
            //         node.setTag(11111);
            //     },
            //     onend: function (node, action) {
            //         callback && callback();
            //     }
            // });
            callback && callback();
            layDh.show();
        }
    });

G.frame[ID] = new fun('wangzherongyao_dld.json', ID);
})();

;;/**
 * Created by yaosong on 2018/12/28.
 */
(function() {
    //王者荣耀-乱斗排行
    var ID = 'wangzherongyao_dld_ph';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        getData: function(callback) {
            var me = this;

            G.ajax.send('wangzhe_getdldrank', [], function(data) {
                if (!data) return;
                var data = X.toJSON(data);
                if (data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            }, true);


        },
        initUI: function() {
            var me = this;

            me.nodes.tip_title.setString(L(ID));
        },
        bindUI: function() {
            var me = this;

            me.ui.nodes.mask.touch(function(sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function() {
            var me = this;
            me.fillSize();

            me.initUI();
            me.bindUI();
        },
        onAniShow: function() {
            var me = this;
        },
        onShow: function() {
            var me = this;
            new X.bView('wangzherongyao_ldph.json', function(view) {
                me._view = view;

                me.defHeight = me._view.height;
                me.ui.nodes.panel_nr.addChild(view);
                view.setTouchEnabled(true);

                me.scrollview = view.nodes.scrollview;
                cc.enableScrollBar(me.scrollview);
                me.list = view.nodes.list_sjjl;
                me.list.hide();

                me.getData(function() {
                    me.setContents();
                });
            });

        },
        onHide: function() {
            var me = this;
        },
        setContents: function() {
            var me = this;

            me.setBaseInfo();
            me.setTable();
        },
        setBaseInfo: function() {
            var me = this;
            var view = me._view;

            var txtScore = view.nodes.txt_dw;
            var txtRank = view.finds("txt_level_0");
            var data = me.DATA;

            txtScore.setString(data.jifen || 0);
            var str = '';
            if (!data.rank || (data.rank && data.rank > G.class.wangzherongyao.getOpenNum())) {
                str = X.STR(L('X_rank'), G.class.wangzherongyao.getOpenNum())
            } else {
                str = data.rank;
            }
            txtRank.setString(str);
        },
        setTable: function() {
            var me = this;
            var view = me._view;

            var data = me.DATA;

            me.scrollview.removeAllChildren();
            if (data.ranklist.length < 1) {
                view.nodes.img_zwnr.show();
                return
            } else {
                view.nodes.img_zwnr.hide();
            }

            var table = me.table = new cc.myTableView({
                rownum: 1,
                type: 'fill',
                lineheight: me.list.height + 1
            });
            me.setTableViewData(data.ranklist);
            table.setDelegate(me);
            table.bindScrollView(me.scrollview);
            table.tableView.reloadData();

            if (me._scrollviewup) {
                me._scrollviewup = false;
                if (!me.action.isPlaying()) {
                    me.action.play('scrollviewup', false);
                }
                me.scrollview.show();
            }
        },
        setTableViewData: function(data) {
            var me = this;

            var table = me.table;

            for (var j = 0; j < data.length; j++) {
                var d = data[j];
                d['idx'] = j + 1;
            }
            table.data(data);
        },
        /**
         * 数据模板
         * @returns {*}
         */
        cellDataTemplate: function() {
            var me = this;

            return me.list.clone();
        },
        /**
         * 数据初始化
         * @param ui
         * @param data
         * @param pos [row,col]
         */
        cellDataInit: function(ui, data, pos) {
            var me = this;

            if (!data) {
                ui.hide();
                return;
            }
            X.autoInitUI(ui);

            var layIco = ui.nodes.panel_tx;
            var txtName = ui.nodes.txt_name;
            var txtScore = ui.nodes.txt_jf;
            var txtZl = ui.nodes.text_zdl2;
            var txtLv = ui.nodes.txt_title;
            var txtVip = ui.nodes.txt_number;
            var layPm = ui.nodes.img_rank;
            var txtPm = ui.nodes.sz_phb;

            layPm.hide();
            txtPm.hide();
            txtPm.setString('');
            if (data.idx < 4) {
                layPm.show();
                layPm.setBackGroundImage('img/public/img_paihangbang_' + data.idx + '.png', 1);
            } else {
                txtPm.setString(data.idx);
                txtPm.show();
            }

            var p = G.class.shead(data);
            p.setPosition(cc.p(layIco.width / 2, layIco.height / 2));
            layIco.removeAllChildren();
            layIco.addChild(p);
            txtName.setString(data.name || L('NO_NAME'));
            txtLv.setString(X.STR(L("DW_DJ"),data.lv));
            txtScore.setString((data.jifen || 0));
            txtVip.setString(X.STR(L('GUIZU'),data.vip));
            txtZl.setString(data.zhanli || 0);

            layIco.data = data;
            layIco.setTouchEnabled(true);
            layIco.setSwallowTouches(false);
            layIco.touch(function(sender, type) {
                if (type === ccui.Widget.TOUCH_NOMOVE) {
                    if(sender.data.sid && sender.data.sid != P.gud.sid) {
                        G.tip_NB.show(L("LZWY"));
                        return;
                    }
                    var uid = sender.data.uid;
                    G.ajax.send('crosswz_userdetails', [uid, 1], function(data) {
                        var d = X.toJSON(data);
                        if (d.s == 1) {
                            G.frame.wangzherongyao_wjxx.data({frame:me.ID(), data: d.d}).show();
                        }
                    }, true);
                }
            });

            ui.show();
        },
    });
    G.frame[ID] = new fun('ui_tip4.json', ID);
})();

;;/**
 * Created by yaosong on 2018/12/28.
 */
(function () {
    //王者荣耀-王者竞猜
    var ID = 'wangzherongyao_jcwz';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id, {action:true});
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUI();
            me.bindUI();
        },
        onShow: function () {
            var me = this;

            new X.bView('wangzherongyao_jcwz.json', function(view) {
                me._view = view;

                me.defHeight = me._view.height;
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                view.setTouchEnabled(true);

                me.ui.nodes.tip_title.setString(L(ID));
                me.reloadData(function () {
                    me.action.play('scrollviewup',false);
                });
            });
        },
        onHide: function () {
            var me = this;

            G.frame.wangzherongyao.isShow && G.frame.wangzherongyao.freshData();

        },
        initUI: function () {
            var me = this;
        },
        bindUI: function () {
            var me = this;

            me.ui.nodes.mask.touch(function(sender,type){
                if(type==ccui.Widget.TOUCH_ENDED){
                    me.remove();
                }
            });
        },
        reloadData: function (callback) {
            var me = this;
            me.getData(function () {
                me.setData();
                callback && callback();
            },true);
        },
        getData: function (callback,forceLoad) {
            //forceLoad 是否强制读取
            var me = this;
            if(!forceLoad && me.DATA){
                callback && callback();
                return;
            }
            G.ajax.send('crosswz_guessopen',[],function(d){
                var data = JSON.parse(d);
                if (data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            });
        },
        setData: function () {
            var me = this;
            var view = me._view;
            var d = me.DATA;
            view.nodes.txt_je1.setString(d.totalmoney);
            view.nodes.txt_mc.setString(d.myguess != '' ? d.myguess : L('WU'));
            var scrollView = view.nodes.scrollview;
            scrollView.removeAllChildren();
            cc.enableScrollBar(scrollView,false);
            var listItem = view.nodes.list;
            var tableView = new X.TableView(scrollView,listItem,1,function (ui, data) {
                X.autoInitUI(ui);
                ui.nodes.ico.removeAllChildren();
                var ico = G.class.shead(data,false);
                ico.setAnchorPoint(0,0);
                ui.nodes.ico.addChild(ico);
                ui.nodes.name.setString(data.name);
                ui.nodes.wz_zgx.setString(data.ext_servername);
                ui.nodes.txt_zl.setString(data.zhanli || "");
                ui.nodes.sl2.setString(data.guessnum);
                ui.nodes.sl3.setString(data.guessmoney);

                ui.nodes.ico.setTouchEnabled(true);
                ui.nodes.ico.touch(function (sender, type) {
                    if (type == ccui.Widget.TOUCH_ENDED){
                        G.ajax.send('crosswz_userdetails',[data.uid],function(rd) {
                            rd = X.toJSON(rd);
                            if (rd.s === 1) {
                                G.frame.wangzherongyao_wjxx.data({frame:me.ID(), data: rd.d}).show();
                            }
                        },true);
                    }
                });

                if (d.canguess) {
                    ui.nodes.btn_gm.show();
                    ui.nodes.btn_gm.setEnableState(true);
                    ui.nodes.btn_gm.setSwallowTouches(false);
                    ui.nodes.btn_gm.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_NOMOVE) {
                            G.frame.wangzherongyao_wangzhejingcai_tankuang.data(data.uid).show();
                        }
                    });
                }else{
                    ui.nodes.btn_gm.setBright(false);
                    ui.nodes.btn_gm.setTitleColor(cc.color(G.gc.COLOR.n15));
                }
                if (d.guessuid == data.uid){
                    ui.finds('wz_yjc').show();
                }else{
                    ui.finds('wz_yjc').hide();
                }
                if (data.deep > 5){
                    ui.nodes.jb.loadTexture('img/wangzherongyao/jcwz_' + ['sq','yj','gj'][data.deep - 6] + '.png',ccui.Widget.PLIST_TEXTURE);
                    ui.nodes.jb.show();
                }else{
                    ui.nodes.jb.hide();
                }
            });
            tableView.setData(d.userlist);
            tableView.reloadDataWithScroll(true);
        }
    });

    G.frame[ID] = new fun('ui_tip4.json', ID);
})();

;;/**
 * Created by yaosong on 2018/12/28.
 */
(function () {
    //王者荣耀-战斗日志
    var ID = 'wangzherongyao_log';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUI();
            me.bindUI();
        },
        onShow: function () {
            var me = this;
            me.getData();

        },
        onAniShow:function(){
            var me = this;

        },
        onHide: function () {
            var me = this;

        },
        initUI: function () {
            var me = this;
        },
        bindUI: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        getData: function () {
            var me = this;
            G.ajax.send('crosswz_winlog',[me.data().uid,me.data().deep],function (rd) {
                rd = X.toJSON(rd);
                if (rd.s == 1){
                    me.setData(rd.d);
                }
            })
        },
        setData: function (data) {
            var me = this;
            var players = data.fightuser,
                logs = data.winlog;

            // me.ui.finds('bg_' + logs.length).show();
            me.ui.nodes.panel_tip.setString(L('WZRY_LOG' + logs.length));

            for (var i = 0; i < 2; i++){
                var wj = me.ui.nodes["panel_js" + (i+1)];
                me.setWJ(wj,players[i],(i+1));
            }

            function setItem(item, log, id) {
                X.autoInitUI(item);
                item.nodes.txt_cs.setString(X.STR(L("WZRY_DJC"),L(id)));
                if (log.showtime > G.time) {
                    item.nodes.btn_qd.hide();
                    item.nodes.panel_sz1.setBackGroundImage('img/wangzherongyao/img_lxdd.png', ccui.Widget.PLIST_TEXTURE);
                    item.nodes.panel_sz2.setBackGroundImage('img/wangzherongyao/img_lxdd.png', ccui.Widget.PLIST_TEXTURE);
                } else {
                    item.nodes.btn_qd.touch(function(sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED) {
                            G.ajax.send('crosszb_fightreplay', [log.fid], function(rd) {
                                if (!rd) return;
                                rd = X.toJSON(rd);
                                if (rd.s == 1) {
                                    // G.frame.fightVedio.once('fightEnd', function(d) {
                                    //
                                    // }).title(L('fight_review')).startFight(rd.d.flog).show();
                                    G.frame.fight.data({
                                        pvType: 'pvwz',
                                        isVideo: true,
                                        session: 0,
                                        fightlength: rd.d.length,
                                        fightData:rd.d,
                                        callback: function(session) {
                                            G.frame.fight.demo(rd.d[session]);
                                        }
                                    }).once('show', function() {

                                    }).demo(rd.d[0]);

                                }
                            }, true);
                        }
                    });
                    var winside = X.arrayFind(players, log.winuid);
                    item.nodes.panel_sz1.setBackGroundImage('img/wangzherongyao/img_lx' + ['sl', 'sb'][winside] + '.png', ccui.Widget.PLIST_TEXTURE);
                    item.nodes.panel_sz2.setBackGroundImage('img/wangzherongyao/img_lx' + ['sb', 'sl'][winside] + '.png', ccui.Widget.PLIST_TEXTURE);
                }
                item.show();
            }
            var listview = me.ui.nodes.listview_lx;
            listview.removeAllChildren();
            var list = me.ui.nodes.list;
            var listview_h = (list.height + 3) * logs.length - listview.height;
            me.nodes.panel_bg.height += listview_h;
            ccui.helper.doLayout(me.nodes.panel_bg);
            listview.setTouchEnabled(false);

            for (var i = 0; i < logs.length; i++) {
                var list_c = list.clone();
                setItem(list_c, logs[i], (i+1));
                listview.pushBackCustomItem(list_c);
            }

        },
        setWJ: function (wj, uid, idx) {
            var me = this;
            X.autoInitUI(wj);
            var data = G.frame[me.data().frame].DATA.playerList[uid];
            wj.nodes["panel_tx" + idx].removeAllChildren();
            var head = G.class.shead(data,false);
            head.setAnchorPoint(0,0);

            var panel_name = wj.nodes["panel_name" + idx];
            var str1 = data.name + "<font color=#FFC355>(" + data.ext_servername + ")</font>";
            var rh1 = new X.bRichText({
                size:16,
                maxWidth:panel_name.width,
                lineHeight:20,
                family:G.defaultFNT,
                color:G.gc.COLOR.n5
            });
            rh1.text(str1);
            rh1.setPosition(cc.p((panel_name.width - rh1.trueWidth())/2,0));
            panel_name.addChild(rh1);
            wj.nodes["panel_tx" + idx].addChild(head);
            // wj.nodes["txt_name" + idx].setString(data.name);
            // wj.nodes["txt_qf" + idx].setString(data.ext_servername);
            wj.nodes["txt_name" + idx].hide();
            wj.nodes["txt_qf" + idx].hide();
            wj.nodes["txt_zl" + idx].setString(data.zhanli || "");
            wj.setTouchEnabled(true);
            wj.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED){
                    G.ajax.send('crosswz_userdetails',[uid],function(rd) {
                        rd = X.toJSON(rd);

                        if (rd.s === 1) {
                            G.frame.wangzherongyao_wjxx.data({frame:me.ID(), data: rd.d}).show();
                        }
                    },true);
                }
            });
        },
    });

    G.frame[ID] = new fun('wangzherongyao_top1.json', ID);
})();

;;/**
 * Created by yaosong on 2018/12/28.
 */
(function () {
    //王者荣耀-荣耀奖励
    var ID = 'wangzherongyao_ryjl';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action:true});
        },
        initUI: function () {
            var me = this;

            X.radio([me.ui.nodes.btn_dld,me.ui.nodes.btn_zss,me.ui.nodes.btn_wzs], function (sender) {
                var name = sender.getName();

                var name2type = {
                    btn_dld$: '1',
                    btn_zss$: '2',
                    btn_wzs$: '3',
                };

                me.changeType(name2type[name]);
            });
        },
        bindUI: function () {
            var me = this;

            me.ui.finds('ui').click(function (sender, type) {
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUI();
            me.bindUI();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            var btn = [
                "btn_dld",
                "btn_zss",
                "btn_wzs"
            ]

           me.ui.nodes[btn[(me.data() && me.data().tztype ? me.data().tztype : '1') - 1]].triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        onHide: function () {
            var me = this;
        },
        changeType: function (type) {
            var me = this;

            me.curType = type;
            me.setContents();
        },
        setContents: function() {
            var me = this;

            var panel = me.ui;

            me.ui.finds("bg_jjc").setTouchEnabled(true);

            var scrollview = me.ui.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();

            var txtIntr = me.ui.nodes.txt_tip;
            txtIntr.setString(L('WZRY_RYJL_' + (me.curType)));

            var prizes = G.class.wangzherongyao.getPrizes();

            var type2name = {
                1:'dld',
                2:'zuanshi',
                3:'wangzhe'
            };

            var table = me.table = new X.TableView(scrollview, panel.nodes.list_rank, 1, function(ui, data) {
                me.setItem(ui, data);
            }, null, null, 0, 2);
            table.setData(prizes[type2name[me.curType]]);
            table.reloadDataWithScroll(true);
        },
        setContents1: function () {
            var me = this;

            var txtIntr = me.ui.nodes.txt_tip;
            txtIntr.setString(L('WZRY_RYJL_' + (me.curType)));

            var prizes = G.class.wangzherongyao.getPrizes();

            var type2name = {
                1:'dld',
                2:'zuanshi',
                3:'wangzhe'
            };
            me.listview.removeAllChildren();

            for(var j=0;j<prizes[type2name[me.curType]].length;j++) {
                var pCnf = prizes[type2name[me.curType]][j];

                var item = me.list.clone();
                item.data = pCnf;
                item.idx = j;
                me.setItem(item);
                me.listview.pushBackCustomItem(item);
                item.show();
            }
            me.listview.jumpToTop();
        },
        setItem: function (item,data) {
            var me = this;

            // var data = item.data;
            var idx = item.idx;

            X.autoInitUI(item);

            var imgBg = item.nodes.bg_list;
            var txtIntr = item.nodes.txt_wzjl;
            var ico = item.nodes.img_wp;
            txtIntr.setString(data.intr);

            X.alignItems(ico,data.p,'left',{
                touch:true,
                scale:0.7,
            });


            // if (idx < 1) {
            //     imgBg.loadTexture('img/public/bg_25.png', 1);
            // } else {
            //     imgBg.loadTexture('img/public/bg_jiugongge24.png', 1);
            // }
        }
    });

    G.frame[ID] = new fun('wangzherongyao_ryjl.json', ID);
})();

;;/**
 * Created by yaosong on 2018/12/28.
 */
(function () {
    //王者荣耀-荣耀之巅
    var ID = 'wangzherongyao_ryzd';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me._super(json, id, {action:true});
        },
        getData: function (type,callback) {
            var me = this;

            var type = type || -1;
            G.DATA.wangzheph = G.DATA.wangzheph || {};
            if (G.DATA.wangzheph[type]) {
                me.DATA = {};
                me.DATA = cc.mixin(me.DATA, G.DATA.wangzheph[type],true);
                callback && callback();
                return;
            }
            G.ajax.send('wangzhe_wzzhidian',[type], function (data) {
                if (!data) return;
                var data = X.toJSON(data);
                if (data.s == 1) {
                    me.DATA = data.d;
                    G.DATA.wangzheph = G.DATA.wangzheph || {};
                    G.DATA.wangzheph[data.d.round] = data.d;
                    callback && callback();
                }
            },true);


            // me.DATA = {
            //    round:38,
            //    ranklist:[]
            // };
            // for(var j=0;j<4;j++) {
            //    var o = {};
            //    o = cc.mixin(o, P.gud,true);
            //    me.DATA.ranklist.push(o);
            // }
            // callback && callback();
        },
        initUI: function () {
            var me = this;

            // me.scrollview = me.ui.finds('scrollview');
            // cc.enableScrollBar(me.scrollview);
            me.list = me.ui.nodes.list;
            me.list.hide();
        },
        bindUI: function () {
            var me = this;

            me.ui.nodes.btn_fanhui.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            me.btnLeft = me.ui.nodes.but1;
            me.btnLeft.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    var type = me.DATA.round;
                    type--;
                    me.getData(type, function () {
                        me.setContents();
                    });
                }
            });

            me.btnRight = me.ui.nodes.but2;
            me.btnRight.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    var type = me.DATA.round;
                    type++;
                    me.getData(type, function () {
                        me.setContents();
                    });
                }
            });
        },
        onOpen: function () {
            var me = this;

            me.fillSize();

            me.initUI();
            me.bindUI();
            // me.playAni(me.ui.finds('rongyaotx'));
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.newRound = me.DATA.round;
            me.setContents();
            me.showToper();
        },
        onHide: function () {
            var me = this;

            // me.releaseRes(['plist_rylong.plist','plist_rylong.png','plist_rongyaotx.plist','plist_rongyaotx.png','img/bg_zbs.png']);
        },
        checkShow: function () {
            var me = this;

            me.getData(-1,function () {
                if (!X.isHavItem(me.DATA)) {
                    G.tip_NB.show(L('WZRY_RYZD_tip_1'));
                } else{
                    me.show();
                }
            });
        },
        setContents: function () {
            var me = this;

            me.setRound();
            me.setCenter();
        },
        setRound: function () {
            var me = this;

            var txtRound = me.ui.nodes.wz_qi;

            var data = me.DATA;
            txtRound.setString(X.STR(L('WZRY_RYZD_X_RANK'),data.round));

            if (data.round <= 1) {
                me.btnLeft.setTouchEnabled(false);
                me.btnLeft.setBright(false);
            } else {
                me.btnLeft.setTouchEnabled(true);
                me.btnLeft.setBright(true);
            }

            if (data.round >= me.newRound) {
                me.btnRight.setTouchEnabled(false);
                me.btnRight.setBright(false);
            } else {
                me.btnRight.setTouchEnabled(true);
                me.btnRight.setBright(true);
            }
        },
        setCenter: function () {
            var me = this;

            //var scrollview = me.scrollview;
            var panel = me.ui;

            var data = me.DATA;
            for(var j=0;j<10;j++) {
                var layYx = panel.nodes["renwu" + (j + 1)];
                if (!layYx) continue;
                layYx.removeAllChildren();
                if (!data.ranklist[j]) continue;

                var item = me.list.clone();
                item.data = data.ranklist[j];
                item.idx = j;
                me.setItem(item);
                item.setPosition(cc.p(0,0));
                layYx.addChild(item);
                item.show();
            }
        },
        setItem: function (item) {
            var me = this;

            X.autoInitUI(item);

            var data = item.data;
            var idx = item.idx;

            var layYx = item.nodes.rw3;
            var txtZl = item.nodes.sl_ls;
            var txtServer = item.nodes.qf;
            var txtName = item.nodes.name;
            var img1 = item.nodes.ch;
            var img2 = item.nodes.yj;
            var img3 = item.nodes.sq;

            img1.hide();
            img2.hide();
            img3.hide();
            item.nodes.wz.show();

            img3.show();
            if(idx == 0) {
                img3.setBackGroundImage("img/wangzherongyao/ch_d1.png", 1);
            } else if(idx == 1) {
                img3.setBackGroundImage("img/wangzherongyao/ch_d2.png", 1);
            } else {
                img3.setBackGroundImage("img/wangzherongyao/ch_d3.png", 1);
            }


            txtName.setString(data.name);
            X.enableOutline(txtName, "#000000", 2);
            X.enableOutline(txtServer, "#000000", 2);
            txtServer.setString(data.ext_servername || '');
            txtZl.setString(data.zhanli || 0);
            X.setHeroModel({
                parent: layYx,
                data: data,
                scaleNum: .85
            });
            // X.setRWZaoXing(layYx,data, function (node, action) {
            //     node.setScale(0.7);
            //     layYx.setFlippedX(idx % 2 == 1 ? 1 : 0);
            //     layYx.setTouchEnabled(false);
            // });
        },
        playAni: function (lay) {
            var me = this;

            if (lay.getChildByTag(20170217)) {
                lay.getChildByTag(20170217).remove();
            }

            G.class.ani.show({
                addTo:lay,
                json:'ani_rongyaotx',
                x:lay.width / 2,
                y:lay.height / 2,
                repeat:true,
                autoRemove:false,
                onload: function (node, action) {
                    node.setTag(20170217);
                }
            });
        }
    });

    G.frame[ID] = new fun('wangzherongyao_ryzd.json', ID);
})();

;;/**
 * Created by yaosong on 2018/12/29.
 */
(function () {
    //王者荣耀-竞猜弹框
    var ID = 'wangzherongyao_wangzhejingcai_tankuang';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        onOpen: function () {
            var me = this;

            // new X.bView("wangzherongyao_tip3.json", function(view) {
            //     me._view = view;
            //     me.ui.nodes.panel_nr.removeAllChildren();
            //     me.ui.nodes.panel_nr.addChild(view);
            // }, {action: true});

            me.fillSize();

            me.initUI();
            me.bindUI();
        },
        onShow: function () {
            var me = this;

            me.setData();
        },
        onHide: function () {
            var me = this;

        },
        initUI: function () {
            var me = this;
        },
        bindUI: function () {
            var me = this;

            me.ui.nodes.btn_qx.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            me.ui.finds("mask_rz").click(function () {
                me.remove();
            })
        },
        setData: function () {
            var me = this;
            var conf = G.class.getConf('wangzherongyao.base.guess');
            var keys = X.keysOfObject(conf);
            keys.sort(function (a, b) {
                return a*1 - b*1;
            });
            var listItem = me.ui.nodes.list;
            var autoLayout = new X.autoLayout(me.ui.nodes.panel,1);
            autoLayout.setDelegate({
                //所有item数量
                countOfAllItems:function(){return keys.length;},
                //某行item数量
                countOfItemsAtRow:function(rowIndex){return 1;},
                //某行某列所在item
                itemAtIndex:function(rowIndex,colIndex,uiIndex){
                    var item = listItem.clone();
                    X.autoInitUI(item);
                    var key = keys[uiIndex];
                    var c = conf[key];
                    item.nodes.img_bg.loadTexture("img/wangzherongyao/img_jcdi" + (uiIndex + 1) + ".png", 1);
                    item.nodes.img_di.loadTexture("img/wangzherongyao/img_tmzs" + (uiIndex + 1) + ".png", 1);
                    var p = G.class.sitem(c.prize[0],false);
                    p.setAnchorPoint(0,0);
                    p.setScale(.9);
                    item.nodes.pb.addChild(p);
                    item.nodes.pb.setTouchEnabled(true);
                    item.nodes.pb.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED){
                            G.frame.iteminfo.data(p).show();
                        }
                    });
                    item.nodes.shijian.setString(c.addmoney);
                    item.nodes.mc.setString(c.name.split("_")[0]);
                    item.nodes.mc.setTextColor(cc.color(uiIndex == 0 ? "#11880b" : (uiIndex == 1 ? "#039ba5" : "#e76a0e")));
                    item.nodes.vip.setString(c.name.split("_")[1]);
                    item.nodes.nr.setString(c.intr);
                    item.nodes.but_jc.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_ENDED){
                            if (c.needvip > P.gud.vip){
                                G.tip_NB.show(L('WZRY_GUESS'));
                                return;
                            }
                            G.ajax.send('crosswz_guess',[me.data(),key],function (rd) {
                                rd = X.toJSON(rd);
                                if (rd.s == 1){
                                    G.class.ani.show({
                                        json: "ani_wzry_jincai",
                                        addTo: item,
                                        x: item.width / 2,
                                        y: item.height / 2,
                                        repeat: false,
                                        autoRemove: false,
                                        onload: function (node, action) {
                                            G.tip_NB.show(L('WZRY_GUESS_SUCC'));
                                            G.tip_NB.show(X.createPrizeInfo(c.prize[0]));
                                            me.remove();
                                            G.frame.wangzherongyao_jcwz.isShow && G.frame.wangzherongyao_jcwz.reloadData();
                                        }
                                    });
                                }
                            });
                        }
                    });
                    item.show();
                    return item;
                },
                //某行的高
                rowHeight:function(index){return listItem.height + 9;}
            });
            autoLayout.layout();
        }
    });

    G.frame[ID] = new fun('wangzherongyao_tip3.json', ID);
})();

;;/**
 * Created by YanJun on 12/21/15.
 */
(function () {
    //王者荣耀-钻石赛
    var ID ='wangzherongyao_zuanshisai';

    var fun = X.bUi.extend({
        ctor: function (json,id) {
            var me = this;
            me.fullScreen = true;
            me.singleGroup = "f5";
            me._super(json,id);
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onShow: function () {
            var me = this;
            me.showToper();
        },
        onAniShow : function(){
            var me = this;
            me.getData(function () {
                if (me.DATA.timelist[0][1] > G.time){
                    me.ui.nodes.btn_1.triggerTouch(ccui.Widget.TOUCH_ENDED);
                    me.ui.nodes.btn_2.disable = true;
                }else {
                    if (me.ui.nodes.btn_2.disable) {
                        G.tip_NB.show(L('WZRY_JSKQ'));
                        me.ui.nodes.btn_2.disable = false;
                    }
                    me.ui.nodes.btn_2.triggerTouch(ccui.Widget.TOUCH_ENDED);
                }
                me.updateData();
            });
            // G.playEffect('sound/jingyingfuben.mp3', false);
        },
        checkShow: function(callback) {
            var me = this;

            me.getData(function() {
                if (X.keysOfObject(me.DATA).length > 0) me.show();
                else {
                    callback && callback();
                }
            });
        },
        onHide: function () {
            var me = this;
            if (me.regetDataTimer){
                me.ui.clearTimeout(me.regetDataTimer);
                delete me.regetDataTimer;
            }
        },
        onClose: function () {

        },
        initUi: function () {
            var me = this;

            me.panel_fzs = me.ui.nodes.panel_fzs;
            me.panel_js = me.ui.nodes.panel_js1;
            X.autoInitUI(me.panel_fzs);
            X.autoInitUI(me.panel_js);

            me.panel_fzs.nodes.scrollview.removeAllChildren();
            cc.enableScrollBar(me.ui.nodes.scrollview,false);
            cc.enableScrollBar(me.ui.nodes.listview_js,false);
            me.setTitle();
        },
        bindBtn : function(){
            var me = this;
            me.ui.nodes.btn_fanhui.touch(function(sender,type){
                if(type==ccui.Widget.TOUCH_ENDED){
                    me.remove();
                }
            });

            X.radio([me.ui.nodes.btn_1,me.ui.nodes.btn_2], function (sender) {
                var name = sender.getName();
                var name2type = {
                    btn_1$: 0,
                    btn_2$: 1,
                };
                if (sender.disable){
                    G.tip_NB.show(L('WZRY_JSWKQ'));
                    me.ui.nodes["btn_" + (me._curType + 1)].setBright(false);
                    return;
                }
                me.changeType(name2type[name]);
            });

        },
        changeType : function(type){
            var me = this;
            me._curType = type;
            me.panel_fzs.hide();
            me.panel_js.hide();
            switch (type){
                case 0:
                    me.setFZS();
                    me.panel_fzs.show();
                    break;
                case 1:
                    me.setJS();
                    me.panel_js.show();
                    break;
            }

            // me.action.play('scrollviewup',false);
        },
        setTitle: function () {
            var me = this;
            // me.ui.nodes.title.setString(L('WZRY_ZZS'));
            me.panel_js.nodes.img_wzdi.show();
            me.panel_fzs.nodes.zss_wz.show();
            me.panel_js.nodes.zss_wz.show();
        },
        getData : function(callback,forceLoad){
            //forceLoad 是否强制读取
            var me = this;
            var group = me.data();
            G.DATA.wzry_zss = G.DATA.wzry_zss || {};
            if(!forceLoad && G.DATA.wzry_zss[group]){
                me.DATA = G.DATA.wzry_zss[group];
                if (me.DATA.nexttime <= G.time){
                    me.getData(function () {
                        callback && callback();
                    },true);
                }else {
                    me.setPlayerData();
                    callback && callback();
                }
                return;
            }
            G.ajax.send('crosswz_matchdata',['zuanshi',group],function(d){
                var data = JSON.parse(d);
                if (data.s == 1) {
                    G.DATA.wzry_zss[group] = data.d;
                    me.DATA = G.DATA.wzry_zss[group];
                    me.setPlayerData();
                    callback && callback();
                }
            });
        },
        updateData: function () {
            var me = this;
            if (me.DATA.nexttime > G.time && !me.regetDataTimer){
                me.regetDataTimer = me.ui.setTimeout(function () {
                    delete me.regetDataTimer;
                    me.getData(function () {
                        me.updateData();
                    },true);
                },0,0,me.DATA.nexttime - G.time);
            }
        },
        setPlayerData: function () {
            var me = this;
            var d = me.DATA.userlist;
            var list = {},
                deepList = {},
                deepKeys = [];
            for (var i in d){
                list[d[i].uid] = d[i];
                if (deepList[d[i].deep] == undefined){
                    deepList[d[i].deep] = [];
                }
            }
            for (var i in d){
                for (var k in deepList){
                    if (d[i].deep >= k*1){
                        deepList[k].push(d[i].uid);
                    }
                }
            }
            deepKeys = X.keysOfObject(deepList);
            deepKeys.sort(function (a, b) {
                return a*1 - b*1;
            });
            me.DATA.playerList = list;
            me.DATA.deepList = deepList;
            me.DATA.deepKeys = deepKeys;
        },
        //分组赛
        setFZS: function () {
            var me = this;
            var panel = me.panel_fzs;
            var scrollView = panel.nodes.scrollview;
            var list = panel.nodes.list;
            var d = me.DATA;
            if(!d) return;
            var time = d.timelist[0];
            // if (!me.tableView || !me.tableView.isEnabled()){
            //     me.tableView = new X.TableView(scrollView,list,1,function (ui, data) {
            //         for (var i = 0; i < 2; i++){
            //             var group = ui.finds('list' + (i + 1) + "$");
            //             X.autoInitUI(group);
            //             group.nodes.wz.setString(L(['a','b','c','d'][data]) + (i + 1) + L('zhu'));
            //             var xz1 = group.nodes.xz,
            //                 xz2 = group.nodes.xz1,
            //                 ck = group.nodes.ck;
            //             xz1.hide();
            //             xz2.hide();
            //             ck.hide();
            //
            //             var winside = 0,
            //                 winuid;
            //             for (var j = 0; j < 2; j++){
            //                 var wj = group.nodes['wj' + (j?j:'')];
            //                 var uid = d.deepList[d.deepKeys[0]][data*4 + i * 2 + j];
            //                 me.setWJ(wj,uid);
            //                 if (d.playerList[uid].deep > d.deepKeys[0]){
            //                     winside = j;
            //                     winuid = uid;
            //                 }
            //             }
            //
            //             if (time[0] <= G.time){
            //                 me.setCK(ck, uid, d.deepKeys[0]);
            //                 if (time[1] <= G.time){
            //                     if (winside == 0) {
            //                         xz1.show();
            //                     } else if (winside == 1) {
            //                         xz2.show();
            //                     }
            //                 }
            //             }
            //         }
            //     });
            //     me.tableView.setData([0,1,2,3]);
            //     me.tableView.reloadDataWithScroll(true);
            // }
            function setItem(ui, data) {
                X.autoInitUI(ui);
                for (var i = 0; i < 2; i++) {
                    var group = ui.nodes['list' + (i + 1)];
                    X.autoInitUI(group);
                    group.nodes.wz.setString(L(['a', 'b', 'c', 'd'][data]) + (i + 1) + L('zhu'));
                    var xz1 = group.nodes.xz,
                        xz2 = group.nodes.xz1,
                        ck = group.nodes.ck;
                    xz1.hide();
                    xz2.hide();
                    ck.show();
                    ck.vis = false;

                    var winside = 0,
                        winuid;
                    for (var j = 0; j < 2; j++) {
                        var wj = group.nodes['wj' + (j ? j : '')];
                        var uid = d.deepList[d.deepKeys[0]][data * 4 + i * 2 + j];
                        me.setWJ(wj, uid);
                        if (d.playerList[uid].deep > d.deepKeys[0]) {
                            winside = j;
                            winuid = uid;
                        }
                    }


                    me.setCK(ck, uid, d.deepKeys[0]);
                    if (time[0] <= G.time) {
                        ck.vis = true;
                        if (time[1] <= G.time) {
                            if (winside == 0) {
                                xz1.show();
                            } else if (winside == 1) {
                                xz2.show();
                            }
                        }
                    }
                }
            }

            if (!me.tableView || !me.tableView.isEnabled()){
                me.tableView = new X.TableView(scrollView,list,1,function (ui, data) {
                    setItem(ui,data);
                });
                me.tableView.setData([0,1,2,3]);
                me.tableView.reloadDataWithScroll(true);
            }
        },
        //决赛
        setJS: function () {
            var me = this;
            var panel = me.panel_js;
            var d = me.DATA;
            me.setGJ();
            if(!d) return;
            var userList = d.deepList;
            //玩家
            for (var i = 0; i < 4; i++){
                var group = panel.nodes['list' + (i + 1)];
                X.autoInitUI(group);
                for (var j = 0; j < 2; j++){
                    var wj = group.nodes['wj' + (j?j:'')];
                    me.setWJ(wj,userList[d.deepKeys[1]][i*2 + j]);
                }
            }
            //线
            var idx = 0;
            for (var i = 1; i < 4; i++){
                var time = d.timelist[i];
                var deep = d.deepKeys[i+1];
                var ul = userList[deep];
                for (var j in ul){
                    var uid = ul[j];
                    idx++;
                    var xz1 = panel.nodes[X.STR('xz{1}_1', idx)],
                        xz2 = panel.nodes[X.STR('xz{1}_2', idx)],
                        ck = panel.nodes['ck' + idx];
                    xz1.hide();
                    xz2.hide();
                    ck.show();
                    ck.vis = false;
                    me.setCK(ck, uid, d.deepKeys[i]);
                    if (time[0] <= G.time) {
                        ck.vis = true;
                        if (time[1] <= G.time){
                            var winside = X.arrayFind(userList[d.deepKeys[i]],uid)%2;
                            if (winside == 0) {
                                xz1.show();
                            } else if (winside == 1) {
                                xz2.show();
                            }
                            if (i == 3){
                                var xz8 = panel.nodes.xz8;
                                xz8.show();
                                me.setGJ(userList[d.deepKeys[d.deepKeys.length - 1]][0]);
                            }
                        }
                    }
                }
            }
            var ui = me.panel_js.nodes.gjd;
            X.autoInitUI(ui);
            if (!cc.sys.isObjectValid(ui.nodes.gj.ani)){
                // G.class.ani.show({
                //     json:'ani_zuanshisai',
                //     addTo:ui.nodes.gj,
                //     x:69,
                //     y:135,
                //     repeat:true,
                //     autoRemove:false,
                //     onload: function (node, action) {
                //         ui.nodes.gj.ani = node;
                //     }
                // });
            }
        },
        //玩家
        setWJ: function (wj, uid) {
            var me = this;
            X.autoInitUI(wj);
            var data = me.DATA.playerList[uid];
            wj.nodes.ico.removeAllChildren();
            var head = G.class.shead(data,false);
            head.setAnchorPoint(0,0);
            wj.nodes.ico.addChild(head);
            wj.nodes.name.setString(data.name);
            wj.nodes.qf1.setString(data.ext_servername);
            wj.nodes.txt_zl.setString(data.zhanli || "");
            wj.setTouchEnabled(true);
            wj.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED){
                    G.ajax.send('crosswz_userdetails',[uid],function(rd) {
                        rd = X.toJSON(rd);

                        if (rd.s === 1) {
                            //玩家信息
                            G.frame.wangzherongyao_wjxx.data({frame:me.ID(), data: rd.d}).show();
                            }
                    },true);
                }
            });
        },
        //查看
        setCK: function (ck, uid, deep) {
            var me = this;
            // ck.show();
            // ck.vis = true;
            ck.setSwallowTouches(false);
            ck.uid = uid;
            ck.deep = deep;
            ck.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE){
                    if(sender.vis){
                        G.frame.wangzherongyao_log.data({uid:sender.uid,deep:sender.deep,frame:me.ID()}).show();
                    }else{
                        G.tip_NB.show(L('WZRY_DDJS'));
                    }
                }
            });
        },
        //冠军
        setGJ: function (uid) {
            var me = this;
            var ui = me.panel_js.nodes.gjd;
            X.autoInitUI(ui);
            ui.nodes.gj.show();
            if (!uid){
                ui.nodes.wgj.show();
                ui.nodes.xwyd.show();
                ui.nodes.ico_zl.hide();
                ui.nodes.txt_zl.hide();
                ui.nodes.img_zldi.hide();
            }else{
                ui.nodes.wgj.hide();
                ui.nodes.xwyd.hide();
                ui.nodes.ico.setTouchEnabled(false);
                me.setWJ(ui.nodes.gj,uid);
                ui.nodes.ico_zl.show();
                ui.nodes.txt_zl.show();
                ui.nodes.img_zldi.show();
            }
        }
    });

    G.frame[ID] = new fun('wangzherongyao_zzsfz.json', ID);

    //王者荣耀-王者赛
    var ID1 ='wangzherongyao_wangzhesai';
    var fun1 = fun.extend({
        setTitle: function () {
            var me = this;
            // me.ui.nodes.title.setString(L('WZRY_WZS'));
            // me.panel_fzs.nodes.img_wzdi.loadTexture('img/wangzherongyao/wzs_bg1.png',ccui.Widget.PLIST_TEXTURE);
            // me.panel_js.nodes.img_wzdi.loadTexture('img/wangzherongyao/wzs_bg2.png',ccui.Widget.PLIST_TEXTURE);
            me.panel_js.nodes.wzjs.show();
            me.panel_fzs.nodes.wzjs.show();
        },
        onHide: function () {
            var me = this;
            me._super();
            delete G.DATA.wzry_wzs;
        },
        onClose: function () {
            var me = this;
            me._super();
            delete G.DATA.wzry_wzs;
        },
        getData : function(callback,forceLoad){
            //forceLoad 是否强制读取
            var me = this;
            if(!forceLoad && G.DATA.wzry_wzs){
                me.DATA = G.DATA.wzry_wzs;
                me.setPlayerData();
                callback && callback();
                return;
            }
            G.ajax.send('crosswz_matchdata',['wangzhe'],function(d){
                var data = JSON.parse(d);
                if (data.s == 1) {
                    G.DATA.wzry_wzs = data.d;
                    me.DATA = G.DATA.wzry_wzs;
                    me.setPlayerData();
                    callback && callback();
                }
            });
        }
    });
    G.frame[ID1] = new fun1('wangzherongyao_zzsfz.json', ID1);
})();

;;/**
 * Created by wfq on 2016/7/13.
 */
(function () {
    //玩家信息-挑战
    var ID = 'wangzherongyao_wjxx';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f7";
            me._super(json, id, {action: true});
        },
        showXinXi: function () {
            var me = this;

            var d = me.DATA.data;
            me.ui.nodes.panel_tx.removeAllChildren();
            var tx = G.class.shead(d.headdata,false);
            tx.setAnchorPoint(0,0);
            me.ui.nodes.panel_tx.addChild(tx);
            me.ui.nodes.txt_name.setString(d.headdata.name);
            me.ui.nodes.txt_zl.setString(d.headdata.zhanli || "");
            me.ui.nodes.txt_wjxx.setString(d.headdata.guildname || L("ZW"));
            if(d.headdata.ext_servername){
                me.ui.nodes.txt_qf.setString(d.headdata.ext_servername);
            }else{
                me.ui.nodes.txt_qf.setString('');
            }
            if(me.DATA.frame == 'wangzherongyao_dld'){
                me.ui.nodes.txt_tz.setString(L("TIAOZHAN"));
            }else{
                me.ui.nodes.txt_tz.setString(L("QUEDIN"));
            }

            var fight_data = d.fightdata;
            for (var i = 0; i < fight_data.length; i++) {
                var panel = me.ui.nodes["panel_zr" + (i + 1)];
                var list = me.ui.nodes.panel_zr.clone();
                list.data = fight_data[i];
                list.idx = i;
                me.setItem(list, i);
                panel.removeAllChildren();
                list.setPosition(cc.p(0,panel.height/2));
                panel.addChild(list);
                list.show();
            }

        },
        setItem: function (item,row) {
            var me = this;

            X.autoInitUI(item);

            var data = item.data;

            var leftArr = [],
                rightArr = [];

            var leftLay = item.nodes.panel_yx;
            var rightLay = item.nodes.panel_yx1;
            leftLay.removeAllChildren();
            rightLay.removeAllChildren();

            var wid,
                herInterval,
                lay,
                scale = 1,
                num = 0;
            for (var i = 0; i < 6; i++) {
                var defhero = data[i + 1];

                if (defhero) {
                    wid = G.class.shero(defhero);
                    wid.setArtifact(data.sqid || "");
                    wid.data = defhero;
                } else{
                    wid = G.class.shero();
                }

                var width = scale * wid.width;

                if (i < 2) {
                    lay = leftLay;
                    herInterval = (lay.width - (2 * width));
                } else {
                    lay = rightLay;
                    herInterval = (lay.width - (4 * width)) / 3;
                }

                if (i == 2) {
                    num = 0;
                }

                wid.setScale(scale);
                wid.setPosition(cc.p(width / 2 + (width + herInterval) * (num % 6),lay.height / 2));
                lay.addChild(wid);

                num++;
            }
        },
        setShowHeroInfo: function(wid) {
            var me = this;

            wid.setTouchEnabled(true);
            wid.click(function (sender) {
                if(!me.heroInfoShow) {
                    var up = cc.moveBy(0.1, 0, me.DATA.defhero.length > 1 ? 200 : 110);
                    var goUp = cc.spawn(up, cc.callFunc(()=>{
                        new X.bView("ronghejitan_yxsx.json", function (view) {
                            me.heroInfoShow = view;
                            me.heroInfoShow.setPosition(43, 170);
                            me.ui.addChild(me.heroInfoShow);

                            me.heroInfoShow.runAction(cc.moveBy(0.1, 0, -30));
                            me.setHeroInfo(sender.data);
                        })
                    }));
                    me.nodes.panel_wjxx.runAction(goUp);
                }else {
                    me.setHeroInfo(sender.data);
                }
            })
        },
        setHeroInfo: function(data) {
            var me = this;
            var head = me.heroInfoShow.nodes.panel_tb;
            var name = me.heroInfoShow.nodes.text_yxm;
            var pinjie = me.heroInfoShow.nodes.panel_pinjie;
            var zl = me.heroInfoShow.nodes.text_zdl;
            var btn = me.heroInfoShow.nodes.btn_tishi;
            var skill = me.heroInfoShow.nodes.panel_jn;
            var buff = ["atk", "def", "hp", "speed"];

            me.heroInfoShow.nodes.btn_pinglun.click(function () {
                if(data.star > 9) {
                    G.frame.yingxiong_pinglun.data(data.hid + "_10").show();
                } else {
                    G.frame.yingxiong_pinglun.data(data.hid).show();
                }

            });

            head.removeAllChildren();
            skill.removeAllChildren();
            skill.setPosition(277, 55);

            var wid = G.class.shero(data);
            wid.setPosition(head.width / 2, head.height / 2);
            head.addChild(wid);

            setTextWithColor(name, wid.conf.name, G.gc.COLOR[wid.conf.color || 1]);

            G.class.ui_pinji(pinjie, data.dengjielv || 0, 0.8, data.star);

            zl.setString(data.zhanli);

            btn.click(function () {
                G.frame.ui_top_xq.data({data : data}).show();
            });

            for (var i = 0; i < buff.length; i ++) {
                var bf = buff[i];
                var txt = me.heroInfoShow.nodes["txt_sx" + (i + 1)];
                txt.setString(data[bf]);
            }

            var skillList = G.class.hero.getSkillList(data.hid, data.dengjielv || 1);

            var interval = 16; // 间隔
            var w = skillList.length * 88 + (skillList.length - 1) * interval; // 星星所占宽度
            var x = (skill.width - w) * 0.5; // 星星初始x
            for (var i = 0; i < skillList.length; i++){
                var p = G.class.ui_skill_list(skillList[i], true, null, 1);
                p.setAnchorPoint(0,0);
                p.x = x;
                p.y = 0;
                skill.addChild(p);

                x += 88 + interval;
            }
        },
        initUI: function () {
            var me = this;

            // me.ui_mask_xinxi = me.ui.finds('mask_xinxi');
        },
        bindUI: function () {
            var me = this;

            me.ui.nodes.mask.touch(function(sender,type){
                if(type==ccui.Widget.TOUCH_ENDED){
                    me.remove();
                }
            });

            me.btn_qd = me.ui.nodes.btn_tz;

            me.btn_qd.touch(function(sender,type){
                if(type==ccui.Widget.TOUCH_ENDED){
                    if(me.DATA.frame == 'wangzherongyao_dld'){
                        if(!G.frame.wangzherongyao.isDLDtime) {
                            G.tip_NB.show(L("BZTZSJ"));
                            return;
                        }
                        if(G.frame.wangzherongyao_dld.DATA.myinfo.remainnum < 1) {
                            G.tip_NB.show(L("TZCSBZ"));
                            return;
                        }
                        var callback = me.DATA.callback;
                        callback && callback();
                    }else{                        
                        me.remove();
                    }
                }
            });

            // me.btn_tz = me.ui_mask_xinxi.finds('btn_tz');
            // me.btn_tz.touch(function(sender,type){
            //     if(type==ccui.Widget.TOUCH_ENDED){
            //         var callback = me.DATA.callback;
            //         if (callback) callback && callback();
            //     }
            // });
        },
        onOpen: function () {
            var me = this;
            // if(me.data().data.headdata.lv < G.DAO.budui.openLvArr[6]){
            //     G.frame.wanjiaxinxi_tiaozhan2.data(me.data()).show();
            // }
            me.fillSize();
            me.initUI();
            me.bindUI();
        },
        onAniShow:function() {
            var me = this;
        },
        onShow: function () {
            var me = this;
            // if (me.data().data.headdata.lv < G.DAO.budui.openLvArr[6]) {
            //     me.hide(false);
            //     return;
            // }
            me.DATA = me.data();
            me.showXinXi();
        },
        onHide: function () {
            var me = this;
        }
    });

    G.frame[ID] = new fun('rongyaowangzhe_wjxx.json', ID);
})();

;;/**
 * Created by yaosong on 2018/12/28.
 */
(function () {
    //王者荣耀-钻石赛分组
    var ID ='wangzherongyao_zuanshisai_fenzhu';

    var fun = X.bUi.extend({
        ctor: function (json,id) {
            var me = this;
            me.fullScreen = true;
            me.singleGroup = "f4";
            me._super(json,id);
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onShow: function () {
            var me = this;
            me.showToper();
        },
        onAniShow : function(){
            var me = this;
            me.getData(function () {
                me.setData();
            });
        },
        checkShow: function(callback) {
            var me = this;

            me.getData(function () {
                if(me.DATA != undefined)me.show();
                else{
                    callback && callback();
                }
            });
        },
        onHide: function () {
            var me = this;
            delete G.DATA.wzry_zss;
        },
        onClose: function () {

        },
        initUi: function () {
            var me = this;
        },
        bindBtn : function(){
            var me = this;
            me.ui.nodes.btn_fanhui.touch(function(sender,type){
                if(type==ccui.Widget.TOUCH_ENDED){
                    me.remove();
                }
            });
        },
        getData : function(callback,forceLoad){
            //forceLoad 是否强制读取
            var me = this;
            if(!forceLoad && me.DATA){
                callback && callback();
                return;
            }
            G.ajax.send('crosswz_zsopen',[],function(d){
                var data = JSON.parse(d);
                if (data.s == 1) {
                    me.DATA = data.d || {};
                    callback && callback();
                }
            });
        },
        setData: function () {
            var me = this;
            var d = me.DATA;
            var scrollView = me.ui.nodes.scrollview;
            scrollView.removeAllChildren();
            cc.enableScrollBar(scrollView,false);
            var list = me.ui.nodes.list;
            if (!me.tableView || !me.tableView.isEnabled()){
                me.tableView = new X.TableView(scrollView,list,2,function (ui, data) {
                    X.autoInitUI(ui);
                    ui.setSwallowTouches(false);
                    if(data % 2 == 1){
                        ui.nodes.txt_pm.setString(data);
                        X.enableOutline(ui.nodes.txt_pm,'#2f5691',2);
                        X.enableOutline(ui.nodes.txt_zu,'#2f5691',2);
                        ui.nodes.but_zs.loadTextureNormal("img/wangzherongyao/ben_fz3.png",1);
                    }else{
                        ui.nodes.txt_pm.setString(data);
                        X.enableOutline(ui.nodes.txt_pm,'#9f323a',2);
                        X.enableOutline(ui.nodes.txt_zu,'#9f323a',2);
                        ui.nodes.but_zs.loadTextureNormal("img/wangzherongyao/ben_fz4.png",1);
                    }
                    ui.nodes.txt_zu.setString(X.STR(L("WZRY_ZSS_ZU"),data));
                    if (d.mygroup == data){
                        ui.nodes.img_jt.show();
                        ui.nodes.txt_zu.setTextColor(cc.color('#fff21a'));
                    }else{
                        ui.nodes.img_jt.hide();
                        ui.nodes.txt_zu.setTextColor(cc.color('#ffffff'));
                    }
                    ui.nodes.but_zs.setTouchEnabled(false);
                    ui.touch(function (sender, type) {
                        if (type == ccui.Widget.TOUCH_NOMOVE){
                            G.frame.wangzherongyao_zuanshisai.parent(ID).data(data).show();
                        }
                    });
                },null,0,15);
                me.tableView.setData([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);
                me.tableView.reloadDataWithScroll(true);
                me.tableView._table.tableView.setBounceable(false);
            }else{
                me.tableView.reloadDataWithScroll(false);
            }
            var str;
            if (!d.mygroup){
                str = L('WZRY_ZZS_WFZ');
            }else{
                str = X.STR(L('WZRY_ZZS_FZ'),d.mygroup);
            }
            me.ui.nodes.wz.setString(str);
        }
    });

    G.frame[ID] = new fun('wangzherongyao_zss.json', ID);
})();

;;/**
 * Created by wfq on 2018/6/8.
 */
(function () {
    //世界树
    var ID = 'worldtree';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f2";
            me.fullScreen = true;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            // 返回
            me.nodes.btn_fh.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            //帮助
            me.nodes.btn_bz.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.help.data({
                        intr:L('TS5')
                    }).show();
                }
            });

            X.radio([me.nodes.btn_sjs1,me.nodes.btn_zhyx], function (sender) {
                var name = sender.getName();

                var name2type = {
                    btn_sjs1$:1,
                    btn_zhyx$:2
                };

                me.changeType(name2type[name]);
            });

            me.ui.finds("btn_shijieshushangdian").click(function () {
                G.frame.worldtree_shop.show();
            })
        },
        onOpen: function () {
            var me = this;
            
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        show : function(conf){
        	var me = this;
        	var _super = this._super;
        	this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;

            // me.showMainMenu();
            me.showToper();

            var type = me.curType || (me.data() && me.data().tztype) || 1;
            //me.getData(function () {
                me.nodes[['','btn_sjs1','btn_zhyx'][type * 1]].triggerTouch(ccui.Widget.TOUCH_ENDED);
            //});
            me.setContents();
            X.audio.playEffect("sound/openworldtree.mp3");
        },
        onHide: function () {
            var me = this;
            me.event.emit('hide');
        },
        getData: function (callback) {
            var me = this;

            G.ajax.send('worldtree_open', [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        changeType: function (type) {
            var me = this;

            if (me.curType && me.curType == type) {
                return;
            }

            me.curType = type;
            if(type == 1) {
                me.ui.finds("text_ms").hide();
                me.ui.finds("Image_17").hide();
            }else {
                me.ui.finds("text_ms").hide();
                me.ui.finds("Image_17").hide();
            }

            var viewConf = {
                "1": G.class.worldtree_tree,
                "2": G.class.worldtree_hero,
            };
            me._panels = me._panels || {};
            for (var _type in me._panels) {
                cc.isNode(me._panels[_type]) && me._panels[_type].hide();
            }
            if (!cc.isNode(me._panels[type])) {
                me._panels[type] = new viewConf[type](type);
                me.ui.nodes.panel_nr.addChild(me._panels[type]);
                // me.ui.finds('panel_1').addChild(me._panels[type]);
            }
            me._panels[type].show();
        },
        setContents: function () {
            var me = this;

            me.setBaseInfo();
        },
        //设置基础信息
        setBaseInfo: function () {
            var me = this;

            var panel = me.ui;
            var txtAttr1 = panel.nodes.text_gssl;
            var txtAttr2 = panel.nodes.text_jhsl;

            var need1 = G.class.worldtree.get().base.callneed[0];
            txtAttr1.setString(G.class.getOwnNum(need1.t,need1.a));
            var need2 = G.class.worldtree.get().base.swapneed['4'][0];
            txtAttr2.setString(G.class.getOwnNum(need2.t,need2.a));
            panel.nodes.text_jiejin.setString(G.class.getOwnNum(2020, "item"))
        }
    });

    G.frame[ID] = new fun('shijieshu.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/8.
 */
(function () {
    //世界树-置换英雄
    G.class.worldtree_hero = X.bView.extend({
        extConf:{
            data: function (zhongzu) {
                var data = G.DATA.yingxiong.list;
                var keys = X.keysOfObject(data);

                var arr = [];
                var needZhongzu = [1,2,3,4];
                for (var i = 0; i < keys.length; i++) {
                    var tid = keys[i];
                    var heroData = data[tid];
                    if (zhongzu == 0) {
                        if ((heroData.star == 4 || heroData.star == 5) && X.inArray(needZhongzu,heroData.zhongzu)) {
                            arr.push(tid);
                        }
                    } else {
                        if (zhongzu == heroData.zhongzu && (heroData.star == 4 || heroData.star == 5) && X.inArray(needZhongzu,heroData.zhongzu)) {
                            arr.push(tid);
                        }
                    }

                }

                return arr;
            },
            getSort: function (arr, str1, str2, str3, str4) {
                var data = [];
                var heroData = [];
                var hidData = [];
                var sortArr = [];

                for(var i = 0; i < arr.length; i ++){
                    heroData.push(G.DATA.yingxiong.list[arr[i]]);
                    if(!heroData[i].tid) heroData[i].tid = arr[i];
                }
                for(var i = 0, j = heroData.length; i < j; i += 1){
                    var conf = heroData[i];
                    var q = conf[str1];
                    var w = conf[str2];
                    var e = conf[str3];
                    var r = conf[str4];
                    if(!sortArr[q]){
                        sortArr[q] = [];
                    }
                    if(!sortArr[q][w]){
                        sortArr[q][w] = [];
                    }
                    if(!sortArr[q][w][e]){
                        sortArr[q][w][e] = [];
                    }
                    if(!sortArr[q][w][e][r]){
                        sortArr[q][w][e][r] = [];
                    }
                    sortArr[q][w][e][r].push(heroData[i]);
                }
                var index = heroData.length - 1;
                for(var i in sortArr){
                    for(var j in sortArr[i]){
                        for (var k in sortArr[i][j]){
                            for(var l in sortArr[i][j][k]){
                                for(var m in sortArr[i][j][k][l]){
                                    data[index --] = sortArr[i][j][k][l][m];
                                }
                            }
                        }
                    }
                }
                for(var i = 0; i < data.length; i ++){
                    hidData.push(data[i].tid);
                }
                return hidData;
            }
        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('shijieshu_zhyx.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();

        },
        bindBTN: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;

            me.bindBTN();
            me.isOne = true;
            if(X.cacheByUid('worldtree_heroTid')){
                cc.log('---------------->worldtree_heroTid',X.cacheByUid('worldtree_heroTid'));
                me.cacheTid = X.cacheByUid('worldtree_heroTid');
            }
            me.showHero();
        },
        showHero: function(){
            var me = this;
            var data = G.DATA.yingxiong.list;

            for(var i in data){
                if(data[i].star == 4 || data[i].star == 5 && data[i].zhongzu !== 5 && data[i].zhongzu !== 6){
                    me.isHaveHero = true;
                    break;
                }
            }
            if(me.isHaveHero){
                me.ui.setTimeout(function () {
                    new X.bView('shijieshu_zzxz.json', function (view) {
                        me._view = view;
                        me.nodes.panel_zzxz.setTouchEnabled(false);
                        me.nodes.panel_zzxz.setClippingEnabled(true);
                        me.nodes.panel_zzxz.addChild(view);
                        me.setZzBtns();
                    });
                }, 100)
            }
        },
        onShow: function () {
            var me = this;
            me.refreshPanel();

            G.class.ani.show({
                json: "ani_shijieshuzhihuan",
                addTo: me.ui,
                x: me.ui.width / 2,
                y: me.ui.height / 2 - 315,
                repeat: true,
                autoRemove: false
            });

            me.nodes.panel_zzxz.zIndex = 999;
            me.nodes.panel_xh.setTouchEnabled(false);
        },
        onRemove: function () {
            var me = this;
            if(me.cacheTid && me.isZHIHUAN){
                X.cacheByUid('worldtree_heroTid', me.cacheTid);
            }
        },
        setContents: function () {
            var me = this;

            me.setBaseInfo();
            me.setCenter();
            me.setAttr(4);
            me.nodes.text_fryx.hide();
        },
        setCenter: function () {
            var me = this;

            var obj = {
                0:{
                    havData:{
                        type:'setItem_hero'
                    },
                    noData:{
                        type:'setItem_in'
                    }
                },
                1:{
                    zhData:{
                        type:'setItem_hero'
                    },
                    havData:{
                        type:'setItem_question'
                    },
                    noData:{
                        type:'setItem_default'
                    }
                }
            };

            var panelLeft = me.nodes.panel_1;
            var panelRight = me.nodes.panel_2;
            var list = me.ui.finds('list');
            list.hide();

            panelLeft.removeAllChildren();
            panelRight.removeAllChildren();

            // 左侧区域
            var item = list.clone();
            // item.setPosition(cc.p(panelLeft.width / 2,panelRight.height / 2));
            item.setPosition(cc.p(0,0));
            item.setTouchEnabled(false);
            if (me.selectedData) {
                // item.data = null;
                me[obj[0].havData.type](item);
                // if(me.CANCEL){
                //     me[obj[0].noData.type](item);
                //     me.CANCEL = false;
                // }
            } else {
                me[obj[0].noData.type](item);
            }

            panelLeft.addChild(item);
            item.show();
            // panelLeft.setZOrder(9999);
            panelLeft.setTouchEnabled(true);
            panelLeft.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if(!me.isHaveHero) {
                        G.tip_NB.show(L("ZWKZHYX"));
                        return;
                    }
                    var data = G.DATA.yingxiong.list[me.cacheTid];
                    cc.log('------------------->data',data);
                    if(data){
                        G.frame.yingxiong_jianjie.data({
                            id: data.hid,
                            islv: data.lv,
                            isdjlv: data.dengjielv
                        }).show();
                    }
                    // if (me.curState != 'baocun') {
                    //     if (!cc.isNode(me._view)) {
                    //         new X.bView('shijieshu_zzxz.json', function (view) {
                    //             me._view = view;
                    //             me.nodes.panel_zzxz.addChild(view);
                    //             me.setZzBtns();
                    //         });
                    //     } else {
                    //         if (!me.willGetData) {
                    //             me._view.show();
                    //             me._menus[me.curZhongzu].triggerTouch(ccui.Widget.TOUCH_NOMOVE);
                    //         }
                    //         if(me.nodes.panel_zzxz.visible == false){
                    //             me.nodes.panel_zzxz.show();
                    //         }
                    //     }

                    // }
                }
            });
            panelRight.click(function(sender){
                cc.isNode(me.btnTishi) && me.btnTishi.triggerTouch(ccui.Widget.TOUCH_ENDED);
            });
            //右侧区域
            var item2 = list.clone();
            item2.setPosition(cc.p(0,0));
            // me.setItem_default(item2);
            item2.setTouchEnabled(false);

            if (me.willGetData) {
                item2.data = me.willGetData;
                me[obj[1].zhData.type](item2);
            } else if (me.selectedData) {
                item2.data = me.selectedData;
                me[obj[1].havData.type](item2);
            } else {
                me[obj[1].noData.type](item2);
            }
            panelRight.addChild(item2);
            item2.show();

            //显示选择英雄栏

        },
        setItem_default: function (item) {
            var me = this;

            X.autoInitUI(item);
            var layTexiao = me.nodes.panel_tx;
            var layWenhao = me.nodes.panel_wh;
            var layHero = item.nodes.panel_rw;
            var layZz = item.nodes.panel_zz;
            var txtLv = item.nodes.text_yxdj;
            var txtName = item.nodes.text_yxmc;
            var layStar = item.nodes.panel_xing;
            var btnTishi = item.nodes.btn_tishi;
            X.enableOutline(txtLv,'#2A1C0F',2);
            X.enableOutline(txtName,'#2A1C0F',2);
            txtLv.setTextColor(cc.color('#F6EBCD'));
            txtName.setTextColor(cc.color('#ffffff'));

            layTexiao.show();
            // layWenhao.hide();
            layHero.hide();
            layZz.hide();
            txtLv.setString('');
            txtName.setString('');
            txtName.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
            txtName.setPositionX(item.finds('img_qz_$_0').x);
            layStar.removeAllChildren();
            btnTishi.hide();


        },
        setItem_in: function (item) {
            var me = this;

            me.setItem_default(item);
            var layTexiao = me.nodes.panel_tx;
            layTexiao.show();
            layTexiao.removeAllChildren();
            G.class.ani.show({
                json: "ani_zhihuanyinxiong",
                addTo: layTexiao,
                x: 101,
                y: 55,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    node.setTag(890);
                    action.play("in", true);
                    me.guang = node;
                },
            });

        },
        setItem_question: function (item) {
            var me = this;

            me.setItem_default(item);

            var layWenhao = me.nodes.panel_wh;
            var layZz = item.nodes.panel_zz;
            var txtLv = item.nodes.text_yxdj;
            var layStar = item.nodes.panel_xing;
            var txtName = item.nodes.text_yxmc;

            layWenhao.show();
            layWenhao.removeAllChildren();
            while (layWenhao.getChildByTag(999999)){
                layWenhao.getChildByTag(999999).removeFromParent();
            }
            G.class.ani.show({
                json: "ani_zhihuanyinxiongwenhao",
                addTo: layWenhao,
                x: -217,
                y: 56,
                repeat: false,
                autoRemove: false,
                onload: function (node, action) {
                    me.wenhao = action;
                    node.setTag(999999);
                    action.play('wait', true);
                }
            });
            layZz.show();

            var data = me.selectedData;
            var heroData = G.DATA.yingxiong.list[data];
            var conf = G.class.hero.getById(heroData.hid);
            txtName.setString('????');
            txtName.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
            txtName.setPositionX(item.finds('img_qz_$_0').x + layZz.width/2);
            layZz.setScale(.56);
            layZz.setBackGroundImage(G.class.hero.getZhongzuIcoById(heroData.hid),1);
            layZz.setPosition(txtName.getPositionX() - txtName.getAutoRenderSize().width/2 - layZz.width,  layZz.getPositionY() + 10)
            txtLv.setString(heroData.lv);

            G.class.ui_star(layStar, heroData.star || heroData.dengjielv || conf.star, 0.5, {interval:-4,}, true);
        },
        setItem_hero: function (item) {
            var me = this;

            me.setItem_default(item);

            me.panel_gx = item.nodes.panel_sx;
            var layHero = item.nodes.panel_rw;
            var layZz = item.nodes.panel_zz;
            var txtLv = item.nodes.text_yxdj;
            var txtName = item.nodes.text_yxmc;
            var layStar = item.nodes.panel_xing;
            var btnTishi = me.btnTishi = item.nodes.btn_tishi;
            X.enableOutline(txtLv,'#2A1C0F',2);
            X.enableOutline(txtName,'#2A1C0F',2);
            txtLv.setTextColor(cc.color('#F6EBCD'));
            txtName.setTextColor(cc.color('#ffffff'));

            layZz.show();
            layHero.show();

            var data = me.selectedData;
            var heroData = G.DATA.yingxiong.list[data];

            txtLv.setString(heroData.lv);

            G.class.ui_star(layStar, heroData.star || heroData.dengjielv || conf.star, 0.5, {interval:-4}, true);
            //G.class.ui_star(layStar, heroData.star || heroData.dengjielv || conf.star, 0.5, {interval:-4, ico:'img_xing_h'});
            if (item.data) {
                var conf = G.class.hero.getById(item.data.t);
                btnTishi.show();
                //设置英雄模型
                X.setHeroModel({parent: layHero, data: {hid:item.data.t}});
            } else {
                var conf = G.class.hero.getById(heroData.hid);
                //设置英雄模型
                X.setHeroModel({parent: layHero, data: heroData});
            }
            txtName.setString(conf.name);
            txtName.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
            txtName.setPositionX(item.finds('img_qz_$_0').x + layZz.width/2);
            layZz.setScale(.56);
            layZz.setBackGroundImage(G.class.hero.getZhongzuIcoById(heroData.hid),1);
            layZz.setPosition(txtName.getPositionX() - txtName.getAutoRenderSize().width/2 - layZz.width, layZz.getPositionY() + 10)
            btnTishi.setTouchEnabled(true);
            btnTishi.hide();
            btnTishi.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if(item.data && item.data.t){
                        G.frame.yingxiong_jianjie.data({
                            id: item.data.t,
                            islv: heroData.lv,
                            isdjlv: heroData.dengjielv
                        }).show();
                    }
                }
            });

        },
        setBaseInfo: function () {
            var me = this;

            me.btnZh = me.nodes.btn_zh;
            me.btnQx = me.nodes.btn_qx;
            me.btnBc = me.nodes.btn_bc;


            me.btnZh.zIndex = 9999;
            me.btnQx.zIndex = 9999;
            me.btnBc.zIndex = 9999;
            me.btnQx.hide();
            me.btnBc.hide();
            me.btnZh.hide();
            me.isZHIHUAN = false;

            if (me.willGetData) {
                me.btnQx.show();
                me.btnBc.show();
                me.isZHIHUAN = true;
            } else if (me.selectedData) {
                me.btnZh.show();
            }

            me.btnZh.data = [];
            me.btnZh.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    sender.setTouchEnabled(false);
                    G.ajax.send('worldtree_swap',[me.selectedData],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            X.audio.playEffect("sound/zhihuan.mp3", false);
                            var layTexiao = me.nodes.panel_tx;
                            var layTexiao1 = me.nodes.panel_wh;
                            layTexiao.removeAllChildren();
                            layTexiao1.removeAllChildren();
                            layTexiao.show();
                            layTexiao1.show();
                            G.class.ani.show({
                                json: "ani_zhihuanyinxionghecheng2",
                                addTo: layTexiao1,
                                x: 258,
                                y: 35,
                                repeat: false,
                                autoRemove: false,
                                onload :function(node,action){
                                    node.setScale(1.25);
                                    node.show();

                                },
                                onend :function (node, action) {
                                    var n1 = node;
                                    G.class.ani.show({
                                        json: "ani_zhihuanyinxionghecheng",
                                        addTo: layTexiao1,
                                        x: 258,
                                        y: 35,
                                        repeat: true,
                                        autoRemove: false,
                                        onload :function(node,action){
                                            node.setScale(1.25);
                                            node.show();
                                            n1.hide();
                                        }
                                    });
                                }
                            });
                            G.class.ani.show({
                                json: "ani_zhihuanyinxionghecheng",
                                addTo: layTexiao,
                                x: 258,
                                y: 35,
                                repeat: true,
                                autoRemove: false,
                                onload :function(node,action){
                                    node.setScale(1.25);
                                    node.show();
                                }
                            });
                            me.willGetData = d.d.hero;
                            me.setBaseInfo();
                            me.setCenter();
                            me._view.hide();
                            G.frame.worldtree.setBaseInfo();
                            sender.setTouchEnabled(true);
                        }else{
                            X.audio.playEffect("sound/dianji.mp3", false);
                            sender.setTouchEnabled(true);
                        }
                    },true);
                }
            });

            me.btnQx.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (me.willGetData) delete me.willGetData;
                    // if (me.selectedData) delete me.selectedData;
                    me.CANCEL = true;
                    me.setCenter();
                    me.setBaseInfo();
                    me._view.show();
                    me._view.show();
                }
            });

            me.btnBc.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.ajax.send('worldtree_save',[me.selectedData],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            me.sender = undefined;
                            me.nodes.panel_tx.removeAllChildren();
                            me.nodes.panel_wh.removeAllChildren();
                            G.tip_NB.show(L('BAOCUN') + L('SUCCESS'));
                            if (me.willGetData) delete me.willGetData;
                            if (me.selectedData) delete me.selectedData;
                            me._menus[me.curZhongzu].triggerTouch(ccui.Widget.TOUCH_NOMOVE);
                            delete me.btnTishi;
                            me.setCenter();
                            me.setBaseInfo();
                            me._view.show();
                            if(d.d.prize && d.d.prize.length > 0) {
                                G.frame.jiangli.data({
                                    prize: d.d.prize
                                }).show();
                            }
                        }
                    },true);
                }
            });

        },
        setAttr: function (star) {
            var me = this;
            var txtAttr = me.nodes.text_sl;
            var txtAttr1 = me.nodes.text_xh;
            var need = G.class.worldtree.getChangeNeedByStar(star);

            txtAttr.setString(need[0].n);
            txtAttr1.setString(need[1].n);
        },
        //绑定种族按钮事件
        setZzBtns: function () {
            var me = this;

            var panel = me._view;

            var listview = panel.nodes.listview_zz;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();
            var list = panel.nodes.list_ico;
            list.hide();

            me._menus = [];

            for (var i = 0; i < 5; i++) {
                var item = list.clone();
                item.data = i;
                setItem(item);
                listview.pushBackCustomItem(item);
                item.show();
            }

            function setItem(item) {
                X.autoInitUI(item);

                var layIco = item.nodes.panel_zz;
                var imgXz = item.nodes.img_yuan_xz;

                imgXz.hide();
                layIco.setTouchEnabled(false);
                layIco.setBackGroundImage('img/public/ico/ico_zz' + (i + 1) + '.png', 1);

                item.setTouchEnabled(true);
                item.setSwallowTouches(false);
                item.touch(function (sender, type) {
                    if (type == ccui.Widget.TOUCH_NOMOVE) {
                        for(var j=0;j<me._menus.length;j++){
                            var node = me._menus[j];
                            var img = 'img/public/ico/ico_zz' + (node.data + 1) + '.png';
                            if(node.data == sender.data){
                                //node.nodes.img_yuan_xz.show();
                                // curType即为种族
                                if(me.zzMusic)X.audio.playEffect("sound/dianji.mp3", false);
                                me.zzMusic = true;
                                me.curType = sender.data;
                                me.changeType2(sender.data);
                                img = 'img/public/ico/ico_zz' + (node.data + 1) + '_g.png';
                                if(sender.ani) {
                                    sender.ani.show();
                                }else {
                                    G.class.ani.show({
                                        json: "ani_guangbiaoqiehuan",
                                        addTo: sender,
                                        x: sender.width / 2,
                                        y: sender.height / 2,
                                        repeat: true,
                                        autoRemove: false,
                                        onload: function (node) {
                                            sender.ani = node;
                                        }
                                    })
                                }
                            }else{
                                //node.nodes.img_yuan_xz.hide();
                                if(node.ani) node.ani.hide();
                            }
                            node.nodes.panel_zz.setBackGroundImage(img,1);
                        }
                    }
                });
                me._menus.push(item);
            }

            if(me.isOne){
                me._menus[me.curZhongzu ? me.curZhongzu : 0].triggerTouch(ccui.Widget.TOUCH_NOMOVE);
            }
        },
        //种族的切换
        changeType2: function (type) {
            var me = this;

            me.curZhongzu = type;

            me.setHeroListview();
        },
        setHeroListview: function () {
            var me = this;

            var panel = me._view;
            panel.nodes.mask.setTouchEnabled(false);
            var scrollview = panel.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();
            var list = panel.nodes.list_yx;
            list.hide();

            var data = me.extConf.data(me.curZhongzu);
            if (data.length < 1) {
                cc.isNode(me._view.finds('img_zwnr$')) && me._view.finds('img_zwnr$').show();
                return;
            } else {
                cc.isNode(me._view.finds('img_zwnr$')) && me._view.finds('img_zwnr$').hide();
            }

            data = me.filterData(data);

            // for (var i = 0; i < data.length; i++) {
            //     var tid = data[i];
            //     var item = list.clone();
            //     item.data = {
            //         tid:tid,
            //         idx:i
            //     };
            //     setItem(item);
            //     listview.pushBackCustomItem(item);
            //     item.show();
            // }

            //tableview横版时lineheight需根据该list的锚点设置，改变的tableview的宽度大小
            scrollview.setDirection(cc.SCROLLVIEW_DIRECTION_HORIZONTAL);
            // scrollview.setInnerContainerSize(cc.size(566,110));

            var table = me.table = new X.TableView(scrollview,list,1, function (ui, data) {
                setItem(ui,data);
            },cc.size(110,0),null,1);
            table.setData(data);
            table.reloadDataWithScroll(true);
            if(me.cacheIdx != undefined){
                table.scrollToCell(me.cacheIdx);
                var cell = table.cellByName(me.cacheTid);
                cell && cell[0].triggerTouch(ccui.Widget.TOUCH_ENDED);
            }
            function setItem(item,d) {
                X.autoInitUI(item);


                item.data = {
                    tid:d
                };

                var layIco = item.nodes.panel_yx;
                var imgGou = item.nodes.img_gou;
                var imgSuo = item.nodes.img_suo;

                item.setScale(.9);
                item.setName(d);
                layIco.setTouchEnabled(false);
                layIco.removeAllChildren();
                imgGou.hide();
                cc.isNode(imgSuo) && imgSuo.hide();

                var data = item.data;
                var heroData = G.DATA.yingxiong.list[data.tid];
                var jjcLockData = G.frame.yingxiong.getLockHeros();

                var wid = G.class.shero(heroData);
                wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
                layIco.addChild(wid);

                if (me.selectedData == data.tid) {
                    imgGou.show();
                }

                wid.setHighLight(true);
                if (X.inArray(jjcLockData, data.tid) || heroData.islock) {
                    cc.isNode(imgSuo) && imgSuo.show();
                    wid.setEnabled(false);
                }
                item.star = heroData.star;
                item.setTouchEnabled(true);
                item.setSwallowTouches(false);
                item.touch(function (sender, type) {
                    if (type == ccui.Widget.TOUCH_NOMOVE) {
                        //已在竞技场上阵，不可选择
                        X.audio.playEffect("sound/dianji.mp3", false);
                        if(me.sender == sender) return;
                        me.sender = sender;
                        if (X.inArray(jjcLockData,sender.data.tid)) {
                            G.tip_NB.show(X.STR(L('YX_X_LOACKING'),L('jingjichang')));
                            return;
                        }

                        //已被锁定，不可选择
                        if (G.DATA.yingxiong.list[sender.data.tid].islock) {
                            G.tip_NB.show(L('YX_LOCKING'));
                            return;
                        }
                        me.cacheTid = sender.data.tid;
                        me.handleItems(sender);
                        if(cc.isNode(me.guang)){
                            me.guang.hide();
                        }
                        if(me.shuaxin_true){
                            me.panel_gx.removeAllChildren();
                            G.class.ani.show({
                                json: "ani_shijieshushuaxin",
                                addTo: me.panel_gx,
                                x: me.panel_gx.width / 2,
                                y: me.panel_gx.height / 2,
                                repeat: false,
                                autoRemove: true,
                            });
                        }else{
                            me.shuaxin_true = true;
                        }
                    }
                });
            }
        },
        handleItems: function (item) {
            var me = this;

            var childs = me.table.getAllChildren();

            for (var i = 0; i < childs.length; i++) {
                var child = childs[i];
                if (child.data.tid == item.data.tid) {
                    me.selectedData = child.data.tid;
                    child.nodes.img_gou.show();
                    me.setAttr(G.DATA.yingxiong.list[child.data.tid].star);
                } else {
                    child.nodes.img_gou.hide();
                }
            }

            me.setCenter();
            me.setBaseInfo();
        },
        filterData: function (d) {
            var me = this;


            var jjcLockData = G.frame.yingxiong.getLockHeros();
            var heroData = G.DATA.yingxiong.list;

            //对材料分类，分类依据：加锁与未加锁
            var canUseArr = [],
                lockArr = [];
            for (var i = 0; i < d.length; i++) {
                var tid = d[i];
                var data = heroData[tid];
                if (X.inArray(jjcLockData,tid) || data.islock) {
                    lockArr.push(tid);
                } else {
                    canUseArr.push(tid);
                }
            }

            canUseArr = me.extConf.getSort(canUseArr, "star", "zhongzu", "hid", "lv");
            lockArr = me.extConf.getSort(lockArr, "star", "zhongzu", "hid", "lv");


            var list = [].concat(canUseArr,lockArr);
            for(var i =0; i< list.length; i++){
                if(list[i] == me.cacheTid){
                    me.cacheIdx = i;
                    break;
                }
            }
            return list;
        }
    });

})();

;;/**
 * Created by LYF on 2018/6/2.
 */
(function () {
    //世界树-奖励预览
    var ID = 'worldtree_prize';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.setTouchEnabled(true);
            me.ui.click(function (sender) {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            me.curId = me.data();
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.ui.finds("pan1").hide();
            cc.enableScrollBar(me.ui.finds("listview"));
            me.ui.finds("listview").setItemsMargin(10);
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        formatData: function(data, star, idx) {
            var obj = {
                arr: [],
                str: ""
            };
            var all = 0;
            var lack = 0;

            for(var i in data) {
                var conf = G.class.getItem(data[i].t);
                if(conf.star == star){
                    obj.arr.push(data[i])
                }
            }
            for (var i in obj.arr) {
                var conf = G.class.getItem(obj.arr[i].t);
                if(conf.hcnum > obj.arr[i].n) lack += obj.arr[i].p;
                else all += obj.arr[i].p
            }

            obj.str = G.class.worldtree.get().base.worldtree[idx][star == 4 ? "four" : "five"];

            return obj;
        },
        setContents: function () {
            var me = this;
            var arr = [];
            var id = G.class.worldtree.get().base.calldlz[me.curId];
            var prize = G.class.diaoluo.getById(id);

            arr.push(me.formatData(prize, 5, me.curId));
            arr.push(me.formatData(prize, 4, me.curId));


            for(var i = 0; i < arr.length; i ++) {
                me.setItem(arr[i]);
            }
        },
        setItem: function (data) {
            var me= this;
            var txt = me.nodes.wz_miaoshu.clone();
            txt.setString(data.str);
            me.ui.finds("listview").pushBackCustomItem(txt);
            var arr = [];
            var all = [];
            for (var i = 0; i < data.arr.length; i ++) {
                arr.push(data.arr[i]);
                if((i + 1) % 4 == 0) {
                    all.push(arr);
                    arr = [];
                }
            }
            if(arr.length > 0) all.push(arr);

            for (var i = 0; i < all.length; i ++) {
                var layout = me.ui.finds("pan1").clone();
                layout.show();
                for (var j = 0; j < all[i].length; j ++) {
                    var ico = layout.finds("ico" + (j + 1));
                    var item = G.class.sitem(all[i][j]);
                    item.setPosition(ico.width / 2, ico.height / 2);
                    G.frame.iteminfo.showItemInfo(item);
                    ico.addChild(item);
                }
                me.ui.finds("listview").pushBackCustomItem(layout);
            }
        }
    });
    G.frame[ID] = new fun('shijieshu_jlyl.json', ID);
})();
;;/**
 * Created by LYF on 2018/10/10.
 */
(function () {
    //世界树-商店
    var ID = 'worldtree_shop';

    var fun = X.bUi.extend({
        extConf:{
            maxnum:3
        },
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
            me.ui.nodes.tip_title.setString(L("sjssd"));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });

            // for(var i = 0; i < 7; i ++) {
            //     var icon = me.nodes.list_ico.clone();
            //
            // }
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.shopConf = G.class.shop.getById(me.curType);
            me.curAttr = me.shopConf.need[0];
            me.showAttr = me.shopConf.show[0];
            cc.isNode(me.nodes["zhuangshi_" + me.curType]) && me.nodes["zhuangshi_" + me.curType].show();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            me.curType = 8;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;
            me.needScroll = true;
            me.createMenu();
            me._menus[0].triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        createMenu: function(){
            var me = this;

            me._menus = [];

            //图标
            for(var i=0;i<7;i++){
                var list_ico = me.nodes.list_ico.clone();
                X.autoInitUI(list_ico);
                list_ico.nodes.panel_zz.setTouchEnabled(false);
                list_ico.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (i + 1) + '.png', 1);
                list_ico.show();
                list_ico.setAnchorPoint(0.5,0.5);
                list_ico.setPosition(me.nodes["panel_" + (i + 1)].width / 2, me.nodes["panel_" + (i + 1)].height / 2);
                list_ico.data = i;
                list_ico.setTouchEnabled(true);

                list_ico.click(function(sender, type){
                    for(var j=0;j<me._menus.length;j++){
                        var node = me._menus[j];
                        var img = 'img/public/ico/ico_zz' + (node.data + 1) + '.png';
                        if(node.data == sender.data){
                            if(me.effect) X.audio.playEffect("sound/dianji.mp3", false);
                            me.effect = true;
                            me.zz = sender.data;
                            if(!me.table) {
                                me.setContents();
                            }else {
                                me.refreshPanel();
                            }
                            img = 'img/public/ico/ico_zz' + (node.data + 1) + '_g.png';
                            if(sender.ani) {
                                sender.ani.show();
                            }else {
                                G.class.ani.show({
                                    json: "ani_guangbiaoqiehuan",
                                    addTo: sender,
                                    x: sender.width / 2,
                                    y: sender.height / 2,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node) {
                                        sender.ani = node;
                                    }
                                })
                            }
                        }else{
                            node.nodes.img_yuan_xz.hide();
                            if(node.ani) node.ani.hide();
                        }
                        node.nodes.panel_zz.setBackGroundImage(img,1);
                    }
                });
                me._menus.push(list_ico);
                me.nodes["panel_" + (i + 1)].addChild(list_ico);
            }
        },
        onHide: function () {
            var me = this;
            G.frame.worldtree.setBaseInfo();
            me.event.emit('hide');
        },
        getData: function (callback) {
            var me = this;

            G.ajax.send('shop_open', [me.curType], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            });
        },
        refreshData: function () {
            var me = this;

            me.needScroll = false;
            me.getData(function () {
                me.setContents();
            });
        },
        refreshPanel: function () {
            var me = this;

            //刷新界面显示
            var data = me.filterData();
            me.table.setData(data);
            me.table.reloadDataWithScroll(true);
            if(me.refresh) me.refresh = 0;

            me.setRefreshBtn();
            me.setAttr();
        },
        setContents: function () {
            var me = this;

            var scrollview = me.nodes.scrollview_sp;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();
            var list = me.getNewItem();

            var data = me.filterData();
            var table = me.table = new X.TableView(scrollview,list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,1);
            table.setData(data);
            table.reloadDataWithScroll(me.needScroll);
            if(me.refresh) me.refresh = 0;

            me.setRefreshBtn();
            me.setAttr();
        },
        // 设置每行
        setItem: function (ui,data) {
            var me = this;

            for (var i = 0; i < 3; i++) {
                var parent = ui.finds('panel_wp' + (i + 1) + '$');
                var child = parent.getChildren()[0];
                child.hide();
                var dd = data[i];
                if (dd) {
                    me.setChildItem(child,dd);
                    child.show();
                }
            }

            ui.setTouchEnabled(false);
            ui.show();
        },
        //设置一行的子项
        setChildItem: function (ui,data) {
            var me = this;

            X.autoInitUI(ui);
            var imgKapian = ui.nodes.img_kapian1;
            var layIco = ui.nodes.ico_tb;
            // var txtName = ui.nodes.text_1;
            var imgAttr = ui.nodes.image_jb;
            var txtAttr = ui.nodes.text_jinbi;
            var imgZhekou = ui.nodes.img_zkbg;
            var txtZhekou = ui.nodes.text_zk;
            var imgYgm = ui.nodes.img_ygm;
            //倒计时
            var panelDjs = ui.nodes.panel_djs;
            var txtDjs = ui.nodes.txt_djs;
            // 限购次数
            // var panelXg = ui.nodes.panel_xgcs;
            // var txtXg = ui.nodes.txt_xgsl;

            panelDjs.hide();
            // panelXg.hide();
            layIco.removeAllChildren();
            imgZhekou.hide();
            txtZhekou.setString('');
            imgYgm.hide();

            // 道具
            var wid = G.class.sitem(data.item);
            if(me.refresh) wid.refresh();
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);

            G.frame.iteminfo.showItemInfo(wid);
            wid.setTouchEnabled(true);
            wid.setSwallowTouches(true);

            //设置名字
            // setTextWithColor(txtName,wid.conf.name,G.gc.COLOR[wid.conf.color || 1]);

            // 消耗货币
            imgAttr.loadTexture(G.class.getItemIco(data.need[0].t),1);
            txtAttr.setString(data.need[0].n);

            //折扣
            if (data.sale != 10) {
                imgZhekou.show();
                txtZhekou.setString(data.sale + 'z');
                X.enableOutline(txtZhekou,'#1d9600',2);
            }

            //是否显示限购
            if (data.buynum == 0) {
                imgYgm.show();
                txtAttr.hide();
                imgAttr.hide();
            }else{
                imgYgm.hide();
                txtAttr.show();
                imgAttr.show();
            }

            if(data.buynum > 0) {
                ui.finds("xiangou").show();
                ui.finds("wz1").setString(X.STR(L("XG"), data.buynum));
            }else {
                ui.finds("xiangou").hide();
            }

            //限购倒计时
            if (panelDjs.timer) {
                panelDjs.clearTimeout(panelDjs.timer);
                delete panelDjs.timer;
            }

            if (data.buynum > 0 && data.buytime && data.buytime > G.time) {
                panelDjs.show();
            }

            //整个卡牌除道具显示区域外可点击购买
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.data = data;
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    if (sender.data.buynum == 0) {
                        G.tip_NB.show(L('SHOP_ITEM_OVER'));
                        return;
                    }
                    if(G.class.getOwnNum(me.showAttr.t,me.showAttr.a) < data.need[0].n){
                        var name;
                        if(me.showAttr.a == "attr"){
                            name = G.class.attricon.getById(me.showAttr.t).name;
                        }else{
                            name = G.class.getItem(me.showAttr.t).name;
                        }
                        G.tip_NB.show(name  + L("BUZU"));
                        return;
                    }
                    if (G.class.shop.checkIsShowAlert(me.curType)) {
                        var str = L('SHOP_NEED_BUY');
                        G.frame.alert.data({
                            sizeType:3,
                            cancelCall:null,
                            okCall: function () {
                                me.buy({
                                    prize: data.item,
                                    idx:sender.data.idx,
                                    num:1
                                });
                            },
                            autoClose:true,
                            richText:str
                        }).show();
                    } else {
                        me.buy({
                            prize: data.item,
                            idx:sender.data.idx,
                            num:1
                        });
                    }
                }
            });
        },
        // 获得组合后的新模板
        getNewItem: function () {
            var me = this;

            var list = me.nodes.list_mb;
            var list2 = me.nodes.list;

            // var interval = (list.width - me.extConf.maxnum * list2.width) / (me.extConf.maxnum - 1);
            for (var i = 0; i < me.extConf.maxnum; i++) {
                var lay = list.finds('panel_wp' + (i + 1) + '$');
                lay.setTouchEnabled(false);
                lay.removeAllChildren();
                var item = list2.clone();
                item.setAnchorPoint(cc.p(0.5,0.5));
                item.setPosition(cc.p(lay.width / 2,lay.height / 2));
                lay.addChild(item);
                // item.setPosition(cc.p(item.width / 2 + (item.width + interval) * i,list.height / 2));
                // list.addChild(item);
            }

            return list;
        },
        //组合成需要显示的数据
        filterData: function () {
            var me = this;

            var data = me.DATA.shop.shopitem;

            if(me.zz != 0) {
                var zzArr = [];
                for(var i = 0; i < data.length; i ++) {
                    var conf = G.class.getItem(data[i].item.t);
                    if(conf.zhongzu == me.zz) zzArr.push(data[i]);
                }
                data = zzArr;
            }


            var newData = [],
                arr=[];
            for (var i = 0; i < data.length; i++) {
                var d = data[i];
                //if (i % me.extConf.maxnum == 0) {
                //    arr = [];
                //}
                arr.push(d);
                if ((i + 1) % me.extConf.maxnum == 0) {
                    newData.push(arr);
                    arr = [];
                }
            }
            if(arr.length > 0) {
                newData.push(arr);
            }

            return newData;
        },
        // 设置场景动画
        setAni: function () {
            var me = this;

            var layLeft = me.nodes.panel_zs1;
            var layRight = me.nodes.panel_zs2;
        },
        // 设置刷新按钮
        setRefreshBtn: function () {
            var me = this;

            var btnRe = me.nodes.btn_1;
            var imgAttr = me.nodes.img_zs;
            var txtAttr = me.nodes.text_2;
            var imgMf = me.nodes.img_wz;
            var imgSx = me.nodes.img_wz2;
            var conf = me.shopConf;
            var data = me.DATA;

            if(me.curType == "1" || me.curType == "5") imgSx.setString(L("CZ"));

            imgAttr.hide();
            txtAttr.hide();
            imgMf.hide();
            imgSx.hide();
            //如果商店不需要刷新，隐藏刷新按钮
            var freeTime = data.shop.freetime;
            if (conf.rseconds == -1 && conf.need.length < 1) {
                btnRe.hide();
                return;
            }else if(conf.rseconds == -1 && conf.need.length > 0){
                imgSx.show();
                imgAttr.show();
                txtAttr.show();
                if(conf.need[0].n == 20000){
                    conf.need[0].n = '2万';
                }
                txtAttr.setString(conf.need[0].n);
                imgAttr.loadTexture(G.class.getItemIco(conf.need[0].t),1);
            }else if (conf.rseconds !== -1 && freeTime - G.time < 0) {
                imgMf.show();
            }else if(conf.rseconds !== -1 && freeTime - G.time > 0){
                imgSx.show();
                imgAttr.show();
                txtAttr.show();
                if(conf.need[0].n == 20000){
                    conf.need[0].n = '2万';
                }
                txtAttr.setString(conf.need[0].n);
                imgAttr.loadTexture(G.class.getItemIco(conf.need[0].t),1);
            }

            btnRe.setTouchEnabled(true);
            btnRe.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if(G.class.getOwnNum(conf.need[0].t, conf.need[0].a) < conf.need[0].n){
                        var name;
                        if(conf.need[0].a == "attr"){
                            name = G.class.attricon.getById(conf.need[0].t).name;
                        }else{
                            name = G.class.getItem(conf.need[0].t).name;
                        }
                        G.tip_NB.show(name + L("BUZU"));
                        return;
                    }
                    G.ajax.send('shop_shuaxin',[me.curType],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            me.refresh = 1;
                            G.tip_NB.show(L('SHUAXIN') + L('SUCCESS'));
                            me.DATA.shop = d.d.shopinfo;
                            me.refreshPanel();
                        }
                    },true);
                }
            });
        },
        // 设置货币信息
        setAttr: function () {
            var me = this;
            var imgAttr = me.nodes.token_lhs;
            var txtAttr = me.nodes.txt_sl;

            imgAttr.loadTexture(G.class.getItemIco(me.showAttr.t), 1);
            txtAttr.setString(X.fmtValue(G.class.getOwnNum(me.showAttr.t,me.showAttr.a)));
        },
        buy: function (args) {
            var me = this;

            var num = args.num;
            var idx = args.idx;
            var shopid = me.curType;

            G.ajax.send('shop_buy',[shopid,idx],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {

                    me.DATA.shop = d.d.shopinfo;

                    // G.tip_NB.show(L('GOUMAI') + L('SUCCESS'));
                    G.frame.jiangli.data({
                        prize:[].concat(args.prize)
                    }).show();

                    me.refreshPanel();
                }
            },true);
        }

    });

    G.frame[ID] = new fun('shangdian2.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/8.
 */
(function () {
    //世界树-世界树
    G.class.worldtree_tree = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('shijieshu_sjs.json');
            G.frame.worldtree.tree = me;
        },
        bindBTN: function () {
            var me = this;

            me.nodes.btn_shufaj.click(function () {
                if(!me.curType) return;

                G.frame.worldtree_prize.data(me.curType).show();
            });

            me.nodes.panel_sjs_dizuo.click(function () {
                if(!me.curType) return;

                G.frame.worldtree_prize.data(me.curType).show();
            });

            for (var i = 1; i < 6; i ++) {
                var btn = me.nodes["panel_sjs_" + i];

                btn.setTouchEnabled(true);
                btn.click(function (sender) {
                    me.changeAni(sender);
                })
            }

            me.ui.finds("Text_20").setString(1);

            var mask = me.mask = new ccui.Layout;
            mask.setContentSize(cc.director.getWinSize());
            mask.setTouchEnabled(true);
            me.ui.addChild(mask);
            mask.zIndex = 101;
            mask.hide();
            
            me.nodes.btn_gs.click(function () {
                me.ajax("worldtree_call", [me.curType], function (str, data) {
                    if(data.s == 1) {
                        me.mask.show();
                        if(me.noAni) {
                            G.frame.jiangli.data({
                                prize:[].concat(data.d.prize),
                                tree: true
                            }).show();
                            G.frame.worldtree.setBaseInfo();
                            me.mask.hide();
                            me.noAni = false;
                        } else {
                            me.curAni.playWithCallback("fanye", false, function () {
                                G.frame.jiangli.data({
                                    prize:[].concat(data.d.prize),
                                    tree: true
                                }).show();
                                G.frame.worldtree.setBaseInfo();
                                me.mask.hide();
                                me.curAni.play("zhankaixunhuan", true);
                            })
                        }

                    }else {
                        me.mask.hide();
                        me.noAni = false;
                    }
                })
            }, 1000);
        },
        changeAni: function(sender) {
            var me = this;
            var target = me.nodes.panel_sjs_dizuo;

            if(!sender.ani) return;

            me.mask.show();

            if(me.aniNode) {
                me.aniNode.removeFromParent();
            }

            me.aniNode = sender.aniNode;
            sender.ani.playWithCallback("yidong", false, function () {
                sender.ani.play("zhankaixunhuan", true);
                me.curType = sender.type;
                me.curAni = sender.ani;

                if(me.lastNode) {
                    me.addAni(me.lastNode.getParent(), me.lastNode, function (node, action) {
                        me.lastNode.aniNode = node;
                        me.lastNode.ani = action;

                        me.lastNode = sender;
                        me.lastNode.ani = undefined;
                        me.mask.hide();
                    })
                } else {
                    me.lastNode = sender;
                    me.lastNode.ani = undefined;
                    me.mask.hide();
                }
            });
            sender.aniNode.runAction(cc.moveTo(0.5, target.getPosition()));
        },
        onOpen: function () {
            var me = this;

            me.bindBTN();

            G.class.ani.show({
                json: "ani_yingxionghuijuan_bg",
                addTo: me.ui,
                x: me.ui.width / 2,
                y: me.ui.height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node) {
                    node.zIndex = -1;
                }
            });

            for (var i = 1; i < 6; i ++) {
                me.nodes["panel_sjs_" + i].zIndex = 99;
            }

            me.nodes.btn_gs.zIndex = 100;
            me.nodes.btn_shufaj.zIndex = 9999;

            me.aniType = {
                1: "siwang",
                2: "aoshu",
                3: "xieneng",
                4: "ziran",
                5: "guangan"
            }
        },
        onShow: function () {
            var me = this;

            me.setContents();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.mask.show();
            
            for (var i = 1; i < 6; i ++) {
                var lay = me.nodes["panel_sjs_" + i];
                var idx = i;

                (function (lay, index) {
                    lay.type = index;
                    me.addAni(lay.getParent(), lay, function (node, action) {
                        lay.aniNode = node;
                        lay.ani = action;
                    }, false);
                })(lay, idx);
            }

            me.ui.setTimeout(function () {
                me.nodes.panel_sjs_1.triggerTouch(ccui.Widget.TOUCH_ENDED);
            }, 500);
        },
        addAni: function(parent, lay, callback, isOpen) {
            var me = this;

            G.class.ani.show({
                json: "ani_yingxionghuijuan_" + me.aniType[lay.type],
                addTo: parent,
                x: lay.x,
                y: lay.y,
                cache: true,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    action.play(isOpen ? "zhankaixunhuan" : "xunhuan", true);

                    callback && callback(node, action);
                }
            })
        }
    });

})();
;;/**
 * Created by LYF on 2018/6/6.
 */

(function () {
    //悬赏特权-详情
    var ID = 'tequanxiangqing';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.ui.setPositionY(335);
            me.ui.finds("img_xiantiao1").hide();
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var str1 = L("MXTQ") + (G.frame.xuanshangrenwu.adventure ? L("YJH_1") : L("WJHMX"));
            var rh1 = new X.bRichText({
                size:22,
                maxWidth:me.nodes.panel_jnnr.width,
                lineHeight:34,
                family:G.defaultFNT,
                color:G.gc.COLOR.n5
            });
            rh1.text(str1);
            me.nodes.panel_jnnr2.addChild(rh1);

            var str2 = L("YXTQ") + (G.frame.xuanshangrenwu.hero ? L("YJH_1") : L("WJHYX"));
            var rh2 = new X.bRichText({
                size:22,
                maxWidth:me.nodes.panel_jnnr.width,
                lineHeight:34,
                family:G.defaultFNT,
                color:G.gc.COLOR.n5
            });
            rh2.text(str2);
            me.nodes.panel_jnnr.addChild(rh2);

            me.nodes.bg_top.height = 248;
            me.nodes.panel_jnnr2.setPositionY(135);
        },
    });

    G.frame[ID] = new fun('ui_top2.json', ID);
})();
;;// created by LYF on 2018/6/5

(function () {
    //悬赏任务

    var ID = 'xuanshangrenwu';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        getData : function(callback){
            var me = this;
            G.ajax.send('xstask_open',[],function(data){
                if(!data) return;
                var data = JSON.parse(data);
                if (data.s == 1) {
                    me.DATA = data.d;
                    me.iszchd = data.d.iszchd > 0 ? data.d.iszchd / 100 : 1;
                    callback && callback();
                }
            },true);
        },
        shuaxinData: function(callback){
            var me = this;
            G.ajax.send("xstask_shuaxin", [], function (data) {
                if(!data) return;
                var data = JSON.parse(data);
                if(data.s == 1){
                    me.isRank = true;
                    me.isSX = true;
                    me.DATA = data.d;
                    callback && callback();
                }
            })
        },
        bindUI: function () {
            var me = this;
            me.ui.nodes.mask.click(function(sender,type){
                if(G.frame.tanxian.isShow){
                    G.frame.tanxian.ui.nodes.txt_xsds.setString(P.gud.jifen);
                }
                me.remove();
            });
            //setPanelTitle(me.nodes.tip_title, L('UI_TITLE_XSRW'));
            me.nodes.tip_title.setString(L('UI_TITLE_XSRW'));
        },
        viewUI: function(){
            var me = this;
            me._view.nodes.btn2_on.click(function (sender, type) {
                me.setHaveZi();
                if(me.isZi){
                    G.frame.alert.data({
                        title: L("GM"),
                        cancelCall:null,
                        okCall: function () {
                            me.shuaxinData(function () {
								/*
                                for (var i in me._view.nodes.listview_xuanshangrenwu.children) {
                                    var chr = me._view.nodes.listview_xuanshangrenwu.children[i];
                                    G.class.ani.show({
                                        json: "ani_qicailiuguang",
                                        addTo: chr,
                                        x: chr.width / 2,
                                        y: chr.height / 2,
                                        repeat: false,
                                        autoRemove: true,
                                        onload: function (node, action) {
                                            node.setScale(1.2);
                                            node.setTag(123234);
                                        }
                                    })
                                }
								*/
                                //me.ui.setTimeout(function () {
                                    me.setContents();
                                //}, 800);
                            })
                        },
                        richText:L("RWZYZ"),
                    }).show();
                }else{
                    me.shuaxinData(function () {
						/*
                        for (var i in me._view.nodes.listview_xuanshangrenwu.children) {
                            var chr = me._view.nodes.listview_xuanshangrenwu.children[i];
                            G.class.ani.show({
                                json: "ani_qicailiuguang",
                                addTo: chr,
                                x: chr.width / 2,
                                y: chr.height / 2,
                                repeat: false,
                                autoRemove: true,
                                onload: function (node, action) {
                                    node.setScale(1.2);
                                    node.setTag(123234);
                                }
                            })
                        }
						*/
                        //me.ui.setTimeout(function () {
                            me.setContents();
                        //}, 800);
                    })
                }
            });
            me._view.nodes.btn_tishi.click(function (sender, type) {
                // G.frame.alert.data({
                //     title: L("BZ"),
                //     richText: L("TS3"),
                // }).show();

                G.frame.help.data({
                    intr:L("TS3")
                }).show();
            });

            var btn_tq = me._view.nodes.btn_xuanshangrenwu_tq;
            me.adventure = me.DATA.adventure;
            me.hero = me.DATA.hero;
            if(me.DATA.adventure || me.DATA.hero){
                G.class.ani.show({
                    json: "ani_huiyuan",
                    addTo: me._view.ui,
                    x: btn_tq.getPositionX() + btn_tq.width/2 - 5,
                    y: btn_tq.getPositionY() - btn_tq.height/2 + 3,
                    repeat: true,
                    autoRemove: false,
                });
            }
            btn_tq.setEnabled(true);
            btn_tq.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_BEGAN) {
                    G.frame.tequanxiangqing.show();
                }else if (type == ccui.Widget.TOUCH_ENDED || type == ccui.Widget.TOUCH_NOMOVE || type == ccui.Widget.TOUCH_CANCELED) {
                    me.ui.setTimeout(function () {
                        if (G.frame.tequanxiangqing.isShow) {
                            G.frame.tequanxiangqing.remove();
                        }
                    },100);
                }
            })
        },
        onOpen: function () {
            var me = this;
            X.audio.playEffect("sound/openxuanshang.mp3");
            me.bindUI();
            me.isRank = true;
            me.SXCONF = G.class.xuanshangrenwu.getConf();
            me.SXtype = 1;
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;
            new X.bView("xuanshangrenwu.json", function (view) {
                me._view = view;
                me._view.nodes.scrollview_xuanshangrenwu.hide();
                me._view.finds("panel_db").setTouchEnabled(false);
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me.viewUI();
                X.viewCache.getView("xuanshangrenwu_list.json", function (node) {
                    me.list = node.finds("list_nr");
                    me.setHaveZi();
                    me.setContents();
                    me.ui.setTimeout(function(){
                        G.guidevent.emit('xuanshangrenwuOpenOver');
                    },200);
                })
            });
        },
        setHaveZi: function(){
            var me = this;
            var data = me.DATA.task;
            me.isZi = false;
            for(var i = 0; i < data.length; i ++){
                if(data[i].color >= 3 && data[i].isjiequ == 0){
                    me.isZi = true;
                    break;
                }
            }
        },
        showSX: function(){
            var me = this;
            me._view.nodes.txt_xssl.setString(G.class.getOwnNum(me.SXCONF.needitem[0].t, me.SXCONF.needitem[0].a));
            if(me.DATA.freenum <= 0){
                me._view.finds("txt_mfsx").hide();
                me._view.nodes.panel_xhsx.show();
                me._view.nodes.panel_xhsx.setTouchEnabled(false);
                if(G.class.getOwnNum(me.SXCONF.needitem[0].t, me.SXCONF.needitem[0].a) > 0){
                    me.SXtype = 2;
                    me._view.finds("panel_db").setBackGroundImage(G.class.getItemIco(me.SXCONF.needitem[0].t), 1);
                    // me._view.nodes.txt_xh.setString(me.SXCONF.needitem[0].n + "/" + G.class.getOwnNum(me.SXCONF.needitem[0].t, me.SXCONF.needitem[0].a));
                    me._view.nodes.txt_xh.setString(1);

                }else{
                    me.SXtype = 3;
                    me._view.finds("panel_db").setBackGroundImage(G.class.getItemIco(me.SXCONF.needrmbmoney[0].t), 1);
                    me._view.nodes.txt_xh.setString(me.SXCONF.needrmbmoney[0].n);
                }
            }else{
                me._view.finds("txt_mfsx").show();
                me._view.nodes.panel_xhsx.hide();
            }
        },
        refreshData: function () {
            var me = this;

            me.getData(function () {
                me.setTaskList();
            });
        },
        setTaskList: function(){
            var me = this;
            var data = me.DATA.task;
            var view = me._view.nodes.listview_xuanshangrenwu;

            var jd_dq = P.gud.jifen;
            var jd_max = G.class.tanxian.getMax();
            var pre = jd_dq / jd_max * 100;
            me._view.nodes.img_jdt1.setPercent(pre);
            me._view.nodes.txt_xsds.setString(jd_dq + "/" + jd_max);

            me.isZi = false;
            if(me.isRank){
                me.sortData(data);
                me.isRank = false;
            }

            view.removeAllChildren();
            cc.enableScrollBar(view);

            view.setItemsMargin(6);

            for(var i = 0; i < data.length; i ++){
                view.pushBackCustomItem(me.setTask(me.list.clone(), data[i]));
            }
        },
        setTask: function(ui, data){
            var me = this;
            var conf = G.class.xuanshangrenwu.getConfById(data.taskid);

            X.autoInitUI(ui);
            X.alignItems(ui.nodes.ico_jlwp,data.prize,'left',{touch: true});
            X.enableOutline(ui.nodes.txt_djs,cc.color('#66370e'),2);
            ui._id = data._id;
            ui.setSwallowTouches(false);
            ui.nodes.txt_djs.setFontSize(15);
            ui.nodes.ico_jlwp.setTouchEnabled(false);
            ui.nodes.wz_title.setString(conf.tasktitle);
            ui.nodes.wz_xhsl.setString(conf.need[0].n * me.iszchd);
            ui.nodes.btn2_on.hide();
            ui.finds("panel_xh").hide();
            ui.finds("token_xsds").loadTexture(G.class.getItem(conf.need[0].t, "attr").ico, 1);
            ui.nodes.bg_xuanshangrenwu_pj.setBackGroundImage("img/xuanshangrenwu/bg_xuanshangrenwu_" + (parseInt(conf.color) + 1) + ".png", 1);

            while (ui.getChildByTag(123123)) {
                ui.getChildByTag(123123).removeFromParent();
            }
            while (ui.getChildByTag(123234)) {
                ui.getChildByTag(123234).removeFromParent();
            }
            while (ui.nodes.img_xuanshangrenwu_jdt.getChildByTag(123345)) {
                ui.nodes.img_xuanshangrenwu_jdt.getChildByTag(123345).removeFromParent();
            }

            if(data.isAniJiequ){
                G.class.ani.show({
                    json: "ani_xuanshang_jsrw",
                    addTo: ui,
                    x: ui.width / 2,
                    y: ui.height / 2,
                    repeat: false,
                    autoRemove: true,
                    onload: function (node, action) {
                        node.setScaleX(1.2)
                    },
                    onend: function (node, action) {
                        data.isAniJiequ = false;
                    }
                });
            }

            if(data.isjiequ){
                if(data.ftime - G.time > 0){
                    var xh = 0;
                    var time = data.ftime - G.time;

                    for(var i in me.SXCONF.jiasuneed){
                        var rand = i.split("_");
                        var ms = time / 3600;
                        if(rand[0] <= ms && ms < rand[1]){
                            xh = me.SXCONF.jiasuneed[i][0].n;
                            break;
                        }
                    }

                    // G.class.ani.show({
                    //     json: "ani_xuanshang_rwz",
                    //     addTo: ui,
                    //     x: ui.finds("panel_rwz").x,
                    //     y: ui.finds("panel_rwz").y,
                    //     repeat: true,
                    //     autoRemove: false,
                    //     onload: function (node, action) {
                    //         node.setTag(123123);
                    //     }
                    // });

                    X.timeout(ui.nodes.txt_djs, data.ftime, function () {
                        setPanelTitle(ui.nodes.wz_djs, L("WC"));
                        ui.nodes.img_xuanshangrenwu_jdt.setPercent(100);
                        ui.nodes.btn3_on.hide();
                        ui.nodes.btn1_on.show();
                    });

                    ui.nodes.text_2.setString(xh);
                    X.enableOutline(ui.nodes.text_2, '#2a1c0f', 1);
                    ui.nodes.bg_xuanshangrenwu_jdt.show();
                    ui.nodes.img_xuanshangrenwu_jdt.setPercent(100 - time / conf.dotime * 100);
                    ui.nodes.btn3_on.show();
                    ui.nodes.btn3_on.click(function (sender, type) {
                        G.ajax.send("xstask_lingqu", [data._id, 1], function (data) {
                            if(!data) return;
                            var data = JSON.parse(data);
                            if(data.s == 1){
                                G.frame.jiangli.data({
                                    prize: data.d
                                }).show();
                                me.getData();
                                ui.removeFromParent(true);
                            }
                        })
                    });
                }else{
                    ui.nodes.bg_xuanshangrenwu_jdt.show();
                    ui.nodes.img_xuanshangrenwu_jdt.setPercent(100);
                    G.class.ani.show({
                        json: "ani_xuanshang_rwwc",
                        addTo: ui.nodes.img_xuanshangrenwu_jdt,
                        x: ui.nodes.img_xuanshangrenwu_jdt.width / 2,
                        y: ui.nodes.img_xuanshangrenwu_jdt.height / 2,
                        repeat: true,
                        autoRemove: false,
                        onload: function (node, action) {
                            node.setTag(321321);
                        }
                    });
                    setPanelTitle(ui.nodes.txt_djs, L("WC"));
                    ui.nodes.btn1_on.show();
                    ui.nodes.btn1_on.setTitleColor(cc.color(G.gc.COLOR.n13));
                    ui.nodes.btn1_on.touch(function (sender, type) {
                        if(type == ccui.Widget.TOUCH_ENDED){
                            G.ajax.send("xstask_lingqu", [data._id, 0], function (data) {
                                if(!data) return;
                                var data = JSON.parse(data);
                                if(data.s == 1){
                                    G.frame.jiangli.data({
                                        prize:data.d
                                    }).show();
                                    me.getData();
                                    ui.removeFromParent(true);
                                }
                            })
                        }
                    })
                }
            }else{
                ui.finds("panel_rwz").hide();
                ui.nodes.bg_xuanshangrenwu_jdt.hide();
                ui.finds("panel_xh").show();
                ui.nodes.btn1_on.hide();
                ui.nodes.btn2_on.show();
                ui.nodes.btn2_on.touch(function (sender, type) {
                    if(type == ccui.Widget.TOUCH_ENDED){
                        me.jiequTask = ui;
                        G.frame.xuanshangrenwu_jiequ.data({conf: conf, data: data}).show();
                    }
                })
            }
            return ui;
        },
        setContents:function() {
            var me = this;

            if(me.DATA.freenum && me.DATA.freenum < 1){
                me.node.btn2_on.finds("txt_mfsx").hide();
                me.node.panel_xhsx.show();
            }

            me.showSX();
            me.setTaskList();

            // me._view.nodes.txt_xsds.setString(P.gud.jifen);
        },
        sortData: function(data){
            var me = this;
            for(var i = 0; i < data.length; i ++){
                var p = data[i];
                if(p.isjiequ){
                    if(p.ftime - G.time <= 0){
                        p[2] = 1;
                    }else{
                        p[2] = 3;
                    }
                }else{
                    p[2] = 2
                }
                if(me.isSX){
                    data[i].isAni = true;
                }
            }
            data.sort(function (a, b) {
                return a[2] < b[2]? -1 : 1;
            });
        },
        onAniShow: function () {
            var me = this;
        },
        onRemove: function () {
            var me = this;
            me.event.emit('hide');
        },
        jqTask: function (data) {
            var me = this;
            var ui;
            for(var i = 0; i < me._view.nodes.listview_xuanshangrenwu.getChildren().length; i ++){
                var chr = me._view.nodes.listview_xuanshangrenwu.getChildren()[i];
                if(chr._id == data._id){
                    ui = chr;
                    break;
                }
            }
            me.setTask(ui, data);
            var jd_dq = P.gud.jifen;
            var jd_max = G.class.tanxian.getMax();
            var pre = jd_dq / jd_max * 100;
            me._view.nodes.img_jdt1.setPercent(pre);
            me._view.nodes.txt_xsds.setString(jd_dq + "/" + jd_max);
        }
    });

    G.frame[ID] = new fun('ui_tip7.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/5.
 */

(function () {
    //英雄-种族-选择
    G.class.xstask_xq = X.bView.extend({
        extConf:{
            xuanze:{
                data: function (zhongzu) {
                    var data = G.DATA.yingxiong.list;
                    var keys = X.keysOfObject(data);

                    for(var i = 0; i < keys.length; i ++){
                        if(!data[keys[i]].tid) data[keys[i]].tid = keys[i];
                    }

                    var arr = [];
                    if (zhongzu == 0) {
                        arr = keys;
                    } else {
                        for (var i = 0; i < keys.length; i++) {
                            var tid = keys[i];
                            var heroData = data[tid];
                            if (heroData.zhongzu == zhongzu) {
                                arr.push(tid);
                            }
                        }
                    }

                    return arr;
                },
                sort: function (a,b) {
                    var me = this;
                    var dataA = G.DATA.yingxiong.list[a];
                    var dataB = G.DATA.yingxiong.list[b];
                    var ysz = G.frame.xuanshangrenwu.DATA.herolist;

					var dataA_isRWZ = X.inArray(ysz, dataA.tid)?1:0;
					var dataB_isRWZ = X.inArray(ysz, dataB.tid)?1:0;

                    //先排序，后分类
                    if(dataA_isRWZ != dataB_isRWZ){
                        return dataA_isRWZ < dataB_isRWZ ? -1 : 1;
                    } else if (dataA.star != dataB.star) {
                        return dataA.star > dataB.star ? -1 : 1;
                    } else if (dataA.zhongzu != dataB.zhongzu) {
                        return dataA.zhongzu < dataB.zhongzu ? -1 : 1;
                    } else if (dataA.hid != dataB.hid) {
                        return dataA.hid < dataB.hid ? -1 : 1;
                    }
                }
            }
        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('ui_tip3_shang.json');
        },
        refreshPanel: function () {
            var me = this;
            me.setContents();
        },
        bindBTN: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
            me.createMenu();
        },
        onShow: function () {
            var me = this;
            me.refreshPanel();
        },
        setContents: function () {
            var me = this;
            var type = me.curType || 0;
            me.selectedData = [];
            me.ysz = G.frame.xuanshangrenwu.DATA.herolist;
            me._menus[type].triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        createMenu: function () {
            var me = this;

            var view = me;
            me._menus = [];
            var listview = view.nodes.listview_zz;
            cc.enableScrollBar(listview);
            view.nodes.list_ico.hide();

            for (var i = 0; i < 7; i++) {
                var list_ico = view.nodes.list_ico.clone();
                X.autoInitUI(list_ico);
                list_ico.nodes.panel_zz.setTouchEnabled(false);
                list_ico.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (i + 1) + '.png', 1);
                list_ico.nodes.panel_zz.setScale(0.8)
                list_ico.show();

                list_ico.data = i;
                list_ico.setTouchEnabled(true);

                list_ico.click(function(sender, type){
                    for(var j=0;j<me._menus.length;j++){
                        var node = me._menus[j];
                        var img = 'img/public/ico/ico_zz' + (node.data + 1) + '.png';
                        if(node.data == sender.data){
                            if(me.effect) X.audio.playEffect("sound/dianji.mp3", false);
                            me.effect = true;
                            me.curType = sender.data;
                            me.fmtItemList();
                            img = 'img/public/ico/ico_zz' + (node.data + 1) + '_g.png';
                            if(sender.ani){
                                sender.ani.show();
                            }else{
                                G.class.ani.show({
                                    json: "ani_guangbiaoqiehuan",
                                    addTo: sender,
                                    x: sender.width / 2,
                                    y: sender.height / 2,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node) {
                                        sender.ani = node;
                                    }
                                })
                            }
                        }else{
                            //node.nodes.img_yuan_xz.hide();
                            if(node.ani) node.ani.hide();
                        }
                        node.nodes.panel_zz.setBackGroundImage(img,1);
                    }
                });

                me._menus.push(list_ico);
                listview.pushBackCustomItem(list_ico);
                list_ico.show();
            }
        },
        setData: function(data){
            var me = this;
            for (var i = 0; i < data.length; i ++){
                if(X.inArray(me.ysz, data[i].tid)){
                    data[i].isRWZ = 1;
                }else{
                    data[i].isRWZ = 0;
                }
            }
            data.sort(function (a, b) {
                return a.isRWZ > b.isRWZ ? -1 : 1;
            })
        },
        fmtItemList: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();

            var d = me.extConf[me._type].data(me.curType);



            if (d.length < 1) {
                cc.sys.isObjectValid(me.ui.finds('zwnr')) && me.ui.finds('zwnr').show();
                return;
            } else {
                cc.sys.isObjectValid(me.ui.finds('zwnr')) && me.ui.finds('zwnr').hide();
            }

            var ysz = G.frame.xuanshangrenwu.DATA.herolist;

            //对材料分类，分类依据：加锁与未加锁
            var canUseArr = [],
                lockArr = [];
            for (var i = 0; i < d.length; i++) {
                var tid = d[i];
                canUseArr.push(tid);
            }

            canUseArr.sort(me.extConf[me._type].sort);

            // lockArr.sort(me.extConf[me._type].sort);

            var list = [].concat(canUseArr);
            //me.setData(list);

            var table = me.table = new X.TableView(scrollview,me.nodes.list, 5,function (ui, data) {
                me.setItem(ui, data);
            },null,null,1,5);
            table.setData(list);
            table.reloadDataWithScroll(true);

        },
        setItem: function (ui, data) {
            var me = this;

            ui.setName(data);
            X.autoInitUI(ui);

            var heroData = G.DATA.yingxiong.list[data];
            var widget = G.class.shero(heroData);
            widget.setScale(0.95);
            widget.setAnchorPoint(0.5,1);
            widget.setPosition(cc.p( ui.nodes.panel_ico.width*0.5, ui.nodes.panel_ico.height ));
            ui.nodes.panel_ico.removeAllChildren();
            ui.nodes.panel_ico.addChild(widget);
            ui.nodes.panel_ico.show();

            // img_suo$
            // img_gou$
            //var imgSuo = ui.nodes.img_suo;
            // var imgGou = ui.nodes.img_gou;
            //
            // imgGou.hide();
            //imgSuo.hide();

            if(!X.inArray(G.frame.xuanshangrenwu.DATA.herolist, data)){
                ui.nodes.img_rwz.hide();
            }
            if (X.inArray(me.selectedData,data)) {
                // imgGou.show();
                widget.setGou(true);
            }
            if(X.inArray(me.ysz, data)){
                ui.nodes.img_rwz.show();
                ui.nodes.img_rwz.setScale(0.95);
                ui.nodes.img_rwz.setPositionY(53);
                // widget.setHighLight(false);
            }
            ui.nodes.panel_ico.setSwallowTouches(false);
            ui.nodes.panel_ico.data = data;
            ui.nodes.panel_ico.setTouchEnabled(true);
            ui.nodes.panel_ico.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    G.frame.xuanshangrenwu_jiequ.posSelect = G.frame.xuanshangrenwu_jiequ.ui.convertToNodeSpace(
                        sender.getParent().convertToWorldSpace(sender.getPosition()));
                    if(X.inArray(me.ysz, data)){
                        G.tip_NB.show("该英雄已在任务中");
                        return;
                    }
                    if (X.inArray(me.selectedData, sender.data)) {
                        G.frame.xuanshangrenwu_jiequ.posSelect.x += sender.width / 2;
                        widget.setGou(false);
                        me.selectedData.splice(X.arrayFind(me.selectedData,sender.data),1);
                        G.frame.xuanshangrenwu_jiequ.bottom.removeItem(sender.data);
                    } else {
                        if (me.selectedData.length >= G.frame.xuanshangrenwu_jiequ.data().conf.heronum) {
                            G.tip_NB.show("已达上阵数量上限");
                            return;
                        }
                        me.selectedData.push(sender.data);
                        widget.setGou(true);

                        //移动动画
                        G.frame.xuanshangrenwu_jiequ.bottom.addItem(sender.data);
                        if(cc.isNode(G.frame.xuanshangrenwu_jiequ.item)){
                            G.frame.xuanshangrenwu_jiequ.item.stopAllActions();
                            G.frame.xuanshangrenwu_jiequ.item.removeFromParent();
                        }
                        var itemClone = G.frame.xuanshangrenwu_jiequ.item = sender.clone();
                        itemClone.finds("gou").hide();
                        itemClone.setPosition(G.frame.xuanshangrenwu_jiequ.posSelect);
                        G.frame.xuanshangrenwu_jiequ.ui.addChild(itemClone);
                        G.frame.xuanshangrenwu_jiequ.playAniMove(itemClone);
                    }
                }
            });
            ui.show();
        },
        addGou: function(tid){
            var me = this;
            var children = me.table.getAllChildren();
            for (var i = 0; i < children.length; i++) {
                var child = children[i];
                if (child.isVisible() && child.getChildren()[0].data == tid) {
                    child.getChildren()[0].getChildren()[0].setGou(true);
                    break;
                }
            }
        },
        removeGou: function (tid) {
            var me = this;

            var children = me.table.getAllChildren();
            for (var i = 0; i < children.length; i++) {
                var child = children[i];
                if (child.isVisible() && child.getChildren()[0].data == tid) {
                    child.getChildren()[0].getChildren()[0].setGou(false);
                    break;
                }
            }
        },
        getChildByTid:function (tid) {
            var me = this;

            var cd = null;
            var children = me.table.getAllChildren();
            for (var i = 0; i < children.length; i++) {
                var child = children[i];
                if (child.isVisible() && child.getChildren()[0].data == tid) {

                    cd = child;
                    break;
                }
            }

            return cd;
        }
    });
})();
;;/**
 * Created by LYF on 2018/6/5.
 */
(function () {
    //英雄上阵选择
    G.class.xstask_check = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('xuanshangrenwu_tip_dcyq.json');
        },
        refreshPanel: function () {
            var me = this;
        },
        bindBTN: function () {
            var me = this;
            //一键上阵
            me.nodes.btn_1.click(function (sender, type) {
                me.isAllHero = true;
                me.isStar = false;
                for(var i in me.heroArr){
                    if(me.heroArr[i].data){
                        me.removeItem(me.heroArr[i].data);
                    }
                }
                me.heroArr = [];
                for(var i = 0; i < me.conf.heronum; i ++){
                    var list = me.nodes.list_yx.clone();
                    list.setBackGroundImage('img/public/ico/ico_bg0.png',1);
                    me.heroArr.push(list);
                    list.show();
                    me.setTouch(list);
                }
                X.center(me.heroArr, me.nodes.panel_tb, {

                });

                var sz = [];
                var heroList = G.DATA.yingxiong.list;
                var keys = X.keysOfObject(heroList);
                var tiaojian = me.tiaojianArr;
                for(var i = 1, n = 0; n < me.conf.heronum; i ++,n++){
                    if(!tiaojian[i]) break;
                    var ok = [];
                    for(var j = 0; j < keys.length; j ++){
                        var dd = heroList[keys[j]][tiaojian[i][0]];
                        if(tiaojian[i][0] == "zhongzu"){
                            var aa = heroList[keys[j]][tiaojian[i][0]];
                            if(heroList[keys[j]][tiaojian[i][0]] == tiaojian[i][1]){
                                ok.push(heroList[keys[j]]);
                            }
                        }
                    }
                    if(ok.length !== 0){
                        ok.sort(function (a, b) {
                            return a.zhanli < b.zhanli? -1 : 1;
                        });
                        if(me.isStar == false){
                            var is = false;
                            for(var t = 0; t < ok.length; t ++){
                                if(ok[t].star >= me.tiaojianArr[0][1]
                                    && X.inArray(G.frame.xuanshangrenwu.DATA.herolist, ok[t].tid) == false){
                                    sz.push(ok[t].tid);
                                    is = true;
                                    me.isStar = true;
                                    break;
                                }
                            }
                            if(is == false){
                                for(var o in ok){
                                    var a = ok[o].tid;
                                    if(X.inArray(sz, ok[o].tid) == false
                                        && X.inArray(G.frame.xuanshangrenwu.DATA.herolist, ok[o].tid) == false){
                                        sz.push(ok[o].tid);
                                        break;
                                    }
                                }
                            }
                        }else{
                            for(var o in ok){
                                if(X.inArray(sz, ok[o].tid) == false
                                    && X.inArray(G.frame.xuanshangrenwu.DATA.herolist, ok[o].tid) == false){
                                    sz.push(ok[o].tid);
                                    break;
                                }
                            }
                        }

                    }
                }
                function f() {
                    if(sz.length < me.conf.heronum){
                        var hero = G.DATA.yingxiong.list;
                        var keys = X.keysOfObject(hero);
                        var arr = [];
                        for(var i = 0; i < keys.length; i ++){
                            arr.push(hero[keys[i]]);
                        }
                        arr.sort(function (a, b) {
                           return a.star < b.star ? -1 : 1;
                        });
                        for(var i = 0; i < arr.length; i++){
                            if(!X.inArray(sz, arr[i].tid)
                                && !X.inArray(G.frame.xuanshangrenwu.DATA.herolist, arr[i].tid)
                                && arr[i].star >= me.tiaojianArr[0][1]){
                                me.isStar = true;
                                sz.push(arr[i].tid);
                                break;
                            }
                        }
                    }
                }
                if((sz.length < tiaojian.length) && !me.isStar){
                    f();
                }
                if(sz.length < 1){
                    G.tip_NB.show(L("SZYXBZ"));
                    return;
                }

                for(var i in sz){
                    me.addItem(sz[i]);
                    G.frame.xuanshangrenwu_jiequ.top.selectedData.push(sz[i]);
                    G.frame.xuanshangrenwu_jiequ.top.addGou(sz[i]);
                }
                me.isStar = false;
            }, 200);
            //开始
            me.nodes.btn_2.click(function (sender, type) {
                var heroId = [];
                for(var i in me.heroArr){
                    if(!!me.heroArr[i].data){
                        heroId.push(me.heroArr[i].data)
                    }
                }
                G.ajax.send("xstask_jiequ", [me.data._id, heroId], function (data) {
                    if(!data) return;
                    var data = JSON.parse(data);
                    if(data.s == 1){
                        me.isAni = true;
                        G.frame.xuanshangrenwu.getData();
                        var conf = G.class.xuanshangrenwu.getConfById(me.data.taskid);
                        me.data.isjiequ = 1;
                        me.data.ftime = G.time + conf.dotime;
                        me.data.isAniJiequ = true;
                        G.frame.xuanshangrenwu.jqTask(me.data);
                        G.frame.xuanshangrenwu_jiequ.remove();
                        if(G.frame.tanxian.isShow) {
                            G.frame.tanxian.yuan_jdl(P.gud.jifen, 0 - me.conf.need[0].n, 0);
                        }
                    }
                })
            });
        },
        onOpen: function () {
            var me = this;
            me.isAni = false;
            me.bindBTN();
        },
        onShow: function () {
            var me = this;
            cc.enableScrollBar(me.nodes.listview);
            cc.enableScrollBar(me.nodes.listview_zz);
            me.heroArr = [];
            me.tiaojianArr = [];
            me.zhongZuIcon = [];
            me.data = G.frame.xuanshangrenwu_jiequ.data().data;
            me.conf = G.frame.xuanshangrenwu_jiequ.data().conf;
            me.setContents();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var keys = X.keysOfObject(me.data.cond);
            me.nodes.txt_ds.setString(P.gud.jifen + "/" + me.conf.need[0].n * G.frame.xuanshangrenwu.iszchd);
            me.nodes.txt_djs.setString(me.conf.dotime / 3600 + L("XS"));
            me.ui.finds("txt_dcys").show();
            me.ui.finds("txt_dcys").setTextColor(cc.color(G.gc.COLOR[5]));
            me.nodes.txt_ds.setTextColor(cc.color(me.conf.need[0].n > P.gud.jifen? '#FF3D23' : '#804326'));

            for(var i = 0;i < me.conf.heronum;i ++){
                var list = me.nodes.list_yx.clone();
                list.setBackGroundImage('img/public/ico/ico_bg0.png', 1);
                me.heroArr.push(list);
                me.setTouch(list);
                list.show();
            }
            X.center(me.heroArr, me.nodes.panel_tb, {

            });

            for(var i = 0; i < keys.length; i ++){
                if(me.data.cond[keys[i]].length == undefined){
                    me.tiaojianArr.push([keys[i], me.data.cond[keys[i]], "_h"]);
                }else{
                    for(var j = 0; j < me.data.cond[keys[i]].length; j ++){
                        me.tiaojianArr.push([keys[i], me.data.cond[keys[i]][j], "_h"]);
                    }
                }
            }
            me.tiaojianArr.sort(function (a, b) {
                return a[0] < b[0]? -1 : 1;
            });
            for(var i = 0;i < me.tiaojianArr.length; i ++){
                var icon = me.nodes.list_ico.clone();
                if(me.tiaojianArr[i][0] == "star"){
                    icon.setBackGroundImage("img/public/ico/ico_xj" + (parseInt(me.tiaojianArr[i][1]) + 1) + me.tiaojianArr[i][2] + ".png", 1);
                }else if(me.tiaojianArr[i][0] == "zhongzu"){
                    icon.setBackGroundImage("img/public/ico/ico_zz" + (parseInt(me.tiaojianArr[i][1]) + 1) + me.tiaojianArr[i][2] + ".png", 1);
                }
                me.zhongZuIcon.push(icon);
            }
            X.center(me.zhongZuIcon, me.nodes.panle_tb2, {
                scale:0.8
            });

        },
        removeItem: function (tid) {
            var me = this;

            var itemArr = me.heroArr;
            for (var i = 0; i < itemArr.length; i++) {
                var item = itemArr[i];
                if (item.data && item.data == tid) {
                    var layIco = item.getChildren()[0];
                    var idx = X.arrayFind(G.frame.xuanshangrenwu_jiequ.top.selectedData,tid);
                    if (idx > -1) {
                        G.frame.xuanshangrenwu_jiequ.top.selectedData.splice(idx, 1);
                        G.frame.xuanshangrenwu_jiequ.top.removeGou(tid);
                    }
                    var child = G.frame.xuanshangrenwu_jiequ.top.getChildByTid(tid);
                    if(child){
                        G.frame.xuanshangrenwu_jiequ.posSelect = G.frame.xuanshangrenwu_jiequ.ui.convertToNodeSpace(child.getParent().convertToWorldSpace(child.getPosition()));
                        G.frame.xuanshangrenwu_jiequ.posSelect.x += child.width / 2;
                    }
                    if(cc.isNode(G.frame.xuanshangrenwu_jiequ.item)){
                        G.frame.xuanshangrenwu_jiequ.item.stopAllActions();
                        G.frame.xuanshangrenwu_jiequ.item.removeFromParent();
                    }
                    G.frame.xuanshangrenwu_jiequ.playAniType = "remove";
                    G.frame.xuanshangrenwu_jiequ.posSz = G.frame.xuanshangrenwu_jiequ.ui.convertToNodeSpace(layIco.getParent().convertToWorldSpace(layIco.getPosition()));
                    var itemClone = G.frame.xuanshangrenwu_jiequ.item = layIco.clone();
                    itemClone.setPosition(G.frame.xuanshangrenwu_jiequ.posSz);
                    G.frame.xuanshangrenwu_jiequ.ui.addChild(itemClone);
                    G.frame.xuanshangrenwu_jiequ.playAniMove(itemClone);

                    delete item.data;
                    item.removeAllChildren();
                }
            }
            me.checkIsOk();
        },
        addItem: function (tid) {
            var me = this;

            var itemArr = me.heroArr;
            for (var i = 0; i < itemArr.length; i++) {
                var item = itemArr[i];
                if (!item.data) {
                    item.data = tid;
                    var dd = G.DATA.yingxiong.list[tid];
                    var wid = G.class.shero(G.DATA.yingxiong.list[tid]);
                    wid.setAnchorPoint(0.5,1);
                    wid.setPosition(cc.p(item.width / 2,item.height));
                    item.addChild(wid);
                    wid.hide();
                    me.ui.setTimeout(function () {
                        wid.show();
                    }, 180);
                    G.frame.xuanshangrenwu_jiequ.playAniType = "add";
                    G.frame.xuanshangrenwu_jiequ.posSz = G.frame.xuanshangrenwu_jiequ.ui.convertToNodeSpace(wid.getParent().convertToWorldSpace(wid.getPosition()));
                    G.frame.xuanshangrenwu_jiequ.posSz.x -= wid.width / 2;
                    break;
                }
            }
            me.checkIsOk();
        },
        checkIsOk: function () {
            var me = this;
            var isOk = true;
            me.zhongZuIcon = [];
            for(var i = 0;i < me.tiaojianArr.length; i ++){
                var icon = me.nodes.list_ico.clone();
                me.tiaojianArr[i][2] = "_h";
                if(me.tiaojianArr[i][0] == "star"){
                    for(var j in me.heroArr){
                        if(me.heroArr[j].data &&
                            G.DATA.yingxiong.list[me.heroArr[j].data].star >= me.tiaojianArr[i][1]){
                            me.tiaojianArr[i][2] = "";
                        }
                    }
                    icon.setBackGroundImage("img/public/ico/ico_xj" + (parseInt(me.tiaojianArr[i][1]) + 1) + me.tiaojianArr[i][2] + ".png", 1);
                }else{
                    for(var j in me.heroArr){
                        if(me.heroArr[j].data &&
                            G.DATA.yingxiong.list[me.heroArr[j].data].zhongzu == me.tiaojianArr[i][1]){
                            me.tiaojianArr[i][2] = "";
                        }
                    }
                    icon.setBackGroundImage("img/public/ico/ico_zz" + (parseInt(me.tiaojianArr[i][1]) + 1) + me.tiaojianArr[i][2] + ".png", 1);
                }
                me.zhongZuIcon.push(icon);
            }
            X.center(me.zhongZuIcon, me.nodes.panle_tb2, {
                scale: 0.8
            });
            for(var i in me.tiaojianArr){
                if(me.tiaojianArr[i][2] == "_h"){
                    isOk = false;
                    break;
                }
            }
            var txtYaoqiu = me.ui.finds("txt_dcys");
            txtYaoqiu.show();
            if(isOk){
                txtYaoqiu.setTextColor(cc.color(G.gc.COLOR[1]));
            }else{
                // me.ui.finds("txt_dcys").hide();
                txtYaoqiu.setTextColor(cc.color(G.gc.COLOR[5]));
            }
            // if(isOk){
            //     me.ui.finds("txt_dcys").show();
            // }else{
            //     me.ui.finds("txt_dcys").hide();
            // }
        },
        setTouch: function (list) {
            var me = this;
            var bPos, cloneItem, pos;
            list.setTouchEnabled(true);
            list.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_ENDED){
                    if(sender.data){
                        me.removeItem(list.data);
                    }
                }
            });
        },
    });
})();
;;// created by LYF on 2018/6/5

(function () {
    //悬赏任务

    var ID = 'xuanshangrenwu_jiequ';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        bindUI: function(){
            var me = this;
            me.ui.nodes.mask.click(function (sender, type) {
                me.remove();
            });
            setPanelTitle(me.ui.nodes.txt_title, "任务详情");
        },
        onOpen: function () {
            var me = this;
            me.bindUI();
        },
        onShow: function () {
            var me = this;
            me.setTop();
            me.setBottom();
        },
        setTop: function () {
            var me = this;
            if (!me.top) {
                me.top = new G.class.xstask_xq("xuanze");
                me.nodes.panel_nr1.removeAllChildren();
                me.nodes.panel_nr1.addChild(me.top);
            } else {
                me.top.refreshPanel();
            }
        },
        setBottom: function () {
            var me = this;
            if (!me.bottom) {
                me.bottom = new G.class.xstask_check("xuanze");
                me.nodes.panel_nr2.removeAllChildren();
                me.nodes.panel_nr2.addChild(me.bottom);
            } else {
                me.bottom.refreshPanel();
            }
        },
        playAniMove: function (node) {
            var me = this;
            var posSz = G.frame.xuanshangrenwu_jiequ.posSz;
            var posSelect = G.frame.xuanshangrenwu_jiequ.posSelect;
            var type = G.frame.xuanshangrenwu_jiequ.playAniType;

            var posEnd;
            if(type == "remove"){
                posEnd = posSelect || cc.p(310, 800);
            }else{
                posEnd = posSz;
            }

            cc.isNode(me.item) && me.item.runActions([
                G.frame.xuanshangrenwu_jiequ.bottom.isAllHero ? cc.fadeOut(0.2) : cc.moveTo(0.2, posEnd),
                cc.callFunc(function () {
                    cc.isNode(me.item) && me.item.removeFromParent(true);
                    if(G.frame.xuanshangrenwu_jiequ.bottom.isAllHero){
                        me.ui.setTimeout(function () {
                            G.frame.xuanshangrenwu_jiequ.bottom.isAllHero = false;
                        }, 300);
                    }
                    cc.callLater(function () {
                        //G.guidevent.emit("xuanshangrenwu_sz_move_over");
                    })
                })
            ])
        },

    });

    G.frame[ID] = new fun('ui_tip3.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/2.
 */
(function () {
    //许愿池-奖励
    var ID = 'xuyuanchi_jl';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
            me.nodes.mask.click(function (sender, type) {
                if(!me.isAniOver) return;
                me.remove();
            });
            me.nodes.btn_qr.click(function (sender, type) {
                me.remove();
            });
            var conf = me.data().prize.length > 1?G.frame.xuyuanchi.conf.tenneed[0]:G.frame.xuyuanchi.conf.oneneed[0];
            me.nodes.img_zs.loadTexture(G.class.getItemIco(conf.t), 1);
            me.nodes.text_2.setString(conf.n);
            me.ui.finds("txt_sx").setString(me.data().prize.length + L("Ci"));
            me.nodes.btn_zzyc.click(function (sender, type) {
                G.frame.xuyuanchi.lottery(me.data().prize.length, true, 0, true);
                me.remove();
            }, 1000)
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.nodes.btn_qr.hide();
            me.nodes.btn_zzyc.hide();
            me.DATA = me.data();
        },
        onAniShow: function () {
            var me = this;
			
			me.ui.setTimeout(function(){
            	G.guidevent.emit('xuyuanchi_hdjl_one_over');
            },200);
        },
        onShow: function () {
            var me = this;
            me.idx = 0;
            me.setContents();
            cc.enableScrollBar(me.nodes.listview_ico);
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var data = me.DATA.prize;
            var itemArr = [];
            me.nodes.txt_djgb.hide();
            if(data){
                if(data.length > 5){
                    var arr = [];
                    var panel = me.nodes.listview_ico;
                    panel.removeAllChildren();
                    panel.y -= -7;
                    panel.setItemsMargin(9);
                    for (var i = 0; i < data.length; i ++) {
                        if(arr.length == 5) {
                            var panel1 = me.nodes.panle_tb2.clone();
                            X.alignCenter(panel1, arr, {
                                name: "",
                                touch: true,
                                mapItem: function (item) {
                                    item.hide();
                                    itemArr.push(item);
                                }
                            });
                            panel.pushBackCustomItem(panel1);
                            arr = [];
                        }
                        arr.push(data[i]);
                    }
                    if(arr.length == 5) {
                        var panel1 = me.nodes.panle_tb2.clone();
                        X.alignCenter(panel1, arr, {
                            name: "",
                            touch: true,
                            mapItem: function (item) {
                                item.hide();
                                itemArr.push(item);
                            }
                        });
                        panel.pushBackCustomItem(panel1);
                        arr = [];
                    }
                }else{
                    X.alignCenter(me.nodes.panle_tb2, data, {
                        name: "",
                        touch: true,
                        mapItem: function (item) {
                            item.hide();
                            itemArr.push(item);
                        }
                    });
                }
            }
            me.ani(itemArr);
        },
        ani: function (itemArr) {
            var me = this;
            if(!itemArr[me.idx]) {
                if(me.data().isSuper) {
                    me.isAniOver = true;
                } else {
                    me.nodes.btn_qr.show();
                    me.nodes.btn_zzyc.show();
                    me.isAniOver = true;
                }
                return;
            }
            X.audio.playEffect("sound/jianglichuxian.mp3", false);
            itemArr[me.idx].refresh(false, function () {
                if(itemArr[me.idx].data.isjilu) {
                    G.class.ani.show({
                        json: "ani_qiandao",
                        addTo: itemArr[me.idx],
                        x: 58,
                        y: 42,
                        repeat: true,
                        autoRemove: false,
                        onload :function(node,action){
                            node.setScale(1.2);
                        }
                    });
                }
                me.idx ++;
                me.ani(itemArr);
            }, 1.5);
        }
    });
    G.frame[ID] = new fun('ui_hdwp2.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/11.
 */
(function () {

    G.event.on("xuyuanchi_grandprize", function () {
        if(G.frame.xuyuanchi.isShow) {
            G.frame.xuyuanchi.getPrizeData(function () {
                G.frame.xuyuanchi.showPrizeInfo();
            })
        }
    });

    //许愿池
    var ID = 'xuyuanchi';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me._super(json, id,{action:true});
            me.preLoadRes=['xuyuanchi1.png','xuyuanchi1.plist'];
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.btn_gmyb.click(function (sender, type) {
                function callback(num) {
                    G.ajax.send('xuyuanchi_buycoin', [num], function(d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            if (d.d.prize) {
                                G.frame.jiangli.data({
                                    prize: [].concat(d.d.prize)
                                }).once('show', function() {
                                    if(G.frame.xuyuanchi.isShow){
                                        G.frame.xuyuanchi.nodes.text_gssl.setString(G.class.getOwnNum(
                                            (G.frame.xuyuanchi.conf.tenneed[0].t),G.frame.xuyuanchi.conf.tenneed[0].a));
                                    }
                                    G.frame.iteminfo_plgm.remove();
                                }).show();
                            }
                        }
                    }, true);
                }
                G.frame.iteminfo_plgm.data({
                    buy: G.class.xuyuanchi.get()["common"].buyprize[0],
                    num: 0,
                    buyneed: G.class.xuyuanchi.get()["common"].buyneed,
                    callback: callback
                }).show();
            });
            me.nodes.btn_bz.click(function (sender, type) {
                G.frame.help.data({
                    intr:L("TS4")
                }).show();
            });
            me.nodes.btn_xysd.click(function (sender, type) {
                G.frame.shop.data({type: "2", name: "xysd"}).show();
            });
            me.nodes.btn_mfsx.click(function (sender, type) {
                me.refreshData();
            });
            me.nodes.btn_sx.click(function (sender, type) {
                me.refreshData();
            });
            me.nodes.btn_fh.click(function (sender, type) {
                me.remove();
            });
            me.nodes.btn_mianfei.click(function () {
                me.lottery(1, true, 1);
            });

            me.nodes.btn_1.click(function (sender, type) {
                var is = true;
                if(me.nodes.text_gssl.getString() < me.conf.oneneed[0].n){
                    if(me.nodes.btn_ptxyc.bright == true){
                        G.tip_NB.show(L("GJXYBBZ"));
                        is = false;
                    }else{
                        function callback(num) {
                            G.ajax.send('xuyuanchi_buycoin', [num], function(d) {
                                if (!d) return;
                                var d = JSON.parse(d);
                                if (d.s == 1) {
                                    if (d.d.prize) {
                                        G.frame.jiangli.data({
                                            prize: [].concat(d.d.prize)
                                        }).once('show', function() {
                                            if(G.frame.xuyuanchi.isShow){
                                                G.frame.xuyuanchi.nodes.text_gssl.setString(G.class.getOwnNum(
                                                    (G.frame.xuyuanchi.conf.tenneed[0].t),G.frame.xuyuanchi.conf.tenneed[0].a));
                                            }
                                            G.frame.iteminfo_plgm.remove();
                                        }).show();
                                    }
                                }
                            }, true);
                        }
                        G.frame.iteminfo_plgm.data({
                            buy: G.class.xuyuanchi.get()["common"].buyprize[0],
                            num: 0,
                            buyneed: G.class.xuyuanchi.get()["common"].buyneed,
                            callback: callback
                        }).show();
                        is = false;
                    }
                    return;
                }
                me.lottery(1, is, 0);
            }, 1000);
            me.nodes.btn_2.click(function (sender, type) {
                var is = true;
                if(me.nodes.text_gssl.getString() < me.conf.tenneed[0].n){
                    if(me.nodes.btn_ptxyc.bright == true){
                        G.tip_NB.show(L("GJXYBBZ"));
                        is = false;
                    }else{
                        function callback(num) {
                            G.ajax.send('xuyuanchi_buycoin', [num], function(d) {
                                if (!d) return;
                                var d = JSON.parse(d);
                                if (d.s == 1) {
                                    if (d.d.prize) {
                                        G.frame.jiangli.data({
                                            prize: [].concat(d.d.prize)
                                        }).once('show', function() {
                                            if(G.frame.xuyuanchi.isShow){
                                                G.frame.xuyuanchi.nodes.text_gssl.setString(G.class.getOwnNum(
                                                    (G.frame.xuyuanchi.conf.tenneed[0].t),G.frame.xuyuanchi.conf.tenneed[0].a));
                                            }
                                            G.frame.iteminfo_plgm.remove();
                                        }).show();
                                    }
                                }
                            }, true);
                        }
                        G.frame.iteminfo_plgm.data({
                            buy: G.class.xuyuanchi.get()["common"].buyprize[0],
                            num: 0,
                            buyneed: G.class.xuyuanchi.get()["common"].buyneed,
                            callback: callback
                        }).show();
                        is = false;
                    }
                    return;
                }
                me.lottery(me.type == "high" ? 10 : 15, is, 0);
            }, 1000);

            if(P.gud.lv >= 45 || P.gud.vip >= 3){

            }else{
                me.nodes.btn_gjxyc.disable = true;
            }

            X.radio([me.nodes.btn_ptxyc,me.nodes.btn_gjxyc], function (sender) {
                var name = sender.getName();
                var name2type = {
                    btn_ptxyc$:'common',
                    btn_gjxyc$:'high'
                };

                if(sender.disable){
                    G.tip_NB.show(L("KQXYC"));
                    me.nodes.btn_ptxyc.setBright(false);
                    me.nodes.text_ptxyc.setTextColor(cc.color("#e8fdff"));
                    me.nodes.txt_gjxyc.setTextColor(cc.color("#9d8d8a"));
                    return;
                }

                me.changeType(name2type[name]);
            });
        },
        changeType: function (type) {
            var me = this;

            me.type = type;
            me.conf = G.class.xuyuanchi.get()[me.type];

            me._running = false;

            if(me.type == "high"){
                me.nodes.btn_xysd.hide();
                me.nodes.btn_gmyb.hide();
                me.jdt = me.aniNode.finds("jindutiao2");
                me.nodes.img_tiao1.hide();
                me.nodes.panel_boy.hide();
                me.nodes.ico_mzrw.hide();
            }else{
                me.nodes.btn_xysd.show();
                me.nodes.btn_gmyb.show();
                me.jdt = me.aniNode.finds("jindutiao1");
                me.nodes.img_tiao1.show();
                me.nodes.panel_boy.show();
                me.nodes.ico_mzrw.show();
            }

            me.getPrizeData(function () {
                me.showPrizeInfo();
            });

            if(me.isFirst) {
                me.setContents();
                me.isFirst = false;
            } else {
                me.getData(function () {
                    me.setContents();
                });
            }
        },
        refreshData: function(){
            var me = this;
            if(me._running) return;
            me.nodes.btn_sx.setTouchEnabled(false);
            me.nodes.btn_mfsx.setTouchEnabled(false);

            G.ajax.send("xuyuanchi_shuaxin", [me.type], function (d) {
                if (!d || !me.isShow) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.refresh = 1;
                    me.DATA.freetime = d.d.xycdata.freetime;
                    me.DATA.shopitem = d.d.xycdata.shopitem;
                    me.setRefreshTime();
                    if(me._time){
                        me.ui.clearTimeout(me._time);
                        me._time = null;
                    }
                    me.refreshItems();
                    me.nodes.btn_sx.setTouchEnabled(true);
                    me.nodes.btn_mfsx.setTouchEnabled(true);
                }else{
                    me.nodes.btn_sx.setTouchEnabled(true);
                    me.nodes.btn_mfsx.setTouchEnabled(true);
                }
            }, true)
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("xuyuanchi_open", [me.type], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d.xycdata;
                    me.allDATA = d.d;
                    callback && callback();
                }
            })
        },
        lottery: function(type, is, isSuper, isAni){
            var me = this;
            if(!is) return;
            if(me._running) return;


            var fun = function(prize, type, data, isSuper, isAni){
                var layout = new ccui.Layout;
                layout.setContentSize(cc.director.getWinSize());
                layout.setAnchorPoint(0.5, 0.5);
                layout.setPosition(cc.director.getWinSize().width / 2, cc.director.getWinSize().height / 2);
                me.ui.addChild(layout);
                layout.setTag(6754);
                layout.setTouchEnabled(true);
                layout.setSwallowTouches(true);
                G.view.toper.hide();
                me.setButtonShow(false);

                if(me._time){
                    me.ui.clearTimeout(me._time);
                    me._time = null;
                }
                var indexs = [];
                // 只有奖励的物品在转盘上存在, 才会走转盘逻辑
                for(var i=0;i<prize.length;i++){
                    for(var j=0;j<me.DATA.shopitem.length;j++){
                        var dp = me.DATA.shopitem[j].item;
                        var pp = prize[i];
                        if(dp.t == pp.t && dp.n == pp.n) {
                            indexs.push(j);
                        }
                    }
                }

                me.DATA.shopitem = data;

                if(isAni) {
                    while (me.ui.getChildByTag(6754)) {
                        me.ui.getChildByTag(6754).removeFromParent();
                    }

                    G.view.toper.show();
                    G.frame.xuyuanchi_jl.data({prize: prize, isSuper: isSuper}).show();

                    me.getData(function () {
                        me.setContents();
                    });

                    if(me.type == "high"){
                        me.nodes.btn_xysd.hide();
                        me.nodes.btn_gmyb.hide();
                    }
                    me._time = me.ui.setTimeout(function () {
                        me._running = null;
                        me.waiting();
                    },0,0,1.85);
                } else {
                    X.audio.playEffect("sound/zhuangpanxuanzhuan.mp3", false);
                    me.goto(indexs[indexs.length-1], type, function(){

                        while (me.ui.getChildByTag(6754)) {
                            me.ui.getChildByTag(6754).removeFromParent();
                        }

                        G.view.toper.show();
                        G.frame.xuyuanchi_jl.data({prize: prize, isSuper: isSuper}).show();

                        me.getData(function () {
                            me.setContents();
                        });

                        if(me.type == "high"){
                            me.nodes.btn_xysd.hide();
                            me.nodes.btn_gmyb.hide();
                        }
                        me._time = me.ui.setTimeout(function () {
                            me._running = null;
                            me.waiting();
                        },0,0,1.85);
                    });
                }
            };

            G.ajax.send("xuyuanchi_lottery", [me.type, type, isSuper], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.nodes.text_gssl.setString(G.class.getOwnNum((me.conf.tenneed[0].t),me.conf.tenneed[0].a));
                    fun(d.d.prizelist, type, d.d.shopitem, isSuper, isAni);
                }
            })
        },
        onOpen: function () {
            var me = this;

            X.audio.playEffect("sound/openxuyuanchi.mp3", false);

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.showToper();
            me.setTime();
            cc.enableScrollBar(me.nodes.txt_zjjrwz);
        },
        onAniShow: function () {
            var me = this;
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            me.type = "common";
            me.isFirst = true;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;

            me.nodes.listview_bx.hide();

            G.class.ani.show({
                json: "ani_xuyuanchi_0",
                addTo: me.nodes.panel_dh,
                x: 101,
                y: -211,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    me.aniNode = node;
                    me.dialAni = action;
                    me.dial = node.finds("Sprite_2");
                    me.nodes.btn_ptxyc.triggerTouch(ccui.Widget.TOUCH_ENDED);
                }
            });

            me.ui.setTimeout(function () {
                G.guidevent.emit('xuyuanchiOpenOver');
            }, 400);
        },
        onHide: function () {
            var me = this;
            me.event.emit('hide');
        },
        setContents: function () {
            var me = this;

            me.appendItems();

            if(me.DATA.super) {
                me.nodes.btn_mianfei.show();
                me.setButtonShow(false, true);
                me.dialAni.play(me.type == "high" ? "pan2_baoza_idle" : "pan1_baoza_idle", true);
            } else {
                me.dialAni.play(me.type == "high" ? "pan2_idle" : "pan1_idle", true);
                me.setButtonShow(true);
                me.nodes.btn_mianfei.hide();
                me.setRefreshTime();
                me.showIcon();
                me.setEnergy();
                if(me.type != "high") me.setBox();
                me.waiting();
            }

        },
        setEnergy: function() {
            var me = this;
            var max = G.class.xuyuanchi.getMaxByType(me.type);
            me.jdt.setPercent(me.allDATA.energy / max * 100);
            me.jdt.removeAllChildren();

            if(me.allDATA.energy >= max) {
                me.jdt.setTouchEnabled(true);
                G.class.ani.show({
                    json: me.type == "high" ? "ani_xr_zise" : "ani_xr_lanse",
                    addTo: me.jdt,
                    x: me.jdt.width / 2,
                    y: me.jdt.height / 2,
                    repeat: true,
                    autoRemove: false
                });
            } else {
                me.jdt.setTouchEnabled(false);
            }
            
            me.jdt.click(function () {
                me.ajax("xuyuanchi_upgrade", [me.type], function (str, data) {
                    if(data.s == 1) {
                        me.refresh = true;
                        me.allDATA.energy -= max;
                        me.DATA.shopitem = data.d.shopitem;
                        me.DATA.super = 1;
                        me.setEnergy();
                        me.dialAni.playWithCallback(me.type == "high" ? "pan2_baoza" : "pan1_baoza", false, function () {
                            me.setContents();
                        })
                    }
                })
            })
        },
        setBox: function() {
            var me = this;
            var conf = G.class.xuyuanchi.getBoxConf();
            
            for (var i = 0; i < conf.length; i ++) {
                (function (conf, i) {
                    var lay = me.nodes["panel_bx" + (i + 1)];
                    var img1 = "img/xuyuanchi/xuyuanchi_bx1.png";
                    var img2 = "img/xuyuanchi/xuyuanchi_bx2.png";
                    var num = me.allDATA.num || 0;
                    var box = me.nodes.list_bx.clone();
                    box.setPosition(0, 0);
                    lay.removeAllChildren();
                    lay.addChild(box);
                    X.autoInitUI(box);
                    box.idx = i;
                    box.prize = conf[1];
                    box.nodes.text_cs2.setString((conf[0][0] < num ? conf[0][0] : num) + "/" + conf[0][0]);
                    X.enableOutline(box.nodes.text_cs2, "#4A1D09", 1);
                    if(X.inArray(me.allDATA.reclist, i)) {
                        box.nodes.panel_bx.setBackGroundImage(img2, 1);
                        box.setTouchEnabled(false);
                    } else {
                        if(num >= conf[0][0]) {
                            box.isrecve = true;
                            X.addBoxAni({
                                parent: box.nodes.panel_bx,
                                boximg: img1
                            });
                            box.nodes.img_klq.show();
                        } else {
                            box.isrecve = false;
                            box.nodes.panel_bx.setBackGroundImage(img1, 1);
                        }
                    }
                    box.click(function (sender) {
                        if(!sender.isrecve) {
                            G.frame.jiangliyulan.data({
                                prize: sender.prize
                            }).show();
                            return;
                        }
                        me.ajax("xuyuanchi_getprize", [sender.idx], function (str, data) {
                            if(data.s == 1) {
                                G.frame.jiangli.data({
                                    prize: data.d.prize
                                }).show();
                                me.allDATA.reclist.push(sender.idx);
                                me.setBox();
                            }
                        })
                    })
                })(conf[i], i);
            }

            me.nodes.img_tiao2.setPercent((me.allDATA.num || 0) / conf[0][0][0] * 100);

            for (var i = 1; i < conf.length; i ++) {
                var num = me.allDATA.num || 0;
                var jdt = me.nodes["img_tiao" + (i + 2)];
                var cur = conf[i][0][0];
                var qian = conf[i - 1][0][0];
                jdt.show();
                if(num > qian) {
                    jdt.setPercent(num / cur * 100);
                }else {
                    jdt.setPercent(0);
                }
            }
        },
        setRefreshTime: function () {
            var me = this;
            if(me.DATA.freetime - G.time <= 0){
                me.ui.finds("txt_xcmfsx").hide();
                me.nodes.txt_sxsj.hide();
                me.nodes.btn_sx.hide();
                me.nodes.btn_mfsx.show();
                me.ui.finds("img__wzbg2").hide();
                me.mfsx = true;
            }else{
                me.nodes.btn_mfsx.hide();
                me.ui.finds("txt_xcmfsx").show();
                me.nodes.txt_sxsj.show();
                me.nodes.btn_sx.show();
                me.ui.finds("img__wzbg2").show();
                me.mfsx = false;
                X.timeout(me.nodes.txt_sxsj, me.DATA.freetime, function () {
                    me.ui.finds("txt_xcmfsx").hide();
                    me.ui.finds("img__wzbg2").hide();
                    me.nodes.txt_sxsj.hide();
                    me.nodes.btn_sx.hide();
                    me.nodes.btn_mfsx.show();
                    me.mfsx = true;
                })
            }
        },
        setButtonShow: function(isShow, isSuper){
            var me = this;

            !isSuper && me.nodes.btn_fh.setVisible(isShow);
            me.type !== "high" && me.nodes.btn_xysd.setVisible(isShow);
            !isSuper && me.nodes.btn_gjxyc.setVisible(isShow);
            !isSuper && me.nodes.btn_ptxyc.setVisible(isShow);
            me.nodes.btn_bz.setVisible(isShow);
            me.type !== "high" && me.nodes.btn_gmyb.setVisible(isShow);
            me.nodes.img_gs.setVisible(isShow);
            me.nodes.text_gssl.setVisible(isShow);
            me.ui.finds("img_token_bg").setVisible(isShow);
            me.ui.finds("img__wzbg2").setVisible(isShow);
            me.nodes.btn_1.setVisible(isShow);
            me.nodes.btn_2.setVisible(isShow);
            me.type !== "high" && me.nodes.img_tiao1.setVisible(isShow);
            me.type !== "high" && me.nodes.panel_boy.setVisible(isShow);
            me.type !== "high" && me.nodes.ico_mzrw.setVisible(isShow);
            if(!me.mfsx) {
                me.nodes.txt_sxsj.setVisible(isShow);
                me.nodes.btn_sx.setVisible(isShow);
                me.ui.finds("txt_xcmfsx").setVisible(isShow);
            } else {
                me.nodes.btn_mfsx.setVisible(isShow);
            }
        },
        showIcon: function () {
            var me = this;
            me.conf = G.class.xuyuanchi.get()[me.type];

            me.nodes.panel_token.setBackGroundImage(G.class.getItemIco(me.conf.tenneed[0].t), 1);
            me.nodes.panel_token2.setBackGroundImage(G.class.getItemIco(me.conf.tenneed[0].t), 1);

            me.nodes.text_sl.setString(me.conf.oneneed[0].n);
            me.nodes.text_sl2.setString(me.conf.tenneed[0].n);

            me.ui.finds("text_yc").setString(1 + L("Ci"));
            me.nodes.text_yc2.setString((me.type == "high" ? 10 : 15) + L("Ci"));

            me.nodes.img_gs.loadTexture(G.class.getItemIco(me.conf.tenneed[0].t), 1);
            me.nodes.text_gssl.setString(G.class.getOwnNum((me.conf.tenneed[0].t),me.conf.tenneed[0].a));
            me.nodes.txt_sxsz.setString(me.conf.rfneed[0].n);
        },
        setTime: function () {
            var me = this;
            var timeTxt = new ccui.Text();
            // timeTxt.setTextColor(cc.color(G.gc.COLOR[5]));
            // timeTxt.setFontName(G.defaultFNT);
            // timeTxt.setFontSize(40);
            // me.ui.addChild(timeTxt);
            // timeTxt.setPosition(300, 400);
            X.timeout(timeTxt, X.getTodayZeroTime() + 24 * 3600,function () {
                X.uiMana.closeAllFrame();
            });
        },
        getPrizeData: function(callback) {
            var me = this;

            G.ajax.send("xuyuanchi_jilu", [me.type], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.prizeData = d.d[me.type];
                    callback && callback();
                }
            })
        },
        showPrizeInfo: function () {
            var me = this;
            var data = me.prizeData;
            var scrollView = me.nodes.txt_zjjrwz;

            scrollView.removeAllChildren();

            if(data.length < 1) {
                me.ui.finds("panel_zjjr").hide();
            }else {
                me.ui.finds("panel_zjjr").show();
            }

            for(var i = 0; i < data.length; i ++) {
                var conf = G.class.sitem(data[i].prize).conf;
                var text = X.STR(L("HJXX"), data[i].username, G.gc.COLOR[conf.color || conf.star - 1], conf.name, "x" + data[i].prize.n);
                var rh = new X.bRichText({
                    size: 20,
                    maxWidth: scrollView.width,
                    lineHeight: 28,
                    color: "#ffffff",
                    family: G.defaultFNT
                });
                rh.text(text);
                scrollView.pushBackCustomItem(rh);
            }
            me.movePrize(data, scrollView);
        },
        movePrize: function (data, scrollView) {
            var me = this;
            if(data.length > 3) {
                scrollView.scrollToBottom(data.length - 3, false);
                me.ui.setTimeout(function () {
                    scrollView.jumpToTop();
                    me.movePrize(data, scrollView)
                }, (data.length - 3) * 1000);
            }
        }
    });
    G.frame[ID] = new fun('xuyuanchi.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/11.
 */
(function () {
    //许愿池-转盘
    var me = G.frame.xuyuanchi;

    var _fun = {
        appendItems: function(){
            var data = me.DATA.shopitem;
            var sum = 0;
            for(var i = 0; i < data.length; i ++){
                sum += data[i].p;
            }
            for(var i = 0; i < data.length; i ++){
                var item = G.class.sitem(data[i].item);
                if(me.refresh) item.refresh();
                if(data[i].buynum == 0){
                    item.setHighLight(false);
                }
                item.p = data[i].p;
                item.sum = sum;
                item.frame = "xuyuanchi";
                item.setScale(.7);
                me.dial.children[i].removeAllChildren();
                me.dial.children[i].addChild(item);
                G.frame.iteminfo.showItemInfo(item);
                item.setPosition(me.dial.children[i].width / 2, me.dial.children[i].height / 2);
            }
            if(me.refresh) me.refresh = 0;
        },
        refreshItems: function(){
            if(me._running) return;
            me._running = true;

            me.ui.setTimeout(function () {
                me.appendItems();
            }, 2);

            me.dial.stopAllActions();
            var action = cc.rotateBy(2.635, 360*1.25, 360*1.25);
            var sqe = cc.sequence(action,cc.callFunc(()=>{
                me._running = null;
                me.waiting();
            }));
            me.dial.runActions(sqe);
        },
        waiting: function () {
            var me = this;
            var params = [
                [3.32, 15, cc.EaseInOut, 2],
                [3.42, 18, cc.EaseInOut, 1.8],
                [4.125, 20, cc.EaseInOut, 2],
                [3.86, 22, cc.EaseInOut, 2.86],
                [4.32, 25, cc.EaseInOut, 3.12],
                [4.45, 30, cc.EaseInOut, 2.12],
                [5.325, 36, cc.EaseInOut, 2.22],
            ];
            var action = [];
            for(var i=0;i<params.length*2;i++){
                var d = X.arrayRand(params);
                var easing = d[2];
                if(X.rand(0, 10) %2 == 0){
                    action.push(easing.create.apply(easing, [cc.rotateBy(d[0], d[1]*-1, d[1]*-1)].concat(d[3])));
                }else{
                    action.push(easing.create.apply(easing, [cc.rotateBy(d[0], d[1], d[1])].concat(d[3])));
                }
                action.push(cc.delayTime(X.arrayRand([0.5, 0.65, 0.8, 1.2, 1.5])));
            }
            me.dial.stopAllActions();
            me.dial.runActions(cc.repeatForever(cc.sequence(action)));
        },
        goto: function(value, type, callback){
            if(me._running) return;
            me._running = true;

            var duration =  {
                '1':4,
                '10': 6,
                "15": 6
            }[type];

            me._goto(value, duration, callback);
        },
        _goto: function(value, duration, callback){
            me.dial.stopAllActions();
            if(duration == 4){
                me.dial.runActions([
                    cc.rotateBy(2, -2880),
                    cc.rotateBy(1, 360),
                    cc.rotateTo(1, value * 45),
                    cc.callFunc(function () {
                        callback && callback();
                    })
                ]);
            }else{
                me.dial.runActions([
                    cc.rotateBy(3, -2880),
                    cc.rotateBy(1, 360),
                    cc.rotateTo(1, value * 45),
                    cc.callFunc(function () {
                        callback && callback();
                    })
                ]);
            }
        },
    };

    cc.mixin(me,_fun,true);
})();
;;/**
 * Created by LYF on 2018/6/11.
 */
(function () {
    //许愿池-中奖纪录
    var ID = 'xuyuanchi_zjjl';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function (sender, type) {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            })
        },
        onHide: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("xuyuanchi_jilu", [G.frame.xuyuanchi.type], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d[G.frame.xuyuanchi.type];
                    callback && callback();
                }
            })
        },
        setContents: function () {
            var me = this;
            me.nodes.listview_zjjl.removeAllChildren();
            if(me.DATA.length < 1) {
                me.ui.finds("img_zw").show();
            }
            for(var i = 0; i < me.DATA.length; i ++){
                var list = me.nodes.list_zjjl.clone();
                X.autoInitUI(list);
                var conf = G.class.sitem(me.DATA[i].prize).conf;
                var name = new ccui.Text(me.DATA[i].username, "fzcyj", 20);
                var hd = new ccui.Text("获得", "fzcyj", 20);
                var item = new ccui.Text(conf.name, "fzcyj", 20);
                var num = new ccui.Text("x" + me.DATA[i].prize.n, "fzcyj", 20);
                name.setFontName(G.defaultFNT);
                hd.setFontName(G.defaultFNT);
                item.setFontName(G.defaultFNT);
                num.setFontName(G.defaultFNT);
                name.setTextColor(cc.color("#ffffff"));
                hd.setTextColor(cc.color("#edbb82"));
                item.setTextColor(cc.color(G.gc.COLOR[conf.color || conf.star - 1]));
                num.setTextColor(cc.color("#25891c"));
                X.enableOutline(name, "#2a1c0f", 2);
                list.nodes.txt_zjjl.addChild(name);
                list.nodes.txt_zjjl.addChild(hd);
                list.nodes.txt_zjjl.addChild(item);
                list.nodes.txt_zjjl.addChild(num);
                name.setAnchorPoint(0, 0.5);
                hd.setAnchorPoint(0, 0.5);
                item.setAnchorPoint(0, 0.5);
                num.setAnchorPoint(0, 0.5);
                name.setPosition(5, list.height / 2);
                hd.setPosition(135, list.height / 2);
                item.setPosition(191, list.height / 2);
                num.setPosition(370, list.height / 2);
                list.show();
                me.nodes.listview_zjjl.pushBackCustomItem(list)
            }
        },
    });
    G.frame[ID] = new fun('xuyuanchi_top_zjjl.json', ID);
})();
;;/**
 * Created by zhangming on 2018-05-03
 */
(function () {
    //英雄信息-进阶成功
    var ID = 'ui_jinjie';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id);
        },
        setContents:function() {
            var me = this;

            var data = G.DATA.yingxiong.list[me.curXbId];
            var conf = G.class.hero.getById(data.hid);
            var oldData = G.DATA.yingxiong.oldData;


            G.class.ani.show({
                json: "ani_yingxiongjinjie",
                addTo: me.ui.finds("panel_dh"),
                x: 274,
                y: 339,
                repeat: false,
                autoRemove: false,
                onload: function (node, action) {
                    node.nodes.sz1.setString(G.class.herocom.getMaxlv(data.hid,oldData.dengjielv));
                    node.nodes.jh_sz1.setString(G.class.herocom.getMaxlv(data.hid,data.dengjielv));
                    node.nodes.sz2.setString(oldData.atk);
                    node.nodes.jh_sz2.setString(data.atk);
                    node.nodes.sz3.setString(oldData.def);
                    node.nodes.jh_sz3.setString(data.def);
                    node.nodes.sz4.setString(oldData.hp);
                    node.nodes.jh_sz4.setString(data.hp);
                    node.nodes.sz5.setString(oldData.speed);
                    node.nodes.jh_sz5.setString(data.speed);
                    action.playWithCallback('in', false, function () {
                        me.nodes.mask.setTouchEnabled(true);
                        action.play('wait', true);
                        me.nodes.mask.click(function(){
                            me.remove();
                        });
                    });
                },
            });
            me.showNewSkill();
            // 换了结构
            // var setItem = function(target, title, oval, nval){
                // var item = me.nodes.list.clone();
                // X.autoInitUI(item);
                // X.render({
                //     txt_1: title,
                //     txt_2: oval,
                //     txt_3: nval
                // }, item.nodes);
                //
                // item.setAnchorPoint(0,0);
                // item.setPosition(cc.p(-500, 0));
                // item.show();
                // target.removeAllChildren();
                // target.addChild(item);
                // var actby = cc.moveBy(0.25,cc.p(500,0));
                // // var seq = cc.sequence(actby, cc.callFunc(function () {
                // //     me.nodes.mask.setTouchEnabled(true);
                // // }));
                // item.runAction(actby);
            //     G.class.ani.show({
            //         json: "ani_yingxiongjinjie",
            //         addTo: target,
            //         x: 100,
            //         y: 10,
            //         repeat: false,
            //         autoRemove: true,
            //         onend : function (node, action) {
            //             switch (n){
            //                 case 0 :
            //                     setItem(me.nodes.panel_2, '攻击力：', oldData.atk, data.atk);
            //                     ++n;
            //                     break;
            //                 case 1 :
            //                     setItem(me.nodes.panel_3, '防御：', oldData.def, data.def);
            //                     ++n;
            //                     break;
            //                 case 2 :
            //                     setItem(me.nodes.panel_4, '生命：', oldData.hp, data.hp);
            //                     ++n;
            //                     break;
            //                 case 3 :
            //                     setItem(me.nodes.panel_5, '速度：', oldData.speed, data.speed);
            //                     ++n;
            //                     me.nodes.mask.setTouchEnabled(true);
            //         fight_win_battle            break;
            //             }
            //         }
            //     });
            // };
            // setItem(me.nodes.panel_1, '等级上限：', G.class.herocom.getMaxlv(data.hid,oldData.dengjielv), G.class.herocom.getMaxlv(data.hid,data.dengjielv));
        },
        showNewSkill: function(){
            var me = this;

            var view = me._view;
            var data = G.DATA.yingxiong.list[me.curXbId];
            var conf = G.class.hero.getById(data.hid);

            var idx = X.arrayFind(conf.bdskillopendjlv, data.dengjielv);
            if( idx > -1 ){
                me.nodes.txt_4.show();

                // G.class.ani.show({
                //     json: "ani_yingxiongjinjie_guangxiao",
                //     addTo: me.nodes.panel_jn,
                //     x: me.nodes.panel_jn.width / 2,
                //     y: me.nodes.panel_jn.height / 2,
                //     repeat: true,
                //     autoRemove: false
                // });

                var skill = G.class.hero.getSkillOne(idx+1, data.hid, data.dengjielv);
                var p = G.class.ui_skill_list(skill, true, null, null, data);
                p.setAnchorPoint(0.5,0.5);
                p.setPosition(cc.p( me.nodes.panel_jn.width*0.5, me.nodes.panel_jn.height*0.5 ));
                me.skill = p;
                me.nodes.panel_jn.addChild(p);
                p.zIndex = 999;
            }else{
                me.nodes.txt_4.hide();
            }
        },
        bindUI: function () {
            var me = this;

            me.nodes.mask.setTouchEnabled(true);
        },
        onOpen: function () {
            var me = this;
            me.bindUI();
        },
        onShow: function () {
            var me = this;
            var ani = me.ui.finds("panel_dh");
            G.class.ani.show({
                json: "ani_yingxiongjinjie2",
                addTo: me.ui.finds("panel_bg"),
                x: 277,
                y: 349,
                repeat: true,
                autoRemove: false
            });
            me.nodes.txt_4.hide();
            me.curXbId = me.data().tid;
            me.setContents();
        },
        onRemove: function () {
            var me = this;
            me.event.emit("hide");
        },
    });

    G.frame[ID] = new fun('ui_jingjie.json', ID);
})();
;;(function () {
// 显示品级
G.class.ui_pinji = function (node, pinji, scale , star) {
    scale = scale || 1;
    node.removeAllChildren();

    var x = 0;
    var star = (star && star < 7 && star + 1 ) || 7;
    for (var i = 1; i < star; i++){
        var img = new ccui.ImageView();
        if(i > pinji){
            img.loadTexture('img/public/img_pinjie1.png',1);
            img.ani = true;
        }else{
            img.loadTexture('img/public/img_pinjie2.png',1);
        }
        img.setScale(scale);
        img.setAnchorPoint(0,0);
        img.x = x;
        img.y = 0;
        node.addChild(img);

        x += img.width * scale + 4;
    }
};

})();
;;/**
 * Created by yaosong on 2018-10-24
 */
(function () {
    //英雄信息-进阶成功
    var ID = 'ui_rh_jinjie';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id);
        },
        setContents:function() {
            var me = this;

            var data = me.data().data;
            var hid = me.data().hid;
            // var conf = G.class.hero.getById(data.hid);
            var oldData = me.data().oldData;
            var extrabuff_name = X.keysOfObject(me.extrabuff)[0];
            var extrabuff_num = me.extrabuff[extrabuff_name];
            var callback = me.data().callback;
            var old_hero = G.class.meltsoul.getById(hid)[oldData.meltsoul].upperlimit;
            var hero = G.class.meltsoul.getById(hid)[data.meltsoul].upperlimit;

            G.class.ani.show({
                json: "ani_ronghuntupo",
                addTo: me.ui.finds("panel_dh"),
                x: 274,
                y: 339,
                repeat: false,
                autoRemove: false,
                onload: function (node, action) {
                    node.nodes.sz1.setString(oldData.meltsoul);
                    node.nodes.jh_sz1.setString(data.meltsoul);
                    node.nodes.sz2.setString(old_hero.atk);
                    node.nodes.jh_sz2.setString(hero.atk);
                    node.nodes.sz3.setString(old_hero.hp);
                    node.nodes.jh_sz3.setString(hero.hp);
                    node.nodes.jh_sz4.setString(L(extrabuff_name) + "+" + extrabuff_num);
                    action.playWithCallback('in', false, function () {
                        me.nodes.mask.setTouchEnabled(true);
                        action.play('wait', true);
                        me.nodes.mask.click(function(){
                            me.remove();
                        });
                        callback && callback();
                    });
                },
            });
        },
        bindUI: function () {
            var me = this;

            me.nodes.mask.setTouchEnabled(true);
        },
        onOpen: function () {
            var me = this;
            me.bindUI();
        },
        onShow: function () {
            var me = this;
            var ani = me.ui.finds("panel_dh");
            G.class.ani.show({
                json: "ani_yingxiongjinjie2",
                addTo: me.ui.finds("panel_bg"),
                x: 277,
                y: 349,
                repeat: true,
                autoRemove: false
            });
            me.nodes.txt_4.hide();
            me.curXbId = me.data().tid;
            me.extrabuff = me.data().extrabuff;
            me.setContents();
        },
        onRemove: function () {
            var me = this;
            me.event.emit("hide");
            // if(me.skill) {
            //     G.frame.yingxiong_xxxx.qh.skillMove(me.skill.clone());
            // }
        },
    });

    G.frame[ID] = new fun('ui_jingjie.json', ID);
})();

;;/**
 * Created by zhangming on 2018-05-03
 */
(function () {
    //英雄信息-升星成功
    var ID = 'ui_shengxing';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id, {action: true});
        },
        bindUI: function () {
            var me = this;

            me.nodes.mask.click(function(){
                if(!me.isAniOver) return;
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;

            me.bindUI();
        },
        onShow: function () {
            var me = this;

            G.class.ani.show({
                json: "ani_jinjieshengxing",
                addTo: me.nodes.panel_dh,
                x: me.nodes.panel_dh.width / 2,
                y: me.nodes.panel_dh.height / 2 - 15,
                repeat: true,
                autoRemove: false
            });
            me.curXbId = me.data();
            me.setContents();
        },
        onRemove: function () {
            var me = this;
            me.event.emit("hide");
        },
        setContents:function() {
            var me = this;

            var data = G.DATA.yingxiong.list[me.curXbId];

            var oldData = G.DATA.yingxiong.oldData;

            // 头像左
            var widget = G.class.shero(oldData);
            // widget.setScale(0.8);
            widget.setAnchorPoint(0.5,0.5);
            widget.setPosition(cc.p( me.nodes.panel_ico1.width*0.5, me.nodes.panel_ico1.height*0.5 ));
            me.nodes.panel_ico1.addChild(widget);

            // 头像右
            var widget2 = G.class.shero(data);
            // widget2.setScale(0.8);
            widget2.setAnchorPoint(0.5,0.5);
            widget2.setPosition(cc.p( me.nodes.panel_ico2.width*0.5, me.nodes.panel_ico2.height*0.5 ));
            me.nodes.panel_ico2.addChild(widget2);

            if(data.star > 10) {
                me.nodes.panel_jn1.hide();
                me.nodes.panel_jn2.hide();
                me.ui.finds("Text_16").hide();
                me.nodes.img_arrow2.hide();
                me.nodes.txt_sx5_1.show();
                me.nodes.txt_sx5_2.show();
                me.nodes.img_arrow7.show();
                me.nodes.txt_sx5_1.setString(L("DWCC") + (oldData.star - 10));
                me.nodes.txt_sx5_2.setString(data.star - 10);
            }

            // 技能左
            var skill = G.class.hero.getCanUpgradeSkill(data.hid, data.dengjielv-1);
            var jineng = G.class.ui_skill_list(skill, true);
            jineng.setAnchorPoint(0.5,0.5);
            jineng.setPosition(cc.p( me.nodes.panel_jn1.width*0.5, me.nodes.panel_jn1.height*0.5 ));
            me.nodes.panel_jn1.addChild(jineng);

            // 技能右
            skill = G.class.hero.getSkillOne(skill.idx, data.hid, data.dengjielv);
            var jineng2 = G.class.ui_skill_list(skill, true);
            jineng2.setAnchorPoint(0.5,0.5);
            jineng2.setPosition(cc.p( me.nodes.panel_jn2.width*0.5, me.nodes.panel_jn2.height*0.5 ));
            me.nodes.panel_jn2.addChild(jineng2);

            X.setHeroModel({
                parent: me.nodes.panel_shengxingrw,
                data: data,
                callback: function (node) {
                    node.zIndex = 10;
                }
            });

            me.ui.setTimeout(function () {
                G.class.ani.show({
                    json: "fz_jssx",
                    addTo: me.nodes.panel_shengxingrw,
                    x: me.nodes.panel_shengxingrw.width / 2,
                    y: 0,
                    repeat: false,
                    autoRemove: true,
                    onload: function (node) {
                        node.zIndex = 11;
                    }
                });

                G.class.ani.show({
                    json: "fz_jssx_0",
                    addTo: me.nodes.panel_shengxingrw,
                    x: me.nodes.panel_shengxingrw.width / 2,
                    y: 0,
                    repeat: true,
                    autoRemove: false,
                    onload: function (node, action) {
                        node.zIndex = 9;
                        action.playWithCallback("pan_chuxian", false, function () {
                            me.isAniOver = true;
                            action.play("pan_zhuan", true);
                        })
                    }
                });

                G.class.ui_star(me.ui.finds("panel_xx1"), data.star, 5, null, null, 15);
                if(data.star < 10) {
                    me.ui.finds("panel_xx1").children[me.ui.finds("panel_xx1").children.length - 1].hide();
                    G.class.ani.show({
                        json: data.star >= 10 ? "ani_shengxing_xingxing2" : "ani_shengxing_xingxing",
                        addTo: me.ui.finds("panel_xx1"),
                        x: me.ui.finds("panel_xx1").children[me.ui.finds("panel_xx1").children.length - 1].x,
                        y: me.ui.finds("panel_xx1").children[me.ui.finds("panel_xx1").children.length - 1].y,
                        repeat: true,
                        autoRemove: false,
                        onload: function (node, action) {
                            node.setAnchorPoint(0.5, 0.5);
                            action.playWithCallback("chuxian", false, function () {
                                action.play("xunhuan", true);
                            })
                        }
                    });
                }
            }, 200);



            me.ui.render({
                // 属性提升左
                txt_sx1_1: L("DJSX") + G.class.herocom.getMaxlv(data.hid,oldData.dengjielv),
                txt_sx2_1: L("XUELIANG") + oldData.hp,
                txt_sx3_1: L("GONGJI") + oldData.atk,
                txt_sx4_1: L("ZANLI") + oldData.zhanli,

                // 属性提升右
                txt_sx1_2: G.class.herocom.getMaxlv(data.hid,data.dengjielv),
                txt_sx2_2: data.hp,
                txt_sx3_2: data.atk,
                txt_sx4_2: data.zhanli
            });
        },
    });

    G.frame[ID] = new fun('ui_shengxing.json', ID);
})();
;;(function () {
// 显示星级-仅适用于英雄星级显示
G.class.ui_star = function (node, star, scale, conf, yxxx, inter) {
    // 1-5星，用1-5颗小黄星星表示。 img_xing2
    // 6-9星，用1-4颗中大小的红星星表示。 img_xing3
    // 10星，用1颗带特效的大的金星星表示。  img_xing4

    // scale = scale || .9;
    // conf = conf || {};
    var starNum = 0;
    var ico = '';
    var wid = 0;
    if(yxxx){
        wid = -1;
    }else{
        wid = -17;
    }

    if(inter) wid = inter;

    if(star < 6){
        ico = 'img_xing2';
    }else if(star < 10){
        ico = 'img_xing4';
    }else{
        ico = 'img_xing3';
    }


    if (star > 9) {
        // node.removeAllChildren();
        // var arr = [];
        // for (var i = 0; i < star - 9; i ++) {
        //     var lay = new ccui.Layout();
        //     lay.setContentSize(cc.size(20, 20));
        //     lay.setAnchorPoint(0.5, 0.5);
        //     lay.setTouchEnabled(false);
        //     arr.push(lay);
        // }
        // X.center(arr, node, {
        //     callback: function (target) {
        //         G.class.ani.show({
        //             json: "ani_10xingsaoguang",
        //             addTo: target,
        //             x: target.width / 2,
        //             y: target.height / 2,
        //             repeat: true,
        //             autoRemove: false,
        //             cache:true,
        //             onload: function (node, action) {
        //                 node.setScale(.95);
        //             }
        //         });
        //     },
        //     interval: inter || 0
        // });
        X.createStarsLayout(node, star - 9, {
            interval: inter || wid,
            imgstar: 'img/public/' + ico + '.png',
            maxStar: star - 9,
            callback: function (panel) {

            },
            cb: function (target) {
                target.opacity = 0;
                G.class.ani.show({
                    json: "ani_10xingsaoguang",
                    addTo: target,
                    x: target.width / 2,
                    y: target.height / 2,
                    repeat: true,
                    autoRemove: false,
                    cache:true,
                    onload: function (node, action) {
                        node.setScale(.95);
                    }
                });
            }
        });
    } else if (star > 5) {
        X.createStarsLayout(node, star - 5, {
            interval: wid,
            imgstar: 'img/public/' + ico + '.png',
            scale: .65,
            maxStar: 5,
            callback: function (item) {

            }
        });
    } else {
        X.createStarsLayout(node,star,{
            interval:wid,
            imgstar:'img/public/' + ico + '.png',
            scale:.65,
            maxStar:5,
            callback: function (panel) {
                var children = panel.getChildren();
                for (var i = 0; i < children.length; i++) {
                    var child = children[i];
                    child.y -= 3;
                }
            }
        });
    }

    //
    // ico = conf.ico || ico;
    // var img = new ccui.ImageView();
    // img.loadTexture('img/public/' + ico + '.png',1);
    // img.setScale(scale);
    //
    // var interval = conf.interval || 0; // 间隔
    // var imgW = img.width * scale;
    // var w = starNum * imgW + (starNum - 1) * interval; // 星星所占宽度
    // var x = (node.width - w) * 0.5; // 星星初始x
    // var arr = [];
    // node.removeAllChildren();
    // // node.setScale(scale);
    // if(star > 9){
    //     G.class.ani.show({
    //         json: "ani_10xingsaoguang",
    //         addTo: node,
    //         x: node.width / 2,
    //         y: node.height / 2,
    //         repeat: true,
    //         autoRemove: false
    //     })
    // }else if(yxxx){
    //     for (var i = 0; i < starNum; i++){
    //         var p = img.clone();
    //
    //         p.setAnchorPoint(0,0);
    //         p.x = x;
    //         p.y = -3;
    //         node.addChild(p);
    //         x += imgW + interval;
    //     }
    // }else {
    //     // for (var i = 0; i < starNum; i++){
    //     //     var p = img.clone();
    //     //
    //     //     arr.push(p);
    //     //     // p.setAnchorPoint(0,0);
    //     //     // p.x = x;
    //     //     // p.y = -3;
    //     //     // node.addChild(p);
    //     //     // x += imgW + interval;
    //     // }
    //     if (star < 6) {
    //         // X.center(arr, node, {
    //         //     scale: scale,
    //         //     interval:-10,
    //         //     callback: function (item) {
    //         //         item.y -= 3;
    //         //     }
    //         // });
    //         X.createStarsLayout(node,star,{
    //             interval:1,
    //             imgstar:'img/public/' + ico + '.png',
    //             scale:.7,
    //             maxStar:5
    //         });
    //     } else {
    //         X.createStarsLayout(item.star,conf.star,{
    //             interval:1,
    //             imgstar:'img/public/' + ico + '.png',
    //             scale:.7,
    //             maxStar:5
    //         });
    //         // X.center(arr, node, {
    //         //     scale: scale - 0.05,
    //         //     interval:-10,
    //         // });
    //     }
    //
    // }

};

})();
;;(function () {
// 升星界面显示的星级, 有黑底
G.class.ui_star_mask = function (node, star, scale) {
    // 1-5星，用1-5颗小黄星星表示。 img_xing2
    // 6-9星，用1-4颗中大小的红星星表示。 img_xing3
    // 10星，用1颗带特效的大的金星星表示。  img_xing4

    scale = scale || 1;
    var starNum = 0;
    var starMax = 0;
    var ico = '';
    if(star < 6){
        starNum = star;
        ico = 'img_xing2';
        starMax = 5;
    }else if(star < 10){
        starNum = star - 5;
        ico = 'img_xing4';
        starMax = 4;
    }else{
        starNum = star - 9;
        ico = 'img_xing3';
        starMax = 1;
    }


    var interval = 0; // 间隔
    var imgSize = cc.size(40,40);
    var imgW = imgSize.width * scale;
    var w = starMax * imgW + (starMax - 1) * interval; // 星星所占宽度
    var x = (node.width - w) * 0.5; // 星星初始x

    node.removeAllChildren();
    if(star > 9){
        // var arr = [];
        // for (var i = 0; i < star - 9; i ++) {
        //     var lay = new ccui.Layout();
        //     lay.setContentSize(cc.size(0, 0));
        //     lay.setAnchorPoint(0.5, 0.5);
        //     lay.setTouchEnabled(false);
        //     arr.push(lay);
        // }
        // X.center(arr, node, {
        //     callback: function (target) {
        //         G.class.ani.show({
        //             json: "ani_10xingsaoguang",
        //             addTo: target,
        //             x: target.width / 2,
        //             y: target.height / 2,
        //             repeat: true,
        //             autoRemove: false
        //         })
        //     }
        // });
        X.createStarsLayout(node, star - 9, {
            imgstar: 'img/public/' + ico + '.png',
            maxStar: star - 9,
            align: "left",
            callback: function (panel) {

            },
            cb: function (target) {
                target.opacity = 0;
                G.class.ani.show({
                    json: "ani_10xingsaoguang",
                    addTo: target,
                    x: target.width / 2,
                    y: target.height / 2,
                    repeat: true,
                    autoRemove: false,
                    cache:true,
                    onload: function (node, action) {
                        node.setScale(.95);
                    }
                });
            }
        });
    }else{
        for (var i = 0; i < starMax; i++){
            var p = new ccui.ImageView();
            if(i+1 > starNum){
                p.loadTexture('img/public/img_xing1.png',1);
            }else{
                p.loadTexture('img/public/' + ico + '.png',1);
            }
            p.setScale(scale);
            p.setAnchorPoint(0,0);
            p.x = x;
            p.y = 0;
            node.addChild(p);
            x += imgW + interval;
        }
    }

};

})();
;;/**
 * Created by zhangming on 2018-05-03
 */
(function() {
    // 英雄信息-角色面板
    G.class.ui_tip_rw = X.bView.extend({
        ctor: function(type) {
            var me = this;
            G.frame.yingxiong_xxxx.rw = me;
            me._type = type;
            me._super('ui_tip_rw.json');
        },
        refreshPanel: function() {
            var me = this;
            me.curXbId = G.frame.yingxiong_xxxx.curXbId;
            me.curXbIdx = G.frame.yingxiong_xxxx.curXbIdx;

            me.setContents();
            me.setPinLun();
            new X.bView('ui_top3.json', function(view) {
                // me.ui.removeAllChildren();
                me.fenxiang = view;
                me.fenxiang.hide();
                if (G.frame.yingxiong_xxxx.ui.getChildByTag(666)) {
                    G.frame.yingxiong_xxxx.ui.getChildByTag(666).removeFromParent();
                }
                view.setTag(666);
                G.frame.yingxiong_xxxx.ui.addChild(view);
                me.setFenXiang(view);
            }, {action: true});
        },
        setPinLun: function() {
            var me = this;
            if(G.frame.yingxiong_xxxx.from == "yingxiong_tujian") {
                me.nodes.p_dianzan.show();
                me.nodes.p_dianzan.setBackGroundImage("img/public/img_dianzan.png", 1);

                me.ajax("hero_getcomment", [me.curXbId.split("_")[0]], function (str, data) {
                    if(data.s == 1) {
                        // me.nodes.p_dianzan.removeAllChildren();
                        // var img = new ccui.ImageView("img/public/img_dianzan.png", 1);
                        // var str = "<font node=1></font> {1}";
                        // var rh = new X.bRichText({
                        //     size: 18,
                        //     maxWidth: me.nodes.p_dianzan.width,
                        //     lineHeight: 32,
                        //     color: "#30FF01",
                        //     family: G.defaultFNT,
                        // });
                        me.nodes.txt_dzwz.setString(data.d.like ? (data.d.like > 9999 ? "9999+" : data.d.like) : 0);
                        // rh.text(X.STR(str, data.d.like ? (data.d.like > 9999 ? "9999+" : data.d.like) : 0), [img]);
                        // rh.setAnchorPoint(0.5, 0.5);
                        // rh.setPosition(me.nodes.p_dianzan.width / 2, me.nodes.p_dianzan.height / 2);
                        // me.nodes.p_dianzan.addChild(rh);
                    }
                });
            }
        },
        setContents: function() {
            var me = this;

            var frame = G.frame.yingxiong_xxxx.from,
                data, conf;
            if (frame != 'yingxiong_tujian') {
                data = G.DATA.yingxiong.list[me.curXbId];
                conf = G.class.hero.getById(data.hid);
                // 种族图标
                me.nodes.panel_zz.setScale(.66);
                me.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (conf.zhongzu + 1) + '.png', ccui.Widget.PLIST_TEXTURE);

                me.render({
                    txt_zdl: data.zhanli, // 战力
                });
                var str = conf.name;
                // + X.STR('<font color=#ffc85d>{1}/{2}</font>','('+data.lv, G.class.herocom.getMaxlv(data.hid, data.dengjielv)+')');
                me.setname(me.nodes.txt_name,str,me.nodes.panel_zz);

                if(data.islock){
                    me.nodes.btn_jiesuo.hide();
                    me.nodes.btn_suo.show();
                }else{
                    me.nodes.btn_suo.hide();
                    me.nodes.btn_jiesuo.show();
                }

                while (me.getChildByTag(999999)){
                    me.getChildByTag(999999).removeFromParent();
                }
                var oldData = G.DATA.yingxiong.oldData;
                if (oldData && me.curHeroId && me.curHeroId == me.curXbId && G.frame.yingxiong_xxxx.isf) {
                    if(data.zhanli !== oldData.zhanli){
                        var scaleMax = cc.scaleTo(0.1, 1.25, 1.25);
                        var scaleMin = cc.scaleTo(0.1, 1, 1);
                        var action = cc.sequence(scaleMax, scaleMin);
                        me.nodes.txt_zdl.runAction(action);
                    }
                    var sarr = [L("atk"), L("def"), L("hp"), L("speed")];
                    var arr = ["atk", "def", "hp", "speed"];
                    var num = 0;
                    for(var i = 0; i < arr.length; i ++){
                        if (data[arr[i]] !== oldData[arr[i]]) {
                            var is = data[arr[i]] > oldData[arr[i]];
                            var shuXingUp = new ccui.ImageView;
                            (function (shuXingUp) {
                                var str = sarr[i] + (is ? ("+" + (data[arr[i]] - oldData[arr[i]])) : (data[arr[i]] - oldData[arr[i]]));
                                var txt = new ccui.Text(str, "fzcyj", 20);
                                txt.setFontName(G.defaultFNT);
                                txt.setTextColor(cc.color(is ? "#3cff00" : "#ff3000"));
                                X.enableOutline(txt, "#000000", 2);
                                txt.setPosition(shuXingUp.width / 2, shuXingUp.height / 2);
                                shuXingUp.addChild(txt);
                                shuXingUp.setPosition(me.width / 2 - 100, 130 - num * 30);
                                num ++;
                                shuXingUp.setTag(999999);
                                me.addChild(shuXingUp);
                                var action1 = cc.moveBy(0.1, cc.p(100, 0));
                                var action2 = cc.fadeOut(0.3);
                                var action3 = cc.moveBy(0.3, cc.p(0, 10));
                                var action4 = cc.spawn(action2, action3);
                                var action5 = cc.sequence(action1, action4, cc.callFunc(()=>{
                                    shuXingUp.hide(false);
                                }));
                                shuXingUp.runAction(action5);
                            })(shuXingUp);
                        }
                    }
                }
                me.setRwBg(conf.zhongzu);
            } else {
                var pro;
                var arr = me.curXbId.split('_');

                data = X.clone(G.class.hero.getById(arr[0]));
                if (arr.length > 1) {
                    var starup = G.class.herostarup.getByIdAndDengjie(arr[0], '10');
                    data.lv = starup.maxlv;
                    data.dengjielv = '10';
                    data.star = 10;
                    pro = G.class.herostarup.getByIdAndDengjie(arr[0], data.dengjielv);
                } else {
                    data.dengjielv = data.star;
                    data.lv = G.class.herocom.getMaxlv(arr[0], data.dengjielv);
                    pro = G.class.herocom.getHeroJinJieUp(data.dengjielv);
                }
                if(!pro){
                    pro = {"atkpro":2.2,"defpro":1,"hppro":2.2,"speedpro":1.6};
                }
                var herogrowConf = G.class.herogrow.getById(arr[0]);
                var buffArr = ['atk','def','hp','speed'];
                for (var i = 0; i < buffArr.length; i++) {
                    var buffType = buffArr[i];
                    data[buffType] = herogrowConf[buffType];
                }
                for (var i = 0; i < buffArr.length; i++) {
                    var buffType = buffArr[i];
                    data[buffType] = Math.floor((data[buffType] + (data.lv - 1) * herogrowConf[buffType + "_grow"]) * pro[buffType + "pro"]);
                }
                var zl = parseInt(data.atk + data.def + data.hp / 6);
                // 种族图标
                me.nodes.panel_zz.setScale(.66);
                me.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (data.zhongzu + 1) + '.png', ccui.Widget.PLIST_TEXTURE);

                me.render({
                    txt_zdl: zl // 战力
                });
                var str = data.name;
                // + X.STR('<font color=#ffc85d>{1}/{2}</font>',data.lv, G.class.herocom.getMaxlv(data.hid, data.dengjielv));
                me.setname(me.nodes.txt_name,str,me.nodes.panel_zz);

                me.nodes.btn_fenxiang.hide();
                me.nodes.btn_jiesuo.hide();
                me.nodes.btn_suo.hide();
                me.ui.finds("Image_1_0_0").hide();
                me.ui.finds("Image_1_0").hide();

                me.setRwBg(data.zhongzu);
            }
            if(!G.frame.yingxiong_xxxx.newSkill || G.frame.yingxiong_xxxx.newSkill != me.curXbId) {
                me.setSkillIcon(data);
                G.frame.yingxiong_xxxx.newSkill = me.curXbId;
            }
            me.curHeroId = me.curXbId;
            G.class.ui_star(me.nodes.panel_xx, data.star, 0.8, null, true);


            // 角色形象
            //me.nodes.panel_rw
            if (!me.id || me.id != me.curXbId || data.star!=me._oldStar) {
                X.setHeroModel({
                    parent: me.nodes.panel_rw,
                    data: data
                });
            }
            me.nodes.panel_rw.setTouchEnabled(true);
            me.nodes.panel_rw.click(function() {
                me.nodes.panel_rw.getChildren()[0].runAni(0, "atk", false);
                me.nodes.panel_rw.getChildren()[0].addAni(0, "wait", true, 0);
            });
            me.hid = data.hid;
            me.id = me.curXbId;
            me._oldStar = data.star;
        },
        setname:function(target, text, zz){
            var rt = new X.bRichText({
                size: 20,
                lineHeight: 24,
                color: G.gc.COLOR.n1,
                maxWidth: target.width,
                family: G.defaultFNT,
                eachText: function (node) {
                    X.enableOutline(node,'#34221d');
                },
            });
            rt.text(text);
            rt.setAnchorPoint(0, 0.5);
            rt.setPosition( cc.p((target.width - rt.trueWidth())*0.5 + 15, target.height*0.5) );
            target.removeAllChildren();
            target.addChild(rt);
            var rt_w = rt.trueWidth();
            var rt_h = rt.trueHeight();
            zz.setAnchorPoint(0,0.5);
            zz.setPosition(cc.p(target.x - rt_w/2 - zz.width + 10 + 15, target.y + target.height*0.5 - rt_h/2))

        },

        // 左右滑动
        bindSlide: function() {
            var me = this;
            var tidArr = G.frame.yingxiong_xxxx.list;


            var getNewArmy = function(direction) {
                var renwu = me.nodes.renwu.clone();
                renwu.setPosition(cc.p(direction == 'left' ? C.WS.width + 200 : -200, me._defaultPos.y));
                me.nodes.panel_cf.addChild(renwu);
                return renwu;
            };

            var showNewArmy = function(army) {
                var tid = tidArr[me.curXbIdx];
                G.frame.yingxiong_xxxx.updateInfo({
                    tid: tid
                }, function() {});
            };

            var changeArmy = function(direction) {
                showNewArmy();
            };

            var reset = function(node) {
                node = node || me._curYx;
                node.runActions([
                    cc.moveTo(0.3, me._defaultPos)
                ]);
            };

            var cutPage = function(v) {
                if (v > 0) {
                    if (me.curXbIdx < G.frame.yingxiong_xxxx.list.length - 1) {
                        me.curXbIdx++;
                        changeArmy('left');
                        checkButtonState();
                        return true;
                    } else {
                        return false;
                    }
                } else {
                    if (me.curXbIdx > 0) {
                        me.curXbIdx--;
                        changeArmy('right');
                        checkButtonState();
                        return true;
                    } else {
                        return false;
                    }
                }
            };


            var checkButtonState = function() {

                if (!G.frame.yingxiong_xxxx.list || G.frame.yingxiong_xxxx.list.length < 1) {
                    me.nodes.panel_arrow1.hide();
                    me.nodes.panel_arrow2.hide();
                } else {
                    if (me.curXbIdx == 0) {
                        me.nodes.panel_arrow1.hide();
                    } else {
                        me.nodes.panel_arrow1.show();
                    }
                    if (me.curXbIdx == G.frame.yingxiong_xxxx.list.length - 1) {
                        me.nodes.panel_arrow2.hide();
                    } else {
                        me.nodes.panel_arrow2.show();
                    }
                }

            };
            checkButtonState();
            me.nodes.panel_arrow1.setTouchEnabled(true);
            me.nodes.panel_arrow1.click(function() {
                cutPage(-1);
            },300);

            me.nodes.panel_arrow2.setTouchEnabled(true);
            me.nodes.panel_arrow2.click(function() {
                cutPage(1);
            },300);

            var sPos;
            me.ui.finds("panel_tp").setTouchEnabled(true);
            me.ui.finds("panel_tp").touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_BEGAN) {
                    sPos = sender.getTouchBeganPosition();
                } else if (type == ccui.Widget.TOUCH_MOVED) {

                } else if (type == ccui.Widget.TOUCH_ENDED || type == ccui.Widget.TOUCH_CANCELED) {
                    var ePos = sender.getTouchEndPosition();
                    if (ePos.x - sPos.x < -10) {
                        cutPage(1);
                    } else if (ePos.x - sPos.x > 10) {
                        cutPage(-1);
                    }
                }
            })
        },
        bindBTN: function() {
            var me = this;
            me.bindSlide();

            // 锁
            //me.nodes.btn_suo.setTouchEnabled(true);
            // me.nodes.btn_suo.setEnabled(true);
            me.nodes.btn_suo.click(function(sender, type) { //hero_lock：
                me.ajax('hero_lock', [me.curXbId], function(s, rd) {
                    if (rd.s == 1) {
                        // G.tip_NB.show(L("JSCG"));
                        G.DATA.yingxiong.list[me.curXbId].islock = rd.d.hero[me.curXbId].islock;
                        // sender.setBright(rd.d.hero[me.curXbId].islock ? true : false);
                        me.nodes.btn_suo.hide();
                        me.nodes.btn_jiesuo.show();
                    }
                }, true);
            });
            //解锁
            me.nodes.btn_jiesuo.click(function(sender, type) { //hero_lock：
                me.ajax('hero_lock', [me.curXbId], function(s, rd) {
                    if (rd.s == 1) {
                        // G.tip_NB.show(L("SDCG"));
                        G.DATA.yingxiong.list[me.curXbId].islock = rd.d.hero[me.curXbId].islock;
                        // sender.setBright(rd.d.hero[me.curXbId].islock ? true : false);
                        me.nodes.btn_jiesuo.hide();
                        me.nodes.btn_suo.show();
                    }
                }, true);
            });

            // 分享
            me.nodes.btn_fenxiang.click(function() {
                me.fenxiang.show();
                me.fenxiang.action.play("in", false);
            });

            me.nodes.btn_pinlun.click(function () {
                if(G.frame.yingxiong_xxxx.from == "yingxiong_tujian") {
                    var hid = me.curXbId;
                    G.frame.yingxiong_pinglun.data(hid).show();
                }else {
                    if(G.DATA.yingxiong.list[me.curXbId].star > 9) {
                        var hid = G.DATA.yingxiong.list[me.curXbId].hid + "_10";
                        G.frame.yingxiong_pinglun.data(hid).show();
                    }else {
                        G.frame.yingxiong_pinglun.data(G.DATA.yingxiong.list[me.curXbId].hid).show();
                    }
                }

            })
        },
        setFenXiang: function(ui) {
            var me = this;
            var panel = ui;
            var btns = [];
            X.autoInitUI(panel);
            // panel.nodes.mask.setContentSize(cc.director.getWinSize());
            panel.nodes.mask.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    panel.hide();
                }
            });
            // panel.nodes.panel_top.setPositionX(295);
            var richText = new X.bRichText({
                size: 24,
                maxWidth: panel.nodes.txt_nr.width,
                lineHeight: 24,
                color: '#F6EBCD',
                family: G.defaultFNT,
            });
            richText.text(L('XZFXPD'));
            richText.setPosition(118, 60);
            panel.nodes.txt_nr.addChild(richText);
            var conf = {
                0: '世界',
                1: '公会'
            };
            for (var i = 0; i < 2; i++) {
                var btn = new ccui.Button();
                panel.nodes.panel_top.addChild(btn);
                btn.loadTextureNormal('img/public/btn/btn2_on.png', 1);
                btn.setPosition(115 + (i * 310), 90);
                btn.setTitleText(conf[i]);
                btn.setTitleFontName(G.defaultFNT);
                btn.setTitleFontSize(24);
                btn.setTitleColor(cc.color('#7b531a'));
                btns.push(btn);
            }
            //世界
            btns[0].touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {;
                    var send = ['1',2,'','','',G.DATA.yingxiong.list[me.curXbId].tid];
                    G.frame.liaotian.sendMsgToServ(send,function(){
                        G.tip_NB.show(L('FSCG')); 
                        panel.hide();
                    });
                }
            });
            //公会
            btns[1].touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var send = ['1',3,'','','',G.DATA.yingxiong.list[me.curXbId].tid];
                    G.frame.liaotian.sendMsgToServ(send,function(){
                        G.tip_NB.show(L('FSCG'));
                        panel.hide();
                    });
                }
            })
        }, 
        onOpen: function() {
            var me = this;
            me.refreshPanel();
            me.bindBTN();
            me.nodes.panel_jn.show();
        },
        onShow: function() {
            var me = this;


            G.frame.yingxiong_xxxx.onnp('updateInfo', function(d) {
                me.refreshPanel();
            }, me.getViewJson());
        },
        onRemove: function() {
            var me = this;
        },
        setRwBg: function (zz) {
            var me = this;

            //相同种族时，不做切换
            if (me.curZhongzu == zz) {
                return;
            }

            me.curZhongzu = zz;

            var layBg = me.ui.finds('ditu');
            layBg.removeAllChildren();
            
            var conf = G.class.herocom.getZhongzuById(zz);
            G.class.ani.show({
                addTo:layBg,
                x:layBg.width / 2,
                y:layBg.height / 2,
                json:conf.ani,
                repeat:true,
                autoRemove:false,
                cache:true,
                onload: function (node, action) {
                    
                }
            });
        },
        setSkillIcon: function (data) {
            var me = this;
            var interval = 16;
            var conf = G.class.hero.getById(data.hid);
            var skillList = G.class.hero.getSkillList(data.hid, data.dengjielv);
            var w = skillList.length * 88 + (skillList.length - 1) * interval;
            var x = (me.nodes.panel_jn.width - w) * 0.5;
            var btn_num = 0;
            for (var i = 0; i < conf.bdskillopendjlv.length; i++) {
                if (data.dengjielv >= conf.bdskillopendjlv[i]) {
                    ++btn_num;
                }
            }

            me.nodes.panel_jn.removeAllChildren();

            for (var i = 0; i < skillList.length; i++) {
                var p = G.class.ui_skill_list(skillList[i], true, null, null, data);
                p.setAnchorPoint(0, 0);
                p.x = x;
                p.y = -9;
                me.nodes.panel_jn.addChild(p);
                x += 88 + interval;
                if (i > btn_num) {
                    p.ishui = true;
                    p.ico_jn.setBright(false);
                }
            }
        },
        palySkillAni: function () {
            var me = this;
            var skill;

            for (var i in me.nodes.panel_jn.children) {
                if(me.nodes.panel_jn.children[i].ishui) {
                    skill = me.nodes.panel_jn.children[i];
                    break;
                }
            }

            if(skill) {
                G.class.ani.show({
                    json: "ani_jinenghuode",
                    addTo: skill,
                    x: skill.width / 2,
                    y: skill.height / 2,
                    repeat: false,
                    autoRemove: false,
                    onend: function () {
                        me.setSkillIcon(G.DATA.yingxiong.list[me.curXbId]);
                    }
                })
            }else {
                me.setSkillIcon(G.DATA.yingxiong.list[me.curXbId]);
            }
        }
    });

})();
;;/**
 * Created by zhangming on 2018-05-03
 */
(function () {
    //英雄信息-材料列表
    var ID = 'ui_tip_xuanze';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        setContents:function() {
            var me = this;

            me.fmtItemList();
        },
        bindUI: function () {
            var me = this;
            setPanelTitle(me.nodes.txt_title, L('UI_TITLE_XUANZE'));

            me.nodes.mask.click(function(){
                var yongyou = me.sortData(me.filterData()).length;

                me.DATA.callback && me.DATA.callback(me.selectArr, yongyou);
                me.remove();
            });


            if(!me.isHave) {
                me._view.nodes.btn_xz.setTitleText(L("HQYX"));
            }

            me._view.nodes.btn_xz.setTouchEnabled(true);
            me._view.nodes.btn_xz.setSwallowTouches(true);
            me._view.nodes.btn_xz.click(function(){
                if(!me.isHave) {
                    me.setGo();
                }else {
                    var yongyou = me.sortData(me.filterData()).length;
                    if (me.selectArr.length < me.DATA.need.num) {
                        var callback = me.DATA.callback;
                        callback && callback(me.selectArr, yongyou);
                        me.remove();
                    } else {
                        var callback = me.DATA.callback;
                        callback && callback(me.selectArr, yongyou);
                        me.remove();
                    }
                }
            });
        },
        setGo: function() {
            var me = this;
            if(!me.go) {
                var up = cc.moveBy(0.1, 0, 50);
                var goUp = cc.spawn(up, cc.callFunc(()=>{
                    new X.bView("zhuangbei_tip2.json", function (view) {
                        me.go = view.nodes.panel_bg.clone();
                        me.go.setPosition(320, 350);
                        me.ui.addChild(me.go);
                        me.go.runAction(cc.moveBy(0.1, 0, -30));
                        me.setTo([15, 1, 9, 8, 5, 3]);
                    })
                }));
                me.ui.finds("panel_tip").runAction(goUp);
                me.nodes.txt_djgb.hide();
            }else {
                me.go.removeFromParent(true);
                delete me.go;
                var down = cc.moveBy(0.1, 0, -50);
                var goDown = cc.sequence(down, cc.callFunc(()=> {
                    me.nodes.txt_djgb.show();
                }));
                me.ui.finds("panel_tip").runAction(goDown);
            }
        },
        setTo: function(conf) {
            var me = this;
            var btnArr = [];
            for(var i = 0; i < conf.length; i ++){
                var btn = G.class.setTZ(conf[i]);
                btnArr.push(btn);
            }
            btnArr.sort(function (a, b) {
                return a.is > b.is ? -1 : 1;
            });
            X.autoInitUI(me.go);
            me.go.nodes.btn_hqtj.hide();
            X.center(btnArr, me.go.nodes.panel_ico, {
                scale: .9
            });
        },
        onOpen: function () {
            var me = this;

        },
        getIdxData: function(){
            var me = this;
            var data = me.data().IdxData;

            return data;
        },
        getSelectedData: function(){
            var me = this;
            var arr = [];
            var data = me.data().selectedData;

            for (var i in data){
                for(var j = 0; j < data[i].length; j ++){
                    arr.push(data[i][j]);
                }
            }

            return arr;
        },
        onShow: function () {
            var me = this;

            me.DATA = me.data();
            if (G.frame.yingxiong_xxxx.curXbId) {
                me.curXbId = G.frame.yingxiong_xxxx.curXbId;
                me.curId = G.DATA.yingxiong.list[me.curXbId].hid;
            }
            me.selectArr = [];
            me.conf = G.class.hero.getById(me.curId || me.DATA.hid);
            me.jjcLockData = G.frame.yingxiong.getLockHeros();
            me.idxData = me.getIdxData();
            me.selectedData = me.getSelectedData();
            for(var i in me.idxData) {
                me.selectArr.push(me.idxData[i]);
            }

            new X.bView('ui_tip_xuanze.json',function(view){
                me._view = view;

                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me.jjcLockData = G.frame.yingxiong.getLockHeros();
                me.setContents();
                me.bindUI();
            });
        },
        onRemove: function () {
            var me = this;
        },
        fmtItemList: function () {
            var me = this;

            var panel = me._view;
            cc.enableScrollBar(me._view.nodes.scrollview);
            me._view.nodes.scrollview.removeAllChildren();

            var data = me.sortData(me.filterData());
            if (data.length < 1) {
                panel.finds('img_zwnr').show();
                me.isHave = false;
                return;
            } else {
                me.isHave = true;
                panel.finds('img_zwnr').hide();
            }

            var table = me.table = new X.TableView(me._view.nodes.scrollview, me._view.nodes.list, 5, function (ui, data) {
                me.setItem(ui, data);
            }, null, null, 1, 1);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;
            if (data == null) {
                ui.hide();
                return;
            }
            // ui.setName(pos[0]*1 + pos[1]);
            ui.setName(data);
            X.autoInitUI(ui);

            var heroData = G.DATA.yingxiong.list[data];
            var widget = G.class.shero(heroData);
            widget.setScale(0.95);
            widget.setAnchorPoint(0.5,1);
            widget.setPosition(cc.p( ui.nodes.panel_ico.width*0.5, ui.nodes.panel_ico.height ));
            ui.nodes.panel_ico.removeAllChildren();
            ui.nodes.panel_ico.addChild(widget);

                // img_suo$
                // img_gou$
            var imgSuo = ui.nodes.img_suo;
            // var imgGou = ui.nodes.img_gou;

            // imgGou.hide();
            imgSuo.hide();
            widget.setGou(false);
            if (X.inArray(me.jjcLockData,data) || G.DATA.yingxiong.list[data].islock) {
                imgSuo.show();
                widget.setEnabled(false);
            }

            if(X.inArray(me.selectArr, data)) {
                widget.setGou(true);
            }else {
                widget.setGou(false);
            }

            ui.data = data;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    //已在竞技场上阵，不可选择
                    if (X.inArray(me.jjcLockData,sender.data)) {
                        G.tip_NB.show(X.STR(L('YX_X_LOACKING'),L('jingjichang')));
                        return;
                    }

                    //已被锁定，不可选择
                    if (G.DATA.yingxiong.list[sender.data].islock) {
                        G.tip_NB.show(L('YX_LOCKING'));

                        return;
                    }


                    if (X.inArray(me.selectArr, sender.data)) {
                        widget.setGou(false);
                        me.selectArr.splice(X.arrayFind(me.selectArr,sender.data),1);
                    } else {
                        if (me.selectArr.length >= me.DATA.need.num) {
                            G.tip_NB.show(L('YX_FIGHT_XZ_FULL'));
                            return;
                        }else{
                            me.selectArr.push(sender.data);
                            widget.setGou(true);
                        }
                    }
                }
            });
            ui.show();
        },
        filterData: function () {
            var me = this;

            var data = me.DATA;
            var need = data.need;

            var heroData = G.DATA.yingxiong.list;
            var keys = X.keysOfObject(heroData);

            //过滤掉自己本身
            if (me.curXbId) {
                keys.splice(X.arrayFind(keys,me.curXbId),1);
            }

            //需要过滤掉已经被选择的英雄
            // 需要过滤掉不等于该索引的已选择的tid
            for(var i = 0; i < me.selectedData.length; i ++){
                if(!X.inArray(me.idxData, me.selectedData[i])){
                    keys.splice(X.arrayFind(keys, me.selectedData[i]), 1);
                }
            }

            var canShowArr = [];
            //需要过滤不符合条件的英雄
            if (need.sxhero) {
                //指定的使用材料

                var needHid = me.conf.sxhid || me.conf.hid;
                for (var i = 0; i < keys.length; i++) {
                    var tid = keys[i];
                    if (heroData[tid].hid == needHid) {
                        canShowArr.push(tid);
                    }
                }
            } else if (need.samezhongzu) {
                //相同种族的某一星级

                var needStar = need.star;
                for (var i = 0; i < keys.length; i++) {
                    var tid = keys[i];
                    if (heroData[tid].zhongzu == me.conf.zhongzu && heroData[tid].star == needStar) {
                        canShowArr.push(tid);
                    }
                }
            } else if (need.t) {
                for (var i = 0; i < keys.length; i++) {
                    var tid = keys[i];
                    if (heroData[tid].hid == need.t) {
                        canShowArr.push(tid);
                    }
                }
            }else if(need.star){
                for (var i = 0; i < keys.length; i++) {
                    var tid = keys[i];
                    if (heroData[tid].star == need.star) {
                        canShowArr.push(tid);
                    }
                }
            }

            return canShowArr;
        },
        sortData: function (d) {
            var me = this;


            var jjcLockData = me.jjcLockData;
            var heroData = G.DATA.yingxiong.list;

            //对材料分类，分类依据：加锁与未加锁
            var canUseArr = [],
                lockArr = [];
            for (var i = 0; i < d.length; i++) {
                var tid = d[i];
                var data = heroData[tid];
                if (X.inArray(jjcLockData,tid) || data.islock) {
                    lockArr.push(tid);
                } else {
                    canUseArr.push(tid);
                }
            }

            canUseArr.sort(function (a,b) {
                var dA = heroData[a];
                var dB = heroData[b];

                if (dA.lv != dB.lv) {
                    return dA.lv < dB.lv ? -1 : 1;
                } else if (dA.hid != dB.hid) {
                    return dA.hid * 1 < dB.hid * 1 ? -1 : 1;
                }
            });

            lockArr.sort(function (a,b) {
                var dA = heroData[a];
                var dB = heroData[b];

                if (dA.lv != dB.lv) {
                    return dA.lv < dB.lv ? -1 : 1;
                } else if (dA.hid != dB.hid) {
                    return dA.hid * 1 < dB.hid * 1 ? -1 : 1;
                }
            });


            var list = [].concat(canUseArr,lockArr);

            return list;
        }
    });

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by yaosong on 2018-10-24
 */
(function() {
    //融魂-详情
    var ID = 'ui_top_rh';

    var fun = X.bUi.extend({
        ctor: function(json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id, {action:true});
        },
        setContents: function() {
            var me = this;

            var listview = me.nodes.listview;
            var bg = me.nodes.bg_top;
            cc.enableScrollBar(listview);
            listview.setTouchEnabled(true);
            var up = G.class.meltsoul.getById(me.data().hid);
            var openlv = G.class.meltsoulcom.get().base.tupo;
            var sarr = [L("atk"), L("def"), L("hp"), L("speed")];
            var arr = ["atk", "def", "hp", "speed"];

            var key = X.keysOfObject(up);
            for (var i = 0; i < key.length - 1; i++) {
                var up_list = me.nodes.list$.clone();
                X.autoInitUI(up_list);
                var txt_wz = up_list.nodes.txt_wz;

                var ewai_up = "";
                var ewai_name = "";
                for (var j = 0; j < arr.length; j++) {
                    if (up[i+1].extrabuff[arr[j]]) {
                        ewai_up = up[i+1].extrabuff[arr[j]];
                        ewai_name = sarr[j];
                    }
                }
                var str = "";
                str += X.STR(L("YXRH_XQ1"), i + 2, openlv[i + 1]);
                str += "<br>";
                str += X.STR(L("YXRH_XQ2"), up[i+2].upperlimit.atk);
                str += "      ";
                str += X.STR(L("YXRH_XQ3"), up[i+2].upperlimit.hp);
                str += "<br>";
                str += X.STR(L("YXRH_XQ4"), ewai_name, ewai_up);

                var rh = new X.bRichText({
                    size: 20,
                    maxWidth: txt_wz.width,
                    lineHeight: 24,
                    color: me.dengjie >= (i+2) ? "#30ff01" : "#63584a",
                    family: G.defaultFNT
                });

                rh.text(str);
                rh.setAnchorPoint(0, 1);
                rh.setPosition(5, txt_wz.height / 2 + rh.trueHeight() / 2);
                txt_wz.addChild(rh);
                up_list.show();
                listview.pushBackCustomItem(up_list);
            }
            listview.setContentSize(cc.size(me.nodes.list$.width, (me.nodes.list$.height + 10) * (key.length - 1)));
            var bg_addY = (me.nodes.list$.height + 10) * (key.length - 1) - bg.height;
            bg.setContentSize(cc.size(me.nodes.list$.width + 20, (me.nodes.list$.height + 10) * (key.length - 1)));
            if(key.length < 6){
                bg.setPositionY(bg.y - bg_addY/2);
            }
        },
        bindUI: function() {
            var me = this;

            me.nodes.mask.click(function() {
                me.remove();
            });
        },
        onOpen: function() {
            var me = this;
            me.bindUI();
        },
        onShow: function() {
            var me = this;
            me.curXbId = me.data().tid;
            me.curId = me.data().hid;
            me.dengjie = me.data().dengjie;

            me.setContents();

        },
        onRemove: function() {
            var me = this;
        },
    });

    G.frame[ID] = new fun('ui_top7.json', ID);
})();

;;/**
 * Created by zhangming on 2018-05-03
 */
(function () {
    //英雄信息-数据详情
    var ID = 'ui_top_xq';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id, {action: true});
        },
        setContents:function() {
            var me = this;
            var data = (me.data() && me.data().data) || G.DATA.yingxiong.list[me.curXbId] || G.class.herogrow.getById(me.curId);
            var keys = ['jingzhunpro','gedangpro','undpspro','dpspro','skilldpspro','baoshangpro','baojipro','miankongpro','pojiapro',"pvpdpspro","pvpundpspro"];

            var listview = me.nodes.listview;
            listview.setScrollBarEnabled && listview.setScrollBarEnabled(false);
            listview.removeAllItems();

            for(var i=0;i<keys.length;i++){
                var list = me.nodes.list.clone();
                X.autoInitUI(list);
                if(data[keys[i]] == null){
                    data[keys[i]] = '0';
                }
                var num = parseInt(data[keys[i]]/10) + ("." + data[keys[i]]%10 + "%");
                X.render({
                    txt_sx:L('ITEM_ATTR_' + keys[i]),
                    txt_sz:num
                }, list.nodes);
                list.show();
                listview.pushBackCustomItem(list);
            }
        },
        bindUI: function () {
            var me = this;

            me.nodes.mask.click(function(){
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;
            me.bindUI();

            if(me.data().y) {
                me.nodes.panel_top.y = me.data().y / 2;
            } else {
                me.nodes.panel_top.y += 180;
            }
        },
        onShow: function () {
            var me = this;
            me.curXbId = me.data().tid;
            me.curId = me.data().id;

            me.setContents();

        },
        onRemove: function () {
            var me = this;
        }
    });

    G.frame[ID] = new fun('ui_top1.json', ID);
})();

;;/**
 * Created by zhangming on 2018-05-03
 */
(function () {
    //英雄列表, 图鉴列表
    var ID = 'yingxiong';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f2";
            me.fullScreen = true;
            me.needshowMainMenu = true;
            me._super(json, id,{action:true});

            //仅供查阅
            var zz2idx = {
                5:0, //神圣
                6:1, //暗影
                4:2, //自然
                3:4, //邪能
                2:5, //奥术
                1:6 //亡灵
            };
        },
        changeType: function(sender){
            var me = this;

            var type = sender.data.id;
            me._curType = type;

            if(type == "1") {
                me.nodes.Image_10.show();
            }else {
                me.nodes.Image_10.hide();
            }

            var viewConf = {
                "1": G.class.yingxiong_lb,
                "2": G.class.yingxiong_tujian,
                "3": G.class.yingxiong_tonyu,
            };

            var newView = new viewConf[type];
            newView.setVisible(false);
            me.ui.nodes.panel_nr.addChild(newView);

            if(cc.isNode(me._panels)) {
                me.playBookAni(function () {
                    me._panels.removeFromParent();
                    me._panels = newView;
                    me._panels.setVisible(true);
                })
            }else {
                me.playBookAni(function () {
                    me._panels = newView;
                    me._panels.setVisible(true)
                })
            }
        },
        playBookAni: function(callback) {
            var me = this;

            callback && callback();
            // G.class.ani.show({
            //     json: "ani_fanshu",
            //     addTo: me.nodes.panel_fydh,
            //     x: me.nodes.panel_fydh.width / 2,
            //     y: me.nodes.panel_fydh.height / 2,
            //     repeat: false,
            //     autoRemove: true,
            //     onend: function () {
            //
            //     }
            // });
        },
        getCurType: function(){
            var me = this;
            return me._curType;
        },
        //获得指定panel
        getPanel:function(type) {
            var me = this;

            return me._panels[type];
        },
        //获得所有的panel
        getPanels:function() {
            var me = this;

            return me._panels;
        },
        bindUI: function () {
            var me = this;
            var arr = [];
            var btns = G.class.menu.get('yingxiong');
            if(G.tiShenIng){
                btns = [btns[0]];
            }
            for (var i in btns) {
                var btn = me.nodes["page_" + btns[i].id];
                btn.show();
                btn.children[0].setString(btns[i].title);
                if(btns[i].checkLv) {
                    if(P.gud.lv < G.class.opencond.getLvById(btns[i].checkLv)) {
                        btn.checkLv = true;
                        btn.show = X.STR(btns[i].show, G.class.opencond.getLvById(btns[i].checkLv));
                    }
                }
                btn.data = btns[i];
                arr.push(btn);
            }
            X.radio(arr, function (sender) {
                if(sender.disable){
                    G.tip_NB.show(sender.show);
                    return;
                }
                me.changeType(sender);
            }, {
                callback1: function (sender) {
                    sender.children[0].setTextColor(cc.color("#ffffff"));
                    X.enableOutline(sender.children[0], "#001e5b", 2);
                },
                callback2: function (sender) {
                    sender.children[0].setTextColor(cc.color("#af9e89"));
                    X.enableOutline(sender.children[0], "#592e1c", 2);
                }
            });

            me.nodes.btn_bangzhu.show();
            me.nodes.btn_bangzhu.click(function () {
                G.frame.help.data({
                    intr:L(me._curType == 1 ? "TS19" : (me._curType == 2 ? "TS20" : "TS21"))
                }).show();
            });

            me.nodes.Image_10.finds("btn_jia$").click(function () {
                var conf = G.class.getConf('herocom').herocell;
                var data = G.DATA.heroCell;
                var need = G.class.formula.compute(conf.need[0].n,{buyednum:data.buynum || 0});
                var str = X.STR(L('YINGXIONG_BUG_CELL'),need,conf.addnum);
                G.frame.alert.data({
                    cancelCall:null,
                    autoClose:false,
                    okCall: function () {
                        G.ajax.send('user_addgezinum',[],function(d) {
                            if(!d) return;
                            var d = JSON.parse(d);
                            if(d.s == 1) {
                                for (var key in d.d) {
                                    G.DATA.heroCell[key] = d.d[key];
                                }
                                G.tip_NB.show(L('GOUMAI') + L('SUCCESS'));
                                me.setHeroCell();
                                var need = G.class.formula.compute(conf.need[0].n,{buyednum:data.buynum || 0});
                                var str = X.STR(L('YINGXIONG_BUG_CELL'),need,conf.addnum);
                                G.frame.alert.data({richText:str,autoClose:false}).setContents();
                            }
                        },true);
                    },
                    sizeType:3,
                    richText:str,
                }).show();
            })
        },
        onOpen: function () {
            var me = this;


            me.nodes.tip_title.setBackGroundImage(X.getTitleImg('yx'),1);
            me.getHeadData();
            me.bindUI();
            me.ui.finds("panel_tip").setTouchEnabled(false);
            me.ui.finds("bg_tip_1").zIndex = -2;
        },
        getHeadData: function(){
            var me = this;
            G.ajax.send('user_avaterlist',[],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    me.headData = d.d.avaterlist;
                }
            },true);
        },
        onShow: function () {
            var me = this;

            me.showToper();
            me.showMainMenu();
            var type;
            if(me.data() && me.data().tztype){
                type = me.data().tztype;
            }else{
                type = '1';
            }
            me.nodes["page_" + type].triggerTouch(ccui.Widget.TOUCH_ENDED);

            G.view.mainMenu.set_fhzc(1);
            G.view.mainMenu.checkRedPoint();
            me.setHeroCell();
            // G.frame.yingxiong.getData(function(){
            //     callback && callback();
            // }, me.data());
            me.ui.setTimeout(function () {
                G.guidevent.emit('yingxiongOpenOver');
            }, 500);
            me.checkRedPoint()
        },
        checkRedPoint: function() {
            var me = this;
            if(G.DATA.hongdian.destiny) {
                G.setNewIcoImg(me.nodes.page_3);
                me.nodes.page_3.getChildByName("redPoint").setPosition(80, 70);
            }else G.removeNewIco(me.nodes.page_3);
        },
        setHeroCell: function() {
            var me = this;
            var list = G.DATA.yingxiong.list;
            var keys = X.keysOfObject(list);
            var data = G.DATA.heroCell;
            var ownNum = data.maxnum;

            var chr = me.nodes.Image_10.children[0];
            var str = keys.length + "/" + ownNum;
            var rh = new X.bRichText({
                size: 20,
                lineHeight: 24,
                color: "#f6ebcd",
                maxWidth: chr.width,
                family: G.defaultFNT,
                eachText: function (node) {
                    X.enableOutline(node, "#000000", 2);
                }
            });
            rh.text(str);
            rh.setAnchorPoint(0.5, 0.5);
            rh.setPosition(chr.width / 2, chr.height / 2);
            chr.removeAllChildren();
            chr.addChild(rh);
        },
        onAniShow: function () {
            var me = this;
        },
        onRemove: function () {
            var me = this;
            me.event.emit('hide');
        },
    });

    G.frame[ID] = new fun('ui_tip5.json', ID);
})();
;;/**
 * Created by LYF on 2018-12-26
 */
(function(){
    // 英雄信息-雕文
    G.class.yingxiong_dw = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('yingxiong_dw.json');
            G.frame.yingxiong_xxxx.dw = me;
        },
        refreshPanel: function(isAni){
            var me = this;

            me.curXbId = G.frame.yingxiong_xxxx.curXbId;
            me.curXbIdx = G.frame.yingxiong_xxxx.curXbIdx;

            me.setContents(isAni);
        },
        bindBTN:function() {
            var me = this;

            me.nodes.btn_sm.click(function () {
                G.frame.help.data({
                    intr:L("TS24")
                }).show();
            });
        },
        onOpen: function () {
            var me = this;
            me.bindBTN();
        },
        onShow : function(){
            var me = this;

            me.refreshPanel();
            me.nodes.panel_dh.setTouchEnabled(false);
            G.frame.yingxiong_xxxx.onnp('updateInfo', function (d) {
                if(G.frame.yingxiong_xxxx.getCurType() == me._type){
                    me.refreshPanel(true);
                }else{
                    me._needRefresh = true;
                }
            }, me.getViewJson());
        },
        onNodeShow : function(){
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }

            G.frame.yingxiong_xxxx.changeToperAttr({
                attr2:{a:'item',t:'2004'}
            });
        },
        onRemove: function () {
            var me = this;
        },
        setContents:function(isAni) {
            var me = this;
            var data = G.DATA.yingxiong.list[me.curXbId];

            for (var i = 1; i < 4; i ++) {
                var lay = me.nodes["panel_dw" + i];
                var suo = me.nodes["img_suo" + i];
                lay.isHave = false;
                lay.removeAllChildren();
                lay.idx = i;
                if(data.star >= i + 10) {
                    suo.hide();
                    lay.setTouchEnabled(true);
                    if(data.glyph && data.glyph[i]) {
                        var wid = G.class.sglyph(G.frame.beibao.DATA.glyph.list[data.glyph[i].gid], true);
                        wid.setAnchorPoint(0.5, 0.5);
                        wid.setPosition(lay.width / 2, lay.height / 2);
                        lay.addChild(wid);
                        lay.isHave = true;
                        lay.data = data.glyph[i].gid;
                        if(isAni) {
                            if(wid.data.color == 5) {
                                G.class.ani.show({
                                    json: "ani_diaowen_chuandai",
                                    addTo: lay,
                                    x: lay.width / 2,
                                    y: lay.height / 2,
                                    cache: true,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node, action) {
                                        action.playWithCallback("in", false, function () {
                                            action.play("xunhuan", true);
                                        })
                                    }
                                })
                            } else {
                                G.class.ani.show({
                                    json: "ani_diaowen_chuandai",
                                    addTo: lay,
                                    x: lay.width / 2,
                                    y: lay.height / 2,
                                    cache: true,
                                    repeat: false,
                                    autoRemove: true,
                                    onload: function (node, action) {
                                        action.play("in", false);
                                    }
                                });
                            }
                        } else {
                            if(wid.data.color == 5) {
                                G.class.ani.show({
                                    json: "ani_diaowen_chuandai",
                                    addTo: lay,
                                    x: lay.width / 2,
                                    y: lay.height / 2,
                                    cache: true,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node, action) {
                                        action.play("xunhuan", true);
                                    }
                                });
                            }
                        }
                    } else {
                        if(G.frame.diaowen.getGlyphArr().length > 0) {
                            var img = new ccui.ImageView("img/public/img_jia.png", 1);
                            img.setAnchorPoint(0.5, 0.5);
                            img.setPosition(lay.width / 2, lay.height / 2);
                            lay.addChild(img);
                            img.runAction(cc.sequence(cc.fadeOut(1), cc.fadeIn(1)).repeatForever());
                        }
                    }
                    lay.click(function (sender) {
                        me.checkState(sender);
                    });
                } else {
                    suo.show();
                    lay.click(function (sender) {
                        G.tip_NB.show(L("ZWJS"));
                    });
                }
            }
        },
        checkState: function (sender) {
            var me = this;
            me.curIndex = sender.idx;
            me.curDwId = sender.data;

            if(sender.isHave) {
                G.frame.diaowen_sx.data(sender.data).show();
            } else {
                G.frame.diaowen_dwxz.data({
                    state: "xiangqian"
                }).show();
            }
        }
    });

})();
;;/**
 * Created by wfq on 2018/6/1.
 */
(function () {
    //祭祀法阵-英雄分解
    var ID = 'yingxiong_fenjie';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f2";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            // me.ui.nodes.tip_title.setBackGroundImage(X.getTitleImg('rhjt'),1);
            setPanelTitle(me.ui.nodes.txt_title,L('UI_TITLE_' + me.ID()));
            me.ui.nodes.panel_bg.setBackGroundImage('img/bg/bg_jisifazhen.jpg',0);
        },
        bindBtn: function () {
            var me = this;

            // me.ui.nodes.btn_guanbi.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         me.remove();
            //     }
            // });
            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            X.audio.playEffect("sound/openjitan.mp3");
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.showToper();
            // me.showMainMenu();
            me.setContents();
        },
        onHide: function () {
            var me = this;
            me.event.emit('hide');
        },
        setContents: function () {
            var me = this;

            me.setTop();
            me.setBottom();
        },
        setTop: function () {
            var me = this;

            if (!me.top) {
                me.top = new G.class.yingxiong_star_xuanze('fenjie');
                me.ui.finds('panle_1').removeAllChildren();
                me.ui.finds('panle_1').addChild(me.top);
            } else {
                me.top.refreshPanel();
            }
        },
        setBottom: function () {
            var me = this;
            if (!me.bottom) {
                me.bottom = new G.class.yingxiong_fenjie_xuanze('fenjie');
                me.ui.finds('panle_2').removeAllChildren();
                me.ui.finds('panle_2').addChild(me.bottom);
            } else {
                me.bottom.refreshPanel();
            }
        },
    });

    G.frame[ID] = new fun('ui_tip6.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/2.
 */
(function () {
    //英雄-分解-选择
    G.class.yingxiong_fenjie_xuanze = X.bView.extend({
        extConf:{
            maxnum:10
        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('jisifazhen_tip_xzyx.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
            me.setAttr();
            me.setyxsl();
        },
        setAttr: function () {
            var me = this;
            var panel = me.ui;
            var lay1 = panel.finds('panel_xhjy');
            var lay2 = panel.finds('panel_xhhz');

            var txtAttr1 = me.nodes.txt_jysl;
            var imgAttr1 = lay1.finds('token_yxexp');
            var txtAttr2 = me.nodes.txt_hzsl;
            var imgAttr2 = lay2.finds('token_hz');

            // 2004
            var attr1 = 'useexp';
            txtAttr1.setString(X.fmtValue(P.gud['useexp']));
            imgAttr1.loadTexture(G.class.getItemIco(attr1),1);
            var attr2 = '2004';
            txtAttr2.setString(X.fmtValue(G.class.getOwnNum(attr2,'item')));
            imgAttr2.loadTexture(G.class.getItemIco(attr2),1);
        },
        setyxsl:function(){
            var me = this;
            var panel = me.ui;
            var yfr = panel.finds('panel_yfr');
            var frsl = 0;
            var is = false;
            if(G.frame.yingxiong_fenjie.top.selectedData){
                frsl = G.frame.yingxiong_fenjie.top.selectedData.length;
            }
            me.yfr < frsl ? is = true : is = false;
            me.yfr = frsl;
            var str = L('TFRYXSL')+X.STR('{1}/{2}',frsl,10);
            var rh = new X.bRichText({
                size:22,
                maxWidth:yfr.width,
                lineHeight:32,
                color:'#ffffff',
                family:G.defaultFNT,
                eachText: function (node) {
                    X.enableOutline(node,'#000000',2);
                },
            });
            rh.text(str);
            rh.setPosition(cc.p(yfr.width / 2 - rh.trueWidth() / 2,yfr.height / 2 - rh.trueHeight() / 2));
            yfr.removeAllChildren();
            yfr.addChild(rh);
            if(is){
                var action1 = cc.scaleTo(0.3, 1.1, 1.1);
                var action2 = cc.scaleTo(0.3, 1, 1);
                var seq = cc.sequence(action1, action2);
                rh.stopAllActions();
                rh.runAction(seq);
            }
        },
        bindBTN: function () {
            var me = this;

            me.ui.finds('btn_xysd').touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.shop.data({type: "1", name: "yxsd"}).show();
                }
            });
            // me.nodes.btn_1.setTitleColor(cc.color(G.gc.COLOR.n13));
            //预览
            // me.nodes.btn_tishi.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         var sData = G.frame.yingxiong_fenjie.top.selectedData;
            //
            //         if(sData.length < 1){
            //             G.tip_NB.show("请放入需要分解的英雄");
            //             return;
            //         }
            //
            //         function showJiangli(data) {
            //             G.frame.jiangliyulan.data({
            //                 prize:[].concat(data || []),
            //             }).show();
            //         }
            //
            //         if (sData.length  < 1) {
            //             showJiangli();
            //             return;
            //         }
            //
            //         G.ajax.send('hero_fenjieyulan',sData,function(d) {
            //             if(!d) return;
            //             var d = JSON.parse(d);
            //             if(d.s == 1) {
            //                 showJiangli(d.d.prize);
            //             }
            //         });
            //
            //     }
            // });
            // //快速放入
            // me.nodes.btn_1.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         var sData = G.frame.yingxiong_fenjie.top.selectedData;
            //         if (sData.length >= me.extConf.maxnum) {
            //             return;
            //         }
            //
            //         var list = G.frame.yingxiong_fenjie.top.curList;
            //         var table = G.frame.yingxiong_fenjie.top.table;
            //         var lockArr = G.frame.yingxiong_fenjie.top.lockArr;
            //
            //         for (var i = 0; i < list.length; i++) {
            //             var tid = list[i];
            //             //选择过的继续
            //             if (X.inArray(sData, tid)) {
            //                 continue;
            //             }
            //             if(G.DATA.yingxiong.list[tid].star < 5 && !X.inArray(lockArr,tid)){
            //                 var obj = table.cellByName(tid);
            //                 if (obj && cc.sys.isObjectValid(obj[0])) {
            //                     obj[0].triggerTouch(ccui.Widget.TOUCH_NOMOVE)
            //                 } else {
            //                     me.addItem(tid);
            //                     G.frame.yingxiong_fenjie.top.selectedData.push(tid);
            //                 }
            //             }
            //             if (G.frame.yingxiong_fenjie.top.selectedData.length >= me.extConf.maxnum) {
            //                 break;
            //             }
            //
            //         }
            //     }
            // });
            // //分解
            // me.nodes.btn_2.touch(function (sender, type) {
            //     if (type == ccui.Widget.TOUCH_ENDED) {
            //         //空判断
            //         var sData = G.frame.yingxiong_fenjie.top.selectedData;
            //         if (sData.length < 1) {
            //             G.tip_NB.show(L('YX_FENJIE_TIP_1'));
            //             return;
            //         }
            //         //高级英雄判断
            //         var highStar = 0;
            //         for (var i = 0; i < sData.length; i++) {
            //             var tid = sData[i];
            //     if(G.frame.yingxiong_fenjie.top.selectedData.        var heroData = G.DATA.yingxiong.list[tid];
            //             if (heroData.star > highStar) {
            //                 highStar = heroData.star;
            //             }
            //         }
            //         if (highStar > 4) {
            //             var str = X.STR(L('YX_FENJIE_TIP_2'),highStar);
            //             G.frame.alert.data({
            //                 sizeType:3,
            //                 cancelCall:null,
            //                 okCall: function () {
            //                     me._resolve(sData);
            //                 },
            //                 richText:str
            //             }).show();
            //         }else{
            //             me._resolve(sData);
            //         }
            //
            //     }
            // });
        },
        // _resolve:function (sData) {
        //     G.ajax.send('hero_fenjie',sData,function(d) {
        //         if(!d) return;
        //         var d = JSON.parse(d);
        //         if(d.s == 1) {
        //             G.tip_NB.show(L('FENJIE') + L('SUCCESS'));
        //             G.frame.jiangli.data({
        //                 prize:[].concat(d.d.prize),
        //                 state: "fjlq"
        //             }).show();
        //             G.frame.yingxiong_fenjie.setContents();
        //         }
        //     },true);
        // },
        onOpen: function () {
            var me = this;
            me.yfr = 0;
            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            G.class.ani.show({
                json: "ani_jisifazhen",
                addTo: me.nodes.panel_dh,
                x: 100,
                y: -113,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    action.play("in", true);
                    G.frame.yingxiong_fenjie.men = action;
                }
            });

            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            return;
            me.createLayout();
        },
        //创建10个层容器
        // createLayout: function () {
        //     var me = this;
        //
        //     var lay = me.nodes.panel_yxlb;
        //     lay.removeAllChildren();
        //     var list = me.nodes.list_yx;
        //     list.hide();
        //     me.itemArr = [];
        //
        //     var herInterval = (lay.width - (me.extConf.maxnum / 2 * list.width)) / (me.extConf.maxnum / 2 - 1);
        //     var verInterval = lay.height - (2 * list.height);
        //
        //     for (var i = 0; i < me.extConf.maxnum; i++) {
        //         var item = list.clone();
        //         item.idx = i;
        //         item.setName(i);
        //         me.setItem(item);
        //         item.setPosition(cc.p(item.width / 2 + (item.width + herInterval) * (i % 5),lay.height - item.height / 2 - (item.height + verInterval) * Math.floor(i / 5)));
        //         lay.addChild(item);
        //         item.show();
        //         me.itemArr.push(item);
        //     }
        // },
        // setItem: function (item) {
        //     var me = this;
        //
        //     X.autoInitUI(item);
        //
        //     // var imgAdd = item.nodes.img_add;
        //     var layIco = item.nodes.panel_yx;
        //
        //     if (item.data) {
        //         delete item.data;
        //     }
        //     layIco.setTouchEnabled(false);
        //     layIco.removeAllChildren();
        //     // imgAdd.show();
        //
        //     item.setTouchEnabled(true);
        //     item.touch(function (sender, type) {
        //         if (type == ccui.Widget.TOUCH_ENDED) {
        //             if (sender.data) {
        //                 me.removeItem(sender.data);
        //             }
        //         }
        //     });
        // },
        // removeItem: function (tid) {
        //     var me = this;
        //
        //     var itemArr = me.itemArr;
        //     for (var i = 0; i < itemArr.length; i++) {
        //         var item = itemArr[i];
        //         var layIco = item.nodes.panel_yx;
        //         // var imgAdd = item.nodes.img_add;
        //         if (item.data && item.data == tid) {
        //             var idx = X.arrayFind(G.frame.yingxiong_fenjie.top.selectedData,tid);
        //             if (idx > -1) {
        //                 G.frame.yingxiong_fenjie.top.selectedData.splice(idx, 1);
        //                 G.frame.yingxiong_fenjie.top.removeGou(tid);
        //             }
        //             delete item.data;
        //             layIco.removeAllChildren();
        //             // imgAdd.show();
        //         }
        //     }
        // },
        // addItem: function (tid) {
        //     var me = this;
        //
        //     var itemArr = me.itemArr;
        //     for (var i = 0; i < itemArr.length; i++) {
        //         var item = itemArr[i];
        //         if (!item.data) {
        //             item.data = tid;
        //             var layIco = item.nodes.panel_yx;
        //             // var imgAdd = item.nodes.img_add;
        //             var wid = G.class.shero(G.DATA.yingxiong.list[tid]);
        //             wid.setAnchorPoint(0.5,1);
        //             wid.setPosition(cc.p(layIco.width / 2,layIco.height));
        //             layIco.addChild(wid);
        //             // imgAdd.hide();
        //             break;
        //         }
        //     }
        // }
    });

})();
;;/**
 * Created by wfq on 2018/6/5.
 */
(function () {
    //英雄-出战
    var ID = 'yingxiong_fight';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            // me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            setPanelTitle(me.ui.nodes.txt_title,L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
			G.guidevent.emit('yingxiong_fightOpenOver');
        },
        onShow: function () {
            var me = this;

            me.DATA = me.data();
            me.setContents();

            var mask = me.mask = new ccui.Layout;
            mask.setContentSize(cc.director.getWinSize());
            mask.setTouchEnabled(true);
            mask.setAnchorPoint(0, 0);
            me.ui.finds("panel_ui").addChild(mask);
            me.mask.hide();
        },
        onHide: function () {
            var me = this;
            me.top.selectedData = [];
        },
        setContents: function () {
            var me = this;
            me.ui.finds('panel_tip').finds('txt_djgb').show();
            me.setBottom();
            me.setTop();
        },
        setTop: function () {
            var me = this;

            if (!me.top) {
                me.top = new G.class.yingxiong_kaizhan('fight');
                me.nodes.panel_nr2.removeAllChildren();
                me.nodes.panel_nr2.addChild(me.top);
            } else {
                me.top.refreshPanel();
            }
        },
        setBottom: function () {
            var me = this;

            if (!me.bottom) {
                me.bottom = new G.class.yingxiong_zhongzu_xuanze('fight');
                me.nodes.panel_nr1.removeAllChildren();
                me.nodes.panel_nr1.addChild(me.bottom);
            } else {
                me.bottom.refreshPanel();
            }
			me.ui.setTimeout(function(){
				G.guidevent.emit('yingxiong_zhongzu_xuanze_over');
			},300);
        },
        playAniMove: function (node) {
            var me = this;
            me.mask.show();
            var posSz = G.frame.yingxiong_fight.posSz;
            var posSelect = G.frame.yingxiong_fight.posSelect;
            var type = G.frame.yingxiong_fight.playAniType;

            var posEnd;
            if (type == 'remove') {
                posEnd = posSelect || cc.p(310,800);
            } else {
                posEnd = posSz;
            }

            cc.isNode(me.item) && me.item.runActions([
                cc.moveTo(0.2, posEnd),
                cc.callFunc(function () {
                    cc.isNode(me.item) && me.item.removeFromParent();
                    me.mask.hide();
                    cc.callLater(function(){
                    	G.guidevent.emit('yingxiong_fight_playAniMove_over');
                    });
                })
            ]);
        }
    });

    G.frame[ID] = new fun('ui_tip3.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/1.
 */

G.event.on('herochange_over', function () {
    G.hongdian.checkRongHe();
    if(G.frame.yingxiong_hecheng.isShow) {
        G.frame.yingxiong_hecheng.checkzzRedPoint();
    }
});

(function () {
    //融合祭坛-英雄合成
    var ID = 'yingxiong_hecheng';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f2";
            me.fullScreen = true;
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            // me.ui.nodes.tip_title.setBackGroundImage(X.getTitleImg('rhjt'),1);
        },
        bindBTN: function () {
            var me = this;

            // me.ui.finds('$btn_fanhui').click(function(sender,type){
            //     G.frame.yingxiong_xxxx.remove();
            // });
            

        },
        onOpen: function () {
            var me = this;
            me.curzz = 0;
            X.audio.playEffect("sound/openjitan.mp3");
            me.fillSize();
            me.initUi();
            me.bindBTN();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.showToper();
            // me.showMainMenu();
            new X.bView('ronghejitan.json', function (view) {
                me._view = view;

                // me.ui.removeAllChildren();
                me.ui.addChild(view);
                me._view.finds("btn_bangzhu").click(function () {
                    G.frame.help.data({
                        intr:L("TS15")
                    }).show();
                });
                me.selectedData = {};
                me.YXZ = {};
                G.class.ani.show({
                    addTo:me._view.finds("ditu"),
                    x:me._view.finds("ditu").width / 2,
                    y:me._view.finds("ditu").height / 2,
                    json:"ani_ronghejitan_hecheng",
                    repeat:true,
                    autoRemove:false,
                    onload: function (node, action) {
                        me.action = action;
                        action.play("daiji", true);
                    }
                });
                me.createMenu();
                me.setContents();
                me.checkzzRedPoint();
                view.nodes.Panel_dj.show();
                view.action.playWithCallback("ronghe_jinru", false, function () {
                    view.ui.finds("img_zzzbg").hide();
                    view.nodes.btn_tishi.loadTextureNormal('img/zhuangbei/btn_laiyuan.png',1);
                    me.table._table.tableView.getChildren()[0].getChildren()[0].getChildren()[0].triggerTouch(ccui.Widget.TOUCH_NOMOVE);
                    view.action.playWithCallback("wait", false);
                });
            }, {action: true});
        },
        checkzzRedPoint: function(){
            var me = this;
            var isHave = false;
            var redArr = G.hongdian.checkRongHe();
            for(var i = 0; i < redArr.length; i ++){
                if(redArr[i]) {
                    G.setNewIcoImg(me._view.nodes.listview_zz.getChildren()[i + 1]);
                }else {
                    G.removeNewIco(me._view.nodes.listview_zz.getChildren()[i + 1]);
                }
            }
            for(var i in redArr) {
                if(redArr[i]) {
                    isHave = true;
                    break;
                }
            }
            if(isHave) {
                G.setNewIcoImg(me._view.nodes.listview_zz.getChildren()[0]);
            }else {
                G.removeNewIco(me._view.nodes.listview_zz.getChildren()[0]);
            }
        },
        onHide: function () {
            var me = this;
            G.hongdian.getData("hecheng", 1);
        },
        setContents: function () {
            var me = this;

            var type = me.curType || 0;
            me._menus[type].triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        refreshData: function () {
            var me = this;

            me.setContents();
        },
        createMenu: function(){
            var me = this;

            var view = me._view;
            view.nodes.listview_zz.removeAllChildren();
            cc.enableScrollBar(view.nodes.listview_zz);
            me._menus = [];

            //图标
            for(var i=0;i<7;i++){
                var panel = view.nodes.listview_zz;
                view.nodes.list_ico.setScale(0.95);
                var list_ico = view.nodes.list_ico.clone();
                X.autoInitUI(list_ico);
                list_ico.nodes.panel_zz.setTouchEnabled(false);
                list_ico.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (i + 1) + '.png', 1);
                list_ico.show();
                list_ico.setAnchorPoint(0.5,0.5);

                list_ico.data = i;
                list_ico.setTouchEnabled(true);

                list_ico.click(function(sender, type){
                    for(var j=0;j<me._menus.length;j++){
                        var node = me._menus[j];
                        var img = 'img/public/ico/ico_zz' + (node.data + 1) + '.png';
                        if(node.data == sender.data){
                            if(me.effect) X.audio.playEffect("sound/dianji.mp3", false);
                            me.effect = true;
                            me.curType = sender.data;
                            me.fmtItemList(sender.data);
                            img = 'img/public/ico/ico_zz' + (node.data + 1) + '_g.png';
                            if(sender.ani) {
                                sender.ani.show();
                            }else {
                                G.class.ani.show({
                                    json: "ani_guangbiaoqiehuan",
                                    addTo: sender,
                                    x: sender.width / 2,
                                    y: sender.height / 2,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node) {
                                        sender.ani = node;
                                    }
                                })
                            }
                        }else{
                            //node.nodes.img_yuan_xz.hide();
                            if(node.ani) node.ani.hide();
                        }
                        node.nodes.panel_zz.setBackGroundImage(img,1);
                    }
                });
                view.nodes.btn_fanhui.click(function(sender, type){
                    me.remove();
                });

                me._menus.push(list_ico);
                panel.pushBackCustomItem(list_ico);
            }
        },
        fmtItemList: function (type) {
            var me = this;

            var panel = me._view;
            var scrollview = panel.nodes.scrollview_1;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);
            panel.nodes.list.hide();

            var data = me.filterData();
            me.sortData(data);

            var table = me.table = new X.TableView(scrollview,panel.nodes.list,5, function (ui, data) {
                me.setItem(ui, data);
            }, null, null, 1, 5);
            table.setData(data);
            table.reloadDataWithScroll(true);


            //第一次默认指定
            if (me.curzz != type) {
                me.curzz = type;
                me.table._table.tableView.getChildren()[0].getChildren()[0].getChildren()[0].triggerTouch(ccui.Widget.TOUCH_NOMOVE);
            } else {
                if(me.curItem) {
                    me.curItem.triggerTouch(ccui.Widget.TOUCH_NOMOVE);
                }else {
                    me.table._table.tableView.getChildren()[0].getChildren()[0].getChildren()[0].triggerTouch(ccui.Widget.TOUCH_NOMOVE);
                }
            }
        },
        filterData: function () {
            var me = this;

            var curType = me.curType;
            var data = G.class.hero.getCanHcHerosByZhongzu(curType);

            return data;
        },
        sortData: function (data) {
            var me = this;

            data.sort(function (a,b) {
                var confA = G.class.hero.getById(a);
                var confB = G.class.hero.getById(b);

                if (confA.star != confB.star) {
                    return confA.star < confB.star ? -1 : 1;
                } else if (confA.zhongzu != confB.zhongzu) {
                    return confA.zhongzu < confB.zhongzu ? -1 : 1;
                }
            });
        },
        setItem: function (ui, data) {
            var me = this;

            ui.removeAllChildren();

            var wid = G.class.shero(data);
            wid.setName('wid');
            wid.setPosition(cc.p(ui.width / 2,ui.height / 2));
            wid.setScale(.9);
            ui.addChild(wid);

            me.checkRedPoint(data, wid);

            me.handleHeros(me.curId);

            ui.data = data;
            ui.heroData = wid;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    // if(sender.data == me.curId) return;
                    me.curItem = sender;
                    me.curId = sender.data;
                    me.curHero = sender.heroData;
                    me.selectedData = {};
                    me.handleHeros(me.curId);
                    me.setTop();
                }
            });
        },
        checkRedPoint: function(hid, wid){
            if(X.checkRongHe(hid)) {
                G.setNewIcoImg(wid, .9);
                G.class.ani.show({
                    json: "ani_shengxingzhunbei",
                    addTo: wid,
                    x: wid.width / 2,
                    y: wid.height / 2,
                    repeat: true,
                    autoRemove: false,
                    onload: function (node, action) {
                        node.setTag(998877);
                        // node.setScale(.9);
                    }
                })
            }
            else {
                G.removeNewIco(wid);
                while (wid.getChildByTag(998877)) {
                    wid.getChildByTag(998877).removeFromParent();
                }
            }
        },
        handleHeros: function (id) {
            var me = this;

            var parent = me.table._table.tableView.getChildren()[0];
            for (var i = 0; i < parent.getChildren().length; i++) {
                var children = parent.getChildren()[i];
                for (var j = 0; j < children.getChildren().length; j++) {
                    var child = children.getChildren()[j];
                    cc.isNode(child.finds('wid')) && child.finds('wid').setGou(child.data == id);
                }
            }
        },
        setTop: function () {
            var me = this;

            me.setRwBg();

            var panel = me._view;
            me.btnHc = panel.nodes.btn_hc;
            var lay0 = panel.nodes.panel_9;
            var lay1 = panel.nodes.panel_10;
            var lay2 = panel.nodes.panel_11;
            var lay3 = panel.nodes.panel_12;
            var btnTs = panel.nodes.Panel_dj;
            var layRw = panel.nodes.panel_rw;
            var curId = me.curId;
            var conf = G.class.hero.getById(curId);
            //layRw.setOpacity(255 * 0.5);

            me.btnHc.setBtnState(false);
            me.btnHc.setTitleColor(cc.color(G.gc.COLOR.n15));

            //设置材料
            var needConf = X.clone(G.class.hero.getHcNeed(curId));
            // var needConf = {
            //     mainhero:{a:'hero',t:'25075',n:2},
            //     delhero:[{a:'hero',t:'25075',n:2},{a:'hero',t:'25075',n:2}],
            //     chkhero:[{samezhongzu:1,star:6,num:2}]
            // };
            me.needNum = 0;
            var extNeed;
            if(needConf.delhero[1]) {
                extNeed = [needConf.mainhero,needConf.delhero[0],needConf.delhero[1],needConf.chkhero[0]];
            }else {
                extNeed = [needConf.mainhero,needConf.delhero[0],needConf.chkhero[0],needConf.chkhero[1]];
            }
            me.layArr = [lay0,lay1,lay2,lay3];
            me.extArr = [];
            me.extNeed = extNeed;
            for (var i = 0; i < me.layArr.length; i++) {
                var lay = me.layArr[i];
                lay.removeAllChildren();
                me.setMaterial(lay,extNeed[i],i);
                me.needNum += (extNeed[i].n || extNeed[i].num)
            }

            //设置任务造型
            X.setHeroModel({
                parent:layRw,
                data:conf
            });

            //合成
            if(!me.btnHc.data) me.btnHc.data = [];
            me.btnHc.click(function (sender, type) {
                var obj = {
                    main:me.selectedData[0][0],
                    delhero: [].concat(me.selectedData[1], me.selectedData[2], me.selectedData[3])
                };
                me._view.nodes.btn_fanhui.setTouchEnabled(false);
                G.ajax.send('hero_hecheng',[me.curId,obj],function(d) {
                    if(!d) return;
                    var d = JSON.parse(d);
                    if(d.s == 1) {
                        X.audio.playEffect("sound/yingxionghecheng.mp3");
                        me.action.playWithCallback("hecheng", false, function () {
                            me.nodes.panel_rw.setOpacity(255);
                            layRw.getChildren()[0].runAni(0, "atk", false);
                            layRw.getChildren()[0].addAni(0, "wait", true, 0);
                            me.ui.setTimeout(function(){
                                G.frame.jiangli.once('close', function () {
                                    if (d.d.itemprize.length > 1) {
                                        G.frame.jiangli.data({
                                            prize:[].concat(d.d.itemprize || [])
                                        }).show();
                                    }
                                }).data({
                                    prize:[].concat(d.d.heroprize)
                                }).show();
                                me._view.nodes.btn_fanhui.setTouchEnabled(true);
                                me.refreshData();
                            },1500);
                            me.action.play("daiji", true);
                        });
                    }else{
                        me._view.nodes.btn_fanhui.setTouchEnabled(true);
                        X.audio.playEffect("sound/dianji.mp3", false);
                    }
                },true);
            }, 1500);
            //提示
            btnTs.touch(function (sender, type) {

                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.yingxiong_jianjie.data({
                        data:me.curData
                    }).show();
                }
            });
        },
        setMaterial: function (parent,need,idx) {
            var me = this;

            var widget = G.class.shero_extneed(need, {hid:need.t || me.curId});
            widget.setPosition(cc.p(parent.width / 2,parent.height / 2));
            widget.setEnabled(false);
            parent.addChild(widget);
            me.extArr.push(widget);

            need.num = need.num || need.n;

            var yx_num1 = need.samezhongzu && G.DATA.yingxiong.star2num[need.star];
            var yx_num2 = G.DATA.yingxiong.hid2num[need.t];
            if( yx_num1 && yx_num1 >= need.num){
                widget.setjia(false);
            }else if(yx_num2 && yx_num2 >= need.num){
                widget.setjia(false);
            }

            var needNum = need.num;
            widget.txt_num.setFontSize(24);
            widget.txt_num.setTextColor(cc.color("#ffffff"));
            X.enableOutline(widget.txt_num, "#000000", 2);
            widget.txt_num.setString(X.STR('{1}/{2}', 0, needNum));
            widget.txt_num.setPosition(cc.p(widget.width - widget.txt_num.width/2 -5, widget.height - widget.txt_num.height/2 - 5));
            //widget.lv.hide();

            widget.setTouchEnabled(true);
            widget.index = idx;
            widget.need = need;
            widget.click(function(sender,type){
                var callback = function (d, d1) {
                    //d是数组
                    me.selectedData[sender.index] = d;
                    var hav = d.length;
                    sender.txt_num.setString(X.STR('{1}/{2}', hav, sender.need.num));
                    sender.setEnabled(hav >= sender.need.num);

                    var shengyu_num = me.set_jia(me.extNeed);
                    for(var i=0; i<me.extArr.length; i++){
                        if(shengyu_num[i] > 0){
                            me.extArr[i].setjia(false);
                        }else{
                            me.extArr[i].setjia(true);
                        }
                    }

                    if(hav >= sender.need.num){
                        sender.setjia(true);
                    }else{
                        if(d1 && d1 >= sender.need.num) {
                            sender.setjia(false);
                        }else{
                            sender.setjia(true);
                        }
                    }

                    if (me.getSelectedTidArr().length >= me.needNum) {
                        me.btnHc.setBtnState(true);
                        me.btnHc.setTitleColor(cc.color(G.gc.COLOR.n12));
                    }

                    for (var i in me.extArr) {
                        var tar = me.extArr[i];
                        var arr = tar.txt_num.getString().split("/");

                        if(arr[0] * 1 >= arr[1] * 1) {
                            tar.setjia(true);
                        }
                    }
                };
                G.frame.ui_tip_xuanze.data({
                    need:sender.need,
                    idx:sender.index,
                    hid:me.curId,
                    IdxData:me.selectedData[sender.index],
                    selectedData: me.selectedData,
                    callback:callback
                }).show();
            });
        },
        //获得所有被选择的英雄的数组
        getSelectedTidArr: function () {
            var me = this;

            // selectedData分了位置
            var data = me.selectedData;
            var arr = [];
            if (!data) {
                return arr;
            }

            for (var pos in data) {
                var dd = data[pos];
                arr = arr.concat(dd);
            }

            return arr;
        },

        //
        set_jia: function(need){
            var me = this;
            var heroList = G.DATA.yingxiong.list;
            var keys = X.keysOfObject(heroList);

            var shengyu = [];

            for(var j = 0; j<need.length; j++){
                for(var i = 0; i < me.getSelectedTidArr().length; i ++){
                    if(!X.inArray(me.idxData, me.getSelectedTidArr()[i])){
                        keys.splice(X.arrayFind(keys, me.getSelectedTidArr()[i]), 1);
                    }
                }

                var num = 0;
                if(need[j].t){
                    for (var i = 0; i < keys.length; i++) {
                        var tid = keys[i];
                        if (heroList[tid].hid == need[j].t) {
                            ++num;
                        }
                    }
                }else if(need[j].star){
                    var needStar = need[j].star;
                    for (var i = 0; i < keys.length; i++) {
                        var tid = keys[i];
                        if (heroList[tid].zhongzu == G.class.hero.getById(me.curId).zhongzu && heroList[tid].star == needStar) {
                            ++num;
                        }
                    }
                }
                shengyu.push(num);
            }
            return shengyu;
        },


        setname: function(target, text, zz) {
            var rt = new X.bRichText({
                size: 20,
                lineHeight: 24,
                color: G.gc.COLOR.n1,
                maxWidth: target.width,
                family: G.defaultFNT,
                eachText: function (node) {
                    X.enableOutline(node,'#34221d');
                },
            });
            rt.text(text);
            rt.setAnchorPoint(0, 0.5);
            rt.setPosition( cc.p((target.width - rt.trueWidth())*0.5 + 15, target.height*0.5) );
            target.removeAllChildren();
            target.addChild(rt);
            var rt_w = rt.trueWidth();
            var rt_h = rt.trueHeight();
            zz.setAnchorPoint(0,0.5);
            zz.setPosition(cc.p(target.x - rt_w/2 - zz.width + 10 + 15, target.y + target.height*0.5 - rt_h/2))
        },
        setRwBg: function () {
            var me = this;
            me.ui.finds("panel_top").finds("panel_zz$").setScale(.66);
            me.ui.finds("panel_top").finds("panel_zz$").setBackGroundImage('img/public/ico/ico_zz' + (me.curHero.conf.zhongzu + 1) + '.png', 1);
            G.class.ui_star(me.nodes.panel_xx, me.curHero.conf.star, 0.8, null, true);
            me.setname(me.nodes.txt_name,me.curHero.conf.name,me.ui.finds("panel_top").finds("panel_zz$"));


            var data = G.class.hero.getById(me.curId);
            var star = G.class.hero.getById(me.curId).star;
            var maxlv = G.class.herocom.getMaxlv(me.curId, star);
            var herogrowConf = G.class.herogrow.getById(me.curId);
            var zhanli = G.class.herocom.getZhanli(me.curId,maxlv);
            var buffArr = ['atk','def','hp','speed'];
            var pro = G.class.herocom.getHeroJinJieUp(star);
            data.dengjielv = star;
            data.lv = maxlv;
            for (var i = 0; i < buffArr.length; i++) {
                var buffType = buffArr[i];
                data[buffType] = herogrowConf[buffType];
            }
            for (var i = 0; i < buffArr.length; i++) {
                var buffType = buffArr[i];
                data[buffType] = Math.floor((data[buffType] + (data.lv - 1) * herogrowConf[buffType + "_grow"]) * pro[buffType + "pro"]);
            }
            data.zhanli = parseInt(data.atk + data.def + data.hp / 6);
            me.curData = data;

            var buff = ["atk", "def", "hp", "speed"];
            for (var i = 0; i < buff.length; i ++) {
                var bf = buff[i];
                var txt = me._view.nodes["txt_sx" + (i + 1)];
                txt.setString(data[bf]);
            }
            me._view.ui.finds("txt_djmsz").setString(data.lv);
        }
    });

    G.frame[ID] = new fun('ui_tip6.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/1.
 */
(function () {
    //英雄-简介
    var ID = 'yingxiong_jianjie';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            // setPanelTitle(me.ui.nodes.txt_title,L('UI_TITLE_' + me.ID()));
        },
        bindBtn: function () {
            var me = this;

            me.ui.setTouchEnabled(true);
            me.ui.click(function () {
                me.remove();
            });

            me.nodes.btn_pinglun.click(function () {
                G.frame.yingxiong_pinglun.data(me.data().id || me.data().data.hid).show();
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
            me.ui.finds("p1").setPosition(cc.director.getWinSize().width / 2, cc.director.getWinSize().height / 2);
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.curId = me.data().id || me.data().data.hid;
            me.conf = G.class.hero.getById(me.curId);
            me._view = me.ui;
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var panel = me._view;
            var layIco = panel.nodes.panel_tb;
            var txtName = panel.nodes.text_yxm;
            var layPinjie = panel.nodes.panel_pinjie;
            var txtZl = panel.nodes.text_zdl;
            var btnTs = panel.nodes.btn_tishi;
            var layJn = panel.nodes.panel_jn;
            var buff = ['atk','def','hp','speed'];
            // txt_sx1
            var data = me.data().data;
            layIco.removeAllChildren();
            layPinjie.removeAllChildren();
            layJn.removeAllChildren();

            if(me.data().islv){
                var data = G.class.hero.getById(me.curId);
                var star = G.class.hero.getById(me.curId).star;
                var herogrowConf = G.class.herogrow.getById(me.curId);
                var lv = me.data().islv;
                var zhanli = G.class.herocom.getZhanli(me.curId,lv);
                var buffArr = ['atk','def','hp','speed'];
                var pro = G.class.herocom.getHeroJinJieUp(star);
                me.buff_sx = [];
                for (var i = 0; i < buffArr.length; i++) {
                    var buffType = buffArr[i];
                    data[buffType] = herogrowConf[buffType];
                }
                for (var i = 0; i < buffArr.length; i++) {
                    var buffType = buffArr[i];
                    data[buffType] = Math.floor((data[buffType] + (lv - 1) * herogrowConf[buffType + "_grow"]) * pro[buffType + "pro"]);
                    me.buff_sx[buffType] = data[buffType];
                }
                data.zhanli = parseInt(data.atk + data.def + data.hp / 6);
                data.dengjielv = me.data().isdjlv;
                me.curData = data;
            }


            //头像
            var wid = (data && G.class.shero(data)) || (me.curId && G.class.shero(me.curId)) || G.class.shero(data.hid) ;
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);
            //名字
            setTextWithColor(txtName,wid.conf.name,G.gc.COLOR[wid.conf.color || 1]);
            //品阶
            G.class.ui_pinji(layPinjie, (data && data.dengjielv) || 0, 0.8, me.conf.star);
            //战力
            txtZl.setString((data && data.zhanli) || (me.curId && G.class.herocom.getZhanli(me.curId,1)));
            //提示
            btnTs.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if(me.data().id && !me.data().data && !me.data().islv){
                        G.frame.ui_top_xq.data({id: me.curId}).show();
                    }else{
                        G.frame.ui_top_xq.data({data : data}).show();  
                    }
                    
                }
            });
            //属性
            for (var i = 0; i < buff.length; i++) {
                var bName = buff[i];
                var txt = panel.nodes['txt_sx' + (i + 1)];
                txt.setString( (me.data().data && me.data().data[bName] || me.data().islv && me.buff_sx[bName]) || (G.class.herogrow.getById(me.curId) && G.class.herogrow.getById(me.curId)[bName]));
            }
            // 技能
            var skillList = G.class.hero.getSkillList(me.curId || data.hid, (me.conf && me.conf.dengjielv) || (data && data.dengjielv) || 1);

            var interval = 16; // 间隔
            var w = skillList.length * 88 + (skillList.length - 1) * interval; // 星星所占宽度
            var x = (layJn.width - w) * 0.5; // 星星初始x
            for (var i = 0; i < skillList.length; i++){
                var p = G.class.ui_skill_list(skillList[i], true, null, 1);
                p.setAnchorPoint(0,0);
                p.x = x;
                p.y = 0;
                layJn.addChild(p);

                x += 88 + interval;
            }
        },
    });

    G.frame[ID] = new fun('ronghejitan_yxsx.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/1.
 */
(function () {
    //英雄祭坛 - 抽卡
    var ID = 'yingxiong_jitan';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f2";
            me.fullScreen = true;
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
            });
        },
        onHide: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            G.ajax.send('', [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;
        },
    });

    G.frame[ID] = new fun('yingxiong_jitan.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/5.
 */
(function () {
    //英雄-开战选择
    G.class.yingxiong_kaizhan = X.bView.extend({
        extConf:{
            maxnum:6,
            fight:{
                pvdafashita: function (node) {
                    //需要是有站位信息的出站数据
                    var type = G.frame.yingxiong_fight.data();
                    var data = node.getSelectedData();

                    G.ajax.send("fashita_fight", [type.data,data], function (d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            //增加战斗类型
                            d.d.fightres['pvType'] = 'pvdafashita';
                            G.frame.dafashita_tiaozhan.remove();

                            if(!d.d.fightres.winside){
                                G.frame.dafashita.DATA.layernum ++;
                            }
                            X.cacheByUid('fight_fashita',data);

                            if(d.d.israndom) {
                                G.frame.yingxiong_fight.remove();
                                G.class.ani.show({
                                    json: "ani_taopao",
                                    addTo: G.frame.dafashita.ui,
                                    x: G.frame.dafashita.ui.width / 2,
                                    y: G.frame.dafashita.ui.height / 2,
                                    repeat: false,
                                    autoRemove: true,
                                    onend: function () {
                                        G.frame.fight_win.data(d.d).show();
                                        G.tip_NB.show(L("ZJSL"));
                                    }
                                });
                            }else {
                                G.frame.fight.data({
                                    prize:d.d.prize,
                                    pvid:type.data
                                }).once('show', function () {
                                    G.frame.yingxiong_fight.remove();
                                }).demo(d.d.fightres);
                            }
                        }
                    }, true);
                },
                pvshilian: function (node) {
                    var type = G.frame.yingxiong_fight.data();
                    var data = node.getSelectedData();

                    G.ajax.send("mrsl_fight", [type.data.type, type.data.nandu, data, type.data.npc], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            //增加战斗类型
                            d.d.fightres['pvType'] = 'pvshilian';

                            X.cacheByUid('fight_ready', data);
                            G.frame.fight.data({
                                prize: d.d.prize,
                                type1: "pvshilian",
                                type: type.data.type,
                                nandu: type.data.nandu,
                                data: data,
                                npc: type.data.npc
                            }).once('show', function () {
                                G.frame.yingxiong_fight.remove();
                            }).demo(d.d.fightres);

                            G.hongdian.getData("mrsl", 1, function () {
                                G.frame.meirishilian.checkRedPoint();
                            });
                            G.frame.meirishilian.nodes.text_sycs.setString(d.d.lessnum);
                        }
                    });
                },
                pvguanqia: function (node) {
                    // var type = G.frame.yingxiong_fight.data();
                    var data = node.getSelectedData();

                    G.ajax.send('tanxian_fightboss',[data],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            //增加战斗类型
                            d.d.fightres['pvType'] = 'pvguanqia';
                            G.frame.tanxian.refreshData();
                            X.cacheByUid('fight_tanxian',data);
                            if(d.d.israndom && P.gud.maxmapid > 5) {
                                G.frame.yingxiong_fight.remove();
                                G.class.ani.show({
                                    json: "ani_taopao",
                                    addTo: G.frame.tanxian.ui,
                                    x: G.frame.tanxian.ui.width / 2,
                                    y: G.frame.tanxian.ui.height / 2,
                                    repeat: false,
                                    autoRemove: true,
                                    onend: function () {
                                        G.frame.fight_win.data({
                                            prize: d.d.prize
                                        }).show();
                                        G.tip_NB.show(L("ZJSL"));
                                    }
                                });
                            }else {
                                G.frame.fight.data({
                                    prize:d.d.prize,
                                    pvType: "pvguanqia"
                                }).once('show', function () {
                                    G.frame.yingxiong_fight.remove();
                                }).demo(d.d.fightres);
                            }
                        }
                    },true);
                },
                pvshizijun: function (node) {
                    var type = G.frame.yingxiong_fight.data();
                    var data = node.getSelectedData();

                    G.ajax.send("shizijun_fight", [data, type.idx], function (d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            //增加战斗类型
                            d.d.fightres['pvType'] = 'pvshizijun';

                            X.cacheByUid('fight_shizijun',data);
                            G.frame.fight.data({
                                prize:d.d.prize,
                                pvid:type.idx
                            }).once('show', function () {
                                G.frame.yingxiong_fight.remove();
                                G.frame.sizijunyuanzheng_dsxx.remove();
                            }).demo(d.d.fightres);

                            G.frame.shizijunyuanzheng.getData(function () {
                                G.frame.shizijunyuanzheng.setContents();
                            });
                            G.frame.fight_win.once('show', function () {
                                G.frame.fanpai.data(d.d.flop).show();
                            });
                            // G.frame.fight_win.once('shizijun', function () {
                            //     G.frame.fanpai.data(d.d.flop).show();
                            // });
                        }else if(d.s == -3){
							//没有数据防守阵容数据，很大几率是由于换天了
							G.tip_NB.show(L('reseted'));
							G.frame.yingxiong_fight.remove();
							G.frame.sizijunyuanzheng_dsxx.remove();
							G.frame.shizijunyuanzheng.remove();
							cc.director.getRunningScene().setTimeout(function(){
								G.frame.shizijunyuanzheng.show();
							},200);
						}
                    }, true);
                },
                pvywzbjf: function (node) {
                    var data = G.frame.yingxiong_fight.data();
                    var hereList = node.getSelectedData();

                    G.ajax.send("crosszb_jffight", [data.idx, hereList], function (d) {
                        if(!d) return;
                        d = JSON.parse(d);
                        if(d.s == 1) {
                            d.d.fightres['pvType'] = 'pvywzbjf';
                            G.hongdian.getData("crosszbjifen", 1, function () {
                                G.frame.yuwaizhengba.checkRedPoint();
                                G.frame.yuwaizhengba_jifen.checkRedPoint();
                            });
                            X.cacheByUid('fight_ywzbjf',hereList);

                            if(X.cacheByUid("jumpJiFenSai")) {
                                if(d.d.fightres.winside == 0) {
                                    G.frame.fight_win.data(d.d).show();
                                } else {
                                    G.frame.fight_fail.data(d.d.fightres).show();
                                }
                            } else {
                                G.frame.fight.data({
                                    prize:d.d.prize,
                                    pvid:data.idx
                                }).once('show', function () {
                                    G.frame.yingxiong_fight.remove();
                                }).demo(d.d.fightres);
                            }
                            data.callback && data.callback(d);
                        }
                    }, true);
                },
                pvywzbzb: function (node) {
                    var data = G.frame.yingxiong_fight.data();
                    var hereList = node.getSelectedData();

                    G.ajax.send("crosszb_zbfight", [data.uid, hereList], function (d) {
                        if(!d) return;
                        d = JSON.parse(d);
                        if(d.s == 1) {
                            d.d.fightres['pvType'] = 'pvywzbzb';

                            X.cacheByUid('fight_ywzbzb',hereList);
                            G.frame.fight.data({
                                prize:d.d.prize,
                                pvid:data.idx
                            }).once('show', function () {
                                G.frame.yingxiong_fight.remove();
                            }).demo(d.d.fightres);
                        }
                        data.callback && data.callback(d);
                    }, true);
                },
                pvghz: function (node) {
                    var data = G.frame.yingxiong_fight.data();
                    var hereList = node.getSelectedData();

                    G.ajax.send("ghcompeting_fight", [hereList, data.data], function (d) {
                        if(!d) return;
                        d = JSON.parse(d);
                        if(d.s == 1) {
                            d.d.fightres['pvType'] = 'pvghz';
                            X.cacheByUid('fight_pvghz',hereList);
                            G.frame.yingxiong_fight.remove();
                            G.frame.fight.once('hide', function () {
                                if(G.frame.gonghui_ghz.isShow) {
                                    G.frame.gonghui_ghz.refresh();
                                }
                            }).demo(d.d.fightres);

                            if(d.d.fightres.winside == 0) {
                                G.frame.fight_win.once('show', function () {
                                    G.frame.fanpai.data(d.d.flop).show();
                                });
                            } else {
                                G.frame.fight_fail.once('show', function () {
                                    G.frame.fanpai.data(d.d.flop).show();
                                });
                            }
                        }
                    })
                }
            }
        },
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('zhandou_kaizhan.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
        },
        bindBTN: function () {
            var me = this;

            if(G.frame.jingjichang_freepk.isShow){
                me.nodes.btn_kz.hide();
                me.nodes.btn_bc.show();
                if(G.frame.yingxiong_fight.data().type){
                    if(G.frame.yingxiong_fight.data().type == "jjckz"){
                        me.nodes.btn_bc.hide();
                        me.nodes.btn_kz.show();
                    }
                }

                // me.nodes.btn_kz.hide();
            }
            //阵容保存
            me.nodes.btn_bc.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    //空判断
                    var sData = G.frame.yingxiong_fight.bottom.selectedData;
                    if (sData.length < 1) {
                        G.tip_NB.show(L('YX_FIGHT_TIP_1'));
                        return;
                    }

                    var pvData = G.frame.yingxiong_fight.data();
                    cc.log('pvType======', pvData.pvType);

                    if (pvData && pvData.pvType) {
                        me.extConf.fight[pvData.pvType](me);
                    } else {
                        var callback = G.frame.yingxiong_fight.DATA.callback;
                        callback && callback(me);

                        // me.extConf.fight['pvguanqia'](me);
                    }
                }
            });

            //开战
            me.nodes.btn_kz.click(function (sender, type) {
                //空判断
                var sData = G.frame.yingxiong_fight.bottom.selectedData;
                if (sData.length < 1) {
                    G.tip_NB.show(L('YX_FIGHT_TIP_1'));
                    return;
                }
                sender.setTouchEnabled(false);
                var pvData = G.frame.yingxiong_fight.data();
                cc.log('pvType======', pvData.pvType);

                if (pvData && pvData.pvType) {
                    me.extConf.fight[pvData.pvType](me);
                } else {
                    var callback = G.frame.yingxiong_fight.DATA.callback;
                    callback && callback(me);

                    // me.extConf.fight['pvguanqia'](me);
                }
                me.ui.setTimeout(function () {
                    me.nodes.btn_kz.setTouchEnabled(true);
                }, 5000);
            });
            //提示
            me.nodes.btn_tishi.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    G.frame.fight_zzkezhi.data(me.zf).show();
                }
            });

            me.nodes.btn_cdsq.click(function () {
                G.frame.shenqi_xuanze.data({
                    sqid: me.sqid,
                    callback: function (id) {
                        me.sqid = id;
                        me.setShenQi();
                        me.checkRedPoint();
                    }
                }).show()
            })
        },
        setShenQi: function() {
            var me = this;
            var itemArr = me.itemArr;
            for(var i = 0; i < itemArr.length; i ++) {
                if(itemArr[i].data) {
                    itemArr[i].finds("panel_yx$").getChildren()[0].setArtifact(me.sqid);
                }
            }
        },
        checkRedPoint: function() {
            var me = this;
            if(!me.sqid && P.gud.artifact) {
                G.setNewIcoImg(me.nodes.btn_cdsq, .95);
            }else {
                G.removeNewIco(me.nodes.btn_cdsq);
            }
        },
        onOpen: function () {
            var me = this;
            me.bindBTN();
            me.zf = "";
        },
        onShow: function () {
            var me = this;

            me.fightData = G.frame.yingxiong_fight.data();
            if(me.fightData.pvType == "pvshizijun"){
                me.status = G.frame.shizijunyuanzheng.DATA.status;
                me.inStatus = X.keysOfObject(me.status);
            }
            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setAttr();
            me.setBuff();
            me.createLayout();
        },
        //创建6个层容器
        createLayout: function () {
            var me = this;
		
            var layArr = [me.nodes.ico_qianpai_yx,me.nodes.ico_houpai_yx];

            // var lay = me.nodes.panel_yxlb;
            // lay.removeAllChildren();
            var lay,herInterval;
            for (var i = 0; i < layArr.length; i++) {
                lay = layArr[i];
                lay.removeAllChildren();
            }
            var list = me.nodes.list_yx;
            list.hide();
            me.itemArr = [];

            var scale = 0.8;
            var width = scale * list.width;

            var num = 0;
            for (var i = 0; i < me.extConf.maxnum; i++) {
                var item = list.clone();
                item.idx = i;
                item.setName(i);
                me.setItem(item);

                //创建背景item
                var itemBg = list.clone();
                itemBg.setName('bg_' + i);

                if (i < 2) {
                    lay = layArr[0];
                    herInterval = (lay.width - (2 * width));
                } else {
                    lay = layArr[1];
                    herInterval = (lay.width - (4 * width)) / 3;
                }

                if (i == 2) {
                    num = 0;
                }

                item.setScale(scale);
                item.setPosition(cc.p(width / 2 + (width + herInterval) * (num % 6),lay.height / 2));

                itemBg.setScale(scale);
                itemBg.setPosition(cc.p(width / 2 + (width + herInterval) * (num % 6),lay.height / 2));

                num++;

                itemBg.finds('img_renwu$').hide();

                lay.addChild(itemBg);
                itemBg.setLocalZOrder(-1);
                itemBg.show();

                lay.addChild(item);
                item.setLocalZOrder(1);
                item.show();
                me.itemArr.push(item);
            }

            me.loadCache();
        },
        //加载缓存
        loadCache: function () {
            var me = this;

            var setCache = function (cache) {
                 for (var i = 0; i < me.itemArr.length; i++) {
                     var item = me.itemArr[i];
                     if(cache && cache[i + 1] && G.DATA.yingxiong.list[cache[i + 1]]){
                         var tid = cache[i + 1];
                         item.data = tid;
                         var layIco = item.nodes.panel_yx;
                         if (!G.DATA.yingxiong.list[tid]) continue;
                         var wid = G.class.shero(G.DATA.yingxiong.list[tid]);
                         wid.setAnchorPoint(0.5, 1);
                         wid.setPosition(cc.p(layIco.width / 2, layIco.height));
                         if(me.sqid) {
                             wid.setArtifact(me.sqid);
                         }
                         layIco.addChild(wid);
                     }
                 }
                 me.setAttr();
                 me.setBuff();
            };

            if (me.fightData.defhero) {
                me.sqid = me.fightData.defhero.sqid;
                setCache(me.fightData.defhero);
            } else {
                var type = me.fightData.pvType || me.fightData.type;
                switch (type) {
                    case "pvshizijun":
                        cache = X.cacheByUid("fight_shizijun");
                        break;
                    case "jjckz":
                        cache = X.cacheByUid("fight_zyjjc");
                        break;
                    case "hypk":
                        cache = X.cacheByUid("fight_hypk");
                        break;
                    case "hybs":
                        cache = X.cacheByUid("fight_hybs");
                        break;
                    case "ghfb":
                        cache = X.cacheByUid("fight_ghfb");
                        break;
                    case "pvdafashita":
                        cache = X.cacheByUid("fight_fashita");
                        break;
                    case "pvguanqia":
                        cache = X.cacheByUid("fight_tanxian");
                        break;
                    case "pvywzbjf":
                        cache = X.cacheByUid("fight_ywzbjf");
                        break;
                    case "pvywzbzb":
                        cache = X.cacheByUid("fight_ywzbzb");
                        break;
                    case "pvghz":
                        cache = X.cacheByUid("fight_pvghz");
                        break;
                    default:
                        cache = X.cacheByUid('fight_ready');
                        break;
                }
                if(cache && cache.sqid) {
                    me.sqid = cache.sqid;
                }
                me.checkRedPoint();
                if (me.fightData.pvType !== "pvshizijun") {
                    setCache(cache);
                } else {
                    var zhanweiCache = X.cacheByUid("fight_shizijun") || {};
                    for(var i in zhanweiCache){
                        if(zhanweiCache[i]){
                            if(X.inArray(me.inStatus, zhanweiCache[i]) && me.status[zhanweiCache[i]].hp <= 0){
                                zhanweiCache[i] = undefined;
                            }
                        }
                    }
                    for (var i = 0; i < me.itemArr.length; i++) {
                        var item = me.itemArr[i];
                        if(zhanweiCache && zhanweiCache[i + 1] && G.DATA.yingxiong.list[zhanweiCache[i + 1]] && G.DATA.yingxiong.list[zhanweiCache[i + 1]].lv > 39){
                            var tid = zhanweiCache[i + 1];
                            item.data = tid;
                            var layIco = item.nodes.panel_yx;
                            layIco.removeAllChildren();
                            var wid = G.class.shero(G.DATA.yingxiong.list[tid]);
                            if(me.sqid) {
                                wid.setArtifact(me.sqid);
                            }
                            if (X.inArray(me.inStatus, tid)) {
                                if (me.status[tid].hp <= 0) break;
                                var hp = me.status[tid].hp / me.status[tid].maxhp * 100;
                                wid.setHP(hp, true);
                            } else {
                                wid.setHP(100, true);
                            }
                            wid.setAnchorPoint(0.5, 1);
                            wid.setPosition(cc.p(layIco.width / 2, layIco.height));
                            layIco.addChild(wid);
                        }
                    }
                    me.setAttr();
                    me.setBuff();
                }
            }
        },
        setItem: function (item) {
            var me = this;

            X.autoInitUI(item);

            var layIco = item.nodes.panel_yx;

            if (item.data) {
                delete item.data;
            }
            layIco.setTouchEnabled(false);
            layIco.removeAllChildren();
            //lay.getTouchMovePosition()
            // imgAdd.show();

            item.setTouchEnabled(true);

            var bPos,cloneItem,pos;
            item.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_BEGAN) {
                    if (sender.data) {
                        bPos = sender.getTouchBeganPosition();
                        var firstParent = sender.getParent();

                        var firstPos = firstParent.convertToWorldSpace(sender.getPosition());
                        pos = me.ui.convertToNodeSpace(firstPos);
                        cloneItem = me.cloneItem = sender.clone();
                        cloneItem.data = sender.data;
                        sender.hide();
                        cloneItem.setPosition(cc.p(pos));
                        me.ui.addChild(cloneItem);
                        // cloneItem.
                        //给clone头像加动画
                        if(!sender.finds('star_1')){
                            cloneItem.finds('panel_xx').removeAllChildren();
                            G.class.ani.show({
                                json: "ani_10xingsaoguang",
                                addTo: cloneItem.finds('panel_xx'),
                                x: cloneItem.finds('panel_xx').width / 2,
                                y: cloneItem.finds('panel_xx').height / 2,
                                repeat: true,
                                autoRemove: false,
                            });
                            me.yx1 = true;
                        }else{
                            me.yx1 = false;
                        }
                    }
                } else if(type == ccui.Widget.TOUCH_MOVED){
                    if(sender.data){
                        var mPos = sender.getTouchMovePosition();
                        var offset = cc.p(mPos.x - bPos.x,mPos.y - bPos.y);

                        cloneItem.setPosition(cc.p(pos.x + offset.x,pos.y + offset.y));

                    }
                }else if (type == ccui.Widget.TOUCH_ENDED || type == ccui.Widget.TOUCH_CANCELED) {
                    if (sender.data) {

                        var isCollision = me.checkItemsCollision(cloneItem);
                        if(isCollision && !isCollision.finds('star_1')){
                            me.yx2 = true;
                        }else{
                            me.yx2 = false;
                        }
                        if (isCollision != null) {
                            me.changeItem(sender,isCollision);
                        }

                        if(me.cloneItem) {
                            me.cloneItem.removeFromParent();
                            delete me.cloneItem;
                        }
                        sender.show();

                    }
                } else if (type == ccui.Widget.TOUCH_NOMOVE) {
                    //卸下英雄
                    if (sender.data) {
                        me.removeItem(sender.data);
                    }
                }

            });
        },
        removeItem: function (tid) {
            var me = this;

            var itemArr = me.itemArr;
            for (var i = 0; i < itemArr.length; i++) {
                var item = itemArr[i];
                var layIco = item.nodes.panel_yx;
                // var imgAdd = item.nodes.img_add;
                if (item.data && item.data == tid) {
                    var idx = X.arrayFind(G.frame.yingxiong_fight.bottom.selectedData,tid);
                    if (idx > -1) {
                        G.frame.yingxiong_fight.bottom.selectedData.splice(idx, 1);
                        G.frame.yingxiong_fight.bottom.removeGou(tid);
                        // me.ui.setTimeout(function () {
                        //
                        // },180);
                    }

                    var child = G.frame.yingxiong_fight.bottom.getChildByTid(tid);
                    if (child) {
                        G.frame.yingxiong_fight.posSelect = G.frame.yingxiong_fight.ui.convertToNodeSpace(child.getParent().convertToWorldSpace(child.getPosition()));
                        G.frame.yingxiong_fight.posSelect.x += child.width / 2;
                    }

                    //移动动画所需数据
                    if (cc.isNode(G.frame.yingxiong_fight.item)) {
                        G.frame.yingxiong_fight.item.stopAllActions();
                        G.frame.yingxiong_fight.item.removeFromParent();
                    }
                    G.frame.yingxiong_fight.playAniType = 'remove';
                    G.frame.yingxiong_fight.posSz = G.frame.yingxiong_fight.ui.convertToNodeSpace(layIco.getParent().convertToWorldSpace(layIco.getPosition()));
                    var itemClone = G.frame.yingxiong_fight.item = layIco.clone();
                    itemClone.setPosition(G.frame.yingxiong_fight.posSz);
                    G.frame.yingxiong_fight.ui.addChild(itemClone);
                    G.frame.yingxiong_fight.playAniMove(itemClone);
                    
                    delete item.data;
                    layIco.removeAllChildren();
                    // imgAdd.show();
                    me.setAttr();
                    me.setBuff();
                }
            }
        },
        addItem: function (tid) {
            var me = this;

            var itemArr = me.itemArr;
            for (var i = 0; i < itemArr.length; i++) {
                var item = itemArr[i];
                if (!item.data) {
                    item.data = tid;
                    var layIco = item.nodes.panel_yx;
                    // var imgAdd = item.nodes.img_add;
                    var wid = G.class.shero(G.DATA.yingxiong.list[tid]);
                    wid.setAnchorPoint(0.5,1);
                    wid.setPosition(cc.p(layIco.width / 2,layIco.height));
                    if(me.sqid) {
                        wid.setArtifact(me.sqid);
                    }
                    if(me.fightData.pvType == "pvshizijun"){
                        if(X.inArray(me.inStatus, tid)){
                            var hp = me.status[tid].hp / me.status[tid].maxhp * 100;
                            wid.setHP(hp, true);
                        }else{
                            wid.setHP(100, true);
                        }
                    }
                    layIco.addChild(wid);
                    wid.hide();
                    me.ui.setTimeout(function () {
                        wid.show();
                    }, 180);

                    G.frame.yingxiong_fight.playAniType = 'add';
                    G.frame.yingxiong_fight.posSz = G.frame.yingxiong_fight.ui.convertToNodeSpace(layIco.getParent().convertToWorldSpace(layIco.getPosition()));
                    G.frame.yingxiong_fight.posSz.x -= layIco.width / 2;
                    
                    // imgAdd.hide();
                    me.setAttr();
                    me.setBuff();
                    break;
                }
            }
        },
        getSelectedData: function () {
            var me = this;

            var itemArr = me.itemArr;
            var obj = {};
            for (var i = 0; i < itemArr.length; i++) {
                var item = itemArr[i];
                if (item.data) {
                    obj[item.idx + 1] = item.data;
                }
            }

            if(me.sqid) {
                obj.sqid = me.sqid;
            }

            return obj;
        },
        setAttr: function () {
            var me = this;

            var sData = G.frame.yingxiong_fight.bottom.selectedData || [];
            var zhanli = 0;
            for (var i = 0; i < sData.length; i++) {
                var tid = sData[i];
                var hData = G.DATA.yingxiong.list[tid];
                zhanli += hData.zhanli;
            }

            me.nodes.txt_djs.setString(zhanli);
        },
        //获得选择数据种族对应的数量
        getZz2Num: function () {
            var me = this;

            var sData = G.frame.yingxiong_fight.bottom.selectedData || [];

            var obj = {};
            for (var i = 0; i < sData.length; i++) {
                var id = sData[i];
                var heroData = G.DATA.yingxiong.list[id];
                obj[heroData.zhongzu] = obj[heroData.zhongzu] || 0;
                obj[heroData.zhongzu]++;
            }

            return obj;
        },
        setBuff: function () {
            var me = this;
            var zf;
            var conf = G.class.zhenfa.get();
            var keys = X.keysOfObject(conf.zhenfa);
            var zz2num = me.getZz2Num();

            for(var i = 0; i < keys.length; i ++) {
                var isOk = true;
                var cond = G.class.zhenfa.getById(keys[i]).cond;
                for (var j in cond) {
                    if(!zz2num[j] || zz2num[j] < cond[j]) {
                        isOk = false;
                        break;
                    }
                }
                if(isOk) {
                    zf = keys[i];
                    break;
                }
            }
            if(zf) {
                me.zf = zf;
                var img = G.class.zhenfa.getIcoById(zf);
                me.ui.finds("txt_zx").hide();
                me.nodes.img_wh.hide();
                me.nodes.ico_zx.setBackGroundImage('img/zhenfa/' + img + '.png',1);
                me.nodes.ico_zx.removeAllChildren();
                G.class.ani.show({
                    json: "ani_zhenyingbuff16",
                    addTo: me.nodes.ico_zx,
                    x: me.nodes.ico_zx.width / 2,
                    y: me.nodes.ico_zx.height / 2,
                    repeat: true,
                    autoRemove: false,
                });
            }else {
                me.zf = "";
                me.nodes.img_wh.show();
                me.nodes.ico_zx.removeBackGroundImage();
                me.nodes.ico_zx.removeAllChildren();
                me.ui.finds("txt_zx").show();
            }
        },
        // 检测碰撞内容，如果有合适的，返回item
        checkItemsCollision: function (cloneItem) {
            var me = this;

            var itemsArr = me.itemArr;

            for (var i = 0; i < itemsArr.length; i++) {
                var item = itemsArr[i];
                if (cloneItem.data != item.data) {
                    var pos = item.getParent().convertToNodeSpace(cloneItem.getParent().convertToWorldSpace(cloneItem.getPosition()));
                    if (cc.rectContainsPoint(item.getBoundingBox(), pos)) {
                        return item;
                    }
                }
            }

            return null;
        },
        //交换头像和数据
        changeItem: function (item1,item2) {
            var me = this;

            if(!item1.data) return;

            var tid1 = item1.data;
            var tid2 = item2.data;

            item1.nodes.panel_yx.removeAllChildren();
            item2.nodes.panel_yx.removeAllChildren();
            if(tid2) {
                item2.data = tid1;
                item1.data = tid2;

                var wid = G.class.shero(G.DATA.yingxiong.list[tid2]);
                wid.setAnchorPoint(0.5,1);
                wid.setPosition(cc.p(item1.nodes.panel_yx.width / 2,item1.nodes.panel_yx.height));
                item1.nodes.panel_yx.addChild(wid);
                wid.setArtifact(me.sqid);
                if(me.fightData.pvType == "pvshizijun") {
                    if(me.status[tid2]) {
                        wid.setHP(me.status[tid2].hp / me.status[tid2].maxhp * 100, true);
                    }else {
                        wid.setHP(100, true);
                    }
                }

                var wid1 = G.class.shero(G.DATA.yingxiong.list[tid1]);
                wid1.setAnchorPoint(0.5,1);
                wid1.setPosition(cc.p(item2.nodes.panel_yx.width / 2,item2.nodes.panel_yx.height));
                item2.nodes.panel_yx.addChild(wid1);
                wid1.setArtifact(me.sqid);
                if(me.fightData.pvType == "pvshizijun") {
                    if(me.status[tid1]) {
                    wid1.setHP(me.status[tid1].hp / me.status[tid1].maxhp * 100, true);
                    }else {
                        wid1.setHP(100, true);
                    }
                }

            }else {
                item1.data = undefined;
                item2.data = tid1;

                var wid1 = G.class.shero(G.DATA.yingxiong.list[tid1]);
                wid1.setAnchorPoint(0.5,1);
                wid1.setPosition(cc.p(item2.nodes.panel_yx.width / 2,item2.nodes.panel_yx.height));
                item2.nodes.panel_yx.addChild(wid1);
                wid1.setArtifact(me.sqid);
                if(me.fightData.pvType == "pvshizijun") {
                    if(me.status[tid1]) {
                        wid1.setHP(me.status[tid1].hp / me.status[tid1].maxhp * 100, true);
                    }else {
                        wid1.setHP(100, true);
                    }
                }
            }
        }
    });

})();
;;/**
 * Created by zhangming on 2018-05-03
 */
(function(){
 // 英雄列表
G.class.yingxiong_lb = X.bView.extend({
    ctor: function (type) {
        var me = this;
        me._type = type;
        me._super('yingxiong.json');
    },
    refreshPanel: function(){
        var me = this;
        // me.DATA = G.frame.budui.DATA;
        // me.curXbId = G.frame.budui.curXbId;
        // me.curXbIdx = G.frame.budui.curXbIdx;

        me.getHeroCell(function () {
            me.setHeroCell();
        });
        me.setContents();
    },
    bindBTN:function() {
        var me = this;
        
    },
    onOpen: function () {
        var me = this;
        me.nodes.btn_jia.hide();
        me.nodes.scrollview1.hide();
        me.bindBTN();
    },
    onShow : function(){
        var me = this;
        
        me.createMenu();
        me.refreshPanel();
        
        G.frame.yingxiong.onnp('updateInfo', function (d) {
            me.setContents();
        }, me.getViewJson());
        
        G.frame.chongzhi.on("hide", function () {
            me.ajax("user_getgezinum", [], function (str, data) {
                if(data.s == 1) {
                    G.DATA.heroCell = data.d;
                    me.setHeroCell();
                }
            })
        })
    },
    getHeroCell: function(callback) {
        var me = this;

        me.ajax("user_getgezinum", [], function (str, data) {
            if(data.s == 1) {
                G.DATA.heroCell = data.d;
                callback && callback();
            }
        })
    },
    onRemove: function () {
        var me = this;
    },
    //英雄格子数量
    setHeroCell: function () {
        var me = this;

        var list = G.DATA.yingxiong.list;
        var keys = X.keysOfObject(list);
        var conf = G.class.getConf('herocom').herocell;
        var data = G.DATA.heroCell;
        var ownNum = data.maxnum;

        if(keys.length == 0){
            me.ui.finds("img_zwnr").show();
        }

        me.render({
            txt_sl: function (node) {
                var btn = me.nodes.btn_jia.clone();
                btn.show();
                btn.click(function (sender, type) {
                    buy();
                });
                var str = X.STR(L("{1}/{2}   <font node=1></font> "), keys.length, ownNum);
                var rh = new X.bRichText({
                    size: 20,
                    lineHeight: 24,
                    color: G.gc.COLOR.n4,
                    maxWidth: node.width,
                    family: G.defaultFNT
                });
                rh.text(str, [btn]);
                rh.setAnchorPoint(0.5, 0.5);
                rh.setPosition(node.width / 2, 5);
                node.removeAllChildren();
                node.addChild(rh);
            }, // 数量

        });

        function buy() {
            var need = G.class.formula.compute(conf.need[0].n,{buyednum:data.buynum || 0});
            var str = X.STR(L('YINGXIONG_BUG_CELL'),need,conf.addnum);
            G.frame.alert.data({
                cancelCall:null,
                autoClose:false,
                okCall: function () {
                    G.ajax.send('user_addgezinum',[],function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            for (var key in d.d) {
                                G.DATA.heroCell[key] = d.d[key];
                            }
                            G.tip_NB.show(L('GOUMAI') + L('SUCCESS'));
                            me.setHeroCell();
                            var need = G.class.formula.compute(conf.need[0].n,{buyednum:data.buynum || 0});
                            var str = X.STR(L('YINGXIONG_BUG_CELL'),need,conf.addnum);
                            G.frame.alert.data({richText:str,autoClose:false}).setContents();
                        }
                    },true);
                },
                sizeType:3,
                richText:str,
            }).show();
        }
    },
    setContents:function() {
        var me = this;

        var type = me.curType || 0;
        me._menus[type].triggerTouch(ccui.Widget.TOUCH_ENDED);
    },
    fmtItemList: function () {
        var me = this;
        
        G.frame.yingxiong._firstItem = null;
        
        cc.enableScrollBar( me.nodes.scrollview);
        me.nodes.scrollview.removeAllChildren();
        var table = new cc.myTableView({
            rownum: 4,
            type: 'fill',
            lineheight: me.nodes.list.height+12,
            paddingTop: 4
        });
        me.ui_table = table;
        table.setDelegate(this);
        this.setTableViewData();
        table.bindScrollView(me.nodes.scrollview);
        // me.ui_table.tableView.reloadData();
        // me.nodes.scrollview.getChildren()[0].getChildren()[0].x += 1;
    },
    setTableViewData: function () {
        var me = this;

        me._tidArr = G.frame.yingxiong.getTidArr(me.curType);
        var zz2idx = {
            5:0, //神圣
            6:1, //暗影
            4:2, //自然
            3:4, //邪能
            2:5, //奥术
            1:6 //亡灵
        };

        me._tidArr.sort(function (a,b) {
            var dA = G.frame.yingxiong.getHeroDataByTid(a);
            var dB = G.frame.yingxiong.getHeroDataByTid(b);

            if (dA.star != dB.star) {
                return dA.star > dB.star ? -1 : 1;
            } else if (dA.lv != dB.lv) {
                return dA.lv > dB.lv ? -1 : 1;
            } else if (dA.zhongzu != dB.zhongzu) {
                return zz2idx[dA.zhongzu] < zz2idx[dB.zhongzu] ? -1 : 1;
            } else {
                return dA.hid * 1 < dB.hid ? -1 : 1;
            }
        });

        var table = me.ui_table;
        table.data(me._tidArr);
    },
    /**
     * 数据模板
     * @returns {*}
     */
    cellDataTemplate: function () {
        var me = this;
        return me.nodes.list.clone();
    },
    /**
     * 数据初始化
     * @param ui
     * @param data
     */
    cellDataInit: function (ui, data, pos) {
        var me = this;
        if (data == null) {
            ui.hide();
            return;
        }
        // ui.setName(pos[0]*1 + pos[1]);
        X.autoInitUI(ui);
        var d = G.DATA.yingxiong.list[data];
        ui.setName(d.hid);
        
        //映射出去便于新手指导
        if(G.frame.yingxiong._firstItem==null){
        	G.frame.yingxiong._firstItem = ui;
        }

        var widget = G.class.shero(d);
        // widget.setScale(0.9);
        widget.setAnchorPoint(0.5,0.5);
        widget.setPosition(cc.p( ui.nodes.ico.width*0.5, ui.nodes.ico.height*0.5));
        ui.nodes.ico.removeAllChildren();
        ui.nodes.ico.addChild(widget);

        ui.data = data;
        ui.setTouchEnabled(true);
        ui.setSwallowTouches(false);
        ui.touch(function (sender, type) {
            if (type == ccui.Widget.TOUCH_NOMOVE){
                G.frame.yingxiong_xxxx.data({
                    // uid: P.gud.uid,
                    tid:sender.data,
                    // idx:pos[0]*1 + pos[1],
                    // zhongzu:me.curType,
                    list:me._tidArr,
                    frame:'yingxiong',
                }).show();
            }
        });
        ui.show();
    },
    createMenu: function(){
        var me = this;
        me._menus = [];

        //图标中，1指的是全部
        for(var i=0;i<7;i++){
            var panel = me.nodes['panel_' + (i+1)];

            var list_ico = me.nodes.list_ico.clone();
            X.autoInitUI(list_ico);
            list_ico.nodes.panel_zz.setTouchEnabled(false);
            list_ico.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (i + 1) + '.png', 1);
            list_ico.show();
            list_ico.setAnchorPoint(0.5,0.5);
            list_ico.setPosition(cc.p(panel.width*0.5, panel.height*0.5 + 2));

            list_ico.data = i;
            list_ico.setTouchEnabled(true);

            list_ico.click(function(sender, type){
                for(var j=0;j<me._menus.length;j++){
                    var node = me._menus[j];
                    var img = 'img/public/ico/ico_zz' + (node.data + 1) + '.png';
                    if(node.data == sender.data){
                        if(me.effect) X.audio.playEffect("sound/dianji.mp3", false);
                        me.effect = true;
                        me.curType = sender.data;
                        me.fmtItemList();
                        img = 'img/public/ico/ico_zz' + (node.data + 1) + '_g.png';
                        if(sender.ani){
                            sender.ani.show();
                        }else{
                            G.class.ani.show({
                                json: "ani_guangbiaoqiehuan",
                                addTo: sender,
                                x: sender.width / 2,
                                y: sender.height / 2,
                                repeat: true,
                                autoRemove: false,
                                onload: function(node){
                                    sender.ani = node;
                                }
                            })
                        }
                    }else{
                        //node.nodes.img_yuan_xz.hide();
                        if(node.ani) node.ani.hide();
                    }
                    node.nodes.panel_zz.setBackGroundImage(img,1);
                }
                //sender.nodes.img_yuan_xz.show();
            });

            me._menus.push(list_ico);
            panel.addChild(list_ico);
        }
    },
});

})();
;;/**
 * Created by LYF on 2018/10/11.
 */
(function () {
    //英雄评论
    var ID = 'yingxiong_pinglun';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
            me.preLoadRes = ["yingxiong_pinglun.png", "yingxiong_pinglun.plist"]
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });

            me.nodes.btn_dianzan.click(function (sender, type) {
                me.ajax("hero_comment", [me.hid, 2], function (str, data) {
                    if(data.s == 1) {
                        var str = me.nodes.wz_dianzan.getString();

                        me.nodes.wz_dianzan.setString(str == "9999+" ? str : (str == 9999 ? "9999+" : str * 1 + 1));

                        var txt = new ccui.Text("+1", G.defaultFNT, 20);
                        txt.setTextColor(cc.color("#30ff01"));
                        txt.setAnchorPoint(0.5, 0.5);
                        txt.setPosition(sender.x + 10, sender.y + 170);
                        X.enableOutline(txt, "#000000", 2);
                        me.ui.addChild(txt);
                        txt.runAction(cc.sequence(cc.moveBy(0.5, 0, 50), cc.callFunc(function(){
                            txt.removeFromParent();
                        })));
                    }
                })
            });

            me.nodes.btn_send.click(function () {
                var str = me.nodes.txtfield.getString();
                if(str.length < 1) {
                    G.tip_NB.show(L("QSRNR"));
                    return;
                }
                me.nodes.txtfield.setString("");
                X.editbox.create(me.nodes.txtfield);
                
                if(P.gud.lv >= 60 || P.gud.vip >= 2) {

                }else {
                    G.tip_NB.show(L("VANDDJ"));
                    return;
                }
                me.ajax("hero_comment", [me.hid, 1, str], function (str, data) {
                    if(data.s == 1) {
                        G.tip_NB.show(L("PLCG"));
                        if(!me.DATA.comment) {
                            me.DATA.comment = [];
                            me.DATA.comment.push(data.d);
                        }else {
                            me.DATA.comment.push(data.d);
                        }
                        if(!me.table) {
                            me.setChat();
                        }else {
                            me.table.setData(me.DATA.comment);
                            me.table.reloadDataWithScroll(true);
                        }
                    }
                })
            })
        },
        onOpen: function () {
            var me = this;

            me.nodes.list_lb.hide();
            cc.enableScrollBar(me.nodes.scrollview_chat);
            me.fillSize();
            me.initUi();
            me.bindBtn();
            X.editbox.create(me.nodes.txtfield);
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("hero_getcomment", [me.hid], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            })
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            me.hid = me.data().toString().split("_")[0];
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;
            me.setContents();
            me.setChat();
        },
        onHide: function () {
            var me = this;

            if(G.frame.yingxiong_xxxx.isShow && G.frame.yingxiong_xxxx.from == "yingxiong_tujian" && G.frame.yingxiong_xxxx.rw) {
                G.frame.yingxiong_xxxx.rw.setPinLun();
            }
        },
        setContents: function () {
            var me = this;
            var conf = X.clone(G.class.hero.getById(me.hid));
            if(me.data().toString().split("_").length > 1) {
                var starup = G.class.herostarup.getByIdAndDengjie(me.hid, '10');
                conf.lv = starup.maxlv;
                conf.dengjielv = '10';
                conf.star = 10;
            }

            var hero = G.class.shero(conf);
            hero.setPosition(me.nodes.panel_tx1.width / 2, me.nodes.panel_tx1.height / 2);
            hero.lv && hero.lv.hide();
            me.nodes.panel_tx1.addChild(hero);

            me.nodes.txt_wjmz.setString(conf.name);
            me.nodes.wz_dianzan.setString(me.DATA.like ? (me.DATA.like > 9999 ? "9999+" : me.DATA.like) : 0);

            var skillList = G.class.hero.getSkillList(conf.hid, conf.star);
            for (var i = 0; i < skillList.length; i++){
                var p = G.class.ui_skill_list(skillList[i], true, null, 1);
                p.setAnchorPoint(0,0);
                p.setScale(.6);
                p.setPosition(0 + i * p.width / 2, 0);
                p.x += i * 15;
                me.nodes.jn.addChild(p);
            }
        },
        setChat: function () {
            var me = this;

            if(!me.DATA.comment || me.DATA.comment.length < 1) {
                me.nodes.img_zwnr.show();
                return;
            }else {
                me.nodes.img_zwnr.hide();
            }

            var table = me.table = new X.TableView(me.nodes.scrollview_chat, me.nodes.list_lb, 1, function (ui, data, pos) {
                me.setItem(ui, data, pos[0] + pos[1]);
            }, null, null, 8, 5);
            table.setData(me.DATA.comment);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data, pos) {
            var me = this;
            X.autoInitUI(ui);
            ui.show();
            ui.nodes.panel_tx.removeAllChildren();

            var head = G.class.shead(data.headdata);
            head.setPosition(ui.nodes.panel_tx.width / 2, ui.nodes.panel_tx.height / 2);
            ui.nodes.panel_tx.addChild(head);
            head.setTouchEnabled(true);
            head.icon.setTouchEnabled(false);
            head.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    G.frame.wanjiaxinxi.data({
                        pvType: 'zypkjjc',
                        uid: sender.data.uid
                    }).checkShow();
                }
            });
            ui.nodes.txt_player_neirong.setString(data.content);
            ui.nodes.txt_player_name.setString(data.headdata.name);
            ui.nodes.txt_send_time.setString(X.timetostr(data.ctime, '[m-d h:mm]'));

            if(!data.isdone) {
                ui.finds("aixintu_ax").setPercent(0);
            }else {
                ui.finds("aixintu_ax").setPercent(100);
            }
            
            ui.finds("aixin_ax").click(function () {
                me.ajax("hero_comment", [me.hid, 4, data.id], function (str, data) {
                    if(data.s == 1) {
                        ui.finds("wz_1").setString(ui.finds("wz_1").getString() == "9999+" ? ui.finds("wz_1").getString()
                            : (ui.finds("wz_1").getString() * 1 + 1 > 9999 ? "9999+" : ui.finds("wz_1").getString() * 1 + 1));
                        me.DATA.comment[pos].jiaxin += 1;
                        me.DATA.comment[pos].isdone = 1;
                        G.class.ani.show({
                            json: "ani_dianzan",
                            addTo: ui.finds("aixin_ax"),
                            x: 32,
                            y: 29,
                            repeat: false,
                            autoRemove: true,
                            onend: function () {
                                var txt = new ccui.Text("+1", G.defaultFNT, 20);
                                txt.setTextColor(cc.color("#30ff01"));
                                txt.setAnchorPoint(0.5, 0.5);
                                txt.setPosition(ui.finds("aixin_ax").x + 30, ui.finds("aixin_ax").y + 35);
                                X.enableOutline(txt, "#000000", 2);
                                ui.addChild(txt);
                                txt.runAction(cc.sequence(cc.moveBy(0.5, 0, 50), cc.callFunc(function(){
                                    txt.removeFromParent();
                                })));
                                ui.finds("aixintu_ax").setPercent(100);
                            }
                        })
                    }
                })
            });

            ui.finds("wz_1").setString(data.jiaxin ? (data.jiaxin > 9999 ? "9999+" : data.jiaxin) : 0);
        }
    });
    G.frame[ID] = new fun('yingxiong_pinglun.json', ID);
})();
;;(function () {
    
    var _fun = {
        getData : function(callback){
            var me = this;

            G.ajax.send('hero_getlist',[],function(d){
                var data = JSON.parse(d);
                if (data.s === 1) {
                    G.DATA.yingxiong = data.d;
                    me.checkHeroNum();
                    callback && callback();
                }
            },true);
        },
        //获得英雄格子数量
        getHeroCellData: function (callback) {
            var me = this;

            G.ajax.send('user_getgezinum',[],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    G.DATA.heroCell = d.d;
                    callback && callback();
                }
            });
        },
        //获取小兵tidarr
        getTidArr:function(zhongzu) {
            var me = this;
            var heros = (G.DATA.yingxiong && G.DATA.yingxiong.list) || {};
            var arr = X.keysOfObject(heros);

            if(zhongzu){
                for(var i=arr.length-1;i>-1;i--){
                    if(heros[arr[i]].zhongzu != zhongzu){
                        arr.splice(i, 1);
                    }
                }
            }

            // list.sort(function (a, b) {
            //     var abnum = list[a],
            //         bbnum = list[b];
            //     if (abnum > 0 && bbnum > 0){
            //         return a - b;
            //     }else if (abnum > bbnum){
            //         return a - b;
            //     }else{
            //         return b - a;
            //     }
            // });

            return arr;
        },
        getFilterHeros: function(need, tid){
            var heros = G.DATA.yingxiong.list;
            var armyInfo = heros[tid];
            var keys = X.keysOfObject(heros);
            var result = [];

            for(var i=0;i<keys.length;i++){
                if(keys[i] == tid) continue; // 排除自己
                var d = heros[keys[i]];

                // 同种族
                if(need.samezhongzu && d.zhongzu != armyInfo.zhongzu){
                    continue;
                }

                // 同星级
                if(need.star && d.star != armyInfo.star){
                    continue;
                }

                // 同hid
                if(need.xshero && d.hid != armyInfo.hid){
                    continue;
                }

                result.push(keys[i]);
            }
            return result;
        },
        updateInfo: function (data, callback) {
            var me = this;

            // if(!data){
            //     G.frame.budui.emit('update_armydetails');
            //     return;
            // }

            if (G.frame.yingxiong.isShow) {
                me.getData(data, function(){
                    callback && callback();
                    G.frame.yingxiong.refreshPanel();
                    G.frame.yingxiong.emit('updateInfo');
                });
            }
        },
        //获得英雄数据，forceConf=true时整合配置数据
        getHeroDataByTid: function (tid, forceConf) {
            var me = this;

            var data = G.DATA.yingxiong.list[tid];
            if (forceConf) {
                var conf = G.class.hero.getById(data.hid);
                cc.mixin(data,conf,true);
            }

            return data;
        },
        //获得锁定的英雄信息
        getLockHeros: function () {
            var me = this;


            return G.DATA.yingxiong.jjchero || [];
        },
        // 英雄数量
        checkHeroNum: function () {
            var me = this;

            var data = G.DATA.yingxiong.list;
            var obj = {},
                zzObj = {},
                zzStarObj = {},
                starObj = {};
            for (var tid in data) {
                var heroData = data[tid];
                //hid对应数量
                obj[heroData.hid] = obj[heroData.hid] || 0;
                obj[heroData.hid]++;
                //种族对应数量
                zzObj[heroData.zhongzu] = zzObj[heroData.zhongzu] || 0;
                zzObj[heroData.zhongzu]++;
                //种族星级对应的数量
                zzStarObj[heroData.zhongzu] = zzStarObj[heroData.zhongzu] || {};
                zzStarObj[heroData.zhongzu][heroData.star] = zzStarObj[heroData.zhongzu][heroData.star] || 0;
                zzStarObj[heroData.zhongzu][heroData.star]++;
                //星级对应的数量
                starObj[heroData.star] = starObj[heroData.star] || 0;
                starObj[heroData.star]++;
            }

            G.DATA.yingxiong.hid2num = obj;
            G.DATA.yingxiong.zz2num = zzObj;
            G.DATA.yingxiong.zzStar2num = zzStarObj;
            G.DATA.yingxiong.star2num = starObj;
        },
        //hid对应的英雄数量
        getHeroNumByHid: function (hid) {
            var me = this;

            var data = G.DATA.yingxiong.hid2num;

            return data[hid] || 0;
        },
        //种族对应的英雄数量
        getHeroNumByZhongzu: function (zz) {
            var me = this;

            var data = G.DATA.yingxiong.zz2num;

            return data[zz] || 0;
        },
        //种族和星级对应的英雄数量
        getHeroNumByZzAndStar: function (zz, star) {
            var me = this;

            var data = G.DATA.yingxiong.zzStar2num;

            return data[zz] ? (data[zz][star] || 0) : 0;
        },
        //星级对应的英雄数量
        getHeroNumByStar: function (star, need) {
            var me = this;

            var data = X.clone(G.DATA.yingxiong.star2num);

            if(need){
                for(var i in data){
                    if(i == need.star){
                        data[i] -= 1;
                        break;
                    }
                }
            }

            return data[star] || 0;
        }

    };
    
    for (var key in _fun) {
        G.frame.yingxiong[key] = _fun[key];
    }
})();
;;/**
 * Created by LYF on 2018-10-22
 */
(function () {
    // 英雄信息-融魂
    G.class.yingxiong_yxrh = X.bView.extend({
        ctor: function (type) {
            var me = this;
            G.frame.yingxiong_xxxx.rh = me;
            me._type = type;
            me._super('yingxiong_rh.json');
        },
        refreshPanel: function () {
            var me = this;

            me.curXbId = G.frame.yingxiong_xxxx.curXbId;
            me.curXbIdx = G.frame.yingxiong_xxxx.curXbIdx;
            me.DATA = G.DATA.yingxiong.list[me.curXbId];
            me.hero_lv = me.DATA.lv;
            me.hero_hid = me.DATA.hid;
            G.DATA.yingxiong.oldData = me.DATA;

            me.setContents();
        },
        setContents: function () {
            var me = this;
            var data = me.DATA;
            var conf = G.class.meltsoul.getById(me.hero_hid);
            var conf_com = G.class.meltsoulcom.get();
            var hero_data = G.class.hero.getById(me.hero_hid);
            var open_lv = G.class.meltsoulcom.getOpenLv();
            G.DATA.yingxiong.oldData = data;
            var dengjie = 1,
                dq_hp = 0,
                dq_atk = 0,
                tp_type,
                dq_tplv;
            dengjie = data.meltsoul || 1;
            if(data.extbuff && data.extbuff.meltsoul){
                for (var i = 0; i < data.extbuff.meltsoul.length; i++) {
                    var meltsoul = data.extbuff.meltsoul[i];
                    if (meltsoul.hp) {
                        dq_hp = meltsoul.hp || 0;
                    } else if (meltsoul.atk) {
                        dq_atk = meltsoul.atk || 0;
                    }
                }
            }
            var max_hp = conf[dengjie].upperlimit.hp;
            var max_atk = conf[dengjie].upperlimit.atk;

            var txt_djz = me.nodes.txt_djz;
            var btn_tishi = me.nodes.btn_tishi;
            var qiu1 = me.nodes.img_qiu1;
            var qiu2 = me.nodes.img_qiu2;
            var qiu1_xz = me.nodes.gj_dian;
            var qiu2_xz = me.nodes.sm_dian;
            var num1 = me.nodes.txt_gj;
            var num2 = me.nodes.txt_sm;

            me.panel_rh = me.nodes.pane_rh;
            me.panel_tp = me.nodes.panel_tp;
            me.dengjie = dengjie;
            me.dq_atk = dq_atk;
            me.dq_hp = dq_hp;

            //判断球的属性满了没
            if(dq_hp < max_hp){
                me.hp_meltsoul = false;
            }else{
                me.hp_meltsoul = true;
            }
            if(dq_atk < max_atk){
                me.atk_meltsoul  = false;
            }else{
                me.atk_meltsoul = true;
            }
            if(me.hp_meltsoul == false && me.atk_meltsoul == true){
                me.qiu_type = "hp";
                qiu1_xz.hide();
                qiu2_xz.show();
            }else if(me.hp_meltsoul == true && me.atk_meltsoul == false){
                me.qiu_type = "atk";
                qiu1_xz.show();
                qiu2_xz.hide();
            }else if(me.qiu_type == "atk"){
                me.qiu_type = "atk";
                qiu1_xz.show();
                qiu2_xz.hide();
            }else if(me.qiu_type == "hp"){
                me.qiu_type = "hp";
                qiu1_xz.hide();
                qiu2_xz.show();
            }else{
                me.qiu_type = "atk";
                qiu1_xz.show();
                qiu2_xz.hide();
            }

            me.setToperAttr(me.qiu_type);

            //判断突破文字显示状态
            btn_tishi.show();

            if (G.class.herostarup.getById(me.hero_hid)) {
                if (G.class.herostarup.getByIdAndDengjie(me.hero_hid, '10')) {
                    var starup = G.class.herostarup.getByIdAndDengjie(me.hero_hid, '10');
                    hero_data.lv = starup.maxlv;
                } else if (G.class.herostarup.getByIdAndDengjie(me.hero_hid, '9')) {
                    var starup = G.class.herostarup.getByIdAndDengjie(me.hero_hid, '9');
                    hero_data.lv = starup.maxlv;
                } else {
                    var data_clone = X.clone(G.class.hero.getById(me.hero_hid));
                    hero_data.lv = G.class.herocom.getMaxlv(me.hero_hid, data_clone.star);
                }
            }else{
                hero_data.lv = 100;
            }
            dq_tplv = G.class.meltsoulcom.getTPlv(dengjie);
            var arr_tplv = G.class.meltsoulcom.get().base.tupo;
            if (hero_data.lv <= open_lv) {
                btn_tishi.hide();
                if (me.hero_lv == open_lv) {
                    tp_type = "1";
                }
            } else if (me.hero_lv >= dq_tplv) {
                tp_type = "2";
            } else {
                if (hero_data.lv == arr_tplv[X.keysOfObject(arr_tplv).length]) {
                    if (me.hero_lv < dq_tplv) {
                        tp_type = "3";
                    } else if (me.hero_lv == arr_tplv[X.keysOfObject(arr_tplv).length]) {
                        tp_type = "5";
                    }
                } else {
                    if (hero_data.lv < dq_tplv) {
                        tp_type = "4";
                    } else if (me.hero_lv < dq_tplv) {
                        tp_type = "3";
                    }

                }
            }

            //设置属性球
            txt_djz.setString(dengjie);
            me.setQiuani(qiu1, dengjie, dq_atk, max_atk, 1);
            num1.setString(dq_atk || " ");
            me.setQiuani(qiu2, dengjie, dq_hp, max_hp, 2);
            num2.setString(dq_hp || " ");
            me.tupo = false;

            //判断打开融魂还是突破
            if((dq_hp == max_hp) && (dq_atk == max_atk)){
                me.Ronghun_show = false;
                me.setTupo(tp_type, dq_tplv);
            }else{
                me.Ronghun_show = true;
                me.setRonghun();
            }
        },
        setRonghun: function() {
            var me = this;

            me.panel_rh.show();
            me.panel_tp.hide();


            var btn_rh = me.nodes.btn_rh;
            var panel_xh = me.nodes.panel_jn;
            var btn_gou = me.nodes.btn_gou;
            var bg_gou = me.nodes.bg_gou;
            var rh_man = me.nodes.panel_man;
            var txt_man = me.nodes.panel_wz;
            var xh1 = me.nodes.txt_xh1;
            var xh2 = me.nodes.txt_xh2;
            var img_xh1 = me.ui.finds('token_1');
            img_xh1.setScale(2.5);
            var item_num = [];
                item_data =[];

            me.quantity = me.quantity || 1;

            var xiaohao;
            if(me.qiu_type == "atk"){
                xiaohao = G.class.meltsoulcom.getAtkneed(me.dengjie);
            }else{
                xiaohao = G.class.meltsoulcom.getHpneed(me.dengjie);
            }
            if(xiaohao){
                var color1 = G.class.getOwnNum(xiaohao[0].t, xiaohao[0].a) < xiaohao[0].n;
                var color2 = G.class.getOwnNum(xiaohao[1].t, xiaohao[1].a) < xiaohao[1].n;
                xh1.setTextColor(cc.color(!color1 ? '#ffffff' : "#ff4e4e"));
                xh2.setTextColor(cc.color(!color2 ? '#ffffff' : "#ff4e4e"));
                X.enableOutline(xh1,cc.color(!color1 ? '#000000' : "#740000"),1);
                X.enableOutline(xh2,cc.color(!color2 ? '#000000' : "#740000"),1);
                xh1.setString(xiaohao[0].n * me.quantity);
                xh2.setString(xiaohao[1].n * me.quantity);
                item_num.push(xh1);
                item_num.push(xh2);
                img_xh1.loadTexture(G.class.getItemImg(xiaohao[0].t), 0);
            }
            // X.alignCenter(panel_xh, xiaohao, {
            //     name: false,
            //     touch: true,
            //     scale: 0.65,
            //     interval: 0.5,
            //     mapItem: function(item) {
            //         item_num.push(item.num);
            //         item_data.push(item.data);
            //         me.quantity && item.num.setString(item.data.n * me.quantity);
            //         var color = G.class.getOwnNum(item.data.t, item.data.a) < item.data.n;
            //         item.num.setTextColor(cc.color(color ? '#ff4e4e' : "#ffffff"));
            //     }
            // })

            if ((me.qiu_type == "hp") && me.hp_meltsoul) {
                me.nodes.btn_rh.setTouchEnabled(false);
                me.nodes.btn_rh.setBright(false);
                rh_man.show();
                me.panel_rh.hide();
                txt_man.setString(L('YXRH_MAN_HP'));
            }else if((me.qiu_type == "atk") && me.atk_meltsoul){
                me.nodes.btn_rh.setTouchEnabled(false);
                me.nodes.btn_rh.setBright(false);
                rh_man.show();
                me.panel_rh.hide();
                txt_man.setString(L('YXRH_MAN_ATK'));
            } else {
                me.nodes.btn_rh.setTouchEnabled(true);
                me.nodes.btn_rh.setBright(true);
                rh_man.hide();
                me.panel_rh.show();
            }

            bg_gou.setTouchEnabled(true);
            btn_gou.setTouchEnabled(false);
            bg_gou.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    if (me.quantity == 10) {
                        btn_gou.hide();
                        me.quantity = 1;
                    } else {
                        btn_gou.show();
                        me.quantity = 10;
                    }
                    for(var i=0;i<item_num.length;i++){
                        item_num[i].setString(xiaohao[i].n * me.quantity);
                        var color = G.class.getOwnNum(xiaohao[i].t, xiaohao[i].a) < xiaohao[i].n;
                        item_num[i].setTextColor(cc.color(color ? '#ff4e4e' : "#ffffff"));
                    }
                }
            });
            btn_rh.click(function(sender, type) {
                if (me.atk_meltsoul && me.qiu_type == "atk") {
                    return;
                }else if(me.hp_meltsoul && me.qiu_type == "hp"){
                    return;
                } else {
                    G.ajax.send("hero_meltsoul", [me.qiu_type, me.curXbId, me.quantity], function(d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            if (d.d.hero && d.d.hero[me.curXbId]) {
                                me.DATA = d.d.hero[me.curXbId];
                                me.setUP(me.DATA);
                                me.setUPani(me.DATA, d.d.crit, function(){
                                    me.refreshPanel()
                                });
                                me.setRonghunani(me.qiu_type);
                            }
                        }
                    });
                }
            }, 500);
        },
        setTupo: function(type, dq_tplv) {
            var me = this;

            me.panel_rh.hide();
            me.panel_tp.show();
            me.nodes.panel_man.hide();

            var data = me.DATA;
            var tp_tishi = me.nodes.panel_tpwz;
            var btn_tp = me.nodes.btn_tp;
            tp_tishi.show()
            btn_tp.setTouchEnabled(true);
            btn_tp.setBright(true);
            btn_tp.setTitleColor(cc.color(G.gc.COLOR.n101));
            var text = "";
            if (type == "1") {
                text = L('YXRH_TP1');
                btn_tp.setTouchEnabled(false);
                btn_tp.setBright(false);
                btn_tp.setTitleColor(cc.color(G.gc.COLOR.n15));
            } else if (type == "2") {
                text = X.STR(L('YXRH_TP2'), dq_tplv);
            } else if (type == "3") {
                text = X.STR(L('YXRH_TP3'), dq_tplv,
                    "<font color=#fff71d" + " onclick=G.frame.yingxiong_xxxx.ui.finds('menuBtn4').triggerTouch(ccui.Widget.TOUCH_ENDED)>" + L('YXXX_YXSX') + "</font>");
            } else if (type == "4") {
                text = L('YXRH_TP4');
            }else{
                text = L('YXRH_TP5');
                btn_tp.setTouchEnabled(false);
                btn_tp.setBright(false);
                btn_tp.setTitleColor(cc.color(G.gc.COLOR.n15));
            }
            var rh = new X.bRichText({
                size: 22,
                maxWidth: tp_tishi.width,
                lineHeight: 24,
                color: "#804236",
                family: G.defaultFNT,
                eachText: function (node) {
                    // X.enableOutline(node, "#000000", 2);
                }
            });
            rh.text(text);
            rh.setAnchorPoint(0, 1);
            rh.setPosition(tp_tishi.width/2 - rh.trueWidth()/2, tp_tishi.height/2 + rh.trueHeight()/2);
            tp_tishi.removeAllChildren();
            tp_tishi.addChild(rh);

            btn_tp.click(function(sender, type) {
                me.oldData = X.clone(G.DATA.yingxiong.oldData);
                G.ajax.send("hero_mstupo", [me.curXbId], function(d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        if (d.d.hero && d.d.hero[me.curXbId]) {
                            me.DATA = d.d.hero[me.curXbId];
                            // me.setUP(me.DATA);
                            G.frame.ui_rh_jinjie.data({
                                data: me.DATA,
                                tid: me.curXbId,
                                hid: me.hero_hid,
                                oldData: me.oldData,
                                extrabuff: G.class.meltsoul.getById(me.hero_hid)[me.dengjie].extrabuff,
                                callback: function() {
                                    me.tupo = true;
                                    me.refreshPanel();
                                }
                            }).show();
                        }
                    }
                });
            }, 500);
        },
        setUP:function(data){
            var me = this;
            var piaozi = me.nodes.piaozi;
            while (piaozi.getChildren().length > 10) {
                for(var i=0;i<piaozi.getChildren().length - 10;i++){
                    piaozi.getChildren()[i].removeFromParent();
                }
            }
            var oldData = G.DATA.yingxiong.oldData || data;
            var sarr = [L("atk"), L("def"), L("hp"), L("speed")];
            var arr = ["atk", "def", "hp", "speed"];
            var num = 0;
            for (var i = 0; i < arr.length; i++) {
                if (data[arr[i]] !== oldData[arr[i]]) {
                    var is = data[arr[i]] > oldData[arr[i]];
                    var str = sarr[i] + (is ? ("+" + (data[arr[i]] - oldData[arr[i]])) : (data[arr[i]] - oldData[arr[i]]));
                    var shuXingUp = new ccui.Text(str, "fzcyj", 15);
                    (function(shuXingUp) {
                        shuXingUp.setFontName(G.defaultFNT);
                        shuXingUp.setTextColor(cc.color("#3CFF00"));
                        X.enableOutline(shuXingUp, "#000000", 2);
                        shuXingUp.setPosition(piaozi.width / 2 + (me.qiu_type == "atk" ? -120 : 120), piaozi.height/2);
                        num++;
                        piaozi.addChild(shuXingUp);
                        var action2 = cc.fadeOut(0.9);
                        var action3 = cc.moveBy(0.3, cc.p(0, 50));
                        var action4 = cc.spawn(action2, action3);
                        var action5 = cc.sequence(action4, cc.callFunc(() => {
                            shuXingUp.removeFromParent();
                        }));
                        shuXingUp.runAction(action5);
                    })(shuXingUp);
                }
            }
            // if(me.crit > 1){
            //     var baoji = data.meltsoul;
            //     var str = L('baoji') + "X" + me.crit;
            //     var txt = new ccui.Text(str, "fzcyj", 15);
            //     (function(txt) {
            //         txt.setFontName(G.defaultFNT);
            //         txt.setTextColor(cc.color("#ffffff"));
            //         X.enableOutline(txt, "#c80000", 2);
            //         // txt.setPosition(shuXingUp.width / 2, shuXingUp.height / 2);
            //         // shuXingUp.addChild(txt);
            //         txt.setPosition(me.width / 2 - 100, me.height / 2 + 50);
            //         num++;
            //         txt.setTag(888888);
            //         me.addChild(txt);
            //         var action1 = cc.moveBy(0.1, cc.p(100, 0));
            //         var action2 = cc.fadeOut(0.3);
            //         var action3 = cc.moveBy(0.3, cc.p(0, 10));
            //         var action4 = cc.spawn(action2, action3);
            //         var action5 = cc.sequence(action1, action4, cc.callFunc(() => {
            //             txt.hide(false);
            //         }));
            //         txt.runAction(action5);
            //     })(txt);
            // }
        },
        setUPani:function(data, beishu, callback){
            var me = this;
            var up = me.nodes.sm_you;
            var oldData = G.DATA.yingxiong.oldData || data;
            var sarr = [L("atk"), L("def"), L("hp"), L("speed")];
            var tisheng = "";
            var dq_hp = 0,
                dq_atk = 0;
            for (var i = 0; i < data.extbuff.meltsoul.length; i++) {
                var meltsoul = data.extbuff.meltsoul[i];
                if (meltsoul.hp) {
                    dq_hp = meltsoul.hp || 0;
                } else if (meltsoul.atk) {
                    dq_atk = meltsoul.atk || 0;
                }
            }

            if(dq_hp > me.dq_hp){
                var num = dq_hp - me.dq_hp;
                tisheng = L("hp") + "+" + num;
                up = me.nodes.sm_you;
            }else if(dq_atk > me.dq_atk){
                var num = dq_atk - me.dq_atk;
                up = me.nodes.gj_zuo;
                tisheng = L("atk") + "+" + num;
            }
            up.removeAllChildren();
            if(beishu > 1){
                G.class.ani.show({
                    json: "ani_ronghun_baoji2",
                    addTo: up,
                    x: up.width / 2,
                    y: up.height / 2 + 60,
                    repeat: false,
                    autoRemove: true,
                    onload:function(node, action){
                    }
                })
            }
            // G.class.ani.show({
            //     json: "ani_ronghun_shuxingtisheng",
            //     addTo: up,
            //     x: up.width / 2 + 10,
            //     y: up.height / 2,
            //     repeat: false,
            //     autoRemove: true,
            //     onload: function(node, action) {
            //         var text = node.getChildren()[0].getChildren()[0].getChildren()[1];
            //         text.width = 100;
            //         text.setString(tisheng);
            //         text.show();
            //     },
            //     onend: function() {
            //     }
            // });
            callback && callback();
        },
        setQiuani: function(panel, type, dq, max, id) {
            var me = this;
            var color_arr = ["bai","lv","lan","zi","cheng","hong"];
            var baifenbi = (dq / max) > 1 ? 1 : (dq / max) ;
            if (!me.qiu_ani || !me.qiu_ani[id] || me.tupo || me.qiu_ani_id != type) {
                panel.removeAllChildren();
                me.qiu_ani = [];
                G.class.ani.show({
                    json: "ani_ronghun_shui"+color_arr[type - 1],
                    addTo: panel,
                    x: panel.width / 2,
                    y: parseInt(panel.height * baifenbi),
                    repeat: true,
                    autoRemove: false,
                    onload: function(node, action) {
                        me.qiu_ani[id] = node;
                        me.qiu_ani_id = type;
                    }
                })
            } else {
                me.qiu_ani[id].setPositionY(parseInt(panel.height * dq / max));
            }
        },
        setRonghunani:function(id, callback){
            var me = this;
            var panel, ani;
            if(id == "atk"){
                panel = me.nodes.gj_dian;
                ani = "ani_ronghun_qianghua";
            }else{
                panel = me.nodes.sm_dian;
                ani = "ani_ronghun_qianghua_a";
            }
            if (!me.Ronghunani) {
                G.class.ani.show({
                    json: ani,
                    addTo: panel,
                    x: panel.width / 2,
                    y: panel.height / 2 + 10,
                    repeat: false,
                    autoRemove: true,
                    onload: function(node, action) {
                        me.Ronghunani = true;
                        callback && callback();
                    },
                    onend: function(node, action) {
                        me.Ronghunani = false;
                    }
                })
            } else {
                callback && callback();
            }

        },
        bindBTN: function () {
            var me = this;
            var btn_hide = me.nodes.btn_fanhui;
            var btn_tishi = me.nodes.btn_tishi;
            var btn_hp = me.nodes.bg_qiu2;
            var btn_atk = me.nodes.bg_qiu;
            var qiu1_xz = me.nodes.gj_dian;
            var qiu2_xz = me.nodes.sm_dian;

            btn_hide.click(function(sender, type) {
                G.frame.yingxiong_xxxx.remove();
            });

            btn_tishi.click(function(sender, type) {
                G.frame.ui_top_rh.data({
                    hid: me.hero_hid,
                    tid: me.curXbId,
                    dengjie: me.DATA.meltsoul
                }).show();
            });
            btn_hp.setTouchEnabled(true);
            btn_hp.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.qiu_type = "hp";
                    me.setToperAttr(me.qiu_type);
                    qiu1_xz.hide();
                    qiu2_xz.show();
                    me.Ronghun_show && me.setRonghun();
                }
            })
            btn_atk.setTouchEnabled(true);
            btn_atk.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.qiu_type = "atk";
                    me.setToperAttr(me.qiu_type);
                    qiu1_xz.show();
                    qiu2_xz.hide();
                    me.Ronghun_show && me.setRonghun();
                }
            })

        },
        onOpen: function () {
            var me = this;
            me.bindBTN();
        },
        onShow: function () {
            var me = this;
            // me.curXbId = G.frame.yingxiong_xxxx.curXbId;
            // me.curXbIdx = G.frame.yingxiong_xxxx.curXbIdx;
            // me.DATA = G.DATA.yingxiong.list[me.curXbId];
            // me.hero_lv = me.DATA.lv;
            // me.hero_hid = me.DATA.hid;
            // G.DATA.yingxiong.oldData = me.DATA;

            me.refreshPanel();
            me.ui.finds("token_2").setScale(2.5);
            me.ui.finds("token_2").loadTexture(G.class.getItemImg("useexp"));

            G.frame.yingxiong_xxxx.onnp('updateInfo', function (d) {
                if (G.frame.yingxiong_xxxx.getCurType() == me._type) {
                    me.curXbId = G.frame.yingxiong_xxxx.curXbId;
                    me.curXbIdx = G.frame.yingxiong_xxxx.curXbIdx;
                    me.DATA = G.DATA.yingxiong.list[me.curXbId];
                    me.hero_lv = me.DATA.lv;
                    me.hero_hid = me.DATA.hid;
                    G.DATA.yingxiong.oldData = me.DATA;
                    me.refreshPanel();
                } else {
                    me._needRefresh = true;
                }
            }, me.getViewJson());
        },
        setToperAttr: function(type){
            var me = this;

            if(type == "hp"){
                G.frame.yingxiong_xxxx.changeToperAttr({
                    attr1: {a: 'item', t: '2022'},
                    attr2: {a: 'attr', t: 'useexp'}
                });
            }else{
                G.frame.yingxiong_xxxx.changeToperAttr({
                    attr1: {a: 'item', t: '2021'},
                    attr2: {a: 'attr', t: 'useexp'}
                });
            }
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }

            G.frame.yingxiong_xxxx.changeToperAttr({
                attr2: {a: 'attr', t: 'useexp'}
            });
        },
        onRemove: function () {
            var me = this;
        },
    });

})();

;;/**
 * Created by wfq on 2018/6/2.
 */
(function () {
    //英雄-技能-详情
    var ID = 'yingxiong_skill_xq';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f6";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
            me.ui.y -= 110;
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.DATA = me.data();
            if(me.DATA.is){
                if(G.frame.yingxiong_hecheng.isShow){
                    me.nodes.panel_top.setPosition(320, cc.director.getWinSize().height / 2 + 20);
                }else if(G.frame.worldtree.isShow){
                    me.nodes.panel_top.setPosition(313, 610);
                }else{
                    me.nodes.panel_top.setPosition(313, 471);
                }

                if(G.frame.yingxiong_pinglun.isShow) {
                    me.nodes.panel_top.setPosition(313, cc.director.getWinSize().height / 2 + 410);
                }
            }else{
                me.nodes.panel_top.setPosition(313, 700);
            }
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var data = me.DATA;
            var layIco = me.nodes.panel_jn;
            var txtName = me.nodes.txt_jn_name;
            var txtIntr = me.nodes.panel_jnnr;
            var txt_h = txtIntr.height;

            layIco.setBackGroundImage('ico/skillico/' + data.ico + '.png', 0);
            txtName.setString(data.name);

            var rt = new X.bRichText({
                size: 20,
                lineHeight: 20,
                color: G.gc.COLOR.n5,
                maxWidth: txtIntr.width,
                family: G.defaultFNT,
            });
            rt.text(data.intr);
            rt.setAnchorPoint(0, 1);
            rt.setPosition( cc.p(0, txtIntr.height) );
            txtIntr.removeAllChildren();
            txtIntr.addChild(rt);


            var extHeight = rt.trueHeight() - txt_h > 0 ? rt.trueHeight() - txt_h : 0;
            me.nodes.panel_top.height += extHeight;

            ccui.helper.doLayout(me.nodes.panel_top);
        },
    });

    G.frame[ID] = new fun('ui_top2.json', ID);
})();

;;/**
 * Created by wfq on 2018/6/2.
 */
(function () {
    //英雄-星级-选择
    G.class.yingxiong_star_xuanze = X.bView.extend({
        extConf:{
            fenjie:{
                data: function (star) {
                    var data = G.DATA.yingxiong.list;
                    var keys = X.keysOfObject(data);

                    var arr = [];
                    if (star == 0) {
                        for(var i = 0; i < keys.length; i ++){
                            arr.push(keys[i]);
                        }
                    } else {
                        for (var i = 0; i < keys.length; i++) {
                            var tid = keys[i];
                            var heroData = data[tid];
                            if (heroData.zhongzu == star) {
                                arr.push(tid);
                            }
                        }
                    }

                    return arr;
                },
                sort: function (a,b) {
//                  var dataA = X.clone(G.DATA.yingxiong.list[a]);
//                  var dataB = X.clone(G.DATA.yingxiong.list[b]);
					var dataA = G.DATA.yingxiong.list[a];
                    var dataB = G.DATA.yingxiong.list[b];
                    var zz = {
                        5:0, //神圣
                        6:1, //暗影
                        4:2, //自然
                        3:4, //邪能
                        2:5, //奥术
                        1:6 //亡灵
                    };


                    //先排序，后分类
                    if (dataA.star != dataB.star) {
                        return dataA.star < dataB.star ? -1 : 1;
                    } else if (dataA.zhongzu != dataB.zhongzu) {
                        return zz[dataA.zhongzu] > zz[dataB.zhongzu] ? -1 : 1;
                    } else if (dataA.hid != dataB.hid) {
                        return dataA.hid < dataB.hid ? -1 : 1;
                    } else if (dataA.lv != dataB.lv) {
                        return dataA.lv < dataB.lv ? -1 : 1;
                    }
                }
            }
        },
        ctor: function (type) {
            var me = this;
            me._type = type;

            me._super('jisifazhen_tip_fjyx.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
            me.initUI();
        },
        bindBTN: function () {
            var me = this;
            // me.nodes.btn_1.setTitleColor(cc.color(G.gc.COLOR.n13));
            //关闭
            me.ui.finds('$btn_fanhui').click(function(sender,type){
                G.frame.yingxiong_fenjie.remove();
            });

            me.nodes.btn_bz.show();
            me.nodes.btn_bz.click(function (sender, type) {
                G.frame.help.data({
                    intr:L("TS14")
                }).show();
            });
            //预览
            me.nodes.btn_tishi.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var sData = G.frame.yingxiong_fenjie.top.selectedData;

                    if(sData.length < 1){
                        G.tip_NB.show("请放入需要分解的英雄");
                        return;
                    }

                    function showJiangli(data) {
                        G.frame.jiangliyulan.data({
                            prize:[].concat(data || []),
                        }).show();
                    }

                    if (sData.length  < 1) {
                        showJiangli();
                        return;
                    }

                    G.ajax.send('hero_fenjieyulan',sData,function(d) {
                        if(!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1) {
                            showJiangli(d.d.prize);
                        }
                    });

                }
            });
            //快速放入
            me.nodes.btn_1.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    var sData = me.selectedData;
                    if (sData.length >= 10) {
                        return;
                    }
                    me.kuaisu = true;

                    var list = me.curList;
                    var table = me.table;
                    var lockArr = me.lockArr;
                    if(!list) {
                        G.tip_NB.show(L("ZWKFJYX"));
                        return;
                    }
                    for (var i = 0; i < list.length; i++) {
                        var tid = list[i];
                        //选择过的继续
                        if (X.inArray(sData, tid)) {
                            continue;
                        }
                        if(G.DATA.yingxiong.list[tid].star < 5 && !X.inArray(lockArr,tid)){
                            var obj = table.cellByName(tid);
                            if (obj && cc.sys.isObjectValid(obj[0])) {
                                obj[0].triggerTouch(ccui.Widget.TOUCH_NOMOVE)
                            } else {
                                // me.addItem(tid);
                                if(me.selectedData.length < 10){
                                    me.selectedData.push(tid);
                                }

                            }
                        }
                        if (me.selectedData.length >= 10) {
                            break;
                        }

                    }
                    if(me.selectedData.length < 1) {
                        G.tip_NB.show(L("ZWKFJSXYX"));
                    }
                }
            });
            //分解
            if(!me.nodes.btn_2.data) me.nodes.btn_2.data = [];
            me.nodes.btn_2.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    //空判断
                    var sData = me.selectedData;
                    if (sData.length < 1) {
                        G.tip_NB.show(L('YX_FENJIE_TIP_1'));
                        return;
                    }
                    //高级英雄判断
                    var highStar = 0;
                    for (var i = 0; i < sData.length; i++) {
                        var tid = sData[i];
                        var heroData = G.DATA.yingxiong.list[tid];
                        if (heroData.star > highStar) {
                            highStar = heroData.star;
                        }
                    }
                    if (highStar >= 4) {
                        var str = X.STR(L('YX_FENJIE_TIP_2'),highStar);
                        G.frame.alert.data({
                            sizeType:3,
                            cancelCall:null,
                            okCall: function () {
                                me._resolve(sData);
                            },
                            richText:str
                        }).show();
                    }else{
                        me._resolve(sData);
                    }
                    G.frame.yingxiong_fenjie.bottom.setyxsl();
                }
            });
        },
        _resolve:function (sData) {
            var me = this;
            G.ajax.send('hero_fenjie',sData,function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    X.audio.playEffect("sound/yingxiongfenjie.mp3");
                    me.nodes.btn_2.setTouchEnabled(false);
                    G.frame.yingxiong_fenjie.men.playWithCallback("wait", false, function () {
                        G.frame.yingxiong_fenjie.men.play("in", true);
                        G.frame.jiangli.data({
                            prize:[].concat(d.d.prize),
                            state: "fjlq"
                        }).show();
                        me.nodes.btn_2.setTouchEnabled(true);
                    });
                    // G.tip_NB.show(L('FENJIE') + L('SUCCESS'));

                    G.frame.yingxiong_fenjie.setContents();
                }else{
                    X.audio.playEffect("sound/dianji.mp3", false);
                }
            },true);
        },
        onOpen: function () {
            var me = this;

            me.bindBTN();
            me.createMenu();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.selectedData = [];
            var type = me.curType || 0;
            me._menus[type].triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        initUI:function(){
            var me = this;

        },
        createMenu: function () {
            var me = this;

            var view = me;
            me._menus = [];
            var listview = view.nodes.listview_zz;
            listview.removeAllChildren();
            view.nodes.list_ico.hide();

            for (var i = 0; i < 7; i++) {
                var list_ico = view.nodes.list_ico.clone();
                X.autoInitUI(list_ico);
                list_ico.nodes.panel_zz.setTouchEnabled(false);
                list_ico.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (i + 1) + '.png', 1);
                list_ico.show();

                list_ico.data = i;
                list_ico.setTouchEnabled(true);

                list_ico.click(function(sender, type){
                    for(var j=0;j<me._menus.length;j++){
                        var node = me._menus[j];
                        var img = 'img/public/ico/ico_zz' + (node.data + 1) + '.png';
                        if(node.data == sender.data){
                            if(me.effect) X.audio.playEffect("sound/dianji.mp3", false);
                            me.effect = true;
                            me.curType = sender.data;
                            me.fmtItemList();
                            var img = 'img/public/ico/ico_zz' + (node.data + 1) + '_g.png';
                            if(sender.ani) {
                                sender.ani.show();
                            }else {
                                G.class.ani.show({
                                    json: "ani_guangbiaoqiehuan",
                                    addTo: sender,
                                    x: sender.width / 2,
                                    y: sender.height / 2,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node) {
                                        sender.ani = node;
                                    }
                                })
                            }
                        }else{
                            //node.nodes.img_yuan_xz.hide();
                            if(node.ani) node.ani.hide();
                        }
                        node.nodes.panel_zz.setBackGroundImage(img,1);
                    }
                });

                me._menus.push(list_ico);
                list_ico.show();
            }
            X.center(me._menus, listview, {

            })
        },
        fmtItemList: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();
			
            var d = me.extConf[me._type].data(me.curType);

            me.setEquipNum(d);
            if (d.length < 1) {
                cc.sys.isObjectValid(me.ui.finds('img_zwnr')) && me.ui.finds('img_zwnr').show();
                return;
            } else {
                cc.sys.isObjectValid(me.ui.finds('img_zwnr')) && me.ui.finds('img_zwnr').hide();
            }
			
            var jjcLockData = G.frame.yingxiong.getLockHeros();
            var heroData = G.DATA.yingxiong.list;

            //对材料分类，分类依据：加锁与未加锁
            var canUseArr = [],
                lockArr = [];
            for (var i = 0; i < d.length; i++) {
                var tid = d[i];
                var data = heroData[tid];
                if (X.inArray(jjcLockData,tid) || data.islock) {
                    lockArr.push(tid);
                } else {
                    canUseArr.push(tid);
                }
            }
			
			//cc.log('canUseArr',canUseArr,me.extConf[me._type].sort); 
			//cc.log('lockArr',lockArr); 
			
            canUseArr.sort(me.extConf[me._type].sort);

            lockArr.sort(me.extConf[me._type].sort);

            me.lockArr = lockArr;

            var list = me.curList = [].concat(canUseArr,lockArr);
			
            var table = me.table = new X.TableView(scrollview,me.nodes.list, 5,function (ui, data) {
                me.setItem(ui, data);
            },null,null,1,5);
            table.setData(list);
            table.reloadDataWithScroll(true);
            scrollview.getChildren()[0].getChildren()[0]._setAnchorX(-0.001);
        },
        setItem: function (ui, data) {
            var me = this;

            ui.setName(data);
            X.autoInitUI(ui);

            var heroData = G.DATA.yingxiong.list[data];
            // ui.setName(heroData.hid);

            if (cc.isNode(ui.nodes.panel_tx)) {
                var widget = G.class.shero(heroData);
                widget.setName('widget');
                widget.setAnchorPoint(0.5,1);
                widget.setPosition(cc.p( ui.nodes.panel_tx.width*0.5, ui.nodes.panel_tx.height ));
                widget.setScale(.9);
                ui.nodes.panel_tx.removeAllChildren();
                ui.nodes.panel_tx.addChild(widget);
            }

            // img_suo$
            // img_gou$
            var imgSuo = ui.nodes.img_suo;
            // var imgGou = ui.nodes.img_gou;
            //
            // imgGou.hide();
            imgSuo.hide();
            var a = G.DATA.yingxiong.list[data].islock;
            var b = X.inArray(me.lockArr,data);
            if (X.inArray(me.lockArr,data) || G.DATA.yingxiong.list[data].islock || heroData.star >= 8) {
                imgSuo.show();
                widget.setEnabled(false);
            }

            // if (X.inArray(me.selectedData,data)) {
            //     imgGou.show();
            // }
            if (X.inArray(me.selectedData,data)) {
                me.handleHeros(me.curId);
                widget.setGou(true);
                // widget.setHighLight(false);
            }

            ui.data = data;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    //已在竞技场上阵，不可选择
                    if (X.inArray(G.frame.yingxiong.getLockHeros(),sender.data)) {
                        G.tip_NB.show(X.STR(L('YX_X_LOACKING'),L('jingjichang')));
                        return;
                    }

                    if(heroData.star >= 8) {
                        G.tip_NB.show(L("XJWFFJ"));
                        return;
                    }

                    //已被锁定，不可选择
                    if (G.DATA.yingxiong.list[sender.data].islock) {
                        G.tip_NB.show(L('YX_LOCKING'));
                        return;
                    }

                    if (X.inArray(me.selectedData, sender.data)) {
                        sender.finds('widget').setGou(false);
                        me.selectedData.splice(X.arrayFind(me.selectedData,sender.data),1);
                        // G.frame.yingxiong_fenjie.bottom.removeItem(sender.data);
                    } else {
                        if (me.selectedData.length >= G.frame.yingxiong_fenjie.bottom.extConf.maxnum) {
                            if(me.kuaisu){
                                me.kuaisu = false;
                            }else{
                                G.tip_NB.show(L('YX_SX_XZ_FULL'));
                            }
                            return;
                        }
                        me.selectedData.push(sender.data);
                        sender.finds('widget').setGou(true);
                        // G.frame.yingxiong_fenjie.bottom.addItem(sender.data);
                    }
                    G.frame.yingxiong_fenjie.bottom.setyxsl();
                }
            });
            ui.show();
        },
        handleHeros: function (id) {
            var me = this;

            var parent = me.table._table.tableView.getChildren()[0];
            for (var i = 0; i < parent.getChildren().length; i++) {
                var children = parent.getChildren()[i];
                for (var j = 0; j < children.getChildren().length; j++) {
                    var child = children.getChildren()[j];
                    cc.isNode(child.finds('wid')) && child.finds('wid').setGou(child.data == id);
                }
            }
        },
        // removeGou: function (tid) {
        //     var me = this;
        //
        //     var children = me.table.getAllChildren();
        //     for (var i = 0; i < children.length; i++) {
        //         var child = children[i];
        //         if (child.isVisible() && child.data == tid) {
        //             child.nodes.img_gou.hide();
        //             break;
        //         }
        //     }
        // },
        //装备数量
        setEquipNum: function (d) {
            var me = this;

            var allNum = G.DATA.heroCell.maxnum;
            var keys = X.keysOfObject(d);

            me.nodes.txt_sl.setString(keys.length + '/' + allNum);
        }
    });

})();
;;/**
 * Created by LYF on 2018/6/2.
 */
(function () {
    //英雄-天命详情
    var ID = 'yingxiong_tianming';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });

            if(G.frame.yingxiong_xxxx.tongyu.isRecevie) {
                me.nodes.btn_rcjl.setTouchEnabled(false);
                me.nodes.btn_rcjl.setBright(false);
                me.nodes.btn_rcjl.setTitleText(L("YLQ"));
                me.nodes.btn_rcjl.setTitleColor(cc.color("#6c6c6c"));
            }
            me.nodes.btn_rcjl.click(function (sender) {
                me.ajax("hero_gettmprize", [], function (str, data) {
                    if(data.s == 1) {
                        G.frame.jiangli.data({
                            prize: data.d.prize
                        }).show();
                        sender.setTouchEnabled(false);
                        sender.setBright(false);
                        sender.setTitleText(L("YLQ"));
                        sender.setTitleColor(cc.color("#6c6c6c"));
                        G.frame.yingxiong_xxxx.tongyu.isRecevie = true;
                        G.hongdian.getData("destiny", 1, function () {
                            G.frame.yingxiong.checkRedPoint();
                            G.frame.yingxiong_xxxx.tongyu.checkRedPoint();
                        })
                    }
                })
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            cc.enableScrollBar(me.nodes.listview);
            me.nodes.listview.setTouchEnabled(true);
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var conf = G.class.tongyu.get().base.destiny;

            for (var i = 0; i < conf.length; i ++) {
                me.nodes.listview.pushBackCustomItem(me.setItem(me.nodes.list.clone(), conf[i], i));
            }
        },
        setItem: function (ui, data, i) {
            X.autoInitUI(ui);

            ui.nodes.txt_name.setString(data[1].title + "(" + L("TMD") + data[0] + ")");
            ui.nodes.txt_jysz.setString(data[1].prize[0].n);
            ui.nodes.txt_gj.setString(L("QTGJ") + "+" + (data[1].buff[1].atkpro / 10) + "%");
            ui.nodes.txt_sm.setString(L("QTSM") + "+" + (data[1].buff[0].hppro / 10) + "%");
            ui.finds("txt_jl_0").setTextColor(cc.color("#F88826"));
            if(data[1].avater) {
                ui.finds("txt_jl_0").setString(L("HDZSTX") + data[1].head);
            }

            if((G.frame.yingxiong_xxxx.tongyu.index || G.frame.yingxiong_xxxx.tongyu.index == 0) && G.frame.yingxiong_xxxx.tongyu.index == i) {
                ui.nodes.img_dqzt.show();
                ui.nodes.img_bq.show();
                ui.nodes.txt_name.setTextColor(cc.color("#30ff01"));
                ui.nodes.txt_jl.setTextColor(cc.color("#30ff01"));
                ui.nodes.txt_gj.setTextColor(cc.color("#30ff01"));
                ui.nodes.txt_sm.setTextColor(cc.color("#30ff01"));
                ui.nodes.txt_jy.setTextColor(cc.color("#30ff01"));
                ui.nodes.txt_jysz.setTextColor(cc.color("#30ff01"));
            }

            if(!G.frame.yingxiong_xxxx.tongyu.index || G.frame.yingxiong_xxxx.tongyu.index < i) {
                ui.nodes.txt_name.setTextColor(cc.color("#615547"));
                ui.nodes.txt_jl.setTextColor(cc.color("#615547"));
                ui.nodes.txt_gj.setTextColor(cc.color("#615547"));
                ui.nodes.txt_sm.setTextColor(cc.color("#615547"));
                ui.nodes.txt_jy.setTextColor(cc.color("#615547"));
                ui.nodes.txt_jysz.setTextColor(cc.color("#615547"));
                ui.nodes.img_gj.setBackGroundImage("img/public/ico_ty_gongj2.png", 1);
                ui.nodes.img_sm.setBackGroundImage("img/public/ico_ty_shengm2.png", 1);
                ui.nodes.img_jy.setBackGroundImage("img/public/ico_ty_jingy2.png", 1);
            } else {
                ui.nodes.img_gj.setBackGroundImage("img/public/ico_ty_gongj1.png", 1);
                ui.nodes.img_sm.setBackGroundImage("img/public/ico_ty_shengm1.png", 1);
                ui.nodes.img_jy.setBackGroundImage("img/public/ico_ty_jingy1.png", 1);
            }

            ui.show();
            return ui;
        }
    });
    G.frame[ID] = new fun('ui_top9.json', ID);
})();
;;/**
 * Created by zhangming on 2018-05-03
 */
(function () {
    //英雄信息-进阶界面
    var ID = 'yingxiong_tip_jj';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        bindUI: function () {
            var me = this;
            setPanelTitle(me.nodes.tip_title, L('UI_TITLE_JINJIE'));

            me.nodes.mask.click(function(){
                me.remove();
            });

            if(!me.nodes.btn_xjj.data) me.nodes.btn_xjj.data = [];
            me.nodes.btn_xjj.click(function(){
                G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[me.curXbId]));

                me.ajax('hero_jinjie',[me.curXbId], function (s, rd) {
                    if (rd.s == 1){
                        X.audio.playEffect("sound/yingxiongjinjie.mp3");
                        var panel = G.frame.yingxiong_xxxx._rwPanel.nodes.panel_rw;
                        G.class.ani.show({
                            json: "ani_jinjieqianghua",
                            addTo: panel,
                            x: panel.width / 2,
                            y: panel.height / 2 - 100,
                            repeat: false,
                            autoRemove: true
                        });
                        G.frame.yingxiong_xxxx.emit('updateInfo');
                        var heroData = G.DATA.yingxiong.list[me.curXbId];
                        if (heroData.dengjielv == 6) {
                            G.frame.yingxiong_xxxx.topMenu.addItem(G.class.menu.get('yingxiongxinxi')[2]);
                        }
                        if(me.isSkill) G.frame.yingxiong_xxxx.rw.palySkillAni();
                        G.frame.yingxiong_xxxx.updateInfo();
                        G.frame.yingxiong_xxxx.qh.playJjAni();
                        me.remove();
                    }else{
                        X.audio.playEffect("sound/dianji.mp3", false);
                    }
                },true);
            }, 1500);
        },
        onOpen: function () {
            var me = this;

            me.bindUI();
        },
        onShow: function () {
            var me = this;
            me.curXbId = me.data().tid;

            G.frame.yingxiong_xxxx.changeToperAttr({
                attr2: {a: 'item', t: '2004'}
            });

            G.frame.yingxiong_xxxx.getNextBuff('dengjielv', me.curXbId, function(buff){
                me.setContents(buff);
            });
        },
        onRemove: function () {
            var me = this;

            G.frame.yingxiong_xxxx.changeToperAttr({
                attr2: {a: 'attr', t: 'useexp'}
            });
        },
        setContents:function(buff) {
            var me = this;
            var view = me.ui;
            var data = G.DATA.yingxiong.list[me.curXbId];
            var need = G.class.herocom.getHeroJinJieUp(data.dengjielv).need;

            X.render({
                txt_sl1: X.fmtValue(need[0].n),
                txt_sl2: X.fmtValue(need[1].n),
            }, me.nodes);

            if(G.class.getOwnNum(need[0].t,need[0].a) < need[0].n){
                me.nodes.txt_sl1.setTextColor(cc.color(G.gc.COLOR.n16));
                X.enableOutline(me.nodes.txt_sl1,cc.color('#740000'),1);
            }
            if(G.class.getOwnNum(need[1].t,need[1].a) < need[1].n){
                me.nodes.txt_sl2.setTextColor(cc.color(G.gc.COLOR.n16));
                X.enableOutline(me.nodes.txt_sl2,cc.color('#740000'),1);
            }

            X.setHeroModel({
                parent: me.nodes.xjinjie_rw,
                data: data
            });

            me.ui.finds("Image_8").loadTexture(G.class.getItemIco(need[0].t), 1);
            me.ui.finds("Image_9").loadTexture(G.class.getItemIco(need[1].t), 1);

            var str = "<font node=1></font> " + data.name;
            var img = new ccui.ImageView('img/public/ico/ico_zz' + (data.zhongzu + 1) + '.png', 1);
            img.setScale(.6);
            var rh = new X.bRichText({
                size: 20,
                maxWidth: me.nodes.xjinjie_name.width,
                lineHeight: 32,
                color: "#ffffff",
                family: G.defaultFNT,
                eachText: function (node) {
                    X.enableOutline(node, "#000000", 2);
                }
            });
            rh.text(str, [img]);
            rh.setAnchorPoint(0.5, 0.5);
            rh.setPosition(me.nodes.xjinjie_name.width / 2, 35);
            me.nodes.xjinjie_name.addChild(rh);

            var setItem = function(target, obj, color){
                var arr = ["lvmax", "atk", "hp", "speed"];
                G.class.ui_pinji(target.children[1], obj.dengjielv, .8, obj.star);

                for(var i = 0; i < arr.length; i ++) {
                    var lay = target.children[i + 2];
                    var str = X.STR(("<font color=#804326>{1}：</font>" + obj[arr[i]]), L(arr[i]));
                    var rh = new X.bRichText({
                        size: 20,
                        color: color,
                        family: G.defaultFNT,
                        maxWidth: lay.width,
                        lineHeight: 32,
                    });
                    rh.text(str);
                    rh.setAnchorPoint(0, 0.5);
                    rh.setPosition(0, lay.height / 2);
                    lay.addChild(rh);
                }
            };

            var obj = buff.buff[me.curXbId];

            setItem(me.ui.finds("bg_xjjdi"), {
                lvmax: G.class.herocom.getMaxlv(data.hid, data.dengjielv),
                atk: data.atk,
                hp: data.hp,
                speed: data.speed,
                star: data.star,
                dengjielv: data.dengjielv
            }, "#804326");

            setItem(me.ui.finds("bg_xjjdi1"), {
                lvmax: G.class.herocom.getMaxlv(data.hid, data.dengjielv + 1),
                atk: obj.atk,
                hp: obj.hp,
                speed: obj.speed,
                star: data.star,
                dengjielv: data.dengjielv + 1
            }, "#249714");

            me.showNewSkill();
        },
        showNewSkill: function(){
            var me = this;
            var data = G.DATA.yingxiong.list[me.curXbId];
            var conf = G.class.hero.getById(data.hid);
            var lay = me.ui.finds("Panel_21");

            var idx = X.arrayFind(conf.bdskillopendjlv, data.dengjielv+1);
            if( idx > -1 ){

                var skill = G.class.hero.getSkillOne(idx+1, data.hid, data.dengjielv);
                var p = G.class.ui_skill_list(skill, true, null, null, data);
                p.setAnchorPoint(0.5,0.5);
                p.setPosition(cc.p( lay.width*0.5, lay.height*0.5 ));
                p.ico_jn.setBright(true);
                lay.addChild(p);
                me.isSkill = true;
            }else{
                me.nodes.jinjie_bg.hide();
            }
        },
    });

    G.frame[ID] = new fun('ui_xinjingjie.json', ID);
})();
;;/**
 * Created by LYF on 2018/11/7.
 */
(function () {
    //统御详情
    var ID = 'yingxiong_tongyu_xq';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            });

            me.nodes.btn_tity.click(function () {
                if(!me.isMoney) {
                    G.tip_NB.show(L("JB") + L("BUZU"));
                    return;
                }
                var arr = [];
                for (var i in me.selectedData) {
                    for (var j in me.selectedData[i]) {
                        arr.push(me.selectedData[i][j]);
                    }
                }
                me.ajax("hero_tyupgrade", [me.DATA.data.maxlv > 1 ? me.DATA.conf[1].hid : me.DATA.conf[0].hid, arr], function (str, data) {
                    if(data.s == 1) {
                        G.frame.jiangli.once("hide", function () {
                            G.class.ani.show({
                                json: "ani_tongyu_shengji",
                                addTo: me.nodes.panel_kuangtx,
                                x: me.nodes.panel_kuangtx.width / 2,
                                y: me.nodes.panel_kuangtx.height / 2,
                                repeat: false,
                                autoRemove: true,
                                onload: function () {
                                    G.class.ani.show({
                                        json: "ani_tongyu_shengji2",
                                        addTo: me.nodes.btn_tity,
                                        x: me.nodes.btn_tity.width / 2,
                                        y: me.nodes.btn_tity.height / 2,
                                        repeat: false,
                                        autoRemove: true,
                                        onload: function () {
                                            me.DATA.data = data.d.data;
                                            me.selectedData = {};
                                            me.setInfo();
                                            G.frame.yingxiong_xxxx.tongyu.DATA.data[me.DATA.id] = data.d.data;
                                            G.frame.yingxiong_xxxx.tongyu.setTianMing();
                                            G.frame.yingxiong_xxxx.tongyu.setItem(G.frame.yingxiong_xxxx.tongyu.select, me.DATA.id);
                                            G.hongdian.getData("destiny", 1, function () {
                                                G.frame.yingxiong.checkRedPoint();
                                                G.frame.yingxiong_xxxx.tongyu.checkRedPoint();
                                            })
                                        }
                                    })
                                }
                            })
                        }).data({
                            prize: data.d.prize
                        }).show();
                    }
                })
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.DATA = me.data();
            me.maxlv = me.DATA.conf[1].tenstarmodel ? 10 - 4 : 9 - 4;
            me.selectedData = {};
            me.ui.finds("Image_1").loadTexture("img/bg/tongyu_kapaidi.png");
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var str = X.STR("<font node=1></font> {1}", me.DATA.conf[0].name);
            var img = new ccui.ImageView('img/public/ico/ico_zz' + (me.DATA.conf[0].zhongzu + 1) + '_s.png', 1);
            var rh = new X.bRichText({
                size: 18,
                lineHeight: 32,
                maxWidth: me.nodes.ico_zy.width,
                color: "#ffffff",
                family: G.defaultFNT,
                eachText:function (node) {
                    X.enableOutline(node, "#000000", 1);
                }
            });
            rh.text(str, [img]);
            rh.setAnchorPoint(0.5, 0.5);
            rh.setPosition(me.nodes.ico_zy.width / 2, me.nodes.ico_zy.height / 2);
            me.nodes.ico_zy.addChild(rh);

            
            X.setModel({
                parent: me.nodes.ty_rw,
                data: {
                    hid: me.DATA.model
                },
                scale: .94
            });

            G.class.ani.show({
                json: G.class.herocom.getZhongzuById(me.DATA.conf[0].zhongzu).ani,
                addTo: me.nodes.panel_dh,
                x: me.nodes.panel_dh.width / 2 - 5,
                y: 330,
                repeat: true,
                autoRemove: false
            });

            G.class.ui_star(me.nodes.panel_xx, me.DATA.data.maxlv + 4, 0.8, null, true);

            me.setInfo();
        },
        setInfo: function () {
            var me = this;
            var extneed = [];
            var conf = G.class.tongyu.get().base.need[me.DATA.data.mylv + 1];

            for(var i in conf) {
                if(i == "item") continue;
                for (var j in conf[i]) {
                    extneed.push(conf[i][j]);
                }
            }

            me.nodes.txt_jb.setString(L("TY") + me.DATA.data.mylv + "/" + me.maxlv);

            if(me.DATA.data.mylv >= me.maxlv) {
                me.nodes.txt_zuo.hide();
                me.nodes.txt_you.hide();
                me.nodes.ico_tmd.hide();
                me.nodes.txt_tj.hide();
                me.nodes.txt_dj.hide();
                me.nodes.img_mang.show();
                me.ui.finds("Image_4").hide();
                me.ui.finds("Image_2").hide();
                me.nodes.panel_ico.hide();
                me.nodes.btn_tity.hide();
                me.nodes.huobi_di.hide();
            }else {
                me.nodes.txt_zuo.setString(X.STR(L("SZXJ"), me.DATA.data.mylv + 1));
                me.nodes.txt_you.setString("+" + G.class.tongyu.get().base.tmprize[me.DATA.data.mylv + 1][0].n);
                me.nodes.txt_tj.setString(X.STR(L("SJTJ"), me.DATA.data.mylv + 5));
                me.nodes.txt_dj.setString("(" + (me.DATA.data.maxlv + 4) + "/" + (me.DATA.data.mylv + 5) + ")");
                me.nodes.btn_tity.show();
                me.nodes.txt_dj.setTextColor(cc.color(me.DATA.data.mylv + 5 > me.DATA.data.maxlv + 4 ? "#c80000" : "#69A112"));
                me.isMoney = P.gud[conf.item[0].t] < conf.item[0].n ? false : true;
                me.nodes.ico_jb.setBackGroundImage(G.class.getItemIco(conf.item[0].t), 1);
                me.ui.finds("Text_1").setString(conf.item[0].n);
                me.ui.finds("Text_1").setTextColor(cc.color(!me.isMoney ? "#ff4e4e" : "#ffffff"));
                !me.isMoney && X.enableOutline(me.ui.finds("Text_1"),cc.color("#740000"),1);
                me.nodes.panel_ico.removeAllChildren();

                var autoLayout = new X.extendLayout(me.nodes.panel_ico, extneed.length);
                autoLayout.setDelegate({
                    cellCount: function () {
                        return 3;
                    },
                    nodeWidth: function () {
                        return 110*0.8;
                    },
                    rowHeight: function () {
                        return 110*0.8;
                    },
                    itemAtIndex: function (index) {
                        var need = extneed[index];
                        var needNum = need.num;

                        need.showNum = true;

                        var widget = G.class.new_shero_extneed(need, me.DATA.conf[0]);
                        widget.setScale(.8);
                        widget.setEnabled(false);
                        widget.setTouchEnabled(true);
                        setTextWithColor(widget.txt_num, X.STR('{1}/{2}', 0, needNum), G.gc.COLOR['n16']);
                        X.enableOutline(widget.txt_num,cc.color('#740000'),1);
                        widget.txt_num.setPosition(cc.p(widget.width / 2 ,widget.txt_num.height * (-0.5)));
                        widget.index = index;
                        widget.need = need;
                        widget.click(function (sender) {
                            var callback = function (d) {
                                G.frame.yingxiong_tongyu_xq.selectedData[sender.index] = d;
                                var hav = d.length;
                                setTextWithColor(sender.txt_num, X.STR('{1}/{2}', hav, sender.need.num), G.gc.COLOR[hav >= sender.need.num ? 1 : 'n16']);
                                if(hav < sender.need.num){
                                    X.enableOutline(sender.txt_num,cc.color('#740000'),1);
                                }else{
                                    X.disableOutline(sender.txt_num);
                                    X.enableOutline(sender.txt_num,cc.color('#2a1c0f'),0.1)
                                }
                                sender.setEnabled(hav >= sender.need.num);
                            };
                            G.frame.ui_tip_xuanze.data({
                                need:sender.need,
                                idx:sender.index,
                                hid: me.DATA.conf[0].hid,
                                IdxData:G.frame.yingxiong_tongyu_xq.selectedData[sender.index],
                                selectedData: G.frame.yingxiong_tongyu_xq.selectedData,
                                callback:callback
                            }).show();
                        });
                        return widget;
                    }
                });
                autoLayout.layout();
            }
        }
    });
    G.frame[ID] = new fun('tongyu_tip.json', ID);
})();
;;/**
 * Created by LYF on 2018/11/6.
 */
(function () {
    //英雄-统御
    G.class.yingxiong_tonyu = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('yingxiong.json');
            G.frame.yingxiong_xxxx.tongyu = me;
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me._menus[0].triggerTouch(ccui.Widget.TOUCH_ENDED);
                me.isRecevie = me.DATA.destinyprize ? true : false;
            });
        },
        checkRedPoint: function() {
            var me = this;
            if(G.DATA.hongdian.destiny) {
                G.setNewIcoImg(me.nodes.btn_jl, .9);
            }else G.removeNewIco(me.nodes.btn_jl);
        },
        setContents: function () {
            var me = this;

        },
        bindBTN: function () {
            var me = this;

            me.nodes.btn_jl.click(function (sender) {
                G.frame.yingxiong_tianming.show();
            });
        },
        onOpen: function () {
            var me = this;
            me.bindBTN();
            me.nodes.scrollview1.show();
            me.nodes.scrollview.hide();
            me.nodes.ty_sx.show();
            cc.enableScrollBar(me.nodes.scrollview1);
        },
        getData: function(callback) {
            var me = this;

            me.ajax("hero_gettongyu", [], function (str, data) {
                if(data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            })
        },
        onShow: function () {
            var me = this;

            me.createMenu();
            me.setTianMing();
            me.refreshPanel();
            me.checkRedPoint();
        },
        onRemove: function () {
            var me = this;
        },
        createMenu: function(){
            var me = this;
            me._menus = [];

            //图标中，1指的是全部
            for(var i=0;i<7;i++){
                var panel = me.nodes['panel_' + (i+1)];

                var list_ico = me.nodes.list_ico.clone();
                X.autoInitUI(list_ico);
                list_ico.nodes.panel_zz.setTouchEnabled(false);
                list_ico.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (i + 1) + '.png', 1);
                list_ico.show();
                list_ico.setAnchorPoint(0.5,0.5);
                list_ico.setPosition(cc.p(panel.width*0.5, panel.height*0.5 + 2));

                list_ico.data = i;
                list_ico.setTouchEnabled(true);

                list_ico.click(function(sender, type){
                    for(var j=0;j<me._menus.length;j++){
                        var node = me._menus[j];
                        var img = 'img/public/ico/ico_zz' + (node.data + 1) + '.png';
                        if(node.data == sender.data){
                            if(me.curType && me.curType == sender.data) return;
                            if(me.effect) X.audio.playEffect("sound/dianji.mp3", false);
                            me.effect = true;
                            me.curType = sender.data;
                            me.fmtItemList();
                            img = 'img/public/ico/ico_zz' + (node.data + 1) + '_g.png';
                            if(sender.ani) {
                                sender.ani.show();
                            }else {
                                G.class.ani.show({
                                    json: "ani_guangbiaoqiehuan",
                                    addTo: sender,
                                    x: sender.width / 2,
                                    y: sender.height / 2,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node) {
                                        sender.ani = node;

                                    }
                                })
                            }
                        }else{
                            if(node.ani) node.ani.hide();
                        }
                        node.nodes.panel_zz.setBackGroundImage(img,1);
                    }
                });
                me._menus.push(list_ico);
                panel.addChild(list_ico);
            }
        },
        getFilterData: function(type) {
            var me = this;

            if(type == 0) {
                return G.class.tongyu.get().base.herozu;
            }else {
                return G.class.tongyu.getHeroByZhongzu(type);
            }
        },
        fmtItemList: function () {
            var me = this;
            var data = me.getFilterData(me.curType);

            if(!me.table) {
                var table = me.table = new X.TableView(me.nodes.scrollview1, me.nodes.list_ty, 3, function (ui, data) {
                    me.setItem(ui, data);
                }, null, null, 12, 3);
                table.setData(data);
                table.reloadDataWithScroll(true);
            }else {
                me.table.setData(data);
                me.table.reloadDataWithScroll(true);
            }
        },
        setItem: function (ui, data) {
            X.autoInitUI(ui);
            var me = this;
            var dd = me.DATA.data[data];
            var active = dd ? true : false;
            var conf = G.class.tongyu.getHerosByID(data);
            var model;

            if(dd) {
                if(dd.maxlv == 6) {
                    model = conf[1].tenstarmodel;
                }else if(dd.maxlv != 1){
                    model = conf[1].model;
                }else {
                    model = conf[0].model;
                }
            }else {
                model = conf[0].model;
            }

            if(dd && dd.mylv == dd.maxlv) {
                ui.nodes.img_kpy.hide();
            }else {
                ui.nodes.img_kpy.setVisible(active);
            }
            ui.nodes.ico_zy.loadTextureNormal('img/public/ico/ico_zz' + (conf[0].zhongzu + 1) + '_s.png', 1);
            ui.nodes.ty_ysdi.loadTextureNormal("ico/ghbossico/zhongzu_" + conf[0].zhongzu + ".png");
            ui.nodes.ty_rw.loadTextureNormal("ico/heroicon/" + G.class.fmtItemICON(model) + ".png");
            ui.nodes.ty_bq.setVisible(active);
            ui.nodes.ico_zy.setBright(active);
            ui.nodes.ty_ysdi.setBright(active);
            ui.nodes.ty_rw.setBright(active);
            ui.nodes.bg_kuang.setBright(active);

            if(dd) {
                ui.nodes.txt_ty.setString(L("TY") + dd.mylv + "/" + (conf[1].tenstarmodel ? 10 - 4 : 9 - 4));
            }

            ui.model = model;
            ui.id = data;
            ui.data = dd;
            ui.conf = conf;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_NOMOVE) {
                    if(!sender.data) {
                        G.tip_NB.show(L("DQYXWJH"));
                        return;
                    }
                    var obj = {
                        model: sender.model,
                        id: sender.id,
                        data: sender.data,
                        conf: sender.conf
                    };
                    me.select = sender;
                    G.frame.yingxiong_tongyu_xq.data(obj).show();
                }
            });
            ui.show();
        },
        setTianMing: function () {
            var me = this;
            var hppro = 0;
            var atkpro = 0;
            var str = L("ZWDW");
            var num = P.gud.destiny || 0;
            var conf = G.class.tongyu.get().base.destiny;

            me.nodes.txt_tm.setString(num);

            for (var i = 0; i < conf.length; i ++) {
                var con = conf[i];
                if(num >= con[0] && (!conf[i + 1] || num < conf[i + 1][0])) {
                    str = con[1].title;
                    hppro = con[1].buff[0].hppro;
                    atkpro = con[1].buff[1].atkpro;
                    me.index = i;
                    break;
                }
            }

            me.nodes.txt_dw.setString(str);
            me.nodes.txt_gj.setString("+" + (atkpro / 10) + "%");
            me.nodes.txt_sm.setString("+" + (hppro / 10) + "%");
        }
    });
})();
;;/**
 * Created by wfq on 2018/5/22.
 */
(function () {
    //
    G.class.yingxiong_tujian_xq = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('yingxiong_yxqh.json');
        },
        refreshPanel: function () {
            var me = this;

            me.curXbId = G.frame.yingxiong_xxxx.curXbId;
            me.curXbIdx = G.frame.yingxiong_xxxx.curXbIdx;

            me.setContents();
        },
        bindBTN: function () {
            var me = this;

            // 感叹号提示
            me.nodes.btn_tishi.click(function(){
                G.frame.ui_top_xq.data({tid:me.curXbId}).show();
            });
            // 关闭
            me.ui.finds('$btn_fanhui').click(function(sender,type){
                G.frame.yingxiong_xxxx.remove();
            });
        },
        onOpen: function () {
            var me = this;

            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();

            
            G.frame.yingxiong_xxxx.onnp('updateInfo', function (d) {
                me.refreshPanel();
            }, me.getViewJson());
        },
        onRemove: function () {
            var me = this;
        },
        onNodeShow: function () {
            var me = this;

            // me.refreshPanel();
        },
        setContents: function () {
            var me = this;
            var pro;
            var arr = me.curXbId.split('_');
            var data = X.clone(G.class.hero.getById(arr[0]));
            if (arr.length > 1) {
                var starup = G.class.herostarup.getByIdAndDengjie(arr[0],'10');
                data.lv = starup.maxlv;
                data.dengjielv = '10';
                pro = G.class.herostarup.getByIdAndDengjie(arr[0], data.dengjielv);
            } else {
                data.dengjielv = data.star;
                data.lv = G.class.herocom.getMaxlv(arr[0], data.dengjielv);
                pro = G.class.herocom.getHeroJinJieUp(data.dengjielv);
            }
            if(!pro){
                pro = {"atkpro":2.2,"defpro":1,"hppro":2.2,"speedpro":1.6};
            }
            // 品级
            G.class.ui_pinji(me.nodes.panel_pinjie, data.dengjielv, 0.8 ,data.star);

            // 等级
            me.nodes.panel_xh.hide();
            me.nodes.img_zgdj.show();

            var herogrowConf = G.class.herogrow.getById(arr[0]);
            var buffArr = ['atk','def','hp','speed'];
            for (var i = 0; i < buffArr.length; i++) {
                var buffType = buffArr[i];
                data[buffType] = herogrowConf[buffType];
            }
            for (var i = 0; i < buffArr.length; i++) {
                var buffType = buffArr[i];
                data[buffType] = Math.floor((data[buffType] + (data.lv - 1) * herogrowConf[buffType + "_grow"]) * pro[buffType + "pro"]);
            }
            // 属性
            me.render({
                txt_sx1:data.atk, // 攻击
                txt_sx2:data.def, // 防御
                txt_sx3:data.hp, // 生命
                txt_sx4:data.speed, // 速度
            });

            me.nodes.txt_djz.setString(X.STR('{1}/{2}',data.lv, G.class.herocom.getMaxlv(data.hid, data.dengjielv)));

            //技能
            var interval = 16; // 间隔
            var skillList = G.class.hero.getSkillList(data.hid, data.dengjielv);
            var w = skillList.length * 88 + (skillList.length - 1) * interval; // 星星所占宽度
            var x = (me.nodes.panel_jn.width - w) * 0.5; // 星星初始x

            me.nodes.panel_jn.removeAllChildren();
            for (var i = 0; i < skillList.length; i++){
                var p = G.class.ui_skill_list(skillList[i], true);
                p.setAnchorPoint(0,0);
                p.x = x;
                p.y = -10;
                me.nodes.panel_jn.addChild(p);

                x += 88 + interval;
            }
            var imgJob = me.ui.finds('zy');
            var txtJob = me.ui.finds('zy_wz');

            imgJob.setBackGroundImage(G.class.hero.getJobIcoById(data.hid),1);
            txtJob.setString(L('JOB_' + G.class.hero.getById(data.hid).job));
            me.nodes.btn_up.hide();
            me.nodes.btn_tishi.hide();
        },
    });

})();
;;/**
 * Created by zhangming on 2018-05-03
 */
(function () {
    //英雄信息
    var ID = 'yingxiong_xxxx';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me.fullScreen = true;
            me.preLoadRes=['yingxiong_jn.png','yingxiong_jn.plist'];
            // me.needshowMainMenu = true;
            me._super(json, id,{action:true});
        },
        refreshPanel: function(data){
            var me = this;
            if(data && data.tid){
                me.curXbId = data.tid;
            }
            
            for(var i=0;i<me.list.length;i++) {
                if (me.list[i] == me.curXbId) {
                    me.curXbIdx = i;
                    break;
                }
            }

            if (me.from != 'yingxiong_tujian') {
                me.setTopMenu();
                var tiaozhuan = me.topMenu.getBtn(me._curType);
                me.topMenu.changeMenu(tiaozhuan ? me._curType : '1', true);
            } else {
                var type = '1';
                me.nodes.nrirong.removeAllChildren();
                me._panels = me._panels || {};
                me._panels[type] = new G.class.yingxiong_tujian_xq(type);
                me.ui.finds('listview$').hide();
                me.nodes.nrirong.addChild(me._panels[type]);
                me._panels[type].show();
            }
            // me.ui.finds('listview$').setPositionY(me.ui.finds('panle_1').height +  me.ui.finds('listview$').height/8 - 100);
        },
        bindUI: function () {
            var me = this;

            // 关闭
            me.nodes.btn_fanhui.data = [];
            me.nodes.btn_fanhui.click(function () {
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;
            me.isf = true;
            // setPanelTitle(me.nodes.tip_title, L('UI_TITLE_YXXX'));
            // me.nodes.tip_title.setBackGroundImage(X.getTitleImg('yxxx'),1);

            me.bindUI();
        },
        onShow: function () {
            var me = this;

            // me.showMainMenu();
            me.showToper();

            me.curXbId = me.data().tid;
            me.list = me.data().list;
            // me.curXbIdx = me.data().idx;
            // me.curZhongzu = me.data().zhongzu;
            me.from = me.data().frame;

            me.setTopMenu();
            me.refreshPanel();
            me.showRw();
            if (me.from != 'yingxiong_tujian') {
                me.checkRedPoint();
            }

            // G.frame.yingxiong_xxxx.getData(function(){
            //     callback && callback();
            // }, me.data());
            G.frame.yingxiong_xxxx.onnp("updateInfo", function () {
                if (me.from != 'yingxiong_tujian') {
                me.checkRedPoint();
				}
            })
        },
        checkRedPoint: function(){
            var me = this;
            var isHave = false;
            var heroData = G.frame.yingxiong.getHeroDataByTid(G.frame.yingxiong_xxxx.curXbId);
            for(var i = 1; i < 6; i ++) {
                var comData = [];
                var data = i == 5 ? G.frame.beibao.DATA.shipin.list : G.frame.zhuangbei.getCanUseZbTidArrByType(i);
                if(!cc.isArray(data)){
                    var keys = X.keysOfObject(data);
                    for(var j = 0; j < keys.length; j ++){
                        comData.push(data[keys[j]]);
                    }
                }else{
                    for(var k = 0; k < data.length; k ++){
                        comData.push(G.frame.beibao.DATA.zhuangbei.list[data[k]]);
                    }
                }
                if(heroData.weardata && heroData.weardata[i]){
                    var myConf = i == "5" ? G.class.shipin.getById(heroData.weardata[i]) : G.class.equip.getById(heroData.weardata[i]);
                    for(var l = 0; l < comData.length; l ++){
                        if(comData[l].color > myConf.color || (comData[l].color == myConf.color && comData[l].star > myConf.star)){
                            isHave = true;
                            break;
                        }
                    }
                }
                if(isHave == false && (!heroData.weardata || !heroData.weardata[i])) {
                    if(comData.length > 0 ) {
                        isHave = true;
                        break;
                    }
                }
            }
            if(isHave) {
                G.setNewIcoImg(me.nodes.listview.getChildren()[1]);
                me.nodes.listview.getChildren()[1].getChildByName("redPoint").x = 106;
                me.nodes.listview.getChildren()[1].getChildByName("redPoint").y = 52;
            }else{
                G.removeNewIco(me.nodes.listview.getChildren()[1]);
            }
        },
        onAniShow: function () {
            var me = this;
            cc.callLater(function(){
            	G.guidevent.emit('yingxiong_xxxxOpenOver');
            });
        },
        onRemove: function () {
            var me = this;

            X.releaseRes([
                'yingxiong_jn.plist','yingxiong_jn.png'
            ]);

            if (me.from != 'yingxiong_tujian') {
                G.frame.yingxiong.emit('updateInfo');
            }

            me.changeToperAttr();
        },
        changeType: function(sender){
            var me = this;
            if(sender.disable){
                G.tip_NB.show(sender.show);
                return;
            }
            var type = sender.data.id;
            me._curType = type;

            var viewConf = {
                "1": G.class.yingxiong_yxqh,
                "2": G.class.yingxiong_zb,
                "4": G.class.yingxiong_yxsx,
                "3": G.class.yingxiong_yxrh,
                "5": G.class.yingxiong_dw
            };
            me._panels = me._panels || {};
            for (var _type in me._panels) {
                cc.isNode(me._panels[_type]) && me._panels[_type].hide();
            }
            if (!cc.isNode(me._panels[type])) {
                me._panels[type] = new viewConf[type](type);
                me.nodes.nrirong.addChild(me._panels[type]);
            }
            me._panels[type].show();
            
            cc.callLater(function(){
            	G.guidevent.emit('yingxiong_xxxxChangeTypeOver');
            });
        },
        getCurType: function(){
            var me = this;
            return me._curType;
        },
        showRw: function(){
            var me = this;

            if (me._rwPanel) {
                me._rwPanel.removeFromParent();
                delete me._rwPanel;
            }
            me._rwPanel = new G.class.ui_tip_rw();
            me.ui.finds('panle_2').addChild(me._rwPanel);
        },
        checkTopMenu: function(conf){
            var me = this;
            var armyinfo = G.DATA.yingxiong.list[me.curXbId];
            var hero_data = G.class.herostarup.getById(armyinfo.hid);
            var key = X.keysOfObject(hero_data);
            var max_dengjie = key[key.length - 1];
            if(!armyinfo) return false;
            if(!conf) return false;

            if(armyinfo.dengjielv >= conf.dengjielv) {
                if(conf.closeLv) {
                    if(armyinfo.dengjielv >= conf.closeLv){
                        return false;
                    }else if(armyinfo.dengjielv >= max_dengjie){
                        return false;
                    }else{
                        return true;
                    }
                }else if(conf.openlv){
                    if(armyinfo.lv < conf.openlv){
                        return false
                    }else{
                        return true;
                    }
                }else return true;
            }else return false;
        },
        setTopMenu: function(){
            var me = this;
            var btns = [];
            var conf = X.clone(G.class.menu.get('yingxiongxinxi'));

            if ( me.from != 'yingxiong_tujian') {
                for(var i=0;i<conf.length;i++){
                    if(!conf[i].dengjielv) {
                        btns.push(conf[i]);
                    }else {
                        var result = me.checkTopMenu(conf[i]);
                        if(result) {
                            btns.push(conf[i]);
                        }
                    }
                }

                me.topMenu = new G.class.topMenu(me,{
                    btns:btns
                });
            }
        },
    });

    G.frame[ID] = new fun('yingxiong_xinjiegou.json', ID);
})();
;;(function () {
    var _func = {
        getData : function(hid, callback){
            var me = this;

            // G.ajax.send('mfxy_open',[hid],function(d){
            //     var data = JSON.parse(d);
            //     if (data.s === 1) {
            //         G.DATA.zzsys = data.d;
            //         callback && callback();
            //     }
            // },true);
        },
        getNextBuff: function(act, tid, callback){
            var me = this;

            G.ajax.send('hero_getnext',[act, tid],function(d){
                var data = JSON.parse(d);
                if (data.s === 1) {
                    callback && callback(data.d);
                }
            },true);
        },
        updateInfo: function (data, callback) {
            var me = this;

            // if(!data){
            //     G.frame.budui.emit('update_armydetails');
            //     return;
            // }

            if (G.frame.yingxiong_xxxx.isShow) {
                // me.getData(data, function(){
                    G.frame.yingxiong_xxxx.refreshPanel(data);
                    G.frame.yingxiong_xxxx.emit('updateInfo');
                    callback && callback();
                // });
            }
        },
        //需要过滤掉不等于该索引的已选择的tid
        getFilterData: function (data,idx) {
            var arr = [];
            for (var index in data) {
                if (index != idx) {
                    arr = arr.concat(data[index]);
                }
            }

            return arr;
        }
    };
    
    for (var key in _func) {
        G.frame.yingxiong_xxxx[key] = _func[key];
    }
})();
;;/**
 * Created by zhangming on 2018-05-03
 */
(function () {
    // 英雄信息-强化
    G.class.yingxiong_yxqh = X.bView.extend({
        ctor: function (type) {
            var me = this;
            G.frame.yingxiong_xxxx.qh = me;
            me._type = type;
            me._super('yingxiong_yxqh.json');
        },
        refreshPanel: function (bool) {
            var me = this;
            me.curXbId = G.frame.yingxiong_xxxx.curXbId;
            me.curXbIdx = G.frame.yingxiong_xxxx.curXbIdx;

            me.setContents(bool);
        },
        playJjAni: function() {
            var me = this;
            var img;
            var data = G.DATA.yingxiong.list[me.curXbId];

            for (var i = 0; i < me.nodes.panel_pinjie.children.length; i ++) {
                var chr = me.nodes.panel_pinjie.children[i];
                if(chr.ani) {
                    img = chr;
                    break;
                }
            }
            if(img) {
                G.class.ani.show({
                    json: "ani_jinjie_xingxing",
                    addTo: img,
                    x: img.width / 2,
                    y: img.height / 2,
                    repeat: false,
                    autoRemove: false,
                    onkey: function (node, action, event) {
                        if(event == "chuxian") {
                            G.class.ui_pinji(me.nodes.panel_pinjie, data.dengjielv, 0.8, data.star);
                        }
                    }
                })
            } else {
                G.class.ui_pinji(me.nodes.panel_pinjie, data.dengjielv, 0.8, data.star);
            }

        },
        setContents: function (bool) {
            var me = this;
            var data = G.DATA.yingxiong.list[me.curXbId];

            // 品级
            if(!G.frame.yingxiong_xxxx.checkAniId || G.frame.yingxiong_xxxx.checkAniId != me.curXbId) {
                G.class.ui_pinji(me.nodes.panel_pinjie, data.dengjielv, 0.8, data.star);
                G.frame.yingxiong_xxxx.checkAniId = me.curXbId;
            }

            var conf = G.class.hero.getById(data.hid);

            me.render({
                txt_sx1: data.atk, // 攻击
                txt_sx2: data.def, // 防御
                txt_sx3: data.hp, // 生命
                txt_sx4: data.speed, // 速度
            });
            me.nodes.txt_sx1.setTextColor(cc.color("#804326"));
            me.nodes.txt_sx2.setTextColor(cc.color("#804326"));
            me.nodes.txt_sx3.setTextColor(cc.color("#804326"));
            me.nodes.txt_sx4.setTextColor(cc.color("#804326"));

            // 是否能升阶
            if (data.lv == G.class.herocom.getMaxlv(data.hid, data.dengjielv)) {
                me.nodes.img_ymj.show();
                me.showShengjie();
            } else {
                me.nodes.img_ymj.hide();
                me.showShengji();
            }
            me.nodes.txt_djz.setString(X.STR('{1}/{2}', data.lv, G.class.herocom.getMaxlv(data.hid, data.dengjielv)));

            //职业
            var imgJob = me.ui.finds('zy');
            var txtJob = me.ui.finds('zy_wz');
            imgJob.setBackGroundImage(G.class.hero.getJobIcoById(data.hid), 1);
            txtJob.setString(L('JOB_' + conf.job));
        },
        showShengji: function () {
            var me = this;
            var data = G.DATA.yingxiong.list[me.curXbId];
            var needUseExp = [{a: 'attr', t: 'useexp', n: G.class.herocom.getHeroLvUp(data.lv).maxexp}];
            var need = X.clone(G.class.herocom.getHeroLvUp(data.lv).need);

            need = need.concat(needUseExp);

            me.nodes.panel_xh.show();
            me.nodes.img_zgdj.hide();
            me.nodes.btn_up.show();
            me.nodes.btn_up_jj.hide();

            var txt = [me.nodes.txt_xh1, me.nodes.txt_xh2];
            var imgArr = [me.ui.finds('token_jb'), me.ui.finds('token_jy')];
            var cailiao_bool;
            for (var i = 0; i < txt.length; i++) {
                if (i < need.length) {
                    var str = need[i].n;
                    imgArr[i].show();
                    cailiao_bool = G.class.getOwnNum(need[i].t, need[i].a) < need[i].n;
                    setTextWithColor(txt[i], X.fmtValue(str), G.gc.COLOR[cailiao_bool ? 'n16' : 'n8']);
                    X.enableOutline(txt[i], cc.color(cailiao_bool ? '#740000' : "#000000"), 1);
                } else {
                    imgArr[i].hide();
                    txt[i].setString('');
                }
            }
        },
        showShengjie: function () {
            var me = this;

            me.nodes.panel_xh.hide();
            me.nodes.img_zgdj.hide();
            me.nodes.btn_up.hide();

            var btnJj = me.nodes.btn_up_jj;
            btnJj.hide();
            G.removeNewIco(btnJj);

            var heroData = G.DATA.yingxiong.list[me.curXbId];
            if (heroData.dengjielv < heroData.star) {
                btnJj.show();

                var data = G.DATA.yingxiong.list[me.curXbId];
                var need = G.class.herocom.getHeroJinJieUp(data.dengjielv).need;

                if (G.class.getOwnNum(need[0].t, need[0].a) >= need[0].n && G.class.getOwnNum(need[1].t, need[1].a) >= need[1].n) {
                    G.setNewIcoImg(btnJj, .9);
                }
            }else {
                me.nodes.img_ymj.hide();
                me.nodes.img_zgdj.show();
            }
        },
        updata_shengji: function (end) {
            var me = this;
            if (end) {
                me.up_shengji && clearTimeout(me.up_shengji);
                return;
            } else {
                function timedCount_up() {
                    G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[me.curXbId]));
                    me.ajax('hero_lvup', [me.curXbId], function (s, rd) {
                        if (rd.s == 1) {
                            // sender.setTouchEnabled(true);
                            X.audio.playEffect("sound/yingxiongshengji.mp3");
                            var panel = G.frame.yingxiong_xxxx._rwPanel.nodes.panel_rw;
                            var childrenArr = panel.getChildren();
                            //我一直在想，每次都清空了要重建角色会不会卡……结果，尼玛，这里是从1开始……
                            //角色正常情况下应该在索引0
                            for (var i = 1; i < childrenArr.length; i++) {
                                var child = childrenArr[i];
                                child.removeFromParent(true);
                            }
                            G.class.ani.show({
                                json: "ani_jinjie",
                                addTo: panel,
                                x: panel.width / 2 - 20,
                                y: panel.height / 2 - 100,
                                repeat: false,
                                cache: true,
                                autoRemove: true
                            });
                            G.frame.yingxiong_xxxx.updateInfo();

                            me.setTimeout(function () {
                                G.guidevent.emit('hero_lvup_over');
                            }, 100);
                        } else {
                            X.audio.playEffect("sound/dianji.mp3", false);
                            me.up_shengji && clearTimeout(me.up_shengji);
                            return;
                        }
                    }, true);
                    me.up_shengji = setTimeout(function () {
                        timedCount_up();
                    }, 200);
                }
                timedCount_up();
            }
        },
        bindBTN: function () {
            var me = this;

            // 关闭
            me.ui.finds('$btn_fanhui').click(function (sender, type) {
                G.frame.yingxiong_xxxx.remove();
            });

            // 升级
            if (!me.nodes.btn_up.data) me.nodes.btn_up.data = [];
            me.nodes.btn_up.touch(function (sender, type) {
                if(me.btn_shengji){
                    return;
                }
                if (type == ccui.Widget.LONG_TOUCH) {
                    me.updata_shengji(false);
                    me.updata_sj = true;
                }
                if (type == ccui.Widget.TOUCH_ENDED || type == ccui.Widget.TOUCH_CANCELED) {
                    me.updata_shengji(true);
                    if(me.updata_sj){
                        me.updata_sj = false;
                        return;
                    }
                    me.btn_shengji = true;
                    G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[me.curXbId]));
                    me.ajax('hero_lvup', [me.curXbId], function (s, rd) {
                        me.setTimeout(function () {
                            me.btn_shengji = false;
                        }, 10);
                        if (rd.s == 1) {
                            // sender.setTouchEnabled(true);
                            X.audio.playEffect("sound/yingxiongshengji.mp3");
                            var panel = G.frame.yingxiong_xxxx._rwPanel.nodes.panel_rw;
                            var childrenArr = panel.getChildren();
                            //我一直在想，每次都清空了要重建角色会不会卡……结果，尼玛，这里是从1开始……
                            //角色正常情况下应该在索引0
                            for (var i = 1; i < childrenArr.length; i++) {
                                var child = childrenArr[i];
                                child.removeFromParent(true);
                            }
                            G.class.ani.show({
                                json: "ani_jinjie",
                                addTo: panel,
                                x: panel.width / 2 - 20,
                                y: panel.height / 2 - 100,
                                repeat: false,
                                cache: true,
                                autoRemove: true
                            });
                            G.frame.yingxiong_xxxx.updateInfo();

                            me.nodes.txt_sx1.runActions([
                                cc.scaleTo(0.1, 1.2, 1.2),
                                cc.scaleTo(0.1, 1, 1)
                            ]);

                            me.nodes.txt_sx2.runActions([
                                cc.scaleTo(0.1, 1.2, 1.2),
                                cc.scaleTo(0.1, 1, 1)
                            ]);

                            me.nodes.txt_sx3.runActions([
                                cc.scaleTo(0.1, 1.2, 1.2),
                                cc.scaleTo(0.1, 1, 1)
                            ]);

                            me.nodes.txt_sx4.runActions([
                                cc.scaleTo(0.1, 1.2, 1.2),
                                cc.scaleTo(0.1, 1, 1)
                            ]);

                            me.setTimeout(function () {
                                G.guidevent.emit('hero_lvup_over');
                            }, 100);
                        } else {
                            X.audio.playEffect("sound/dianji.mp3", false);
                            me.up_shengji && clearTimeout(me.up_shengji);
                            return;
                        }
                    }, true);
                }
            }, null, {emitLongTouch: true});

            // 进阶
            me.nodes.btn_up_jj.click(function () {
                G.frame.yingxiong_tip_jj.data({tid: me.curXbId}).show();
            });

            // 感叹号提示
            me.nodes.btn_tishi.click(function () {
                G.frame.ui_top_xq.data({tid: me.curXbId}).show();
            });
        },
        onOpen: function () {
            var me = this;
            me.bindBTN();
            me.nodes.panel_jn.zIndex = 999;
        },
        onShow: function () {
            var me = this;
            me.refreshPanel();

            G.frame.yingxiong_xxxx.onnp('updateInfo', function (d) {
                if (G.frame.yingxiong_xxxx.getCurType() == me._type) {
                    me.refreshPanel(true);
                } else {
                    me._needRefresh = true;
                }
            }, me.getViewJson());
        },
        onNodeShow: function () {
            var me = this;

            if (cc.isNode(me.ui)) {
                me.refreshPanel();
            }

            G.frame.yingxiong_xxxx.changeToperAttr({
                attr2: {a: 'attr', t: 'useexp'}
            });
        },
        onRemove: function () {
            var me = this;
            me.up_shengji && clearTimeout(me.up_shengji);
            G.frame.yingxiong_xxxx.checkAniId = undefined;
        },
    });

})();
;;/**
 * Created by zhangming on 2018-05-03
 */
(function(){
 // 英雄信息-升星
G.class.yingxiong_yxsx = X.bView.extend({
    ctor: function (type) {
        var me = this;
        me._type = type;
        me._super('yingxiong_yxsx.json');
    },
    refreshPanel: function(){
        var me = this;

        me.curXbId = G.frame.yingxiong_xxxx.curXbId;
        me.curXbIdx = G.frame.yingxiong_xxxx.curXbIdx;
        G.frame.yingxiong_xxxx.selectedData = {};

        me.setContents();
    },
    bindBTN:function() {
        var me = this;

        if(!me.nodes.btn_jx.data) me.nodes.btn_jx.data = [];
        me.nodes.btn_jx.click(function(sender, type){
            // if(!sender.isBright()) return;

            if (me.getSelectedTidArr().length < G.class.herostarup.getExtneedNum(G.DATA.yingxiong.list[me.curXbId].hid,G.DATA.yingxiong.list[me.curXbId].dengjielv + 1)) {
                G.tip_NB.show(L('YX_SX_XZ_TIP_1'));
                return;
            }

            //保存下该英雄的旧数据
            G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[me.curXbId]));

            me.ajax('hero_upstar',[me.curXbId,G.frame.yingxiong_xxxx.selectedData], function (s, rd) {
                if (rd.s == 1){
                    X.audio.playEffect("sound/yingxiongshengxing.mp3");
                    for(var i in G.frame.yingxiong_xxxx.selectedData) {
                        for(var j in G.frame.yingxiong_xxxx.selectedData[i]){
                            G.frame.yingxiong_xxxx.list.splice(X.arrayFind(G.frame.yingxiong_xxxx.list, G.frame.yingxiong_xxxx.selectedData[i][j]), 1);
                        }

                    }
                    G.frame.yingxiong_xxxx.selectedData = {};
                    // G.frame.yingxiong_xxxx.emit('updateInfo');
                    if (rd.d.hero&& rd.d.hero[me.curXbIdx] && rd.d.hero[me.curXbId].dengjielv == 10) {
                        G.frame.yingxiong_xxxx._curType = '1';
                        G.frame.yingxiong_xxxx._panels[G.frame.yingxiong_xxxx._curType]._needRefresh = true;
                        G.frame.yingxiong_xxxx.refreshPanel();
                        G.frame.yingxiong_xxxx.showRw();
                    } else {
                        G.frame.yingxiong_xxxx.updateInfo();
                        G.frame.yingxiong_xxxx.refreshPanel();
                    }
                    var panel = G.frame.yingxiong_xxxx._rwPanel.nodes.panel_rw;
                    var childrenArr = panel.getChildren();
                    for (var i = 1; i < childrenArr.length; i++) {
                        var child = childrenArr[i];
                        child.removeFromParent(true);
                    }
                    G.frame.yingxiong_xxxx.rw.palySkillAni();
                    G.frame.ui_shengxing.once("hide", function () {
                        if (rd.d.length > 0) {
                            G.frame.jiangli.data({
                                prize: rd.d
                            }).show();
                        }
                    }).data(me.curXbId).show();
                }else{
                    X.audio.playEffect("sound/dianji.mp3", false);
                }
            },true);
        });

        me.ui.finds('$btn_fanhui').click(function(sender,type){
            G.frame.yingxiong_xxxx.remove();
        });
    },
    onOpen: function () {
        var me = this;
        me.bindBTN();
    },
    onShow : function(){
        var me = this;

        me.refreshPanel();
        G.frame.yingxiong_xxxx.onnp('updateInfo', function (d) {
            if(G.frame.yingxiong_xxxx.getCurType() == me._type){
                me.refreshPanel();
            }else{
                me._needRefresh = true;
            }
        }, me.getViewJson());
    },
    onNodeShow : function(){
        var me = this;

        // if(me._needRefresh){
        //     delete me._needRefresh;
        //     me.refreshPanel();
        // }

        if (cc.isNode(me.ui)) {
            me.refreshPanel();
        }

        G.frame.yingxiong_xxxx.changeToperAttr({
            attr2:{a:'item',t:'2004'}
        });
    },
    onRemove: function () {
        var me = this;
    },
    setContents:function() {
        var me = this;
        var data = G.DATA.yingxiong.list[me.curXbId];
        var conf = G.class.herostarup.getData(data.hid, data.dengjielv + 1);

        function ten() {
            var skill = G.class.hero.getCanUpgradeSkill(data.hid, data.dengjielv);
            var p1 = G.class.ui_skill_list(skill, true);
            p1.setAnchorPoint(0.5,0.5);
            p1.setPosition(cc.p( me.nodes.panel_jn1.width*0.5, me.nodes.panel_jn1.height*0.5 ));
            me.nodes.panel_jn1.addChild(p1);

            skill = G.class.hero.getSkillOne(skill.idx, data.hid, data.dengjielv+1);
            var p2 = G.class.ui_skill_list(skill, true);
            p2.setAnchorPoint(0.5,0.5);
            p2.setPosition(cc.p( me.nodes.panel_jn2.width*0.5, me.nodes.panel_jn2.height*0.5 ));
            me.nodes.panel_jn2.addChild(p2);

            me.setSx(me.nodes.txt_sx1, X.STR(L('YXXX_DQSX'), (data.star - 6) * 20));
            me.setSx(me.nodes.txt_sx2,
                X.STR(L('YXXX_DQDJ'),
                    G.class.herocom.getMaxlv(data.hid, data.dengjielv)
                )
            );

            me.setSx(me.nodes.txt_sx3, X.STR(L('YXXX_SXTS'), (data.star - 5) * 20));
            me.setSx(me.nodes.txt_sx4,
                X.STR(L('YXXX_DJSX'),
                    G.class.herocom.getMaxlv(data.hid, data.dengjielv+1)
                )
            );
        }
        
        function eleven() {
            me.setSx(me.nodes.txt_tx1, X.STR(L('YXXX_DQSX'), (data.star - 6) * 20));
            me.setSx(me.nodes.txt_tx2,
                X.STR(L('YXXX_DQDJ'),
                    G.class.herocom.getMaxlv(data.hid, data.dengjielv)
                )
            );
            me.setSx(me.nodes.txt_tx5, X.STR(L("YXXX_DQDW"), data.star - 10));

            me.setSx(me.nodes.txt_tx3, X.STR(L('YXXX_SXTS'), (data.star - 5) * 20));
            me.setSx(me.nodes.txt_tx4,
                X.STR(L('YXXX_DJSX'),
                    G.class.herocom.getMaxlv(data.hid, data.dengjielv + 1)
                )
            );
            me.setSx(me.nodes.txt_tx6, X.STR(L("YXXX_DWCC"), data.star - 10 + 1));
        }

        if(data.star < 10) {
            me.nodes.panel_tp10.show();
            me.nodes.panel_tp11.hide();
            ten();
        } else {
            me.nodes.panel_tp10.hide();
            me.nodes.panel_tp11.show();
            eleven();
        }

        G.class.ui_star_mask(me.nodes.panel_xx1, data.dengjielv, 0.8);
        G.class.ui_star_mask(me.nodes.panel_xx2, data.dengjielv + 1, 0.8);

        var need = conf.need[0];
        var have = G.class.getOwnNum(need.t,need.a);
        var xuyao = X.fmtValue(need.n);
        var color = (have >= need.n ? "#ffffff" : "#ff4e4e");
        me.nodes.txt_xh.setString(xuyao);
        me.nodes.txt_xh.setTextColor(cc.color(color));
        have < need.n && X.enableOutline(me.nodes.txt_xh,cc.color("#740000"),1);
        me.nodes.panel_db.setBackGroundImage(G.class.getItemIco(need.t), 1);

        me.nodes.btn_jx.setBright(true);
        me.nodes.btn_jx.setTitleColor(cc.color(G.gc.COLOR.n13));
        var extneed = conf.extneed; 
        me.nodes.panel_xh.removeAllChildren();
        var autoLayout = new X.extendLayout(me.nodes.panel_xh, extneed.length);
        autoLayout.setDelegate({
            cellCount: function () {
                return 3;
            },
            nodeWidth: function () {
                return 110*0.8;
            },
            rowHeight: function () {
                return 110*0.8;
            },
            itemAtIndex: function (index) {
                var need = extneed[index];
				
				need.showNum = true;
                var widget = G.class.shero_extneed(need, data);
                widget.setScale(0.8);
                //widget.lv.hide();

                // var has = G.frame.yingxiong.getFilterHeros(need, me.curXbId).length;
                var needNum = need.num;

                setTextWithColor(widget.txt_num, X.STR('{1}/{2}', 0, needNum), G.gc.COLOR['n16']);
                X.enableOutline(widget.txt_num,cc.color('#740000'),1);
                widget.txt_num.setPosition(cc.p(widget.width / 2 ,widget.txt_num.height * (-0.5)));
                widget.setEnabled(false);
                widget.setTouchEnabled(true);
                widget.index = index;
                widget.need = need;
                widget.click(function(sender,type){
                    var callback = function (d) {
                        //d是数组
                        G.frame.yingxiong_xxxx.selectedData[sender.index] = d;
                        var hav = d.length;
                        setTextWithColor(sender.txt_num, X.STR('{1}/{2}', hav, sender.need.num), G.gc.COLOR[hav >= sender.need.num ? 1 : 'n16']);
                        if(hav < sender.need.num){
                            X.enableOutline(sender.txt_num,cc.color('#740000'),1);
                        }else{
                            X.disableOutline(sender.txt_num);
                            X.enableOutline(sender.txt_num,cc.color('#2a1c0f'),0.1)
                        }
                        sender.setEnabled(hav >= sender.need.num);
                    };
                    G.frame.ui_tip_xuanze.data({
                        need:sender.need,
                        idx:sender.index,
                        IdxData:G.frame.yingxiong_xxxx.selectedData[sender.index],
                        selectedData: G.frame.yingxiong_xxxx.selectedData,
                        callback:callback
                    }).show();
                });

                return widget;
            }
        });
        autoLayout.layout();
    },
    setSx: function(target, text){
        var rt = new X.bRichText({
            size: 18,
            lineHeight: 24,
            color: '#804326',
            maxWidth: target.width,
            family: G.defaultFNT,
        });
        rt.text(text);
        rt.setAnchorPoint(0, 0.5);
        rt.setPosition( cc.p(0, target.height / 2) );
        target.removeAllChildren();
        target.addChild(rt);
    },
    //获得所有被选择的英雄的数组
    getSelectedTidArr: function () {
        var me = this;

        // selectedData分了位置
        var data = G.frame.yingxiong_xxxx.selectedData;
        var arr = [];
        if (!data) {
            return arr;
        }

        for (var pos in data) {
            var dd = data[pos];
            arr = arr.concat(dd);
        }

        return arr;
    },
});

})();
;;/**
 * Created by zhangming on 2018-05-14
 */
(function(){
 // 英雄信息-装备
G.class.yingxiong_zb = X.bView.extend({
    ctor: function (type) {
        var me = this;
        me._type = type;
        me._super('yingxiong_zb.json');
        G.frame.yingxiong_xxxx.zb = me;
    },
    refreshPanel: function(){
        var me = this;
        me.curXbId = G.frame.yingxiong_xxxx.curXbId;
        me.curXbIdx = G.frame.yingxiong_xxxx.curXbIdx;

        me.setContents();

        G.frame.yingxiong_xxxx.changeToperAttr({
            attr2:{a:'item',t:'2005'}
        });
    },
    setContents:function() {
        var me = this;

        var heroData = G.frame.yingxiong.getHeroDataByTid(me.curXbId);
        var imgJob = me.ui.finds('zy');
        var txtJob = me.ui.finds('zy_wz');
        imgJob.setBackGroundImage(G.class.hero.getJobIcoById(heroData.hid), 1);
        txtJob.setString(L('JOB_' + heroData.job));

        G.class.ui_pinji(me.nodes.panel_pinjie, heroData.dengjielv, 0.8, heroData.star);
        me.nodes.txt_djz.setString(X.STR('{1}/{2}', heroData.lv, G.class.herocom.getMaxlv(heroData.hid, heroData.dengjielv)));

        var id2obj = {
            1:{
                type:'1',
                item: function (data) {
                    return G.class.szhuangbei({eid:data});
                },
                defimg:'img_wuqi.png',
                toframe: function (data,isOwn) {
                    if (!isOwn) {
                        G.frame.zhuangbei_zbxz.data(data).show();
                    } else {
                        G.frame.zhuangbei_xq.data({id:data,state:'xiexia'}).show();
                    }
                }
            }, //武器
            2:{
                type:'3',
                item: function (data) {
                    return G.class.szhuangbei({eid:data});
                },
                defimg:'img_toukui.png',
                toframe: function (data,isOwn) {
                    if (!isOwn) {
                        G.frame.zhuangbei_zbxz.data(data).show();
                    } else {
                        G.frame.zhuangbei_xq.data({id:data,state:'xiexia'}).show();
                    }
                }
            }, //头盔
            3:{
                type:'2',
                item: function (data) {
                    return G.class.szhuangbei({eid:data});
                },
                defimg:'img_jiezhi.png',
                toframe: function (data,isOwn) {
                    if (!isOwn) {
                        G.frame.zhuangbei_zbxz.data(data).show();
                    } else {
                        G.frame.zhuangbei_xq.data({id:data,state:'xiexia'}).show();
                    }
                }
            }, //戒指
            5:{
                type:'4',
                item: function (data) {
                    return G.class.szhuangbei({eid:data});
                },
                defimg:'img_kuijia.png',
                toframe: function (data,isOwn) {
                    if (!isOwn) {
                        G.frame.zhuangbei_zbxz.data(data).show();
                    } else {
                        G.frame.zhuangbei_xq.data({id:data,state:'xiexia'}).show();
                    }
                }
            }, //胸甲
            4:{
                type:'6',
                item: function (data) {
                    var id = X.keysOfObject(data)[0];
                    return G.class.sbaoshi(id);
                },
                defimg:'img_baoshi.png',
                toframe: function (data,isOwn) {
                    if (!isOwn) {
                        if (heroData.lv >= 40) {
                            X.audio.playEffect("sound/zhuangbei.mp3");
                            G.ajax.send('baoshi_jihuo',[me.curXbId],function(d) {
                                if(!d) return;
                                var d = JSON.parse(d);
                                if(d.s == 1) {
                                    G.frame.jiangli.data({
                                        prize:[{a:'baoshi',t:'1',n:1}],
                                    }).show();
                                    G.frame.yingxiong_xxxx.emit('updateInfo');
                                }
                            },true);
                        } else {
                            G.tip_NB.show(L("DQYX") + 40 + L('ji') + L('JIHUO'));
                        }
                    } else {
                        G.frame.baoshi_xq.show();
                    }
                },
                //英雄等级
                openneed:['lv',40]
            }, //宝石
            6:{
                type:'5',
                item: function (data) {
                    return G.class.sshipin(data);
                },
                defimg:'img_shipin.png',
                toframe: function (data,isOwn) {
                    if (!isOwn) {
                        G.frame.shipin_xuanze.data({type:1}).show();
                    } else {
                        G.frame.shipin_xq.data({id:data,state:'xiexia'}).show();
                    }
                }
            }  //饰品
        };

        for(var i=1;i<7;i++){
            var panel = me.nodes['panel_' + i];
            panel.removeAllChildren();
            var p,
                obj = id2obj[i],
                type = obj.type;
            if(type != 6) me.checkRedPoint(type, panel);
            if (heroData.weardata && heroData.weardata[type]) {
                p = obj.item(heroData.weardata[type]);
            } else {
                p = G.class.sitem();
                if (obj.openneed) {
                    if (obj.openneed[1] > heroData.lv) {
                        //锁住状态
                        p.icon.loadTextureNormal('img/public/img_suo.png',1);

                        var txt = new ccui.Text(obj.openneed[1] + L('ji'),'',20);
                        txt.setFontName(G.defaultFNT);
                        txt.setPosition(cc.p(p.width / 2,30));
                        txt.setAnchorPoint(cc.p(0.5,0.5));
                        X.enableOutline(txt, "#000000", 2);
                        p.addChild(txt);
                    } else {
                        if (!heroData.weardata || !heroData.weardata[type]) {
                            //宝石已解锁
                            G.class.ani.show({
                                json: "ani_baoshijiesuotishi",
                                addTo: p.icon,
                                x: p.icon.width / 2 + 3,
                                y: p.icon.height / 2 + 3,
                                repeat: true,
                                autoRemove: false,
                                onend: function (node, action) {

                                }
                            })
                        }
                    }
                } else {

                    p.icon.loadTextureNormal('img/public/' + obj.defimg,1);
                    while (p.img_jia){
                        p.img_jia.removeFromParent();
                    }

                    // 加号
                    var data = type == "5" ? G.frame.beibao.DATA.shipin.list : G.frame.zhuangbei.getCanUseZbTidArrByType(type);
                    var isHave = false;
                    if(cc.isObject(data)){
                        if(X.keysOfObject(data).length > 0) isHave = true;
                    }else{
                        if(data.length > 0) isHave = true;
                    }
                    if(isHave){
                        var img_jia = p.img_jia = new ccui.ImageView();
                        img_jia.setName('img_jia');
                        img_jia.loadTexture('img/public/img_jia.png', 1);
                        img_jia.setAnchorPoint(0.5, 0.5);
                        img_jia.setPosition(cc.p(p.width - img_jia.width / 2 - 2, img_jia.height / 2 + 2));
                        p.addChild(img_jia);

                        var act1 = cc.fadeIn(1.5);
                        var act2 = cc.fadeOut(1.5);
                        var action = cc.sequence(act1, act2);
                        img_jia.runAction(cc.repeatForever(action));
                    }
                }
            }

            p.setAnchorPoint(0.5, 0.5);
            p.setPosition(cc.p(panel.width * 0.5, panel.height / 2));

            if(i == 4 || i == 6){
                p.background.loadTexture('img/public/ico/ico_bg'+((p.conf && p.conf.color) || 10)+'.png', 1);
                p.kuang.loadTexture('img/public/ico/ico_spbg' + ((p.conf && p.conf.color) || 0) + '.png',1);
                p.kuang.y = 49;
            }else{
                if(heroData.weardata && heroData.weardata[type]) {

                }else {
                    p.background.loadTexture('img/public/ico/ico_bg' + ((p.conf && p.conf.color) || 10) + '.png',1);
                }
            }

            p.num.hide();
            panel.addChild(p);

            panel.data = heroData.weardata && heroData.weardata[type];
            panel.type = type;
            panel.obj = obj;
            panel.click(function(sender,type){
                if (sender.data) {
                    sender.obj.toframe(sender.data,true);
                    me.panel = sender;
                } else {
                    sender.obj.toframe(sender.type,false);
                    me.panel = sender;
                }
            });
        }
    },
    checkRedPoint: function(type, target){
        G.removeNewIco(target);
        while (target.getChildByTag(987654)) {
            target.getChildByTag(987654).removeFromParent();
        }
        var me = this;
        var comData = [];
        var heroData = G.frame.yingxiong.getHeroDataByTid(me.curXbId);
        if(!heroData) return;
        var data = type == "5" ? G.frame.beibao.DATA.shipin.list : G.frame.zhuangbei.getCanUseZbTidArrByType(type);
        if(!cc.isArray(data)){
            var keys = X.keysOfObject(data);
            for(var i = 0; i < keys.length; i ++){
                comData.push(data[keys[i]]);
            }
        }else{
            for(var i = 0; i < data.length; i ++){
                comData.push(G.frame.beibao.DATA.zhuangbei.list[data[i]]);
            }
        }
        if(heroData.weardata && heroData.weardata[type]){
            var isHave = false;
            var myConf = type == "5" ? G.class.shipin.getById(heroData.weardata[type]) : G.class.equip.getById(heroData.weardata[type]);
            for(var i = 0; i < comData.length; i ++){
                if(comData[i].color > myConf.color || (comData[i].color == myConf.color && comData[i].star > myConf.star)){
                    isHave = true;
                    break;
                }
            }
            if(isHave){
                G.setNewIcoImg(target, .9);
            }else{
                if(type == "5" && myConf.star == 6 && myConf.color == 5){
                    G.class.ani.show({
                        json: "ani_qiandao_1",
                        addTo: target,
                        x: 58,
                        y: 45,
                        repeat: true,
                        autoRemove: false,
                        onload: function (node, action) {
                            node.setTag(987654);
                            node.setScale(1.2);
                        }
                    })
                }
            }
        }
    },
    bindBTN:function() {
        var me = this;

        // 一键穿戴
        if(!me.nodes.btn_1.data) me.nodes.btn_1.data = [];
        me.nodes.btn_1.click(function(){
            X.audio.playEffect("sound/zhuangbei.mp3");
            G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[me.curXbId]));
            G.ajax.send('hero_yjwear',[me.curXbId],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {
                    G.frame.yingxiong_xxxx.emit('updateInfo');

                    cc.callLater(function(){
		            	G.guidevent.emit('yingxiong_zb_yjcd_over');
		            });
                }
            },true);
        });

        // 一键脱装

        if(!me.nodes.btn_2.data) me.nodes.btn_2.data = [];
        me.nodes.btn_2.click(function(){
            X.audio.playEffect("sound/zhuangbei.mp3");
            G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[me.curXbId]));
            G.ajax.send('hero_yjtakeoff',[me.curXbId],function(d) {
                if(!d) return;
                var d = JSON.parse(d);
                if(d.s == 1) {

                    G.frame.yingxiong_xxxx.emit('updateInfo');
                }
            },true);
        });

		me.nodes.btn_fanhui = me.ui.finds('$btn_fanhui');
        me.ui.finds('$btn_fanhui').click(function(sender,type){
            G.frame.yingxiong_xxxx.remove();
        });
    },
    onOpen: function () {
        var me = this;
        me.bindBTN();
    },
    onShow : function(){
        var me = this;
        me.refreshPanel();

        G.frame.yingxiong_xxxx.onnp('updateInfo', function (d) {
            if(G.frame.yingxiong_xxxx.getCurType() == me._type){
                me.refreshPanel();
            }else{
                me._needRefresh = true;
            }
        }, me.getViewJson());
    },
    onNodeShow : function(){
        var me = this;

        // if(me._needRefresh){
        //     delete me._needRefresh;
        //     me.refreshPanel();
        // }

        if (cc.isNode(me.ui)) {
            me.refreshPanel();
        }

        G.frame.yingxiong_xxxx.changeToperAttr({
            attr2:{a:'item',t:'2005'}
        });
    },
    onRemove: function () {
        var me = this;
    },
});

})();

;;/**
 * Created by wfq on 2018/6/9.
 */
(function () {
    //英雄-阵法-详情
    var ID = 'yingxiong_zhenfa_xq';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id);
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.DATA = me.data();
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var data = me.DATA;
            var conf = G.class.zhenfa.getById(data.id);

            var layIco = me.nodes.panel_jn;
            var txtName = me.nodes.txt_jn_name;
            var txtIntr = me.nodes.panel_jnnr;
            var txt_h = txtIntr.height;

            txtName.setString('');
            layIco.setBackGroundImage('img/zhenfa/' + conf.ico + '.png', 1);

            var str = '<font size=22 color=' + G.gc.COLOR.n1 + '>' + conf.title + '</font><br>';
            str += L('YINGXIONG_ZHENFA_TIP_1');
            var rhName = new X.bRichText({
                size:18,
                maxWidth:txtName.width,
                lineHeight:20,
                color:G.gc.COLOR.n5,
                family: G.defaultFNT,
            });
            rhName.text(str);
            rhName.setPosition(cc.p(0,-10));
            txtName.removeAllChildren();
            txtName.addChild(rhName);


            var strIntr = conf.intr;
            // conf.buff = {
            //     atk:10,
            //     def:10,
            //     hp:100
            // };
            var buffKeys = X.keysOfObject(conf.buff);
            buffKeys.sort(function (a,b) {
                return a < b ? -1 : 1;
            });

            for (var i = 0; i < buffKeys.length; i++) {
                var key = buffKeys[i];
                var obj = {};
                obj[key] = conf.buff[key];
                var tip = X.fmtBuff(obj,'<font color='+ G.gc.COLOR.n1 +'>{1}</font>    +{2}')[0].tip;
                strIntr += '<br>' + tip;
            }

            var rt = new X.bRichText({
                size: 20,
                lineHeight: 20,
                color: G.gc.COLOR.n5,
                maxWidth: txtIntr.width,
                family: G.defaultFNT,
            });
            rt.text(strIntr);
            rt.setAnchorPoint(0, 1);
            rt.setPosition( cc.p((txtIntr.width - rt.trueWidth())*0.5, txtIntr.height) );
            txtIntr.removeAllChildren();
            txtIntr.addChild(rt);


            // me.nodes.bg_top.height += (txtIntr.height - txt_h);
            // me.nodes.bg_top.y -= (txtIntr.height - txt_h);
            me.nodes.bg_top.height += (rt.trueHeight() - txt_h);
            me.nodes.bg_top.y -= (rt.trueHeight() - txt_h);

            me.setPos();
        },
        setPos: function () {
            var me = this;

            var panel = me.nodes.panel_top;
            panel.y = cc.director.getWinSize().height / 2 - panel.height / 2;
        }
    });

    G.frame[ID] = new fun('ui_top2.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/5.
 */
(function () {
    //英雄-种族-选择
    G.class.yingxiong_zhongzu_xuanze = X.bView.extend({
        extConf:{
            fight:{
                data: function (type) {
                    var data = G.DATA.yingxiong.list;
                    var keys = X.keysOfObject(data);

                    var arr = [];
                    if (type == 0) {
                        arr = keys;
                        if(G.frame.yingxiong_fight.data().pvType == "pvshizijun"){
                            var arr1 = [];
                            for (var i = 0; i < keys.length; i++) {
                                var tid = keys[i];
                                var heroData = data[tid];
                                if (heroData.lv > 39) {
                                    arr1.push(tid);
                                }
                            }
                            arr = arr1;
                        }
                    } else {
                        if(G.frame.yingxiong_fight.data().pvType == "pvshizijun"){
                            for (var i = 0; i < keys.length; i++) {
                                var tid = keys[i];
                                var heroData = data[tid];
                                if (heroData.zhongzu == type && heroData.lv > 39) {
                                    arr.push(tid);
                                }
                            }
                        }else{
                            for (var i = 0; i < keys.length; i++) {
                                var tid = keys[i];
                                var heroData = data[tid];
                                if (heroData.zhongzu == type) {
                                    arr.push(tid);
                                }
                            }
                        }

                    }

                    return arr;
                },
                getSort: function (arr, str1, str2, str3, str4) {
                    var data = [];
                    var heroData = [];
                    var hidData = [];
                    var sortArr = [];
                    var zz = {
                        5:0, //神圣
                        6:1, //暗影
                        4:2, //自然
                        3:4, //邪能
                        2:5, //奥术
                        1:6 //亡灵
                    };
                    for(var i = 0; i < arr.length; i ++){
                        heroData.push(G.DATA.yingxiong.list[arr[i]]);
                        if(!heroData[i].tid) heroData[i].tid = arr[i];
                    }
                    for(var i = 0, j = heroData.length; i < j; i += 1){
                        var conf = heroData[i];
                        var q = conf[str1];
                        var w = conf[str2];
                        var e = zz[conf[str3]];
                        var r = conf[str4];
                        if(!sortArr[q]){
                            sortArr[q] = [];
                        }
                        if(!sortArr[q][w]){
                            sortArr[q][w] = [];
                        }
                        if(!sortArr[q][w][e]){
                            sortArr[q][w][e] = [];
                        }
                        if(!sortArr[q][w][e][r]){
                            sortArr[q][w][e][r] = [];
                        }
                        sortArr[q][w][e][r].push(heroData[i]);
                    }
                    var index = heroData.length - 1;
                    for(var i in sortArr){
                        for(var j in sortArr[i]){
                            for (var k in sortArr[i][j]){
                                for(var l in sortArr[i][j][k]){
                                    for(var m in sortArr[i][j][k][l]){
                                        data[index --] = sortArr[i][j][k][l][m];
                                    }
                                }
                            }
                        }
                    }
                    for(var i = 0; i < data.length; i ++){
                        hidData.push(data[i].tid);
                    }
                    return hidData;
                }
            }
        },
        
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('ui_tip3_shang.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
        },
        bindBTN: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;

            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.fightData = G.frame.yingxiong_fight.data();
            if(me.fightData.pvType == "pvshizijun"){
                me.status = G.frame.shizijunyuanzheng.DATA.status;
                me.inStatus = X.keysOfObject(me.status);
            }
            me.createMenu();
            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var cacheArr = [];
            var cache = {};
            if (me.fightData.defhero) {
                cache = me.fightData.defhero;
            } else {
                //战斗站位缓存
                var type = me.fightData.pvType || me.fightData.type;
                switch (type) {
                    case "pvshizijun":
                        cache = X.cacheByUid("fight_shizijun");
                        break;
                    case "jjckz":
                        cache = X.cacheByUid("fight_zyjjc");
                        break;
                    case "hypk":
                        cache = X.cacheByUid("fight_hypk");
                        break;
                    case "hybs":
                        cache = X.cacheByUid("fight_hybs");
                        break;
                    case "ghfb":
                        cache = X.cacheByUid("fight_ghfb");
                        break;
                    case "pvdafashita":
                        cache = X.cacheByUid("fight_fashita");
                        break;
                    case "pvguanqia":
                        cache = X.cacheByUid("fight_tanxian");
                        break;
                    case "pvywzbjf":
                        cache = X.cacheByUid("fight_ywzbjf");
                        break;
                    case "pvywzbzb":
                        cache = X.cacheByUid("fight_ywzbzb");
                        break;
                    case "pvghz":
                        cache = X.cacheByUid("fight_pvghz");
                        break;
                    default:
                        cache = X.cacheByUid('fight_ready');
                        break;
                }
            }
            if (cache) {
                if(me.fightData.pvType == "pvshizijun"){
                    for(var id in cache){
                        var tid = cache[id];
                        if(((me.status[tid] && me.status[tid].hp > 0) || !me.status[tid]) && G.DATA.yingxiong.list[tid]){
                            cacheArr.push(tid);
                        }
                    }
                }else{
                    for (var id in cache) {
                        var tid = cache[id];
                        if (G.DATA.yingxiong.list[tid]) {
                            cacheArr.push(tid);
                        }
                    }
                }

            }
            me.selectedData = cacheArr;

            var type = me.curType || 0;
            me._menus[type].triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        createMenu: function () {
            var me = this;

            var view = me;
            me._menus = [];
            var listview = view.nodes.listview_zz;
            cc.enableScrollBar(listview);
            listview.removeAllChildren();
            view.nodes.list_ico.hide();

            //图标中，1指的是全部
            for (var i = 0; i < 7; i++) {
                var list_ico = view.nodes.list_ico.clone();
                X.autoInitUI(list_ico);
                list_ico.nodes.panel_zz.setTouchEnabled(false);
                list_ico.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (i + 1) + '.png', 1);
                list_ico.nodes.panel_zz.setScale(0.8);
                list_ico.show();

                list_ico.data = i;
                list_ico.setTouchEnabled(true);

                list_ico.click(function(sender, type){
                    for(var j=0;j<me._menus.length;j++){
                        var node = me._menus[j];
                        var img = 'img/public/ico/ico_zz' + (node.data + 1) + '.png';
                        if(node.data == sender.data){
                            if(me.effect) X.audio.playEffect("sound/dianji.mp3", false);
                            me.effect = true;
                            me.curType = sender.data;
                            me.fmtItemList();
                            img = 'img/public/ico/ico_zz' + (node.data + 1) + '_g.png';
                            if(sender.ani) {
                                sender.ani.show();
                            }else {
                                G.class.ani.show({
                                    json: "ani_guangbiaoqiehuan",
                                    addTo: sender,
                                    x: sender.width / 2,
                                    y: sender.height / 2,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function (node) {
                                        sender.ani = node;

                                    }
                                })
                            }
                        }else{
                            //node.nodes.img_yuan_xz.hide();
                            if(node.ani) node.ani.hide();
                        }
                        node.nodes.panel_zz.setBackGroundImage(img,1);
                    }
                    //sender.nodes.img_yuan_xz.show();
                });

                me._menus.push(list_ico);
                listview.pushBackCustomItem(list_ico);
                list_ico.show();
            }
        },
        fmtItemList: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();
            me.nodes.list.hide();

            var d = me.extConf[me._type].data(me.curType);

            if (d.length < 1) {
                me.ui.finds('img_zwnr').show();
                return;
            } else {
                me.ui.finds('img_zwnr').hide();
            }

            var data = me.extConf[me._type].getSort(d, "star", "lv", "zhongzu", "hid");
            me._headUI = [];
            var table = me.table = new X.TableView(scrollview,me.nodes.list,5, function (ui, data) {
                me.setItem(ui, data);
            },null,null,me.fightData.pvType == "pvshizijun" ? 15 : 1,5);
            table.setData(data);
            table.reloadDataWithScroll(true);
            //scrollview.getChildren()[0].getChildren()[0].setPositionX(1);
        },
        setItem: function (ui, data) {
            var me = this;
			
			//记录第一个头像，便于新手指导中直接指向
			if(me._headUI.length<6){
				me._headUI.push(ui);
			}
			
            X.autoInitUI(ui);
            var heroData = G.DATA.yingxiong.list[data];
            ui.setName(heroData.hid);

            var widget = G.class.shero(heroData);
            var hp = 100;
            widget.setName('widget');
            widget.setAnchorPoint(0.5,1);
            widget.setPosition(cc.p( ui.nodes.panel_ico.width*0.5, ui.nodes.panel_ico.height ));
            if(me.fightData.pvType == "pvshizijun"){
                widget.setScale(0.9);
                if(X.inArray(me.inStatus, data)){
                    hp = me.status[data].hp == 0? 0 : me.status[data].hp / me.status[data].maxhp * 100;
                    widget.setHP(hp, true);
                }else{
                    widget.setHP(hp, true);
                }
            }else{
                widget.setScale(0.9);
            }
            ui.nodes.panel_ico.removeAllChildren();
            ui.nodes.panel_ico.addChild(widget);

            ui.nodes.panel_ico.setTouchEnabled(false);
            ui.nodes.panel_ico.show();

            // 任务中
            var imgRwz = ui.nodes.img_rwz;

            imgRwz.hide();
            //widget.setHighLight(true);
            // widget.panel_tx.setBright(true);

            if (X.inArray(me.selectedData,data)) {
                widget.setGou(true);
                //widget.setHighLight(false);
            }
            if(hp <= 0){
                ui.nodes.img_yzw.show();
                ui.nodes.img_yzw.setScale(.9);
                ui.nodes.img_yzw.y += 4;
                widget.setEnabled(false);
            }else{
                ui.nodes.img_yzw.hide();
            }

            ui.data = data;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE){
                    G.frame.yingxiong_fight.posSelect = G.frame.yingxiong_fight.ui.convertToNodeSpace(sender.getParent().convertToWorldSpace(sender.getPosition()));
                    if (X.inArray(me.selectedData, sender.data)) {
                        G.frame.yingxiong_fight.posSelect.x += sender.width / 2;

                        sender.finds('widget').setGou(false);
                        // widget.panel_tx.setBright(true);
                        //sender.finds('widget').setHighLight(true);
                        me.selectedData.splice(X.arrayFind(me.selectedData,sender.data),1);
                        G.frame.yingxiong_fight.top.removeItem(sender.data);
                    } else {
                        if (me.selectedData.length >= G.frame.yingxiong_fight.top.extConf.maxnum) {
                            G.tip_NB.show(L('YX_FIGHT_XZ_FULL'));
                            return;
                        }
                        if(hp <= 0){
                            G.tip_NB.show(L("YX_YZW"));
                            return;
                        }

                        me.selectedData.push(sender.data);
                        sender.finds('widget').setGou(true);
                        // widget.panel_tx.setBright(false);
                        //sender.finds('widget').setHighLight(false);
                        G.frame.yingxiong_fight.top.addItem(sender.data);

                        //移动动画所需数据
                        if (cc.isNode(G.frame.yingxiong_fight.item)) {
                            G.frame.yingxiong_fight.item.stopAllActions();
                            G.frame.yingxiong_fight.item.removeFromParent();
                        }
                        var itemClone = G.frame.yingxiong_fight.item = sender.clone();
                        //itemClone.finds('black').hide();
                        itemClone.finds('gou').hide();
                        itemClone.setPosition(G.frame.yingxiong_fight.posSelect);
                        G.frame.yingxiong_fight.ui.addChild(itemClone);
                        G.frame.yingxiong_fight.playAniMove(itemClone);
                    }
                }
            });

            ui.show();
        },
        removeGou: function (tid) {
            var me = this;

            var child = me.getChildByTid(tid);
            if (child) {
                me.ui.setTimeout(function () {
                    child.finds('widget').setGou(false);
                    child.finds('widget').setHighLight(true);
                }, 180);
            }


            // var children = me.table.getAllChildren();
            // for (var i = 0; i < children.length; i++) {
            //     var child = children[i];
            //     if (child.isVisible() && child.data == tid) {
            //         // child.finds('widget').setGou(false);
            //         // child.finds('widget').setHighLight(true);
            //         me.ui.setTimeout(function () {
            //             child.finds('widget').setGou(false);
            //             child.finds('widget').setHighLight(true);
            //         },180);

            //         G.frame.yingxiong_fight.posSelect = G.frame.yingxiong_fight.ui.convertToNodeSpace(child.getParent().convertToWorldSpace(child.getPosition()));
            //         G.frame.yingxiong_fight.posSelect.x += child.width / 2;
            //         break;
            //     }
            // }
        },
        getChildByTid:function (tid) {
            var me = this;

            var cd = null;
            var children = me.table.getAllChildren();
            for (var i = 0; i < children.length; i++) {
                var child = children[i];
                if (child.isVisible() && child.data == tid) {
                    
                    cd = child;
                    break;
                }
            }

            return cd;
        }
    });

})();

;;/**
 * Created by zhangming on 2018-05-03
 */
(function () {
    //英雄信息-材料列表
    var ID = 'yingxiong_zhxz';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id, {action: true});
        },
        setContents:function() {
            var me = this;

            me.fmtItemList();
        },
        bindUI: function () {
            var me = this;
            setPanelTitle(me.nodes.txt_title, L('UI_TITLE_XUANZE'));

            me.nodes.mask.click(function(){
                me.remove();
            });

            if(!me.isHave) {
                me._view.nodes.btn_xz.setTitleText(L("HQYX"));
            }

            me._view.nodes.btn_xz.setTouchEnabled(true);
            me._view.nodes.btn_xz.setSwallowTouches(true);
            me._view.nodes.btn_xz.click(function(){
                if(!me.isHave) {
                    me.setGo();
                }else {
                    me.remove();
                }
            });
        },
        setGo: function() {
            var me = this;
            if(!me.go) {
                var up = cc.moveBy(0.1, 0, 50);
                var goUp = cc.spawn(up, cc.callFunc(()=>{
                    new X.bView("zhuangbei_tip2.json", function (view) {
                        me.go = view.nodes.panel_bg.clone();
                        me.go.setPosition(320, 350);
                        me.ui.addChild(me.go);
                        me.go.runAction(cc.moveBy(0.1, 0, -30));
                        me.setTo([15, 1, 9, 8, 5, 3]);
                    })
                }));
                me.ui.finds("panel_tip").runAction(goUp);
                me.nodes.txt_djgb.hide();
            }else {
                me.go.removeFromParent(true);
                delete me.go;
                var down = cc.moveBy(0.1, 0, -50);
                var goDown = cc.sequence(down, cc.callFunc(()=> {
                    me.nodes.txt_djgb.show();
                }));
                me.ui.finds("panel_tip").runAction(goDown);
            }
        },
        setTo: function(conf) {
            var me = this;
            var btnArr = [];
            for(var i = 0; i < conf.length; i ++){
                var btn = G.class.setTZ(conf[i]);
                btnArr.push(btn);
            }
            btnArr.sort(function (a, b) {
                return a.is > b.is ? -1 : 1;
            });
            X.autoInitUI(me.go);
            me.go.nodes.btn_hqtj.hide();
            X.center(btnArr, me.go.nodes.panel_ico, {
                scale: .9
            });
        },
        onOpen: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;


            me.star = me.data().star;
            me.zhongzu = me.data().zhongzu;
            me.callback = me.data().callback;
            me.selected = me.data().selectedData;

            if(me.selected.length > 0) {
                me.curHid = G.DATA.yingxiong.list[me.selected[0]].hid;
            }

            new X.bView('ui_tip_xuanze.json',function(view){
                me._view = view;
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents();
                me.bindUI();
            });
        },
        onHide: function () {
            var me = this;

            me.callback && me.callback(me.selected);
        },
        fmtItemList: function () {
            var me = this;

            var panel = me._view;
            cc.enableScrollBar(me._view.nodes.scrollview);
            me._view.nodes.scrollview.removeAllChildren();

            var data = me.sortData(me.filterData());
            if (data.length < 1) {
                panel.finds('img_zwnr').show();
                me.isHave = false;
                return;
            } else {
                me.isHave = true;
                panel.finds('img_zwnr').hide();
            }

            var table = me.table = new X.TableView(me._view.nodes.scrollview, me._view.nodes.list, 5, function (ui, data) {
                me.setItem(ui, data);
            }, null, null, 1, 1);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;
            X.autoInitUI(ui);

            var heroData = G.DATA.yingxiong.list[data];
            var widget = G.class.shero(heroData);
            widget.setScale(0.95);
            widget.setAnchorPoint(0.5,1);
            widget.setPosition(cc.p( ui.nodes.panel_ico.width*0.5, ui.nodes.panel_ico.height ));
            ui.nodes.panel_ico.removeAllChildren();
            ui.nodes.panel_ico.addChild(widget);

            var imgSuo = ui.nodes.img_suo;
            imgSuo.hide();
            widget.setGou(false);
            if (X.inArray(G.DATA.yingxiong.jjchero,data) || G.DATA.yingxiong.list[data].islock) {
                imgSuo.show();
                widget.setEnabled(false);
            }

            if(X.inArray(me.selected, data)) {
                widget.setGou(true);
            }else {
                widget.setGou(false);
            }

            ui.data = data;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    //已在竞技场上阵，不可选择

                    if (X.inArray(G.DATA.yingxiong.jjchero,sender.data)) {
                        G.tip_NB.show(X.STR(L('YX_X_LOACKING'),L('jingjichang')));
                        return;
                    }

                    //已被锁定，不可选择
                    if (G.DATA.yingxiong.list[sender.data].islock) {
                        G.tip_NB.show(L('YX_LOCKING'));

                        return;
                    }

                    if(!me.curHid) {
                        me.curHid = G.DATA.yingxiong.list[sender.data].hid;
                    } else {
                        if(G.DATA.yingxiong.list[sender.data].hid != me.curHid) {
                            G.tip_NB.show(L("XZXTWXYX"));
                            return;
                        }
                    }


                    if (X.inArray(me.selected, sender.data)) {
                        widget.setGou(false);
                        me.selected.splice(X.arrayFind(me.selected,sender.data),1);
                        if(me.selected.length < 1) me.curHid = undefined;
                    } else {
                        if (me.selected.length >= me.data().num) {
                            G.tip_NB.show(L('YX_FIGHT_XZ_FULL'));
                            return;
                        }else{
                            me.selected.push(sender.data);
                            widget.setGou(true);
                        }
                    }
                }
            });
            ui.show();
        },
        filterData: function () {
            var me = this;
            var arr = [];
            var heroData = G.DATA.yingxiong.list;

            for (var i in heroData) {
                if(heroData[i].zhongzu == me.zhongzu && heroData[i].star == me.star && heroData[i].hid != me.data().hid) {
                    var hid = heroData[i].hid;
                    var str = "";
                    str += hid.substring(0, hid.length - 1);
                    str += "6";
                    if(G.class.hero.getById(str) && G.class.hero.getById(str).tenstarmodel) {
                        arr.push(i);
                    }
                }
            }

            return arr;
        },
        sortData: function (d) {
            var me = this;


            var jjcLockData = G.DATA.yingxiong.jjchero;
            var heroData = G.DATA.yingxiong.list;

            //对材料分类，分类依据：加锁与未加锁
            var canUseArr = [],
                lockArr = [];
            for (var i = 0; i < d.length; i++) {
                var tid = d[i];
                var data = heroData[tid];
                if (X.inArray(jjcLockData,tid) || data.islock) {
                    lockArr.push(tid);
                } else {
                    canUseArr.push(tid);
                }
            }

            canUseArr.sort(function (a,b) {
                var dA = heroData[a];
                var dB = heroData[b];

                if (dA.lv != dB.lv) {
                    return dA.lv < dB.lv ? -1 : 1;
                } else if (dA.hid != dB.hid) {
                    return dA.hid * 1 < dB.hid * 1 ? -1 : 1;
                }
            });

            lockArr.sort(function (a,b) {
                var dA = heroData[a];
                var dB = heroData[b];

                if (dA.lv != dB.lv) {
                    return dA.lv < dB.lv ? -1 : 1;
                } else if (dA.hid != dB.hid) {
                    return dA.hid * 1 < dB.hid * 1 ? -1 : 1;
                }
            });


            var list = [].concat(canUseArr,lockArr);

            return list;
        }
    });

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/22.
 */
(function () {
    //英雄-图鉴
    G.class.yingxiong_tujian = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('yingxiong.json');
        },
        refreshPanel: function () {
            var me = this;

            if (me.curType) {
                delete me.curType;
            }

            me.render({
                txt_sl: function (node) {
                    node.hide();
                },
                btn_jia: function (node) {
                    node.hide();
                }
            });

            me.setContents();
        },
        setContents: function () {
            var me = this;

            var type = me.curType || 0;
            me._menus[type].triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        bindBTN: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;
            me.bindBTN();
            me.nodes.scrollview1.hide();
            cc.enableScrollBar(me.nodes.scrollview);
        },
        onShow: function () {
            var me = this;

            me.createMenu();
            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        createMenu: function () {
            var me = this;

            me._menus = [];

            //图鉴中不需要图标所有的展示
            for(var i=1;i<7;i++){
                var panel = me.nodes['panel_' + i];

                var list_ico = me.nodes.list_ico.clone();
                X.autoInitUI(list_ico);
                list_ico.nodes.panel_zz.setTouchEnabled(false);
                list_ico.nodes.panel_zz.setBackGroundImage('img/public/ico/ico_zz' + (i + 1) + '.png', 1);
                list_ico.show();
                list_ico.setAnchorPoint(0.5,0.5);
                list_ico.setPosition(cc.p(panel.width*0.5, panel.height*0.5));

                list_ico.data = i;
                list_ico.setTouchEnabled(true);
                list_ico.click(function(sender, type){
                    for(var j=0;j<me._menus.length;j++){
                        var node = me._menus[j];
                        var img = 'img/public/ico/ico_zz' + (node.data + 1) + '.png';
                        if(node.data == sender.data){
                            if(me.effect) X.audio.playEffect("sound/dianji.mp3", false);
                            me.effect = true;
                            me.curType = sender.data;
                            me.fmtItemList();
                            img = 'img/public/ico/ico_zz' + (node.data + 1) + '_g.png';
                            if(sender.ani){
                                sender.ani.show();
                            }else{
                                G.class.ani.show({
                                    json: "ani_guangbiaoqiehuan",
                                    addTo: sender,
                                    x: sender.width / 2,
                                    y: sender.height / 2,
                                    repeat: true,
                                    autoRemove: false,
                                    onload: function(node){
                                        sender.ani = node;
                                    }
                                })
                            }
                        }else{
                            //node.nodes.img_yuan_xz.hide();
                            if(node.ani) node.ani.hide();
                        }
                        node.nodes.panel_zz.setBackGroundImage(img,1);
                    }
                    //sender.nodes.img_yuan_xz.show();
                });

                me._menus.push(list_ico);
                panel.x += panel.width * 0.75;
                panel.addChild(list_ico);
            }
        },
        fmtItemList: function () {
            var me = this;

            me.nodes.scrollview.removeAllChildren();

            var data = me.getFilterData(me.curType);

            //增加10星的数据
            data = data.concat(me.getTenStarData(me.curType));

            me._hidArr = data;


            var table = me.table = new X.TableView(me.nodes.scrollview,me.nodes.list,4, function (ui, data) {
                me.setItem(ui, data);
            },null,null,12,3);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui,data) {
            var me = this;

            ui.setName(data);
            X.autoInitUI(ui);
            var arr = data.split('_'),
                conf = X.clone(G.class.hero.getById(arr[0]));
            if (arr.length > 1) {
                var starup = G.class.herostarup.getByIdAndDengjie(arr[0],'10');
                conf.lv = starup.maxlv;
                conf.star = 10;
                conf.dengjielv = '10';
            } else {
                conf.dengjielv = conf.star;
                conf.lv = G.class.herocom.getMaxlv(arr[0], conf.dengjielv);
            }


            var widget = G.class.shero(conf);

            widget.setAnchorPoint(0.5,1);
            // widget.setScale(0.9);
            widget.setPosition(cc.p( ui.nodes.ico.width*0.5, ui.nodes.ico.height));
            ui.nodes.ico.removeAllChildren();
            ui.nodes.ico.addChild(widget);

            ui.data = data;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            if(X.inArray(G.frame.yingxiong.headData, data)) {
                widget.setEnabled(true);
            }else{
                widget.setEnabled(false);
            }
            ui.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE){
                    G.frame.yingxiong_xxxx.data({
                        // uid: P.gud.uid,
                        tid:sender.data,
                        list:me._hidArr,
                        frame:'yingxiong_tujian',
                    }).show();
                }
            });
            ui.show();
        },
        getFilterData: function (type) {
            var me = this;

            var data = G.class.hero.getHerosByZhongzu(type * 1);

            data.sort(function (a,b) {
                var confA = G.class.hero.getById(a),
                    confB = G.class.hero.getById(b);
                if (confA.star != confB.star) {
                    return confA.star < confB.star ? -1 : 1;
                } else {
                    return confA.pinglunid * 1 < confB.pinglunid * 1 ? -1 : 1;
                }
            });

            return data;
        },
        getTenStarData: function (type) {
            var me = this;

            var data = G.class.herostarup.getTenHerosByZhongzu(type * 1);

            data.sort(function (a,b) {
                var confA = G.class.hero.getById(a),
                    confB = G.class.hero.getById(b);
                if (confA.star != confB.star) {
                    return confA.star < confB.star ? -1 : 1;
                } else {
                    return confA.pinglunid * 1 < confB.pinglunid * 1 ? -1: 1;
                }
            });

            for (var i = 0; i < data.length; i++) {
                data[i] = data[i] + '_1';
            }

            return data;
        }
    });

})();
;;/**
 * Created by LYF on 2018/6/25.
 */
(function () {
    //邮件

    G.event.on("newemail", function () {
        G.hongdian.getData("email", 1);
    });

    var ID = 'youjian';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
            me.preLoadRes = ["youjian.png", "youjian.plist"];
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function (sender, type) {
                me.remove();
            });

            me.topMenu = new G.class.topMenu(me, {
                btns: X.clone(G.class.menu.get('email'))
            });
        },
        changeType: function(sender) {
            var me = this;

            var type = sender.data.id;
            me.curType = type;

            var view = {
                1: G.class.youjian_lb,
                2: G.class.youjian_sl
            };

            var panel = new view[type];
            me.ui.finds("p_nr").addChild(panel);
            if(me.panle) me.panle.removeFromParent();
            me.panle = panel;
        },
        onOpen: function () {
            var me = this;
            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("email_open", [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            })
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;

            me.topMenu.changeMenu(1);
        },
        onHide: function () {
            var me = this;
            G.hongdian.getData("email", 1);
        },
        setContents: function () {
            var me = this;
            var data = me.setData(me.DATA);
            me.view.nodes.scrollview.removeAllChildren();
            cc.enableScrollBar(me.view.nodes.scrollview);
            me.view.nodes.list.hide();
            me.view.nodes.text_bbkj.setString(X.STR(L("BBKJ"), data.length));
            me.view.nodes.img_zwnr.hide();
            if(data.length < 1){
                me.view.nodes.img_zwnr.show();
                return;
            }
            var table = me.table = new X.TableView(me.view.nodes.scrollview, me.view.nodes.list, 1, function (ui, data) {
                me.setMail(ui, data)
            }, null, null, 8, 10);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setMail: function (ui, data) {
            X.autoInitUI(ui);
            var me = this;

            var img = data.type !== "1"? "img_wjyj" : data.prize? "img_xtyj" : "img_xtgg";
            if(data.getprize){
                img = "img_ydyj";
            }
            var str = data.title + (data.type == "1" ? "" : data.type == "2"? L("HZ") : L("WJ"));
            var rh = new X.bRichText({
                size: 20,
                maxWidth: ui.nodes.text_yjm.width,
                lineHeight: 34,
                family: G.defaultFNT,
                color: G.gc.COLOR.n4
            });
            rh.text(str);
            ui.nodes.text_yjm.removeAllChildren();
            ui.nodes.text_yjm.addChild(rh);

            ui.nodes.text_sj.setString(X.moment(data.ctime - G.time));
            ui.nodes.panel_tb.setBackGroundImage("img/youjian/" + img + ".png", 1);
            ui.setSwallowTouches(false);
            ui.setTouchEnabled(true);
            ui.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_NOMOVE){
                    G.frame.youjian_nr.data(data).show();
                }
            });
            ui.nodes.panel_tb.touch(function (sender, type){
                if(type == ccui.Widget.TOUCH_NOMOVE){
                    G.ajax.send("email_getprize", [data.eid], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            G.frame.jiangli.data({
                                prize: data.prize
                            }).show();
                            ui.nodes.panel_tb.setBackGroundImage("img/youjian/img_ydyj.png", 1);
                            data.getprize = 1;
                        }
                    })
                }
            });
            ui.show();
        },
        getDataByType: function () {
            var me = this;
            var arr = [];

            if(me.curType == 1) {
                for (var i = 1; i < 3; i ++) {
                    for (var j in me.DATA[i]) {
                        me.DATA[i][j].type = i;
                        arr.push(me.DATA[i][j]);
                    }
                }
            } else {
                for (var i in me.DATA[3]) {
                    me.DATA[3][i].type = 3;
                    arr.push(me.DATA[3][i]);
                }
            }

            arr.sort(function (a, b) {
                return a.ctime > b.ctime ? -1 : 1;
            });

            return arr;
        },
        refreshPanel: function () {
            var me = this;

            me.getData(function () {
                me.panle.setContents && me.panle.setContents();
            })
        }
    });
    G.frame[ID] = new fun('ui_tip10.json', ID);
})();

(function () {
    G.class.youjian_lb = X.bView.extend({
        ctor: function () {
            var me = this;
            me._super("youjian_lb.json");
        },
        bindBTN: function() {
            var me = this;

            me.nodes.btn_kssc.click(function (sender, type) {
                var is = false;
                for(var i in me.DATA){
                    var data = me.DATA[i];
                    if(!data.getprize || data.getprize){
                        is = true;
                        break;
                    }
                }
                if(is){
                    G.ajax.send("email_deleteall", [0], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1){
                            G.tip_NB.show(L("CGSCSYWJLYJ"));
                            G.frame.youjian.refreshPanel();
                        }
                    })
                }else{
                    G.tip_NB.show(L("WKSCYJ"));
                }
            });

            me.nodes.btn_yjlq.click(function (sender, type) {
                var is = false;
                for(var i in me.DATA){
                    if(me.DATA[i].getprize == 0){
                        is = true;
                        break;
                    }
                }
                if(is){
                    G.ajax.send("email_getallprize", [], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1){
                            G.frame.jiangli.data({
                                prize: d.d
                            }).show();
                            G.frame.youjian.refreshPanel();
                        }
                    })
                }else{
                    G.tip_NB.show(L("WKLQJLYJ"));
                }
            })
        },
        onShow: function () {
            var me = this;

            me.setContents();
            me.bindBTN();
            cc.enableScrollBar(me.nodes.scrollview);
        },
        setContents: function() {
            var me = this;
            var data = me.DATA = G.frame.youjian.getDataByType();

            me.nodes.text_sl.setString(data.length + "/50");

            if(data.length < 1) {
                me.nodes.img_zwnr.show();
            } else {
                me.nodes.img_zwnr.hide();
            }

            if(!me.table) {
                var table = me.table = new X.TableView(me.nodes.scrollview, me.nodes.list, 1, function (ui, data, pos) {
                    me.setItem(ui, data, pos[0] + pos[1]);
                }, null, null, 1, 3);
                table.setData(data);
                table.reloadDataWithScroll(true);
            } else {
                me.table.setData(data);
                me.table.reloadDataWithScroll(false);
            }
        },
        setItem: function (ui, data, index) {
            X.autoInitUI(ui);
            var me = this;
            var img = data.prize ? "img_xtyj" : "img_xtgg";
            if(data.getprize){
                img = "img_ydyj";
            }

            ui.nodes.text_yjm.setString(data.title);
            ui.nodes.panel_tb.setBackGroundImage("img/youjian/" + img + ".png", 1);

            var str = "";
            for (var i = 0; i < 10; i ++) {
                if(data.content[i]) str += data.content[i];
            }
            str += "...";

            ui.nodes.text_yjnr.setString(str);
            ui.nodes.text_sj.setString(X.moment(data.ctime - G.time));
            ui.data = data;
            ui.setSwallowTouches(false);
            ui.setTouchEnabled(true);
            ui.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_NOMOVE){
                    G.frame.youjian_nr.data(sender.data).show();
                }
            });
            ui.nodes.panel_tb.touch(function (sender, type){
                if(type == ccui.Widget.TOUCH_NOMOVE){
                    G.ajax.send("email_getprize", [data.eid], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            G.frame.jiangli.data({
                                prize: data.prize
                            }).show();
                            ui.nodes.panel_tb.setBackGroundImage("img/youjian/img_ydyj.png", 1);
                            me.DATA[index].getprize = 1;
                        }
                    })
                }
            });


            ui.show();
        }
    });
})();

(function () {
    G.class.youjian_sl = X.bView.extend({
        ctor: function () {
            var me = this;
            me._super("youjian_sl.json");
        },
        bindBTN: function() {
            var me = this;

            me.nodes.btn_kssc.click(function (sender, type) {
                var is = false;
                for(var i in me.DATA){
                    var data = me.DATA[i];
                    if(!data.getprize || data.getprize){
                        is = true;
                        break;
                    }
                }
                if(is){
                    G.ajax.send("email_deleteall", [1], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1){
                            G.tip_NB.show(L("CGSCSYWJLYJ"));
                            G.frame.youjian.refreshPanel();
                        }
                    })
                }else{
                    G.tip_NB.show(L("WKSCYJ"));
                }
            });

            me.nodes.btn_yjlq.click(function (sender, type) {
                var is = false;
                for(var i in me.DATA){
                    if(me.DATA[i].getprize == 0){
                        is = true;
                        break;
                    }
                }
                if(is){
                    G.ajax.send("email_getallprize", [], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if(d.s == 1){
                            G.frame.jiangli.data({
                                prize: d.d
                            }).show();
                            G.frame.youjian.refreshPanel();
                        }
                    })
                }else{
                    G.tip_NB.show(L("WKLQJLYJ"));
                }
            })
        },
        onShow: function () {
            var me = this;

            me.setContents();
            me.bindBTN();
            cc.enableScrollBar(me.nodes.scrollview);
        },
        setContents: function() {
            var me = this;
            var data = me.DATA = G.frame.youjian.getDataByType();

            me.nodes.text_sl.setString(data.length + "/50");

            if(data.length < 1) {
                me.nodes.img_zwnr.show();
            } else {
                me.nodes.img_zwnr.hide();
            }

            if(!me.table) {
                var table = me.table = new X.TableView(me.nodes.scrollview, me.nodes.list, 1, function (ui, data, pos) {
                    me.setItem(ui, data, pos[0] + pos[1]);
                }, null, null, 1, 3);
                table.setData(data);
                table.reloadDataWithScroll(true);
            } else {
                me.table.setData(data);
                me.table.reloadDataWithScroll(false);
            }
        },
        setItem: function (ui, data, index) {
            X.autoInitUI(ui);

            var img = "img_wjyj";

            ui.nodes.text_yjm.setString(data.binduid);
            ui.nodes.panel_tb.setBackGroundImage("img/youjian/" + img + ".png", 1);

            ui.nodes.text_yjnr.setString(data.content);
            ui.nodes.text_sj.setString(X.moment(data.ctime - G.time));
            ui.data = data;
            ui.setSwallowTouches(false);
            ui.setTouchEnabled(true);
            ui.touch(function (sender, type) {
                if(type == ccui.Widget.TOUCH_NOMOVE){
                    G.frame.youjian_nr.data(sender.data).show();
                }
            });
            ui.show();
        }
    });
})();
;;/**
 * Created by LYF on 2018/6/25.
 */
(function () {
    //发送邮件
    //调界面时传一个type值 1玩家 2工会 如果是玩家 请带上玩家的数据 data: playData
    var ID = 'youjian_fs';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{releaseRes:false,action:true});
        },
        initUi: function () {
            var me = this;

            me.nodes.tip_title.setString(L("YOUJIAN"));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function (sender, type) {
                me.remove();
            })
        },
        viewBtn: function(){
            var me = this;
            me.view.nodes.btn_fs.click(function (sender, type) {
                var str1 = me.btString;
                var str2 = me.view.nodes.text_yjnr.getString();
                if(str1 == ""){
                    G.tip_NB.show(L("BTBNWK"));
                    return;
                }
                if(str2 == "" || str2 == L("DJBJ")){
                    G.tip_NB.show(L("NRBNWK"));
                    return;
                }
                if(me.type == 2){
                    G.ajax.send("email_sendghemail", [str2, str1, me.type, me.data().data.uid], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            G.tip_NB.show(L("FSCG"));
                            me.remove();
                        }
                    })
                }else{
                    G.ajax.send("email_sendemail", [str2, str1, me.type, me.data().data.senduid || me.data().data.uid], function (d) {
                        if (!d) return;
                        var d = JSON.parse(d);
                        if (d.s == 1) {
                            G.tip_NB.show(L("FSCG"));
                            me.remove();
                        }
                    })
                }

            }, 1000)
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView("youjian_fsyj.json", function (node) {
                me.nodes.panel_nr.addChild(node);
                me.view = node;
                me.viewBtn();
                me.setContents()
            })
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            me.type = me.data().type;
            me.sjr = me.data().data.name || me.data().data.binduid || L("QTGHCY");
            me.view.nodes.text_sjr.setString(L("SJR") + me.sjr);
            me.view.nodes.text_yjbt.setTextVerticalAlignment(1);
            me.view.nodes.text_yjbt.setString("");
            me.view.nodes.text_yjnr.setString(L("DJBJ"));
            me.view.nodes.text_yjbt.ft = me;
            me.view.nodes.text_yjnr.ft = me;
            me.view.nodes.text_yjbt.addEventListener(me.bt, me.view.nodes.text_yjbt);
            me.view.nodes.text_yjnr.addEventListener(me.nr, me.view.nodes.text_yjnr);

            me.view.nodes.text_yjnr.setTextColor(cc.color('#804326'));

            me.str = me.type == 2? L("GH") : L("WJ");
            var str1 = (me.type == 2? L("GHTZ"): L("SLYJ")) + me.str;
            me.btString = (me.type == 2? L("GHTZ"): L("SLYJ"));
            var rh = new X.bRichText({
                size: 22,
                maxWidth: me.view.nodes.panel_yjbt2.width,
                lineHeight: 34,
                family: G.defaultFNT,
                color: G.gc.COLOR[0]
            });
            rh.text(str1);
            rh.setAnchorPoint(0, 0.5);
            rh.setPosition(0, me.view.nodes.panel_yjbt2.height / 2);
            me.view.nodes.panel_yjbt2.removeAllChildren();
            me.view.nodes.panel_yjbt2.addChild(rh);

        },
        bt: function (sender, type) {
            var me = this;
            switch (type){
                case ccui.TextField.EVENT_ATTACH_WITH_IME:
                    me.ft.view.nodes.panel_yjbt2.hide();
                    me.opacity = 255;
                    break;
                case ccui.TextField.EVENT_DETACH_WITH_IME:
                    if(me.getString() !== ""){
                        var str = me.getString() + me.ft.str;
                        var rh = new X.bRichText({
                            size: 22,
                            maxWidth: me.ft.view.nodes.panel_yjbt2.width,
                            lineHeight: 34,
                            family: G.defaultFNT,
                            color: G.gc.COLOR[0]
                        });
                        rh.text(str);
                        rh.setAnchorPoint(0, 0.5);
                        rh.setPosition(0, me.ft.view.nodes.panel_yjbt2.height / 2);
                        me.ft.view.nodes.panel_yjbt2.removeAllChildren();
                        me.ft.view.nodes.panel_yjbt2.addChild(rh);
                        me.ft.view.nodes.panel_yjbt2.show();
                        me.ft.btString = me.getString();
                        if(me.getString() == "私聊邮件(玩家)") {
                            me.setString("");
                        }else{
                            me.opacity = 0;
                        }
                    }
                    break;
                default:
                    break;
            }
        },
        nr: function (sender, type) {
            var me = this;
            switch (type){
                case ccui.TextField.EVENT_ATTACH_WITH_IME:
                    if(me.getString() == "点击编辑邮件内容") {
                        me.setString("");
                    }
                    break;
                case ccui.TextField.EVENT_DETACH_WITH_IME:
                    break;
                default:
                    break;
            }
        }
    });
    G.frame[ID] = new fun('youjian2.json', ID);
})();
;;/**
 * Created by LYF on 2018/6/25.
 */
(function () {
    //邮件内容
    var ID = 'youjian_nr';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{releaseRes:false,action:true});
        },
        initUi: function () {
            var me = this;

            me.nodes.tip_title.setString(L("YOUJIAN"));
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function (sender, type) {
                me.remove();
            })
        },
        viewBtn: function(){
            var me = this;
            me.view.nodes.btn_lq.click(function (sender, type) {
                G.ajax.send("email_getprize", [me.data().eid], function (d) {
                    if (!d) return;
                    var d = JSON.parse(d);
                    if (d.s == 1) {
                        G.frame.jiangli.data({
                            prize: me.data().prize
                        }).show();
                        G.frame.youjian.refreshPanel();
                        me.remove();
                    }
                })
            });

            me.view.nodes.btn_hx.click(function (sender, type) {
                G.frame.youjian_fs.data({type: 1, data: me.data()}).show();
            })
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            new X.bView("youjian_yjnr.json", function (node) {
                me.nodes.panel_nr.addChild(node);
                me.view = node;
                me.viewBtn();
                me.setContents()
            })
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var data = me.data();
            var lkr = new ccui.Text();
            var djs = new ccui.Text();
            lkr.setFontName(G.defaultFNT);
            djs.setFontName(G.defaultFNT);
            djs.setString(X.moment(data.passtime - G.time));
            lkr.setFontSize(18);
            djs.setFontSize(18);
            lkr.setTextColor(cc.color(G.gc.COLOR.n4));
            djs.setTextColor(cc.color(G.gc.COLOR[4]));
            lkr.setPosition(500, 150);
            djs.setPosition(500, 120);
            lkr.setAnchorPoint(1, 0.5);
            djs.setAnchorPoint(1, 0.5);
            me.view.addChild(lkr);
            me.view.addChild(djs);

            me.view.nodes.text_bt.setString(data.title);
            me.view.nodes.panel_xx.setString("  " + data.content);
            if(data.type == "1"){
                lkr.setString(L("XTGLY"));
                if(data.prize){
                    lkr.setPosition(500, 310);
                    djs.setPosition(500, 280);
                    me.view.nodes.text_xian.show();
                    me.view.nodes.text_lqjl.show();
                    X.alignCenter(me.view.nodes.panel_item, data.prize, {
                        touch: true
                    });
                    me.view.nodes.panel_item.show();
                    if(data.getprize){
                        me.view.nodes.img_ylq.show()
                    }else{
                        me.view.nodes.btn_lq.show();
                    }
                }
            }else if(data.type == "3"){
                lkr.setString(data.name || data.binduid);
                me.view.nodes.btn_pb.show();
                me.view.nodes.btn_hx.show();
            }else{
                lkr.setString(L("GHHZ"));
            }
        }
    });
    G.frame[ID] = new fun('youjian2.json', ID);
})();
;;/**
 * Created by LYF on 2018/7/10.
 */
(function () {

    //域外争霸
    var ID = 'yuwaizhengba';
    G.event.on('freshKFZ', function (d) {
        if (G.frame.yuwaizhengba.isShow) {
            G.frame.yuwaizhengba.getData(function () {
                G.frame.yuwaizhengba.setContents();
            });
        }
        if (G.frame.yuwaizhengba_jifen.isShow) {
            G.frame.yuwaizhengba_jifen.setTop();
        }
    });

    G.event.on('itemchange_over', function (data) {
        var keys = X.keysOfObject(data);
        for (var i in keys) {
            if (data[keys[i]].itemid == 2019) {
                if (G.frame.yuwaizhengba.isShow) {
                    G.frame.yuwaizhengba.ui.nodes.text_gssl.setString(X.fmtValue(G.class.getOwnNum(2019, 'item')));
                }
                if (G.frame.yuwaizhengba_jifen.isShow) {
                    G.frame.yuwaizhengba_jifen.ui.nodes.text_gssl.setString(X.fmtValue(G.class.getOwnNum(2019, 'item')));
                }
                if (G.frame.yuwaizhengba_zhengba.isShow) {
                    G.frame.yuwaizhengba_zhengba.ui.nodes.text_gssl.setString(X.fmtValue(G.class.getOwnNum(2019, 'item')));
                }

            }
        }
    });

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me._super(json, id, {action: true});
        },
        getData: function (callback) {
            var me = this;

            me.ajax('crosszb_status', [], function (str, data) {
                if (data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            }, true);
        },
        initUI: function () {
            var me = this;

            me.onnp('focus', function () {
                G.event.once('hdchange_over', function () {
                    if (G.frame.yuwaizhengba.isShow) {
                        // me.checkHongdian();
                    }
                });
                // G.event.emit('hdchange');
            });
            me.setBgAni();

        },
        bindUI: function () {
            var me = this;

            me.ui.nodes.btn_fh.click(function (sender, type) {
                me.remove();
            });

            me.ui.nodes.btn_bangzhu.click(function (sender, type) {
                G.frame.help.data({
                    intr: L('TS16')
                }).show();
            });

            me.ui.nodes.btn_yysd.click(function (sender, type) {
                G.frame.shop.data({
                    type: "7",
                    name: "ywsd"
                }).show();
            });

            me.ui.nodes.btn_zbs.click(function (sender, type) {
                G.frame.yuwaizhengba_zbqz.show();
            });
        },
        setBgAni: function () {
            var me = this;
            var node = me.ui.nodes.bg_2;
            node.removeAllChildren();
            G.class.ani.show({
                addTo: node,
                json: 'ani_yuwaizhengba_beijing',
                x: node.width / 2,
                y: node.height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {

                }
            });
        },
        onOpen: function () {
            var me = this;
            me.initUI();
            me.bindUI();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.showToper();
            me.setContents();
            me.checkRedPoint();
        },
        checkRedPoint: function() {
            var me = this;

            if(G.DATA.hongdian.crosszbjifen > 0) {
                G.setNewIcoImg(me.nodes.jfs);
                me.nodes.jfs.getChildByName("redPoint").setPosition(300, 360);
            }else {
                G.removeNewIco(me.nodes.jfs);
            }
        },
        checkShow: function() {
            var me = this;

            G.ajax.send('crosszb_status', [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    G.ajax.send("zypkjjc_open", [], function (b) {
                        if (!b) return;
                        var b = JSON.parse(b);
                        if(b.s == 1) {
                            if(X.keysOfObject(b.d.defhero).length < 1) {
                                G.frame.alert.data({
                                    cancelCall:null,
                                    okCall: function(){
                                        G.frame.jingjichang.show();
                                    },
                                    richText: L("SWSZZR"),
                                    sizeType: 3
                                }).show();
                            }else {
                                me.show();
                            }
                        }
                    });
                }
            });
        },
        setAni:function(parent){
            var me = this;
            parent.stopAllActions();
            if(parent.defPos){
                parent.setPosition(parent.defPos);
            }else{
                parent.defPos = parent.getPosition();
            }
            parent.runActions(
                cc.repeatForever(cc.sequence([
                    cc.moveBy(1.7,cc.p(0,20)),
                    cc.moveBy(1.7,cc.p(0,-20))
                ]))
            );
        },
        setContent: function (parent, data) {
            var me = this;
            X.autoInitUI(parent);
            var nodes = parent.nodes;
            nodes.xzz.hide();
            nodes.text1.hide();
            nodes.text2.hide();
            nodes.hrjxz.hide();
            nodes.Image_51.show();
            nodes.chufaquyu.hide();
            if (data.isOpen) {
                nodes.text1.show();
                nodes.text2.show();
                nodes.hrjxz.show();
                nodes.chufaquyu.show();
                me.setAni(parent);
                if (!cc.isNode(parent.aniNode)) {
                    nodes.chufaquyu.removeAllChildren();
                    G.class.ani.show({
                        addTo: nodes.chufaquyu,
                        json: ['ani_yuwaizhengba_jjc2', 'ani_yuwaizhengba_jjc1'][data.idx || 0],
                        x: nodes.chufaquyu.width / 2,
                        y: nodes.chufaquyu.height / 2,
                        repeat: false,
                        autoRemove: false,
                        onload: function (node, action) {
                            action.play('run', true);
                            parent.aniNode = node;
                            nodes.Image_51.hide();

                        }
                    });
                }else{
                    nodes.Image_51.hide();
                }
                if (parent.timer) {
                    parent.clearTimeout(parent.timer);
                    delete parent.timer;
                }
                parent.timer = X.timeout(nodes.text2, data.cd, function () {
                    me.getData(function () {
                        me.setContents();
                    });
                });
            } else {
                nodes.xzz.show();
            }

        },
        setContents: function () {
            var me = this;
            var nodes = me.ui.nodes;
            var data = me.DATA;
            var jfSate = data.jifen;
            var zbState = data.zhengba;
            nodes.text_gssl.setString(X.fmtValue(G.class.getOwnNum(2019, 'item')));

            //积分赛
            me.setContent(nodes.jfs, {'isOpen': jfSate == 1, 'cd': data.jifencd, 'idx': 0});
            //争霸赛
            me.setContent(nodes.zbs, {'isOpen': zbState == 1 || zbState == 3, 'cd': data.zhengbacd, 'idx': 1});

            if (zbState == 1) {
                nodes.zbs.finds('text1$').setString(X.STR(L('KFZ_tip_2'),L('KFZ_ZB')));
            }else{
                nodes.zbs.finds('text1$').setString(X.STR(L('KFZ_tip_1'),L('KFZ_ZB')));
            }
            nodes.dianji.click(function (sender, type) {
                G.frame.yuwaizhengba_jifen.show();
            }, 1000);
            nodes.dianji1.click(function (sender, type) {
                if (zbState == 3) {
                    G.tip_NB.show(L('KFZ_ZB_tip'));
                    return;
                }
                me.ajax('crosszb_zhengbamain', [], function (str, data) {
                    if (data.s == 1) {
                        G.frame.yuwaizhengba_zhengba.data(data.d).show();
                    }
                }, true);
            }, 1000);
        },
    });
    G.frame[ID] = new fun('kfzb.json', ID);
})();
;;/**
 * Created by LYF on 2018/9/26.
 */
(function () {
    //域外争霸-敌人信息
    var ID = 'yuwaizhengba_drxx';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.preLoadRes=['jingjichang.png','jingjichang.plist'];
            me._super(json, id);
        },

        initUi: function () {
            var me = this;
            var nodes = me.ui.nodes;
            nodes.btn_jhy.hide();
            nodes.btn_fsyj.hide();
        },
        bindBtn: function () {
            var me = this;
            var data = me.DATA;
            me.nodes.mask.click(function (sender, type) {
                me.remove();
            },1000);
            if((data && data.uid == P.gud.uid) || me.btnName == 'QUEDIN'){
                me.nodes.btn_tz.setTitleText(L('QUEDIN'));
            }else {
                me.nodes.btn_tz.setTitleText(L('TIAOZHAN'));
            }
            me.nodes.btn_tz.show();
            me.nodes.btn_tz.click(function () {
                if(me.DATA.uid == P.gud.uid || me.btnName == 'QUEDIN'){
                    me.remove();
                    return;
                }
                var call = function (d) {
                    if(d.d.fightres.winside == 0){
                        G.frame.fight_win.once("hide", function () {
                            if(G.frame.yingxiong_fight.isShow) {
                                G.frame.yingxiong_fight.remove();
                            }
                            me.callback && me.callback(d);
                        })
                    }else{
                        G.frame.fight_fail.once("hide", function () {
                            if(G.frame.yingxiong_fight.isShow) {
                                G.frame.yingxiong_fight.remove();
                            }
                            me.callback && me.callback(d);
                        })
                    }
                    me.remove();
                };
                var obj = {
                    pvType:me.pvType,
                    idx: me.DATA.index,
                    uid: me.DATA.uid,
                    callback:call
                };
                G.frame.yingxiong_fight.data(obj).show();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
            me.setContents();
        },
        checkShow:function(){
            var me = this;
            var data = me.data();
            if(!data && !data.data){
                G.tip_NB.show(L('KFGHZ_SJCW'));
                return;
            }
            me.DATA = data.data;
            me.pvType = data.pvType;
            me.btnName = data.btnName;
            me.callback = data.callback;
            me.show();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setBaseInfo();
            me.setHero();
        },
        setBaseInfo: function () {
            var me = this;

            var data = me.DATA;

            X.render({
                panel_tx: function (node) {
                    node.removeAllChildren();

                    var wid = G.class.shead(data.headdata);
                    wid.setPosition(cc.p(node.width / 2,node.height / 2));
                    node.addChild(wid);
                },
                text_id:data.headdata.uuid || L('WU'),
                text_gh:data.headdata.guildname && data.headdata.guildname != '' ? data.headdata.guildname : L('WU'),
                text_zdl1:data.zhanli

            },me.nodes);

            me.ui.finds('text_zzke').setString(data.headdata.name);
        },
        setHero: function () {
            var me = this;
            var arr = [];
            var data = me.DATA;
            var defhero = data.defhero || data.herolist;

            var lay = me.nodes.list_zr;

            for(var i in defhero){
                var conf = defhero[i];
                if(!conf.hid || conf.sqid) continue;
                var enemy = G.class.shero(conf);
                enemy.setArtifact(defhero.sqid || "");
                arr.push(enemy);
            }
            X.center(arr, lay, {
                scale: .7
            });
        },
    });
    G.frame[ID] = new fun('jingjichang_wjxx.json', ID);
})();
;;/**
 * Created by lsm on 2018/9/26.
 */
(function () {
    //域外争霸排行榜-排行榜

    G.class.yuwaizhengba_jfphb = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('ui_waiyuzhengbapaihang.json');
        },
        initUi: function () {
            var me = this;

        },
        bindBtn: function () {
            var me = this;
        },
        onOpen: function () {
            var me = this;

        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            // me.nodes.panel_rank.height -= 103;
            // ccui.helper.doLayout(me.nodes.panel_rank);
            X.viewCache.getView('ui_list2.json', function (node) {
                me.list = node.nodes.list_rank;

                var scrollview = me.nodes.scrollview;
                cc.enableScrollBar(scrollview);
                var listview = me.nodes.listview;
                cc.enableScrollBar(listview);

                me.getData(function(){
                    me.setContents();
                });
            });
        },
        onHide: function () {
            var me = this;
        },
        getData: function (callback) {
            var me = this;

            G.ajax.send('rank_open', [13], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            }, true);
        },
        setContents: function () {
            var me = this;
            var scrollview = me.nodes.scrollview;

            scrollview.removeAllChildren();

            var data = me.DATA;
            me.setMyRank();
            if (data.ranklist.length < 1) {
                cc.isNode(me.nodes.img_zwnr) && me.nodes.img_zwnr.show();
                return;
            } else {
                cc.isNode(me.nodes.img_zwnr) && me.nodes.img_zwnr.hide();
            }
            for (var i = 0; i < data.ranklist.length; i++) {
                data.ranklist[i].rank = i + 1;
            }
            var table = me.table = new X.TableView(scrollview,me.list,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,10);
            table.setData(data.ranklist);
            table.reloadDataWithScroll(true);
            scrollview.getChildren()[0].getChildren()[0].x = 4;
        },
        setItem: function (ui, data) {
            X.autoInitUI(ui);
            var layPh = ui.nodes.img_rank;
            var txtPh = ui.nodes.sz_phb;
            var layIco = ui.nodes.panel_tx;
            var txtName = ui.nodes.txt_name;
            var txt_jf = ui.nodes.txt_number;
            var txt_wz = ui.nodes.txt_wz;
            txt_wz.setString(X.STR(L('YWZB_QF'),data.headdata.svrname));
            ui.nodes.txt_title.setString(L('jifenphb'));

            layPh.hide();
            txtPh.setString('');
            layIco.removeAllChildren();
            if (data.rank < 0) {
                txtPh.setString(0);
            } else if (data.rank < 4) {
                layPh.setBackGroundImage('img/public/img_paihangbang_' + data.rank + '.png', 1);
                layPh.show();
            } else {
                txtPh.setString(data.rank);
                txtPh.show();
            }

            var wid = G.class.shead(data.headdata);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);
            wid.data = data.headdata;
            wid.setTouchEnabled(true);
            wid.icon.setTouchEnabled(false);
            wid.touch(function(sender, type) {
                if (type == ccui.Widget.TOUCH_NOMOVE) {
                    G.frame.wanjiaxinxi.data({
                        pvType: 'zypkjjc',
                        uid: sender.data.uid
                    }).checkShow();
                }
            });

            txtName.setString(data.headdata.name);
            txt_jf.setString(data.jifen);

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            layPh.setTouchEnabled(false);
        },
        //显示我的排行
        setMyRank: function () {
            var me = this;

            var rank = me.DATA.myrank;
            var list = me.list.clone();
            X.autoInitUI(list);
            var txtPh = me.nodes.fnt_player;
            var layIco = list.nodes.panel_tx;
            var txtName = list.nodes.txt_name;
            var txt_jf = me.finds('txt_level_0');
            me.finds('txt_level').setString(L('jifenphb'));
            list.nodes.bg_list.hide();
            list.nodes.txt_title.setString(L('jifenphb'));

            layIco.removeAllChildren();
            txtPh.removeAllChildren();
            if (rank < 0) {
                txtPh.setString("");
                me.finds('wsb_player').show();
            } else{
                txtPh.setString(rank);
            }
            // else if (rank < 4) {
            //     txtPh.setBackGroundImage('img/public/img_paihangbang_' + rank + '.png', 1);
            // }

            var wid = G.class.shead(P.gud);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);

            var maxGqid = G.class.tanxian.getCurMaxGqid();
            txtName.setString(P.gud.name);
            txt_jf.setString(me.DATA.val);
            layIco.setTouchEnabled(false);
            // list.setPosition(me.view.nodes.list_player.width / 2, me.view.nodes.list_player.height / 2 - list.height / 2);

            // me.view.nodes.list_player.addChild(list);
            me.nodes.panel_player.show();
        }
    });
})();
;;/**
 * Created by wfq on 2018/6/4.
 */
(function () {
    //探险-通关奖励
    var ID = 'yuwaizhengba_jiangli';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id, {action: true});
        },
        getData: function (callback) {
            var me = this;
            me.ajax('crosszb_prizelist', [], function (s,data) {
                if (data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            }, true);
        },
        initUi: function () {
            var me = this;

            me.ui.nodes.tip_title.setString(L("SCJL"));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            // G.frame.tanxian.DATA.passprizeidx = [0,1];
            // P.gud.maxmapid = 60;

            new X.bView('tongguanjiangli.json', function (view) {
                me._view = view;
                me._view.nodes.panel_tgjl.show();
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                X.viewCache.getView('tongguanjiangli_list.json', function (node) {
                    me.list = node.finds('list_nr');
                    me.getData(function () {
                        me.setContents();
                    });
                });
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            var panel = me._view;
            var conf = G.class.kuafuzhan.getDatePrize();

            var scrollview = panel.nodes.scrollview;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();

            me.list.hide();

            var table = me.table = new X.TableView(scrollview, me.list, 1, function (ui, data ,pos) {
                me.setItem(ui, data ,pos[0] + pos[1]);
            }, null, null, 8, 10);
            table.setData(conf);
            table.reloadDataWithScroll(true);
            // scrollview.getChildren()[0].getChildren()[0].setPositionX(7);
        },
        setItem:function (ui,data , pos) {
            if(!data){
                ui.hide();
                return;
            }
            data[2] = pos;
            var me = this;
            X.autoInitUI(ui);
            var layWp = ui.nodes.ico_jlwp;
            var btnLq = ui.nodes.btn1_on;
            var ylq = ui.nodes.img_ylq;

            btnLq.hide();
            ylq.hide();
            X.render({
                wz_title : X.STR(L('KFZ_JF_SC_tip'), data[0],  me.DATA.winnum + '/' + data[0] )
            },ui.nodes);
            layWp.removeAllChildren();
            X.alignItems(layWp,data[1],'left',{
                touch:true,
                interval:15
            });
            if (X.inArray(me.DATA.reclist, data[2])) {
                ylq.show();
            } else {
                if (me.DATA.winnum >= data[0]) {
                    btnLq.setTouchEnabled(true);
                    btnLq.setBright(true);
                    btnLq.setTitleColor(cc.color(G.gc.COLOR.n13));
                } else {
                    btnLq.setTouchEnabled(false);
                    btnLq.setBright(false);
                    btnLq.setTitleColor(cc.color(G.gc.COLOR.n15));
                }
                btnLq.show();
            }
            btnLq.idx = data[2];
            btnLq.data = data[1];
            btnLq.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    me.ajax('crosszb_recprize', [sender.idx], function (s,data) {
                        if (data.s == 1) {
                            for (var k in data.d) {
                                me.DATA[k] = data.d[k]
                            }
                            G.hongdian.getData("crosszbjifen", 1, function () {
                                G.frame.yuwaizhengba.checkRedPoint();
                                G.frame.yuwaizhengba_jifen.checkRedPoint();
                            });
                            G.frame.jiangli.data({
                                prize: [].concat(sender.data)
                            }).show();
                            G.event.emit('freshKFZ');
                            me.table.reloadDataWithScroll(false);
                            // if (me.DATA.scjl == 0) {
                            //     G.event.emit('hdchange',{type: 0, tag: 'kfzb_scjl'});
                            //     G.event.emit('hdchange',{type: 0, tag: 'kfzb_jfs'});
                            //     G.event.emit('hdchange', {type: 0, tag: 'zhengzhan_kfzb'});
                            //     // G.frame.zhengzhan.isShow && G.frame.zhengzhan.upData({5:me.DATA.scjl});
                            // }
                        }
                    }, true);
                }
            });

            ui.show();
        }
    });

    G.frame[ID] = new fun('ui_tip1.json', ID);
})();
;;/**
 * Created by LYF on 2018/7/10.
 */
(function () {

    G.frame.chongzhi.on("hide", function () {
        if(G.frame.yuwaizhengba_jifen.isShow) {
            G.frame.yuwaizhengba_jifen.getData();
        }
    });

    //积分赛
    var ID = 'yuwaizhengba_jifen';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.fullScreen = true;
            me._super(json, id, {action: true});
        },
        getData: function (callback) {
            var me = this;
            // var data = X.toJSON('{"s": 1, "d": {"status": 1, "enemy": [{"body": "03", "head": "1003", "pzid": "1", "army": [["2010", 68, "90001"], ["1003", 68, "90005"], ["2004", 68, "90005"], ["3005", 68, "90005"], ["1006", 68, "90001"], ["2007", 68, "90001"]], "zhongzu": "2", "weapon": "01", "npcid": 232, "headborder": "4", "sex": 1, "lv": 68, "ext_servername": "天赐神兵", "zhanli": 1004106, "vip": 0, "uid": "ROBOT_0_232", "skill": [["1001", 1], ["1001", 1]], "horse": "03", "jifen": 30, "name": "奥利弗詹姆斯"}, {"body": "01", "head": "1004", "pzid": "1", "army": [["1003", 69, "90001"], ["2004", 69, "90005"], ["3005", 69, "90005"], ["1006", 69, "90005"], ["2007", 69, "90001"], ["3008", 69, "90001"]], "zhongzu": "2", "weapon": "01", "npcid": 233, "headborder": "5", "sex": 0, "lv": 69, "ext_servername": "龙眼指环", "zhanli": 1038498, "vip": 0, "uid": "ROBOT_1_233", "skill": [["1001", 1], ["1001", 1]], "horse": "04", "jifen": 30, "name": "亚伦福斯特"}, {"body": "02", "head": "1002", "pzid": "1", "army": [["1010", 67, "90001"], ["2010", 67, "90005"], ["1003", 67, "90005"], ["2004", 67, "90005"], ["3005", 67, "90001"], ["1006", 67, "90001"]], "zhongzu": "1", "weapon": "01", "npcid": 231, "headborder": "3", "sex": 0, "lv": 67, "ext_servername": "天使项链", "zhanli": 970443, "vip": 0, "uid": "ROBOT_2_231", "skill": [["1001", 1], ["1001", 1]], "horse": "02", "jifen": 30, "name": "安海明威"}], "freerefnum": 15, "rank": 1, "jifen": 0, "pknum": 15, "buynum": 50, "cd": 1538146800, "buyneed": 10}}');
            // me.DATA = data.d;
            // callback && callback();
            me.ajax('crosszb_jfopen', [], function (str, data) {
                if (data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            }, true);
        },

        bindUI: function () {
            var me = this;

            me.ui.nodes.btn_fh.click(function (sender, type) {
                me.remove();
            });
            me.ui.nodes.btn_jifen.click(function (sender, type) {
                G.frame.yuwaizhengba_phb.show();
            });
            me.ui.nodes.btn_scjl.click(function (sender, type) {
                G.frame.yuwaizhengba_jiangli.show();
            });
            me.ui.nodes.btn_wysd.click(function (sender, type) {
                G.frame.shop.data({
                    type: "7",
                    name: "ywsd"
                }).show();
            });
            me.ui.finds("img_di").setTouchEnabled(true);
            me.ui.finds("img_di").click(function () {
                if(X.cacheByUid("jumpJiFenSai")) {
                    X.cacheByUid("jumpJiFenSai", 0);
                } else {
                    X.cacheByUid("jumpJiFenSai", 1);
                }
                me.checkJumpFight();
            });

            function refresh(callback) {
                me.ajax('crosszb_jfrefmatch', [], function (str, data) {
                    if (data.s == 1) {
                        for (var k in data.d) {
                            me.DATA[k] = data.d[k];
                        }
                        G.tip_NB.show(L('SX') + L('SUCCESS'));
                        me.setContents(true);
                        callback && callback();
                    }
                }, true);
            }

            me.ui.nodes.btn_sx.click(function (sender, type) {
                if (me.DATA.freerefnum > 0) {
                    refresh();
                } else {
                    var str = L('KFZ_JF_refreshEnemy');
                    G.frame.alert.data({
                        sizeType: 3,
                        okCall: function () {
                            refresh();
                        },
                        autoClose: true,
                        richText: str
                    }).show();
                }
            });
        },
        checkJumpFight: function() {
            var me = this;
            if(X.cacheByUid("jumpJiFenSai")) {
                if(me.DATA.status != 2)
                me.ui.finds("ico_gou").show();
            } else {
                me.ui.finds("ico_gou").hide();
            }
        },
        onOpen: function () {
            var me = this;
            me.bindUI();
            me.setBgAni();
        },
        setBgAni: function () {
            var me = this;
            var bg = me.ui.nodes.bg_2;
            bg.removeAllChildren();
            G.class.ani.show({
                addTo: bg,
                json: 'ani_yuwaizhengba_beijing',
                x: bg.width / 2,
                y: bg.height / 2,
                cache: true,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {

                }
            });
            var node = me.ui.nodes.img_bg;
            node.removeAllChildren();
            G.class.ani.show({
                addTo: node,
                json: 'ani_yuwaizhengba_shuijing2',
                x: node.width / 2,
                y: node.height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {

                }
            });
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.showToper();
            me.getData(function () {
                me.setContents(true);
            });
            me.checkRedPoint();
        },
        checkRedPoint: function() {
            var me = this;

            if(G.DATA.hongdian.crosszbjifen > 0) {
                G.setNewIcoImg(me.nodes.btn_scjl);
            }else {
                G.removeNewIco(me.nodes.btn_scjl);
            }
        },
        setJiangli: function () {
            var me = this;
            var data = me.DATA;

            if (data.rankprize) {

                G.frame.jiangli.data({
                    prize: [].concat(data.rankprize)
                }).show();

                // function callback() {
                //     me.ajax('crosszb_jfrecrankprize', [], function (s, d) {
                //         if (d.s == 1) {
                //             G.tip_NB.show(X.createPrizeInfo(data.rankprize, 0, 1));
                //             G.frame.jiangli.hide();
                //             G.event.emit('freshKFZ');
                //         }
                //     }, true);
                // }
                //
                // G.frame.jiangli.data({
                //     frame:'jifen_lq',
                //     data:data.rankprize,
                //     callback:callback
                // }).show();
            }
        },
        setContents: function (showani) {
            var me = this;

            me.ui.setTimeout(function () {
                me.setJiangli();
            }, 500);

            if(me.DATA.status == 2) {
                me.ui.finds("img_di").hide();
                me.ui.finds("ico_gou").hide();
                me.ui.finds("txt_tgzd").hide();
            } else {
                me.ui.finds("img_di").show();
                me.ui.finds("ico_gou").show();
                me.ui.finds("txt_tgzd").show();
            }

            me.setTop();
            me.setCenter(showani);
            me.setTzCs();
            me.checkJumpFight();
        },
        setTop: function () {
            var me = this;
            var data = me.DATA;
            var nodes = me.ui.nodes;
            nodes.sz_paihang.setString((data.rank <= 300 ? data.rank || 0 : "300+"));
            nodes.sz_dqjf.setString(data.jifen || 0);
            nodes.text_gssl.setString(X.fmtValue(G.class.getOwnNum(2019, 'item')));
            if (data.status == 1) {
                if (me.jifenTimer) {
                    me.ui.clearTimeout(me.jifenTimer);
                    delete me.jifenTimer;
                }
                me.jifenTimer = X.timeout(nodes.djs, data.cd, function () {
                    me.getData(function () {
                        me.setContents();
                    });
                });
            } else if (data.status == 2) {
                nodes.djs.setString(L('YJS'));
            }
        },
        setCenter: function (showani) {
            var me = this;
            var nodes = me.ui.nodes;
            var data = me.DATA;
            var listArr = me.listArr = [nodes.p1, nodes.p2, nodes.p3];

            // nodes.sxcs.hide();
            nodes.sxcs1.hide();
            if (data.status == 1) {
                nodes.sxcs1.setString(data.freerefnum || 0);
                // nodes.sxcs.show();
                nodes.sxcs1.show();
            }

            for (var i = 0; i < 3; i++) {
                listArr[i].data = data.enemy[i];
                me.setItem(listArr[i], i , showani);
            }
            // var j = 0;
            // me.ui.setTimeout(function () {
            //
            //     listArr[j].data = data.enemy[j];
            //     me.setItem(listArr[j],j);
            //     j++;
            // },50,listArr.length - 1);
        },
        setAni:function (ui,showani){
            if(showani){
                G.class.ani.show({
                addTo: ui,
                json: 'ani_yuwaizhengba_shuaxin',
                x: ui.width / 2,
                y: ui.height / 2,
                repeat: false,
                autoRemove: true,
                onload: function (node, action) {

                }
            });
            }
        },
        setItem: function (ui, index , showani) {
            var me = this;

            var item = me.ui.nodes.list.clone();
            item.setPosition(0, 0);
            ui.removeAllChildren();
            me.setAni(ui,showani);
            ui.addChild(item);
            X.autoInitUI(item);
            item.setTouchEnabled(false);
            item.nodes.img_yjb.setTouchEnabled(false);
            var data = me.DATA;
            var nodes = item.nodes;

            var gud = ui.data;

            if (!X.isHavItem(gud)) return;
            if (gud.winside != undefined) {
                gud.model = '11011_jia';
            }

            X.setHeroModel({
                parent: nodes.rw3,
                data: (gud.herolist[0] && gud.herolist[0].sqid) ? (gud.herolist[1] ? gud.herolist[1] : gud.headdata) : gud.herolist[0],
                model:gud.model ,
                scaleNum:0.8,
                callback: function (node) {
                    item.nodes.rw3.setFlippedX(index % 2);
                    nodes.qizi.x = (index % 2==0?-90:140);

                    if (data.status == 1) {
                        nodes.qizi.hide();
                        if (gud.winside != undefined) {
                            //胜利
                            nodes.wjnr.hide();
                            nodes.wz.hide();
                            if (gud.winside == 0) {
                                node.runAni(0, "yuwai_shenli", true);
                                nodes.tupian.loadTexture('img/zbs/shengli.png',1);
                                nodes.tupian.show();
                            } else {
                                // 失败
                                node.runAni(0, "yuwai_shibai", true);
                                nodes.tupian.loadTexture('img/zbs/shibai.png',1);
                                nodes.tupian.show();
                            }
                        } else {
                            nodes.wjnr.show();
                            nodes.wz.show();
                            nodes.tupian.hide();
                            X.render({
                                text_zdl1: gud.zhanli || 0,
                                wanjiaming: gud.headdata.name,
                                quming: gud.headdata.ext_servername,
                                jg: gud.jifen || 0
                            }, nodes);
                        }
                    } else if (data.status == 2) {
                        // item.finds('pm').show();
                        nodes.wz.hide();
                        nodes.tupian.hide();
                        nodes.qizi.show();
                        nodes.qizi.setBackGroundImage('img/zbs/p' + (index+1) + '.png',1);
                        nodes.qizi_sz.setString(index+1);
                        X.render({
                            text_zdl1: gud.zhanli || 0,
                            wanjiaming: gud.headdata.name,
                            quming: gud.headdata.ext_servername,
                        }, nodes);
                    }

                    X.enableOutline(item.finds('jbhd'));
                    X.enableOutline(nodes.jg);
                    X.enableOutline(nodes.quming);
                }
            });

            gud.index = index;
            ui.gud = gud;
            ui.click(function (sender, type) {

                function callback(dd) {
                    if (dd.s == 1) {


                        // //胜场奖励红点
                        // if (dd.d.scjl) {
                        //     G.event.emit('hdchange', {type: 1, tag: 'kfzb_scjl'});
                        //     G.event.emit('hdchange', {type: 1, tag: 'kfzb_jfs'});
                        //     G.event.emit('hdchange', {type: 1, tag: 'zhengzhan_kfzb'});
                        //     G.event.emit('hdchange', {type: 1, tag: 'zhengzhan'});
                        // }
                        G.event.emit('freshKFZ');
                        me.getData(function () {
                            G.class.ani.show({
                                addTo: sender,
                                json: 'ani_yuwaizhengba_yanwu',
                                x: sender.width / 2,
                                y: sender.height / 2,
                                cache: true,
                                repeat: false,
                                autoRemove: true,
                                onend: function (node, action) {
                                    me.setContents();
                                }
                            });
                        });
                    }
                }

                if (sender.gud.winside != undefined) {
                    if (sender.gud.winside == 0) {
                        G.tip_NB.show(L('KFZ_JF_SL'));
                    } else {
                        // 失败
                         G.tip_NB.show(L('KFZ_JF_SB'));
                    }
                    return;
                }

                G.frame.yuwaizhengba_drxx.data({
                    pvType: 'pvywzbjf',
                    data: sender.gud,
                    btnName:me.DATA.status == 2 ? 'QUEDIN': '',
                    callback: callback
                }).checkShow();
            });
            item.show();
        },
        setTzCs: function () {
            var me = this;
            if (me.DATA.status == 2) {
                me.ui.nodes.wz_di.hide();
                return;
            }
            me.ui.nodes.wz_di.show();
            me.ui.nodes.sycs1.setString(me.DATA.pknum);
            me.ui.nodes.jia.touch(function (sender, type) {
                if (type === ccui.Widget.TOUCH_ENDED) {
                    if (me.DATA.status == 2) {
                        G.tip_NB.show(L('KFZ_ADD_TIP'));
                        return;
                    }
                    me.buyTimes();
                }
            });
        },
        buyTimes: function (callback) {

            var me = this;
            G.frame.alert.data({
                cancelCall:null,
                ok:{wz:L('BTN_OK')},
                okCall: function(){
                    me.ajax('crosszb_jfbuypknum',[], function (str, data) {
                        if (data.s == 1){
                            cc.mixin(me.DATA,data.d,true);
                            me.setTzCs();
                            callback && callback();
                            me.buyTimes(callback);
                        }
                    },true);
                },
                autoClose: false,
                richNodes:[
                    new cc.Sprite('#'+G.class.getItemIco('rmbmoney'))
                ],
                richText: X.STR(L('BUYBOSSNUM_2'),me.DATA.buyneed[0].n, P.gud.vip,me.DATA.buynum)
            }).show();
        },
    });
    G.frame[ID] = new fun('kfzb_jfs.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/21.
 */
(function () {
    //域外争霸排行榜
    var ID = 'yuwaizhengba_phb';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            me.nodes.btn_zyjj.finds('text_zzjjc$').setString(L('KFZ_PMJL'));
            me.nodes.btn_phb.finds('text_zzjjc$').setString(L('KFZ_SJJL'));
            X.radio([me.nodes.btn_zyjj,me.nodes.btn_phb], function (sender) {
                var name = sender.getName();
                var name2type = {
                    btn_zyjj$:1,
                    btn_phb$:2
                };

                me.changeType(name2type[name]);
            });
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.nodes.btn_zyjj.triggerTouch(ccui.Widget.TOUCH_ENDED);
        },
        onHide: function () {
            var me = this;
        },
        changeType: function (type) {
            var me = this;

            if (me.curType && me.curType == type) {
                return;
            }

            me.curType = type;

            var viewConf = {
                "1": G.class.yuwaizhengba_jfphb,
                "2": G.class.yuwaizhengba_phphb,
            };
            me._panels = me._panels || {};
            for (var _type in me._panels) {
                if (cc.isNode(me._panels[_type])) {
                    me._panels[_type].removeFromParent();
                    delete me._panels[_type];
                }
            }

            if (!cc.isNode(me._panels[type])) {
                me._panels[type] = new viewConf[type]('jifen');
                me.ui.nodes.panel_nr.addChild(me._panels[type]);
            }
            me._panels[type].show();
        },
    });

    G.frame[ID] = new fun('jingjichang_bg2.json', ID);
})();
;;/**
 * Created by wfq on 2018/6/21.
 */
(function () {
    //竞技场-奖励-赛季奖励
    G.class.yuwaizhengba_phphb = X.bView.extend({
        ctor: function (type) {
            var me = this;
            me._type = type;
            me._super('jingjichang_pmjl.json');
        },
        refreshPanel: function () {
            var me = this;

            me.setContents();
        },
        bindBTN: function () {
            var me = this;

        },
        onOpen: function () {
            var me = this;

            me.bindBTN();
        },
        onShow: function () {
            var me = this;

            me.refreshPanel();
        },
        onRemove: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            me.setMyRank();
            me.setTable();
        },
        setMyRank: function () {
            var me = this;

            var panel = me.nodes.panel_wzts;
            var size = 22;
            if(me._type == 'zhengba'){
                size = 20;
            }
            panel.removeAllChildren();
            var str = L('KFZ_RANK_'+me._type);
            if(str == '')return;
            var rh = new X.bRichText({
                size:size,
                maxWidth:panel.width,
                lineHeight:size,
                color:G.gc.COLOR.n4,
                family:G.defaultFNT
            });
            rh.text(str);
            if(me._type == 'zhengba'){
                rh.setPosition(cc.p(panel.width / 2 - rh.trueWidth() / 2,panel.height / 2  - 10));
            }else{
                rh.setPosition(cc.p(panel.width / 2 - rh.trueWidth() / 2,panel.height / 2 - rh.trueHeight() / 2 - 6));
            }
            panel.addChild(rh);
        },
        setTable: function () {
            var me = this;

            var scrollview = me.nodes.scrollview;
            scrollview.removeAllChildren();
            cc.enableScrollBar(scrollview);

            var ranklist = G.class.kuafuzhan.getRankPrize(me._type);


            var table = me.table = new X.TableView(scrollview,me.nodes.list_lb,1, function (ui, data) {
                me.setItem(ui, data);
            },null,null,8,10);
            table.setData(ranklist);
            table.reloadDataWithScroll(true);
        },
        setItem: function (ui, data) {
            var me = this;

            X.autoInitUI(ui);

            var layIco = ui.nodes.panel_tx;
            var layPm = ui.nodes.panel_pm;
            var txtPm = ui.nodes.sz_phb;

            layPm.hide();
            txtPm.setString('');
            txtPm.hide();

            layIco.removeAllChildren();
            layIco.setTouchEnabled(false);
            //排名
            layPm.removeBackGroundImage();
            var rank = [].concat(data.rank || data[0]);
            if (rank.length == 1 || rank[0] == rank[1]) {
                if (rank[0] < 4) {
                    layPm.show();
                    layPm.setBackGroundImage('img/public/img_paihangbang_' + rank[0] + '.png',1);
                } else {
                    txtPm.setString(rank[0]);
                    txtPm.show();
                }
            } else {
                if (rank[0] == rank[1]) {
                    // txtPm.setString(rank[0]);
                    if (rank[0] < 4) {
                        layPm.show();
                        layPm.setBackGroundImage('img/public/img_paihangbang_' + rank[0] + '.png',1);
                    } else {
                        txtPm.setString(rank[0]);
                        txtPm.show();
                    }
                } else if(rank[0] > 100){
                    layPm.show();
                    rank[0] == 101 && layPm.setBackGroundImage('img/img_yuwaiph_1.png',1);
                    rank[0] == 301 && layPm.setBackGroundImage('img/img_yuwaiph_2.png',1);
                    rank[0] == 1001 && layPm.setBackGroundImage('img/public/img_paihangbang_7.png',1);
                }  else {
                    txtPm.setString(rank[0] + '-' + rank[1]);
                    txtPm.show();
                }
            }

            ui.setTouchEnabled(false);
            layIco.setTouchEnabled(false);
            X.alignItems(layIco,data.p || data[1],'left',{
                touch:true
            });
        }
    });

})();
;;/**
 * Created by lsm on 2018/9/26.
 */
(function () {
    //域外争霸排行榜-排行榜
    var ID = 'yuwaizhengba_zbphb';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f3";
            me._super(json, id,{action:true});
        },
        initUi: function () {
            var me = this;

            me.nodes.text_zdjl.setString(L("KFZ_ZB_PHB"));
            // me.ui.finds("text_zdjl").setString(L("PHB"));
        },
        bindBtn: function () {
            var me = this;

            me.ui.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            var view = new G.class.yuwaizhengba_phphb('zhengba');
            me.nodes.panel_nr.addChild(view);
        },
        onHide: function () {
            var me = this;
        }

    });

    G.frame[ID] = new fun('jingjichang_bg3.json', ID);
})();
;;
(function () {
    //域外争霸_争霸强者

    var ID = 'yuwaizhengba_zbqz';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id,{action:true});
        },
        getData : function(callback){
            var me = this;
            me.ajax('crosszb_kinglog',[],function(s,data){
                if (data.s == 1) {
                    me.DATA = data.d;
                    callback && callback();
                }
            },true);
        },
        bindUI: function () {
            var me = this;
            me.ui.nodes.mask.click(function(sender,type){
                me.remove();
            });
            me.nodes.tip_title.setString(L('UI_TITLE_ZBQZ'));
        },
        onOpen: function () {
            var me = this;
            me.bindUI();
        },
        onShow: function () {
            var me = this;
            new X.bView("kfzb_zbqz.json", function (view) {
                me._view = view;
                me.ui.nodes.panel_nr.removeAllChildren();
                me.ui.nodes.panel_nr.addChild(view);
                me.getData(function () {
                    me.setContents();
                });
            });
        },
        setContents:function() {
            var me = this;
            var view = me._view;
            var data = me.DATA;
            var scrollview = view.nodes.scrollview_xuanshangrenwu;
            cc.enableScrollBar(scrollview);
            scrollview.removeAllChildren();
            view.nodes.zwnr.hide();
            if (!data || data.length < 1) {
                view.nodes.zwnr.show();
                return;
            }
            var table = me.table = new X.TableView(scrollview,view.nodes.list_nr,1, function (ui, data,pos) {
                me.setItem(ui, data,pos);
            },null, null,8, 10);
            table.setData(data);
            table.reloadDataWithScroll(true);
        },
        setItem :function(ui,data,pos) {
            var me = this;
            if(!data){
                ui.hide();
                return;
            }
            ui.setTouchEnabled(false);
            X.autoInitUI(ui);
            var nodes = ui.nodes;
            X.render({
                txt_name:data.headdata.name,
                ph_wz:data.rank,
                text_zdl:data.zhanli,
                txt_name1:data.toheaddata.name,
                ph_wz1:data.torank,
                text_zdl1:data.tozhanli,
            },nodes);
            ui.finds('img_dk_0').setColor(cc.color('#EDE4D0'));
            ui.finds('img_dk').setColor(cc.color('#EDE4D0'));
            var ico1 = nodes.panel_tx;
            var wid1 = G.class.shead(data.headdata);
            wid1.setPosition(cc.p(ico1.width / 2,ico1.height / 2));
            ico1.removeAllChildren();
            ico1.addChild(wid1);
            ico1.setTouchEnabled(true);
            ico1.setSwallowTouches(false);
            ico1.data = data.uid;
            ico1.click(function (sender, type) {
                G.frame.wanjiaxinxi.data({
                    pvType: 'zypkjjc',
                    uid: sender.data
                }).checkShow();
            });

            var ico2 = nodes.panel_tx2;
            var wid2 = G.class.shead(data.toheaddata);
            wid2.setPosition(cc.p(ico2.width / 2,ico2.height / 2));
            ico2.addChild(wid2);
            ico2.setTouchEnabled(true);
            ico2.setSwallowTouches(false);
            ico2.data = data.touid;
            ico2.click(function (sender, type) {
                G.frame.wanjiaxinxi.data({
                    pvType: 'zypkjjc',
                    uid: sender.data
                }).checkShow();
            });

            var btn = nodes.btn_huifang;
            btn.setSwallowTouches(false);
            btn.data = data.flogid;
            btn.click(function (sender, type) {
                me.ajax('crosszb_fightreplay',[sender.data], function (s,data) {
                    if (data.s == 1) {
                        data.d.flog.pvType = "video";
                        G.frame.fight.demo(data.d.flog);
                    }
                },true);
            });
            ui.show();
        },
        onAniShow: function () {
            var me = this;
        },
    });

    G.frame[ID] = new fun('ui_tip7.json', ID);
})();
;;/**
 * Created by LYF on 2018/9/26.
 */
(function () {
    //域外争霸-战斗日志
    var ID = 'yuwaizhengba_zdrz';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.mask.click(function () {
                me.remove();
            })
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("crosszb_getzbflog", [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d.log;
                    callback && callback();
                }
            })
        },
        show : function(conf){
            var me = this;
            var _super = this._super;
            this.getData(function () {
                _super.apply(me,arguments);
            });
        },
        onShow: function () {
            var me = this;
            cc.enableScrollBar(me.nodes.listview_zjjl);
            me.nodes.listview_zjjl.setItemsMargin(5);
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;

            if(me.DATA.length < 1) {
                me.ui.finds("img_zw").show();
                return;
            }

            me.DATA.sort(function (a, b) {
                return a.ctime > b.ctime ? -1 : 1;
            });

            for(var i = 0; i < me.DATA.length; i ++) {
                me.nodes.listview_zjjl.pushBackCustomItem(me.setFightLog(me.DATA[i]));
                var xian = me.ui.finds("pan1").clone();
                xian.show();
                me.nodes.listview_zjjl.pushBackCustomItem(xian);
            }
        },
        setFightLog: function (data) {
            var me = this;

            var str = "";
            var text1,text2,text3;

            text1 = L('NI');
            text2 = '<font color=#fdd464'+'>'+data.pkname + '</font>' + '【'+ data.ext_servername +'】';
            text3 = data.rank;
            if (data.iswin == 1) {
                str = X.STR(L('KFZ_ZB_RZ_2'),text1,text2);
            } else {
                str = X.STR( data.rank != undefined ? L('KFZ_ZB_RZ_1') : L('KFZ_ZB_RZ_1_1'),text1,text2,data.rank != undefined ? text3 : '');
            }


            var richText = new X.bRichText({
                size:20,
                lineHeight:32,
                maxWidth: me.nodes.listview_zjjl.width,
                color:'#f6ebcd',
                family: G.defaultFNT
            });
            richText.text(str);
            richText.setAnchorPoint(0, 1);


            return richText;
        }
    });
    G.frame[ID] = new fun('kfzb_zjjl.json', ID);
})();
;;/**
 * Created by zm on 2018-09-26.
 */
(function () {

    //争霸赛
    var ID = 'yuwaizhengba_zhengba';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
			me.fullScreen = true;
            me._super(json, id, {action: true});
        },
        getData: function (callback) {
            var me = this;

            me.ajax('crosszb_zhengbamain',[], function (str,data) {
                if (data.s == 1) {
                    me.DATA = data.d;
                    // me.resetStatus(true);
                    callback && callback();
                }
            },true);
        },
        setContents:function() {
            var me = this;
            var data = me.DATA;

            me.ui.setTimeout(function () {
                me.setJiangli();
            },500);

            me.setTop();
            // me.setBuff();
            me.setTzCs();

            // if (me.isGetNew[1] || me.isGetNew[2]) {
                me.setCenter();
            // }

            me.nodes.bg_cm.setTouchEnabled(me.DATA.pkdata && me.DATA.pkdata.length > 0);
        },
        setTop: function(){
            var me = this;
            var data = me.DATA;

            me.ui.finds("jssj").setString(data.status == 1 ? L("JSSJ") : L("KSSJ"));

            X.render({
                // sz_dqjf:G.frame.yuwaizhengba.DATA.jifen,
                sz_dqjf:function(node){
                    node.setString('');
                    var str = '';
                    if (me.DATA.myrank == 0) {
                        str = L('ZWJL');
                    } else {
                        var rankPrize = G.class.kuafuzhan.getByRank(me.DATA.myrank);
                        var fmt = "{1}<font color=" + G.gc.COLOR.n34 + ">*{2}</font> ";
                        var kkk = 0;
                        for (var i in rankPrize){
                            kkk++;
                            str += X.STR(fmt, G.class.getItem(rankPrize[i].t,rankPrize[i].a).name,rankPrize[i].n);
                        }
                    }
                    var rt = new X.bRichText({
                        size: 20,
                        maxWidth: node.width,
                        lineHeight: 24,
                        color: '#ffb200'
                    });
                    rt.text(str);
                    rt.setAnchorPoint(0,1);
                    rt.setPosition(0,node.height - 3);
                    node.removeAllChildren();
                    node.addChild(rt);
                },
                sz_paihang: data.myrank == 0 ? L('WSB') : data.myrank,
                djs:function(node){
                    if (node.timer) {
                        node.clearTimeout(node.timer);
                        delete node.timer;
                    }
                    node.timer = X.timeout(node, G.frame.yuwaizhengba.DATA.zhengbacd, function () {
                        me.getData(function () {
                            G.frame.yuwaizhengba.getData(function () {
                                me.setContents();
                            });
                        });
                    });
                },
                text_gssl:X.fmtValue(G.class.getOwnNum(2019,'item'))
            }, me.nodes);
        },
        setCenter:function() {
            var me = this;
            // me.isGetNew[me.curType] = false;

            var data = me.DATA;
            var list = [];


            // if(me.curType != me._lastType){
            //     me._lastType = me.curType;
                var clone = me.nodes[ {'1':'bg_1', '2':'bg_2'}[me.curType] ].clone();
                clone.show();
                me.nodes.scrollview.removeAllChildren();
                me.nodes.scrollview.setInnerContainerSize( clone.getContentSize() );
                me.nodes.scrollview.addChild(clone);
                // me.nodes.scrollview.hide();
                me._list = [];
            // }

            if (me.curType == 1) {
                list = data['top10'];
            } else {
                list = data['pkdata'];
            }

            var panel = clone.finds('pan1');
            panel.removeAllChildren();
            var anis = me.curType == 1 ? [1,1,3] : [1,1];
            var y = me.curType == 1 ? [1260*0.5, 1260+1260*0.5-460, 2*1260+1260*0.5-460*2-200] : [1260*0.5, 1260+1260*0.5-460];
            for(var i=0;i<anis.length;i++){
                G.class.ani.show({
                    json:'ani_yuwaizhengba_shuijing' + anis[i],
                    addTo:panel,
                    x:panel.width*0.5,
                    y:y[i], // i*1260+1260*0.5 - (i > 0 ? i*460 : 0)
                    z:10 - i,
                    repeat:true,
                    autoRemove:false
                });
            }

            var num = ['',10,4][me.curType];

            // if(!list || list.length == 0){
                // me.nodes.scrollview.show();
                // return;
            // }

            var btnType;
            var j = 0;
            me.ui.setTimeout(function () {
                var d = list[j];
                var ui = me.nodes.scrollview.finds('p' + (j + 1));
                ui.idx = j;
                // if (me.curType == 2) {
                //     ui.setPosition(me.nodePos[me.myDir][j]);
                // }

                if(!ui.data || d.uid != ui.data.uid){
                    ui.removeAllChildren();

                    if (d != undefined) {
                        if (me.curType == 1) {
                            btnType = 'qd';
                        } else {
                            btnType = 'tz';
                        }

                        d['btnType'] = btnType;
                        var item = me.nodes.list.clone();
                        me.setItem(ui,item,d,j);
                        me._list.push(item);
                        item.show();
                    } else {
                        // var img = new ccui.ImageView('img/zbs/rw_xwyd.png',1);
                        // img.setPosition(cc.p(ui.width / 2,ui.height / 2));
                        // ui.addChild(img);
                        // img.setFlippedX(j % 2);
                        G.class.ani.show({
                            json: "ani_yuwaizhengba_xuweiyidai",
                            addTo: ui,
                            x: ui.width / 2,
                            y: ui.height / 2,
                            cache: true,
                            repeat: true,
                            autoRemove: false
                        })
                    }
                    ui.show();
                }
                j++;
                // if(j == num - 1){
                //     me['_init' + me.curType] = true;
                // }
            },50,num - 1);

            // if(me.DATA.myrank > 10){
            //     me.scrollByRank(0);
            // }
        },
        setItem:function(ui,item,d,index) {
            var me = this;
            X.autoInitUI(item);

            var rw = item.finds('rw3');
            // var lay = item.finds('wz1');
            me.setQz(d.rank,item,ui.idx+1);

            item.nodes.liaotian.hide();
            // var loopTalk = function(){
            //     item.nodes.liaotian.hide();
            //     if (d.uid != P.gud.uid) {
            //         me.showQiPao(item, d.rank < me.DATA.myrank ? L('YWZB_TALK1') : L('YWZB_TALK2'), true);
            //     }
            // };
            // loopTalk();

            X.render({
                text_zdl1: d.zhanli,
                wanjiaming: function(node){
                    setTextWithColor(node, d.headdata.name, d.uid == P.gud.uid ? G.gc.COLOR.n34 : G.gc.COLOR.n1);
                },
                quming: d.servername,
            }, item.nodes);

            X.setHeroModel({
                parent: rw,
                data: d.herolist[0].sqid ? (d.herolist[1] ? d.herolist[1] : d.headdata) : d.herolist[0],
                scaleNum:0.8,
                callback:function (node) {
                    // rw.setFlippedX((index + me.myDir + 1) % 2);
                    var gud = d;
                    gud.index = index;
                    ui.data = gud;

                    if (gud.uid == P.gud.uid) {
                        // gud.btnType = 'qd';
                        me.myNode = ui;
                        // me.scrollByRank(gud.rank);
                    }

                    // item.data = gud;
                    item.setTouchEnabled(true);
                    item.setSwallowTouches(false);
                    item.touch(function (sender, type) {
                        if (type === ccui.Widget.TOUCH_NOMOVE) {
                            // 挑战区不能点击自己
                            if (gud.uid == P.gud.uid && me.curType == 2) {
                                G.tip_NB.show(L('YWZB_PK_ME'));
                                return;
                            }

                            if (gud.uid != P.gud.uid) {
                                me.enemyNode = ui;
                            }

                            // me.setAllHeroInfoVisible(false);
                            // delete me['_init_' + me.curType + '_' + me.myNode.data.index];
                            // me.jumpOutScreen(sender, gud.rank, function(){
                            //     me.goUpAni(function () {
                            //         me.enemyNode.data = me.myNode.data;
                            //         delete me.myNode.data;
                            //         me.getData(function () {
                            //             me.setLaysStatus(me.curType, function () {
                            //                 me.setContents();
                            //             });
                            //         });
                            //     });
                            // });
                            // return;

                            G.frame.yuwaizhengba_drxx.data({
                                pvType:'pvywzbzb',
                                data:gud,
                                btnName:me.curType == 1 ? 'QUEDIN' : '',
                                callback:function(dd){
                                    if (dd.s == 1) {
                                        if (dd.d.fightres.winside == 0) {
                                            if(me.myNode.data.rank > me.enemyNode.data.rank){
                                                // 战胜比自己排名高的对手
                                                me.setAllHeroInfoVisible(false);
                                                delete me['_init_' + me.curType + '_' + me.myNode.data.index];
                                                // 飞到屏幕外面
                                                me.jumpOutScreen(sender, gud.rank, function(){
                                                    // 玩家快速滑入到被击败对手的位置
                                                    me.goUpAni(function () {
                                                        // 更新新位置的数据
                                                        me.enemyNode.data = me.myNode.data;
                                                        // 删除旧数据
                                                        delete me.myNode.data;
                                                        G.event.emit('freshKFZ');
                                                        me.getData(function () {
                                                            me.setLaysStatus(me.curType, function () {
                                                                me.setContents();
                                                                me.setAllHeroInfoVisible(true);
                                                            });
                                                        });
                                                    });
                                                });
                                            }else{
                                                // 战胜比自己排名低的对手
                                                // me.showQiPao(me.enemyNode.getChildren()[0], L('YWZB_TALK_LOST'), false, function(){
                                                //     loopTalk();
                                                // });
                                            }
                                        } else {
                                            // 失败
                                            G.event.emit('freshKFZ');
                                            // me.showQiPao(me.enemyNode.getChildren()[0], L('YWZB_TALK_WIN'), false, function(){
                                            //     loopTalk();
                                            // });
                                        }
                                    } else if(dd.s == -6) {
                                        me.getData(function () {
                                            me.setContents();
                                        });
                                    }
                                }
                            }).checkShow();
                        }
                    });
                }
            });

            item.setPosition(cc.p(ui.width / 2,ui.height / 2));
            item.setAnchorPoint(cc.p(.5,.5));

            if(!me['_init_' + me.curType + '_' + index]){
                me['_init_' + me.curType + '_' + index] = true;
                G.class.ani.show({
                    json:'ani_yuwaizhengba_shuaxin',
                    addTo:ui,
                    x:ui.width*0.5,
                    y:20,
                    repeat:false,
                    autoRemove:true
                });
            }

            ui.addChild(item);
        },
        refreshAni: function(){
            var me = this;

            cc.each(me._list,function(item, index){
            });
        },
        goUpAni: function(callback) {
            var me = this;

            var myMod = me.myNode.data.index % 2;
            var enemyMod = me.enemyNode.data.index % 2;
            // 不是同一边, 才翻转
            if(myMod != enemyMod){
                me.myNode.finds('rw3').setFlippedX( enemyMod == 0);
            }
            // me.myAction.play('run',true);
            me.enemyNode.setLocalZOrder(10);
            me.myNode.runActions([
                [
                    // cc.moveTo(0.45,me.enemyNode.getPosition()),
                    cc.jumpTo(0.45, me.enemyNode.getPosition(), 100, 1),
                    cc.callFunc(function() {
                        me.ui.setTimeout(function () {
                            G.class.ani.show({
                                json:'ani_yuwaizhengba_yanwu',
                                addTo:me.enemyNode,
                                x:me.enemyNode.width*0.5,
                                y:20,
                                repeat:false,
                                autoRemove:true
                            });
                        },400);
                    })
                ],
                cc.delayTime(0.15),
                cc.callFunc(function() {
                    callback && callback();
                })
            ]);
        },
        // 英雄跳出屏幕
        jumpOutScreen: function(item, rank, callback){
            var me = this;
            var start = item.getPosition();
            var x = rank % 2 != 0 ? -1 * C.WS.width*0.5 : C.WS.width + C.WS.width*0.5;
            var end = item.convertToNodeSpace(cc.p(x, C.WS.height*0.5));
            end.y = start.y;

            item.finds('yjb_dh').show();
            G.class.ani.show({
                addTo: item.finds('yjb_dh'),
                json: 'ani_yuwaizhengba_beida',
                // x: item.finds('yjb_dh').width / 2,
                // y: item.finds('yjb_dh').height / 2,
                repeat: false,
                autoRemove: true,
                onend: function (node, action) {
                    item.runActions([
                        cc.bezierTo(0.45, [
                            start,
                            cc.p((end.x - start.x)*0.5, start.y + 150),
                            end
                        ]),
                        cc.callFunc(function() {
                            item.removeFromParent();
                            callback && callback();
                        })
                    ]);
                }
            });


            // item.runActions([
            //     cc.jumpTo(3000, cc.p(C.WS.width*0.5, C.WS.height*0.5), 150, 1),
            //     cc.callFunc(function() {
            //         item.removeFromParent();
            //     })
            // ]);
        },
        setAllHeroInfoVisible: function(val){
            var me = this;

            cc.each(me._list,function(item, index){
                item.nodes.qizi.setVisible(val);
                item.nodes.qizi2.setVisible(val);
                item.nodes.img_sb.setVisible(val);
                item.nodes.text_zdl1.setVisible(val);
                item.nodes.wanjiaming.setVisible(val);
                item.nodes.quming.setVisible(val);

                if(!val && item.timer){
                    item.clearTimeout(item.timer);
                    delete item.timer;
                    item.nodes.liaotian.setVisible(val);
                }

                item.finds('img_zdlbg').setVisible(val);
                item.finds('img_zdl').setVisible(val);
            });
        },
        // 显示气泡
        // @param msg string or array
        // @param repeat bool 是否循环提示
        // @param last 上条消息
        showQiPao : function(item, msg, repeat, callback, last){
            var me = this;
            if(!cc.isNode(item)){
                return;
            }

            if(cc.isString(msg)){
                msg = [msg];
            }

            var show = function(){
                item.nodes.wz.setString(val);
                item.nodes.liaotian.show();

                item.setTimeout(function () {
                    item.nodes.liaotian.hide();
                    callback && callback();
                },3000);
            };

            var val = X.arrayRand(msg);
            if(msg.length > 1 && val == last){
                // 和上条相同则重新随机
                me.showQiPao(item, msg, repeat, callback, val);
                return;
            }

            if(item.timer){
                item.clearTimeout(item.timer);
                delete item.timer;
            }

            if(repeat){
                // 文字泡每隔7-13S, 40%概率放一个文字泡
                item.timer = item.setTimeout(function () {
                    if(X.rand(0, 100) <= 40){
                        show();
                    }
                    me.showQiPao(item, msg, repeat, callback, val);
                },X.rand(7, 13)*1000);
            }else{
                show();
            }
        },
        setQz:function(rank,item, idx) {
            var me = this;

            item.nodes.qizi.hide();
            item.nodes.qizi2.hide();

            var qizi = idx % 2 != 0 ? item.nodes.qizi : item.nodes.qizi2;
            qizi.show();

            qizi.finds('sz').setString(rank);
            X.enableOutline(qizi.finds('sz'), cc.color('#000000'),2);
            if (rank < 4) {
                qizi.setBackGroundImage('img/zbs/p' + rank + '.png', 1);
            } else {
                qizi.setBackGroundImage('img/zbs/p_tongyong.png', 1);
            }
        },
        setTzCs:function() {
            var me = this;
            var data = me.DATA;

            X.render({
                sycs1: data.pknum || 0,
            }, me.nodes);
        },
        setJiangli:function() {
            var me = this;
            var data = me.DATA;

            if (data.rankprize) {
                G.frame.jiangli.data({
                    prize:data.rankprize,
                }).once('show', function () {
                    me.ajax('crosszb_zbrecrankprize',[], function (s, d) {
                        if (d.s == 1) {
                            // G.tip_NB.show(X.createPrizeInfo(data.rankprize,0,1));
                        }
                    },true);
                }).show();
            }
        },
        // resetStatus:function(v) {
        //     var me = this;

        //     me.isGetNew = me.isGetNew || {};
        //     for(var j=0;j<2;j++) {
        //         me.isGetNew[j+1] = v;
        //     }
        // },
        setRefresh:function(bool) {
            var me = this;

            // var data = me.DATA;
            // me.nodes.tiaozhan.hide();
            me.nodes.btn_sx.hide();

            if (bool) {
                me.nodes.btn_sx.show();
            }
        },
        setCDTime:function(bool) {
            var me = this;
            var data = me.DATA;
            me.nodes.bg_kz_1.hide();

            if (me.cdTimer) {
                me.ui.clearTimeout(me.cdTimer);
                delete me.cdTimer;
            }

            if (bool && data.cdtime - G.time > 0) {
                me.cdTimer = X.timeout(me.nodes.sz9, data.cdtime, function () {
                    me.setCDTime(false);
                });
                me.nodes.bg_kz_1.show();
            }
        },
        buyTimes : function(callback){
            //购买BOSS战斗次数
            var me = this;
            G.frame.alert.data({
                cancelCall:null,
                ok:{wz:L('BTN_OK')},
                okCall: function(){
                    me.ajax('crosszb_zbbuypknum',[], function (str, data) {
                        if (data.s == 1){
                            cc.mixin(me.DATA,data.d,true);
                            me.setTzCs();
                            callback && callback();
                            me.buyTimes(callback);
                        }
                    },true);
                },
                autoClose: false,
                richNodes:[
                    new cc.Sprite('#'+G.class.getItemIco('rmbmoney'))
                ],
                richText: X.STR(L('BUYBOSSNUM_2'),me.DATA.buyneed[0].n, P.gud.vip,me.DATA.buynum)
            }).show();
        },
        setLaysStatus:function(type,callback) {
            var me = this;

            var data = me.DATA;
            // me.nodes.scrollview.hide();
            me.nodes.tiaozhan.hide(); // 挑战次数
            me.nodes.btn_sx.hide(); // 刷新对手
            me.nodes.lay_wzzd.hide();
            me.nodes.lay_wzzd2.hide();
            me.setCDTime(false);

            if (type == 1) {
                if (data.status == 1) {
                    me.nodes.lay_wzzd2.show();
                }
                me.nodes.scrollview.jumpToTop();
                // me.nodes.scrollview.show();
            } else {
                if (data.status == 1) {
                    me.nodes.lay_wzzd.show();
                    me.setRefresh(true);
                }
                if (data.cdtime) {
                    me.setCDTime(true);
                }
                me.nodes.scrollview.jumpToTop();
                // me.nodes.scrollview.show();
                me.nodes.tiaozhan.show(); // 挑战次数
            }

            callback && callback();
        },
        // scrollByRank: function(rank, ani){
        //     var me = this;
        //     // rank 0 未上榜,显示到顶部
        //     var percent = [0, 0, 0, 0, 17, 30, 50, 65, 82, 100, 100][rank];
        //     percent = percent || 0;

        //     if(ani){
        //         me.nodes.scrollview.scrollToPercentVertical(percent, 0.1, true);
        //     }else{
        //         me.nodes.scrollview.jumpToPercentVertical(percent);
        //     }
        //     me.nodes.scrollview.show();
        // },
        bindUI: function () {
            var me = this;

            me.nodes.btn_fh.click(function (sender, type) {
                me.remove();
            });

            me.nodes.jia.click(function (sender, type) {
                me.buyTimes(function () {
                    // me.setTop();
                });
            });

            me.nodes.btn_zdrz.click(function () {
                G.frame.yuwaizhengba_zdrz.show();
            });

            // me.nodes.btn_zbqz.click(function () {
            //     G.frame.yuwaizhengba_zbqz.show();
            // });

            me.nodes.btn_wysd.click(function () {
                G.frame.shop.data({
                    type: "7",
                    name: "ywsd"
                }).show();
            });

            me.nodes.btn_jifen.click(function () {
                G.frame.yuwaizhengba_zbphb.show();
            });

            function refresh() {
                me.ajax('crosszb_refzbpk',[], function (str, data) {
                    if (data.s == 1) {
                        for(var k in data.d) {
                            me.DATA[k] = data.d[k];
                        }
                        // me.resetStatus(true);
                        G.tip_NB.show(L('SX') + L('SUCCESS'));
                        me.setContents();
                        me.setRefresh(true);
                    }
                    me.ui.setTimeout(function () {
                        me.nodes.btn_sx.setTouchEnabled(true);
                    },50);
                },true);
            }

            me.nodes.btn_sx.click(function (sender, type) {
                sender.setTouchEnabled(false);
                if (me.DATA.refnum > 0) {
                    refresh();
                } else {
                    sender.setTouchEnabled(true);
                    G.tip_NB.show(L('KFZ_ZB_REF_TIP'));
                }
            });

            me.nodes.lay_wzzd.click(function () {
                me.nodes.lay_wzzd.hide();
                me.nodes.lay_wzzd2.show();
                me.curType = 1;
                me.setLaysStatus(1,function () {
                    me.setContents();
                });
            });

            me.nodes.lay_wzzd2.click(function () {
                me.nodes.lay_wzzd.show();
                me.nodes.lay_wzzd2.hide();
                me.curType = 2;
                me.setLaysStatus(2,function () {
                    me.setContents();
                });
            });

            me.nodes.bg_cm.setSwallowTouches(false);
            me.nodes.bg_cm.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_BEGAN) {
                    me.bPos = sender.getTouchBeganPosition();
                } else if (type == ccui.Widget.TOUCH_MOVED) {
                } else if (type === ccui.Widget.TOUCH_ENDED) {
                    var ePos = sender.getTouchEndPosition();
                    // if (me.DATA.status == 1) {
                        if (ePos.x - me.bPos.x > 120) {
                            if (me.curType == 2) {
                                return;
                            }
                            me.curType = 2;
                            me.setLaysStatus(2,function () {
                                me.setContents();
                            });
                        } else if (ePos.x - me.bPos.x < -120) {
                            if (me.curType == 1) {
                                return;
                            }
                            me.curType = 1;
                            me.setLaysStatus(1,function () {
                                me.setContents();
                            });

                        }
                    // }
                }
            });

            G.class.ani.show({
                json:'ani_yuwaizhengba_jiantou',
                addTo:me.nodes.lay_wzzd,
                repeat:true,
                autoRemove:false
            });

            G.class.ani.show({
                json:'ani_yuwaizhengba_jiantou2',
                addTo:me.nodes.lay_wzzd2,
                repeat:true,
                autoRemove:false
            });
        },
        setBgAni:function(){
            var me = this;
            var node = me.ui.nodes.bg_dh;
            node.removeAllChildren();
            G.class.ani.show({
                addTo: node,
                json: 'ani_yuwaizhengba_beijing',
                x: node.width / 2,
                y: node.height / 2,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {

                }
            });
        },
        onOpen: function () {
            var me = this;
            me.myDir = 0;
            // me.isGetNew = {};

            me.bindUI();
            cc.enableScrollBar(me.nodes.scrollview);
        },
        onShow: function () {
            var me = this;
            me.showToper();
            me.setBgAni();

            me.nodes.bg_1.hide();
            me.nodes.bg_2.hide();

            me.DATA = me.data();
            if (me.DATA.status != 1) {
                me.curType = 1; // 强者区
            } else {
                me.curType = 2; // 挑战区
            }
            // me.resetStatus(true);
            if(me.curType == 1) {
                me.nodes.lay_wzzd.hide();
                me.nodes.lay_wzzd2.show();
            }else {
                me.nodes.lay_wzzd.show();
                me.nodes.lay_wzzd2.hide();
            }
            me.setLaysStatus(me.curType,function () {
                me.setContents();
            });
        },
        onAniShow: function () {
            var me = this;
        },
    });
    G.frame[ID] = new fun('kfzb_zbs.json', ID);
})();
;;/**
 * Created by zhangming on 2018-05-14
 */
(function () {
    //杂货铺
    var ID = 'zahuodian';
    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f2";
            me.fullScreen = true;
            // me.needshowMainMenu = true;
            me._super(json, id,{action:true});
        },
        getData : function(callback,port){
            var me = this;
            // me.DATA = {goods:[{name:'XXX',jinbi:222},{name:'VVV',jinbi:555,zk:5}],time:1526994302};
            // callback && callback();
            me.ajax( port || 'zahuopu_open',[],function(str ,data){
                if (data.s === 1) {
                    if(port) me.refresh = 1;
                    me.DATA = data.d;
                    callback && callback();
                }
            },true);
        },
        bindUI: function () {
            var me = this;
            // 关闭
            me.ui.nodes.btn_guanbi.click(function(sender,type){
                me.remove();
            });
            me.ui.nodes.btn_1.click(function(sender,type){
                me.getData(function () {
                    me.setContents();
                },'zahuopu_shuaxin');
            },1000);

            // setPanelTitle(me.nodes.tip_title, L('UI_TITLE_ZHP'));
        },
        setContents:function(bool) {
            var me = this;
            var data = me.DATA.itemlist;
            
            me._firstItem=null;

            if(!bool) {
                for(var idx = 0 ; idx < data.length ; idx++){
                    var list = me.ui.nodes.list.clone();
                    me.ui.nodes['panel_'+(idx+1)].removeAllChildren();
                    me.ui.nodes['panel_'+(idx+1)].addChild(list);
                    me._setItem(list,data[idx],idx);
                }
            }
            if(me.refresh) me.refresh = 0;
            if(me.DATA.num == 0){
                me.ui.nodes.img_zs.show();
                me.ui.nodes.text_2.show();
                me.ui.nodes.text_2.setString(15);
                me.ui.nodes.img_wz.hide();
                me.ui.nodes.img_wz2.show();
                //倒计时隐藏
                me.ui.finds('img_zhong').show();
                me.ui.finds('img_wzbg').show();
                // me.ui.nodes.text_mf.show();
                me.ui.nodes.text_djs.show();

                me._setTime();
            }else {
                me.ui.nodes.img_zs.hide();
                me.ui.nodes.text_2.hide();
                me.ui.nodes.img_wz.show();
                me.ui.nodes.img_wz2.hide();
                me.ui.nodes.img_wz.setString(L("MFSX") + "(" + me.DATA.num + "/" + "5)");
                //倒计时隐藏
                me.ui.finds('img_zhong').hide();
                me.ui.finds('img_wzbg').hide();
                // me.ui.nodes.text_mf.hide();
                if(me.DATA.num != 5) {
                    me.ui.nodes.text_djs.show();
                    me.ui.finds('img_zhong').show();
                    me.ui.finds('img_wzbg').show();
                    me._setTime();
                }
            }
            
            me.ui.setTimeout(function(){
            	G.guidevent.emit('zhahuodian_setContent_over');
            },500);
            
        },
        _setTime:function () {
            var me = this;
            X.timeout(me.nodes.text_djs,me.DATA.freetime,function () {
                me.getData(function () {
                    me.setContents(true);
                })
            },null)//,{showStr: L('SYSJ')})
        },
        _setItem: function (item, data,idx) {
            var me = this;
            
            if(me._firstItem==null){
            	me._firstItem = item;
            }
            
            X.autoInitUI(item);
            var icon = G.class.sitem(data.item,false);
            if(me.refresh) icon.refresh();
            icon.setAnchorPoint(0.5,0.5);
            G.frame.iteminfo.showItemInfo(icon);
            item.nodes.ico_tb.removeAllChildren();
            // item.nodes.ico_tb.setPosition(item.nodes.ico_tb.parent.width/2 - item.nodes.ico_tb.width/2,item.nodes.ico_tb.parent.width/2);
            item.nodes.ico_tb.addChild(icon);
            icon.setPosition(item.nodes.ico_tb.width / 2, data.item.a == "hero"?31:item.nodes.ico_tb.height / 2);
            if(icon.num && data.item.a !== "equip"){
                // icon.num.string = 'x'+' '+icon.num.string;
                //icon.num.setPosition(icon.width*0.9 - icon.num.width,icon.num.height + icon.height*0.05);
                icon.num.string = icon.num.string;
                icon.num.setFontName(G.defaultFNT);
                X.enableOutline(icon.num,'#000000');
            }
            //item.nodes.text_1.setString(icon.conf.name);
            item.nodes.panel_yj.setTouchEnabled(false);
            item.nodes.text_1.setFontSize(18);
            item.nodes.text_1.setTextColor(cc.color(G.gc.COLOR[icon.conf.color || icon.conf.star - 1]));
            item.nodes.text_jinbi3.setString(X.fmtValue(data.need[0].n));
            item.nodes.image_jb.loadTexture(G.class.getItemIco(data.need[0].t), 1);
            item.nodes.img_zkbg.hide();
            if(data.sale < 10){
                item.nodes.img_zkbg.show();
                item.nodes.text_zk.setString(data.sale + L("sale"));
                X.enableOutline(item.nodes.text_zk,'#1d9600',2);
                item.nodes.text_jinbi.setString(X.fmtValue(data.need[0].n * (data.sale / 10)));
                item.nodes.text_jinbi2.setString(X.fmtValue(data.need[0].n));
                item.nodes.text_jinbi3.hide();

            }else{
                item.finds('line').hide();
            }
            !data.buynum && item.nodes.img_ygm.show();
            !data.buynum && item.nodes.text_jinbi3.hide();
            !data.buynum && item.nodes.text_jinbi2.hide();
            !data.buynum && item.nodes.text_jinbi.hide();
            !data.buynum && item.nodes.panel_yj.hide();
            !data.buynum && item.nodes.image_jb.hide();
            item.idx = idx;
            item.click(function (sender, type) {
                if(!data.buynum) {
                    G.tip_NB.show(L("DQSPYGM"));
                    return;
                }
                if(P.gud[data.need[0].t] < data.need[0].n * (data.sale / 10)) {
                    if(data.need[0].t == "rmbmoney") {
                        G.tip_NB.show(L("ZSBZ"));
                    }else {
                        G.tip_NB.show(L("HBBZ"));
                    }
                    return;
                }
                me._buy(sender);
            });
            item.setPosition(0,0);
            item.show();
        },
        _buy:function (item) {
            var me = this;
            G.frame.alert.data({
                cancelCall: null,
                okCall: function () {
                    me.ajax('zahuopu_buy',[item.idx],function(str ,data){
                        if (data.s === 1) {
                            item.nodes.img_ygm.show();
                            item.nodes.image_jb.hide();
                            item.nodes.text_jinbi3.hide();
                            item.nodes.text_jinbi2.hide();
                            item.nodes.text_jinbi.hide();
                            item.nodes.panel_yj.hide();
                            G.frame.jiangli.data({
                                prize:[].concat(data.d.prize)
                            }).show();
                        }
                    },true);
                },
                richText: L("SFGM"),
                sizeType: 3
            }).show();

        },
        onOpen: function () {
            var me = this;
            X.audio.playEffect("sound/openzahuodian.mp3");
            me.bindUI();
            me.ui.nodes.text_mf.hide();
        },
        onShow: function () {
            var me = this;
            me.showToper();

            var rw = me.nodes.panel_rw;
            rw.setFlippedX(true);
            G.class.ani.show({
                json:'ani_choukajuese',
                addTo:rw,
                x:rw.width/2,
                y:rw.height/2,
                repeat:true,
                autoRemove:false,
            });
            me.getData(function () {
                me.setContents();
            });
        },
        // show : function(conf){
        //     var me = this;
        //     var _super = this._super;
        //     this.getData(function () {
        //         _super.apply(me,arguments);
        //     });
        // },
        onAniShow: function () {
            var me = this;

            me.action.play("wait", false);
        },
        onRemove: function () {
            var me = this;
            me.event.emit('hide');
        },
    });

    G.frame[ID] = new fun('zahuodian.json', ID);
})();
;;/**
 * Created by LYF on 2018/7/12.
 */
(function () {
    //在线奖励
    var ID = 'zaixianjiangli';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me._super(json, id, {action:true});
            me.preLoadRes = ["shouchong.png", "shouchong.plist"];
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.nodes.panel_mask.click(function () {
                me.remove();
            });
            
            me.nodes.txt_djgb.setTouchEnabled(true);
            me.nodes.txt_djgb.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;

            me.fillSize();
            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        getData: function(callback){
            var me = this;

            G.ajax.send("onlineprize_open", [], function (d) {
                if (!d) return;
                var d = JSON.parse(d);
                if (d.s == 1) {
                    me.DATA = d.d;
                    callback && callback();
                }
            })
        },
        onShow: function () {
            var me = this;

            me.getData(function () {
                me.setContents();
                me.ui.setTimeout(function(){
                	G.guidevent.emit('zaixianjiangli_openOver');
                },500);
            });

            G.class.ani.show({
                json: "ani_shouchonghanbingfashi",
                addTo: me.nodes.penel_rw,
                x: 365,
                y: 135,
                repeat: true,
                autoRemove: false,
                onload: function (node, action) {
                    node.setScale(0.82);
                    node.setFlippedX(true);
                }
            });

        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            var arr = [];
            var prize = [];

            me.nodes.txt_time.show();
            me.nodes.panel_item.hide();
            
            me._firstItem = null;

            for(var i = 0; i < me.DATA.prize.length; i ++){
                me.DATA.prize[i].idx = i;
                arr.push(me.DATA.prize[i]);
                if((i + 1) % 4 == 0){
                    prize.push(arr);
                    arr = [];
                }
            }
            for(var i = 0; i < prize.length; i ++){
                X.alignCenter(me.nodes["panel_item" + (i + 1)], prize[i], {
                    mapItem: function (item) {
                    	
                    	//映射出去方便新手引导
                        if(me.DATA.num == item.data.idx) {
                            me.curItem = item;
                            if(me._firstItem==null){
                                me._firstItem = item;
                            }
                        }
                        if(me.DATA.num > item.data.idx){
                            item.setHighLight && item.setHighLight();
                            var ylq = new ccui.ImageView("img/shouchong/img_xb_ylq.png", 1);
                            ylq.setScale(.8);
                            ylq.setPosition(40, 62);
                            item.addChild(ylq);
                        }
                        item.setTouchEnabled(true);
                        item.touch(function (sender, type) {
                            if(type == ccui.Widget.TOUCH_ENDED){
                                if(item.loop){
                                    G.ajax.send("onlineprize_getprize", [item.data.idx], function (d) {
                                        if (!d) return;
                                        var d = JSON.parse(d);
                                        if (d.s == 1) {
                                            G.frame.jiangli.data({
                                                prize: [].concat(item.data)
                                            }).show();
                                            if(d.d.num == me.DATA.prize.length){
                                                G.view.mainView.getAysncBtnsData(function () {
                                                    me.remove();
                                                });
                                            }else{
                                                me.getData(function () {
                                                    me.setContents();
                                                })
                                            }

                                        }
                                    })
                                }else{
                                    G.frame.iteminfo.data(item).show();
                                }
                            }
                        });
                    }
                })
            }
            me.nodes.txt_time.removeAllChildren();
            var str = new ccui.Text(L("XDJL"), G.defaultFNT, 22);
            var time = new ccui.Text("", G.defaultFNT, 22);
            str.setAnchorPoint(1, 0.5);
            time.setAnchorPoint(0, 0.5);
            str.setTextColor(cc.color("#ffffff"));
            time.setTextColor(cc.color("#2bdf02"));
            X.enableOutline(str, "#000000", 2);
            X.enableOutline(time, "#000000", 2);
            str.setPosition(me.nodes.txt_time.width / 2, me.nodes.txt_time.height / 2);
            time.setPosition(me.nodes.txt_time.width / 2, me.nodes.txt_time.height / 2);
            me.nodes.txt_time.addChild(str);
            me.nodes.txt_time.addChild(time);
            X.timeout(time, me.DATA.cd, function () {
                me.nodes.txt_time.hide();
                G.class.ani.show({
                    json: "ani_wupingkuang",
                    addTo: me.curItem,
                    x: 50,
                    y: 50,
                    repeat: true,
                    autoRemove: false,
                    onload :function(node,action){
                        me.curItem.loop = node;
                    }
                });
            });
            G.view.mainView.set_xsjl(me.DATA);
        },
    });
    G.frame[ID] = new fun('newbie.json', ID);
})();
;;/**
 * Created by LYF on 2018/8/11.
 */
(function () {
    X.checkSuiPian = function (itemId) {
        var isHave = false;
        var conf = G.class.getItem(itemId);
        var data = G.frame.beibao.DATA.item.list;

        for(var i in data) {
            if(data[i].itemid == itemId) {
                data = data[i];
                break;
            }
        }

        if(conf.hcnum && (data.num >= conf.hcnum)) isHave = true;

        return isHave;
    };
    X.checkHeCheng = function (need) {
        var isHave = false;

        var data = G.frame.beibao.DATA.zhuangbei.list;
        var keys = X.keysOfObject(data);
        for(var i = 0; i < keys.length; i ++) {
            var conf = data[keys[i]];
            if(conf.eid == need[0].t) {
                var haveNum = conf.usenum ? conf.num - conf.usenum : conf.num;
                if(haveNum >= need[0].n && P.gud[need[1].t] >= need[1].n) {
                    isHave = true;
                    break;
                }
            }
        }
        return isHave;
    };
    X.checkRongHe = function (hid) {
        var isHave = true;

        function setHeroArr(conf, heroConf) {
            var arr = [];
            var one = conf.mainhero;
            var two = conf.delhero[0];
            var three = conf.chkhero[0];
            var four = conf.chkhero[1] ? conf.chkhero[1] : conf.delhero[1];

            function f(config) {
                for(var i = 0; i < config.n; i ++){
                    var obj = {
                        a: "hero",
                        t: config.t,
                    };
                    arr.push(obj);
                }
            }

            f(one);
            f(two);

            if(four.t) {
                f(four);
            }else {
                for(var i = 0; i < four.num; i ++){
                    var obj = {
                        zz: four.samezhongzu == 1 ? heroConf.zhongzu : 0,
                        star: four.star
                    };
                    arr.push(obj);
                }
            }

            for(var i = 0; i < three.num; i ++){
                var obj = {
                    zz: three.samezhongzu == 1 ? heroConf.zhongzu : 0,
                    star: three.star
                };
                arr.push(obj);
            }

            return arr;
        }


        var idx = 0;
        var inArr = [];
        var conf = G.class.hero.getHcNeed(hid);
        var heroConf = G.class.hero.getById(hid);
        var heroList = G.DATA.yingxiong.list;
        var keys = X.keysOfObject(heroList);
        var need = setHeroArr(conf, heroConf);

        function f() {
            var is = false;
            if(idx == need.length) return;
            for(var i = 0; i < keys.length; i ++){
                if(need[idx].t){
                    if(heroList[keys[i]].hid == need[idx].t && !X.inArray(inArr, keys[i])){
                        idx ++;
                        is = true;
                        inArr.push(keys[i]);
                        break;
                    }
                }else{
                    if((need[idx].zz / heroList[keys[i]].zhongzu == 0 || heroList[keys[i]].zhongzu == need[idx].zz)
                        && heroList[keys[i]].star == need[idx].star
                        && !X.inArray(inArr, keys[i]))
                    {
                        idx ++;
                        is = true;
                        inArr.push(keys[i]);
                        break;
                    }
                }
            }
            if(is) f();
            else {
                isHave = false;
                return;
            }
        }

        f();

        return isHave;
    }
})();
;;/**
 * Created by zhangming on 2018-05-17
 */
(function () {
    //装备合成
    var ID = 'zhuangbei_hecheng';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        setContents:function() {
            var me = this;

        },
        bindUI: function () {
            var me = this;
            setPanelTitle(me.nodes.txt_title, L('UI_TITLE_TJP'));

            me.nodes.mask.click(function(){
                me.remove();
            });

            me.nodes.btn_guanbi.click(function(){
                me.remove();
            });
            
            // me._view.nodes.btn_qr.click(function(){
            //     me.remove();
            // });
        },
        onOpen: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            // me.curXbId = me.data().tid;

            // 装备选择
            new X.bView('zhuangbei_zbxz2.json',function(viewTop){
                me.ui.nodes.panel_nr_up.addChild(viewTop);
                me._viewTop = viewTop;

                new X.bView('zhuangbei_hecheng.json',function(viewBottom){
                    me.ui.nodes.panel_nr_down.addChild(viewBottom);
                    me._viewBottom = viewBottom;
                    me.bindUI();
                    // me.setContents();
                });
            });
        },
        onRemove: function () {
            var me = this;
        },
    });

    G.frame[ID] = new fun('ui_tip1.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/22.
 */
(function () {
    var _fun = {
        // getData: function (callback) {
        //     var me = this;
        //
        //     G.ajax.send('equip_getlist',[],function(d) {
        //         if(!d) return;
        //         var d = JSON.parse(d);
        //         if(d.s == 1) {
        //             G.DATA.zhuangbei = d.d;
        //             callback && callback();
        //         }
        //     });
        // },
        // 装备信息
        getZhuangebiByTid: function (tid) {
            var me = this;

            return G.frame.beibao.DATA.zhuangbei.list[tid];
        },
        //装备的总数量
        getZhuangbeiNumByTid: function (tid) {
            var me = this;

            return G.frame.beibao.DATA.zhuangbei.list[tid] && G.frame.beibao.DATA.zhuangbei.list[tid].num || 0;
        },
        //获得可以使用的装备数量
        getCanUseNumByTid: function (tid) {
            var me = this;

            var num = 0;
            if (G.frame.beibao.DATA.zhuangbei.list[tid]) {
                num = G.frame.beibao.DATA.zhuangbei.list[tid].num - G.frame.beibao.DATA.zhuangbei.list[tid].usenum;
            }

            return num;
        },
        //通过装备类型获得tid数组
         getZbTidArrByType: function (type) {
             var me = this;

             var data = G.frame.beibao.DATA.zhuangbei.list;
             var arr = [];

             for (var tid in data) {
                 var conf = G.class.equip.getById(data[tid]);
                 if (conf.type == type) {
                     arr.push(tid);
                 }
             }

             return arr;
         },
        //可以使用的装备tid数组
        getCanUseZbTidArrByType: function (type) {
            var me = this;

            var data = G.frame.beibao.DATA.zhuangbei.list;
            var arr = [];

            for (var tid in data) {
                var d = data[tid];
                var conf = G.class.equip.getById(d.eid);
                if (conf.type == type && d.num > d.usenum) {
                    arr.push(tid);
                }
            }

            return arr;
        }
    };
    G.frame.zhuangbei = G.frame.zhuangbei || {};
    for (var key in _fun) {
        G.frame.zhuangbei[key] = _fun[key];
    }
})();
;;/**
 * Created by zhangming on 2018-05-14
 */
(function () {
    //宝石升级
    var ID = 'zhuangbei_shengji';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        setContents:function() {
            var me = this;

        },
        bindUI: function () {
            var me = this;
            setPanelTitle(me.nodes.txt_title, L('UI_TITLE_ZBSJ'));

            me.nodes.mask.click(function(){
                me.remove();
            });
            
            // me._view.nodes.btn_qr.click(function(){
            //     me.remove();
            // });
        },
        onOpen: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            // me.curXbId = me.data().tid;

            var view = new X.bView('zhuangbei_shengji.json',function(view){
                me.ui.nodes.panel_nr.addChild(view);
                me._view = view;
                me.bindUI();
                // G.frame.yingxiong_xxxx.getNextBuff('dengjielv', me.curXbId, function(buff){
                    me.setContents();
                // });
            });
        },
        onRemove: function () {
            var me = this;
        },
    });

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();
;;/**
 * Created by zhangming on 2018-05-14
 */
(function(){
 // 出售物品
G.class.zhuangbei_tip_cs = X.bView.extend({
    ctor: function (callback) {
        var me = this;
        me._super('zhuangbei_tip3.json', function(){
            var size = cc.size(534, 350);
            me.setContentSize( size );
            me.ui.setContentSize( me.getContentSize() );
            ccui.helper.doLayout( me.ui );
            callback && callback();
        }, {autoFillSize:false});
    },
    refreshPanel: function(){
        var me = this;
    },
    setContents:function() {
        var me = this;

        // panel_1$ Layout 物品框
        // text_1$ text 物品名称

        // btn_1$ 按钮减
        // btn_2$ 按钮加
        // btn_3$ 出售

        // textField_5$ 数量文本框, 可输入
        // text_2$ text 消耗金币数
    },
    bindBTN:function() {
        var me = this;

        // me.nodes.mask.click(function(){
        //     me.remove();
        // });

        // 减号
        me.nodes.btn_1.click(function(){
        });

        // 加号
        me.nodes.btn_2.click(function(){
        });

        // 出售
        // me.nodes.btn_3.click(function(){
        //     me.remove();
        // });
    },
    onOpen: function () {
        var me = this;
        me.bindBTN();
    },
    onShow : function(){
        var me = this;
        me.refreshPanel();

        // G.frame.yingxiong_xxxx.onnp('updateInfo', function (d) {
        //     if(G.frame.yingxiong_xxxx.getCurType() == me._type){
        //         me.refreshPanel();
        //     }else{
        //         me._needRefresh = true;
        //     }
        // }, me.getViewJson());
    },
    onNodeShow : function(){
        var me = this;
        
        // if(me._needRefresh){
        //     delete me._needRefresh;
        //     me.refreshPanel();
        // }
    },
    onRemove: function () {
        var me = this;
    },
});

})();
;;/**
 * Created by zhangming on 2018-05-14
 */
(function(){
 // 获取途径
G.class.zhuangbei_tip_hqtj = X.bView.extend({
    ctor: function (callback) {
        var me = this;
        me._super('zhuangbei_tip2.json', function(){
            var size = cc.size(534, 169);
            me.setContentSize( size );
            me.ui.setContentSize( me.getContentSize() );
            ccui.helper.doLayout( me.ui );
            callback && callback();
        }, {autoFillSize:false});
    },
    refreshPanel: function(){
        var me = this;
    },
    setContents:function() {
        var me = this;
        var data = G.DATA.yingxion
    },
    bindBTN:function() {
        var me = this;

        // 铁匠铺
        me.nodes.button_tjp.click(function(){
        });

        // 成就
        me.nodes.button_cj.click(function(){
        });

        // 挂机
        me.nodes.button_gj.click(function(){
        });

        // 市场
        me.nodes.button_sc.click(function(){
        });

        // 许愿池
        me.nodes.button_xyc.click(function(){
        });
    },
    onOpen: function () {
        var me = this;
        me.bindBTN();
    },
    onShow : function(){
        var me = this;
        me.refreshPanel();

        // G.frame.yingxiong_xxxx.onnp('updateInfo', function (d) {
        //     if(G.frame.yingxiong_xxxx.getCurType() == me._type){
        //         me.refreshPanel();
        //     }else{
        //         me._needRefresh = true;
        //     }
        // }, me.getViewJson());
    },
    onNodeShow : function(){
        var me = this;
        
        // if(me._needRefresh){
        //     delete me._needRefresh;
        //     me.refreshPanel();
        // }
    },
    onRemove: function () {
        var me = this;
    },
});

})();
;;/**
 * Created by zhangming on 2018-05-14
 */
(function () {
    //装备吞噬
    var ID = 'zhuangbei_tunshi';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        setContents:function() {
            var me = this;

        },
        bindUI: function () {
            var me = this;
            setPanelTitle(me.nodes.txt_title, L('UI_TITLE_ZBTS'));

            me.nodes.mask.click(function(){
                me.remove();
            });
            
            // me._view.nodes.btn_qr.click(function(){
            //     me.remove();
            // });
        },
        onOpen: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            // me.curXbId = me.data().tid;

            // 装备选择
            new X.bView('zhuangbei_zbxz.json',function(viewTop){
                me.ui.nodes.panel_nr1.addChild(viewTop);
                me._viewTop = viewTop;

                new X.bView('zhuangbei_tunshi.json',function(viewBottom){
                    me.ui.nodes.panel_nr2.addChild(viewBottom);
                    me._viewBottom = viewBottom;
                    me.bindUI();
                    // G.frame.yingxiong_xxxx.getNextBuff('dengjielv', me.curXbId, function(buff){
                        me.setContents();
                    // });
                });

            });
        },
        onRemove: function () {
            var me = this;
        },
    });

    G.frame[ID] = new fun('ui_tip3.json', ID);
})();
;;/**
 * Created by wfq on 2018/5/23.
 */
(function () {
    //装备-详情
    var ID = 'zhuangbei_xq';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f5";
            me._super(json, id, {action: true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            me.ui.finds('panel_1').touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.curId = me.data().id;
            me.curXbId = G.frame.yingxiong_xxxx.curXbId;

            me.conf = G.class.equip.getById(me.curId);
            //是否需要双显示
            me.state = me.data().state;
            me.ui.nodes.panel_nr.removeAllChildren();

            new X.bView('zhuangbei_tip1.json', function (view) {
                me._view = view;

                me.defHeight = me._view.height;
                me.ui.nodes.panel_nr.addChild(view);
                me.setContents(view,true);
                view.setTouchEnabled(true);
            });

            if (me.state == 'tihuan') {
                new X.bView('zhuangbei_tip1.json', function (view) {
                    me._view2 = view;
                    var heroData = G.frame.yingxiong.getHeroDataByTid(me.curXbId);
                    var curXBid = heroData && heroData.weardata && heroData.weardata[me.conf.type];
                    me.conf2 = G.class.equip.getById(curXBid);
                    me.ui.nodes.panel_nr.addChild(view);
                    me.setContents(view,false);
                    view.setTouchEnabled(true);
                });
            }
            // me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function (panel,bool) {
            var me = this;


            me.setTop(panel,bool);
            me.setBtns(panel,bool);
        },
        setTop: function (panel,bool) {
            var me = this;

            var conf = bool ? me.conf : me.conf2;

            var btnHqtj = panel.nodes.btn_hqtj;
            var layIco = panel.nodes.panel_1;
            var layBuff = panel.nodes.panel_2;
            var txtName = panel.nodes.text_1;
            var txtType = panel.nodes.text_2;
            var txtHqtj = panel.finds('text_hqtj');
            var layYx = panel.nodes.panel_4;

            layIco.removeAllChildren();
            layBuff.removeAllChildren();
            layYx.removeAllChildren();

            if((me.state != 'tihuan' && bool)||(me.state == 'tihuan' && !bool)){
                var heroData = G.DATA.yingxiong.list[me.curXbId];
                // 英雄
                var hero = G.class.shero(heroData);
                hero.setScale(.92);
                hero.setAnchorPoint(0.5, 1);
                hero.setPosition(cc.p(layYx.width / 2, layYx.height - 3));
                layYx.addChild(hero);
            }


            //头像
            var wid = G.class.szhuangbei(conf);
            wid.setPosition(cc.p(layIco.width / 2,layIco.height / 2));
            layIco.addChild(wid);

            // 名字
            setTextWithColor(txtName,conf.name,G.gc.COLOR[conf.color]);
            // 类型
            txtType.setString(L('ZHUANGBEI_TYPE_' + conf.type));

            // buff
            var str = "";
            var buff = X.fmtBuff(conf.buff);
            for(var i = 0; i < buff.length; i ++){
                if(i > 0){
                    str += "<br>" + buff[i].tip;
                }else{
                    str += buff[i].tip;
                }
            }
            var rh = new X.bRichText({
                size:22,
                maxWidth:layBuff.width,
                lineHeight:34,
                family:G.defaultFNT,
                color:G.gc.COLOR.n5
            });
            if (!conf.tzid || conf.tzid == '') {
                str += '<br><font size=10>' + ' ' + '</font>';
                rh.text(str);
            } else {
                //套装

                var tzConf = G.class.equip.getTaozhuangById(conf.tzid);
                var buffArr = G.class.equip.getTzBuffArrById(conf.tzid);
                if (me.state != 'tihuan' || (me.state == 'tihuan' && !bool)) {
                    //需要展示是否激活状态
                    var ownNum = 0;
                    var wearData = heroData.weardata || {};
                    for (var i = 0; i < tzConf.tzid.length; i++) {
                        var eid = tzConf.tzid[i];
                        var eConf = G.class.equip.getById(eid);
                        if (wearData[eConf.type] && (wearData[eConf.type] == eid || wearData[eConf.type] == me.curId)) {
                            ownNum++;
                        }
                    }
                    // for (var type in wearData) {
                    //     var id = wearData[type];
                    //     if (typeof id == 'string' && X.inArray(tzConf.tzid, id)) {
                    //         ownNum++;
                    //     }
                    // }

                    str += '<br><font size=20 color='+ G.gc.COLOR.n9 + '>' + tzConf.tzname + '（' + ownNum + '/' +tzConf.tzid.length + '）' + '</font>';


                    for (var i = 0; i < buffArr.length; i++) {
                        var buffConf = buffArr[i];
                        var buff = X.fmtBuff(buffConf[1]);
                        str += '<br><font color=' + G.gc.COLOR[ownNum >= buffConf[0] * 1 ? 1 : 'n10'] + '>' + buff[0].tip + '</font>';
                    }
                } else {
                    str += '<br><font size=20 color='+ G.gc.COLOR.n9 + '>' + tzConf.tzname + '（' + tzConf.tzid.length + '）' + '</font>';

                    buffArr = G.class.equip.getTzBuffArrById(conf.tzid);
                    for (var i = 0; i < buffArr.length; i++) {
                        var buffConf = buffArr[i];
                        var buff = X.fmtBuff(buffConf[1]);
                        str += '<br><font color=' + G.gc.COLOR.n10 + '>' + buff[0].tip + '</font>';
                    }
                }
                str += '<br><font size=10>' + ' ' + '</font>';
                rh.text(str);
            }

            // var offsetY = rh.trueHeight();
            // // cc.log('offsety======', offsetY);
            // panel.nodes.panel_bg.height = panel.nodes.panel_bg.height + offsetY + 50;
            // ccui.helper.doLayout(panel.nodes.panel_bg);
            var offsetY = rh.trueHeight();
            rh.setPosition(cc.p(0,-15));
            layBuff.addChild(rh);


            // 移动两个panel位置
            if (me.state == 'tihuan') {
                if (bool) {
                    panel.nodes.panel_bg.y = panel.nodes.panel_bg.y + panel.nodes.panel_bg.height / 2 + offsetY / 2 + 5;
                    panel.nodes.panel_bg.setContentSize( cc.size(panel.nodes.panel_bg.width,panel.nodes.panel_bg.height + offsetY + panel.nodes.panel_3.height + 20));
                    ccui.helper.doLayout( panel.nodes.panel_bg);
                } else {
                    rh.setPosition(cc.p(0,-95));
                    panel.nodes.panel_bg.y = panel.nodes.panel_bg.y - panel.nodes.panel_bg.height / 2 - offsetY / 2 - 30;
                    panel.nodes.panel_bg.setContentSize( cc.size(panel.nodes.panel_bg.width,panel.nodes.panel_bg.height + offsetY -20));
                    ccui.helper.doLayout( panel.nodes.panel_bg);
                }
            }else{
                panel.nodes.panel_bg.setContentSize( cc.size(panel.nodes.panel_bg.width,panel.nodes.panel_bg.height + offsetY + panel.nodes.panel_3.height + 20));
                ccui.helper.doLayout( panel.nodes.panel_bg);
            }
        },
        setBtns: function (panel,bool) {
            var me = this;

            var layBtns = panel.nodes.panel_3;

            layBtns.removeAllChildren();

            var state2num = {
                tihuan:{
                    num:1,
                    btns:[{
                        setBtn: function (item) {
                            item.setTitleText(L('BTN_TIHUAN'));
                            item.setTitleColor(cc.color(G.gc.COLOR.n13));
                            item.touch(function (sender, type) {
                                if (type == ccui.Widget.TOUCH_ENDED) {
                                    G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[me.curXbId]));
                                    G.ajax.send('hero_wearequip',[me.curId,me.curXbId],function(d) {
                                        if(!d) return;
                                        var d = JSON.parse(d);
                                        if(d.s == 1) {
                                            me.remove();
                                            if (G.frame.zhuangbei_zbxz.isShow) {
                                                G.frame.zhuangbei_zbxz.remove();
                                            }
                                            G.tip_NB.show(L('TIHUAN') + L('SUCCESS'));
                                            G.frame.yingxiong_xxxx.emit('updateInfo');
                                            G.class.ani.show({
                                                x: G.frame.yingxiong_xxxx.zb.panel.width / 2,
                                                y: G.frame.yingxiong_xxxx.zb.panel.height / 2,
                                                json: "ani_dianjitexiao",
                                                addTo: G.frame.yingxiong_xxxx.zb.panel,
                                                repeat: false,
                                                autoRemove: true,
                                                onload: function (node) {
                                                    node.zIndex = 10;
                                                }
                                            })
                                        }else if(d.s == -2) {
                                            if (G.frame.zhuangbei_zbxz.isShow) {
                                                G.frame.zhuangbei_zbxz.remove();
                                            }
                                            me.remove();
                                        }
                                    },true);
                                }
                            });
                        }
                    }]
                },
                xiexia:{
                    num:2,
                    btns:[
                        {
                            setBtn: function (item) {
                                // 脱下
                                item.loadTextureNormal('img/public/btn/btn3_on.png',1);
                                item.setTitleText(L('BTN_TUOXIA'));
                                item.setTitleColor(cc.color(G.gc.COLOR.n14));
                                if(!item.data) item.data = [];
                                item.touch(function (sender, type) {
                                    if (type == ccui.Widget.TOUCH_ENDED) {
                                        //卸下
                                        X.audio.playEffect("sound/zhuangbei.mp3");
                                        G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[me.curXbId]));
                                        G.ajax.send('hero_takeoff',[me.curXbId,me.conf.type],function(d) {
                                            if(!d) return;
                                            var d = JSON.parse(d);
                                            if(d.s == 1) {
                                                me.remove();
                                                G.frame.yingxiong_xxxx.emit('updateInfo');
                                            }
                                        },true);
                                    }
                                });
                            }
                        },
                        {
                            setBtn: function (item) {
                                //替换
                                item.setTitleText(L('BTN_TIHUAN'));
                                item.setTitleColor(cc.color(G.gc.COLOR.n13));
                                item.touch(function (sender, type) {
                                    if (type == ccui.Widget.TOUCH_ENDED) {
                                        // 替换时打开装备选择界面
                                        G.frame.zhuangbei_zbxz.data(me.conf.type).once('show', function () {
                                            me.remove();
                                        }).show();
                                    }
                                });
                            }
                        }
                    ]
                },
                chuandai:{
                    num:1,
                    btns:[{
                        setBtn: function (item) {
                            //穿上
                            item.setTitleText(L('BTN_CHUANSHANG'));
                            item.setTitleColor(cc.color(G.gc.COLOR.n13));
                            if(!item.data) item.data = [];
                            item.touch(function (sender, type) {
                                if (type == ccui.Widget.TOUCH_ENDED) {
                                    X.audio.playEffect("sound/zhuangbei.mp3");
                                    G.DATA.yingxiong.oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[me.curXbId]));
                                    G.ajax.send('hero_wearequip',[me.curId,me.curXbId],function(d) {
                                        if(!d) return;
                                        var d = JSON.parse(d);
                                        if(d.s == 1) {
                                            me.remove();
                                            if (G.frame.zhuangbei_zbxz.isShow) {
                                                G.frame.zhuangbei_zbxz.remove();
                                            }
                                            G.tip_NB.show(L('CHUANSHANG') + L('SUCCESS'));
                                            G.frame.yingxiong_xxxx.emit('updateInfo');
                                            G.class.ani.show({
                                                x: G.frame.yingxiong_xxxx.zb.panel.width / 2,
                                                y: G.frame.yingxiong_xxxx.zb.panel.height / 2,
                                                json: "ani_dianjitexiao",
                                                addTo: G.frame.yingxiong_xxxx.zb.panel,
                                                repeat: false,
                                                autoRemove: true,
                                                onload: function (node) {
                                                    node.zIndex = 10;
                                                }
                                            })
                                        }
                                    },true);
                                }
                            });
                        }
                    }]
                }
            };

            if (bool) {
                var btn = new ccui.Button();
                var img = 'img/public/btn/btn1_on.png';
                btn.loadTextures(img,'','',1);
                btn.setTitleFontName(G.defaultFNT);
                btn.setTitleFontSize(24);
                X.autoLayout_new({
                    parent:layBtns,
                    item:btn,
                    num:state2num[me.state].num,
                    mapItem: function (item) {
                        var idx = item.idx;
                        var btnsConf = state2num[me.state].btns;
                        var a = state2num[me.state].num;
                        btnsConf[idx].setBtn(item);
                    }
                });
            }

        }
    });

    G.frame[ID] = new fun('panel_nr.json', ID);
})();
;;/**
 * Created by zhangming on 2018-05-14
 */
(function () {
    //装备选择
    var ID = 'zhuangbei_zbxz';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            me.singleGroup = "f4";
            me._super(json, id,{action:true});
        },
        setContents:function() {
            var me = this;

            me.fmtItemList();
        },
        fmtItemList: function () {
            var me = this;
            var view = me._view;

            view.nodes.scrollview.removeAllChildren();
            cc.enableScrollBar(view.nodes.scrollview);
            var data = G.frame.zhuangbei.getCanUseZbTidArrByType(me.curType);

            cc.isNode(view.finds('img_zwnr')) && view.finds('img_zwnr').hide();
            if (data.length < 1) {
                cc.isNode(view.finds('img_zwnr')) && view.finds('img_zwnr').show();
                return;
            }

            var table = new cc.myTableView({
                rownum: 5,
                type: 'fill',
                lineheight: view.nodes.list.height+1,
                paddingTop: 2
            });
            me.ui_table = table;
            table.setDelegate(this);
            this.setTableViewData(data);
            table.bindScrollView(view.nodes.scrollview);
            me.ui_table.tableView.reloadData();
        },
        setTableViewData: function (data) {
            var me = this;
            // me. = G.frame.yingxiong.getTidArr(me.curType);

            var table = me.ui_table;

            data.sort(function (a,b) {
                var dataA = G.frame.beibao.DATA.zhuangbei.list[a],
                    dataB = G.frame.beibao.DATA.zhuangbei.list[b];
                var confA = G.class.equip.getById(dataA.eid),
                    confB = G.class.equip.getById(dataB.eid);

                if (confA.color != confB.color) {
                    return confA.color * 1 > confB.color * 1 ? -1 : 1;
                } else {
                    var starA = confA.star * 1 || 0;
                    var starB = confB.star * 1 || 0;

                    return starA > starB ? -1 : 1;
                }

            });
            table.data(data);
        },
        /**
         * 数据模板
         * @returns {*}
         */
        cellDataTemplate: function () {
            var me = this;
            return me._view.nodes.list.clone();
        },
        /**
         * 数据初始化
         * @param ui
         * @param data
         */
        cellDataInit: function (ui, data, pos) {
            var me = this;
            if (data == null) {
                ui.hide();
                return;
            }
            // ui.setName(pos[0]*1 + pos[1]);
            ui.setName(data);
            X.autoInitUI(ui);
            var d = G.frame.beibao.DATA.zhuangbei.list[data];

            var widget = G.class.szhuangbei(d);
            widget.setScale(0.95);
            widget.setAnchorPoint(0.5,1);
            widget.setPosition(cc.p( ui.width*0.5, ui.height ));
            ui.removeAllChildren();
            ui.addChild(widget);

            ui.data = d.eid;
            ui.setTouchEnabled(true);
            ui.setSwallowTouches(false);
            ui.touch(function(sender, type){
                if(type == ccui.Widget.TOUCH_NOMOVE){
                    var state = me.heroConf.weardata && me.heroConf.weardata[me.curType] ? 'tihuan' : 'chuandai';
                    G.frame.zhuangbei_xq.data({id:sender.data,state:state}).show();
                }
            });
            ui.show();
        },
        bindUI: function () {
            var me = this;
            setPanelTitle(me.nodes.txt_title, L('UI_TITLE_ZBXZ'));

            me.nodes.mask.click(function(){
                me.remove();
            });
        },
        onOpen: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;
            me.bindUI();
            me.curXbId = G.frame.yingxiong_xxxx.curXbId;
            me.heroConf = G.DATA.yingxiong.list[me.curXbId];
            me.curType = me.data();

            new X.bView('zhuangbei_zbxz.json',function(view){
                me._view = view;
                me.ui.nodes.panel_nr.removeAllChildren();

                me.ui.nodes.panel_nr.addChild(view);
                // G.frame.yingxiong_xxxx.getNextBuff('dengjielv', me.curXbId, function(buff){
                me.setContents();
                // });
            });
        },
        onRemove: function () {
            var me = this;
        },
    });

    G.frame[ID] = new fun('ui_tip2.json', ID);
})();

;;// javascript-astar 0.4.0
// http://github.com/bgrins/javascript-astar
// Freely distributable under the MIT License.
// Implements the astar search algorithm in javascript using a Binary Heap.
// Includes Binary Heap (with modifications) from Marijn Haverbeke.
// http://eloquentjavascript.net/appendix2.html

(function(definition) {
    /* global module, define */
    if(typeof module === 'object' && typeof module.exports === 'object') {
        module.exports = definition();
    } else if(typeof define === 'function' && define.amd) {
        define([], definition);
    }else if(typeof X === 'object') {
        var exports = definition();
        X.astar = exports.astar;
        X.Graph = exports.Graph;
    } else {
        var exports = definition();
        window.astar = exports.astar;
        window.Graph = exports.Graph;
    }
})(function() {

function pathTo(node){
    var curr = node,
        path = [];
    while(curr.parent) {
        path.push(curr);
        curr = curr.parent;
    }
    return path.reverse();
}

function getHeap() {
    return new BinaryHeap(function(node) {
        return node.f;
    });
}

var astar = {
    /**
    * Perform an A* Search on a graph given a start and end node.
    * @param {Graph} graph
    * @param {GridNode} start
    * @param {GridNode} end
    * @param {Object} [options]
    * @param {bool} [options.closest] Specifies whether to return the
               path to the closest node if the target is unreachable.
    * @param {Function} [options.heuristic] Heuristic function (see
    *          astar.heuristics).
    */
    search: function(graph, start, end, options) {
        graph.cleanDirty();
        options = options || {};
        var heuristic = options.heuristic || astar.heuristics.manhattan,
            closest = options.closest || false;

        var openHeap = getHeap(),
            closestNode = start; // set the start node to be the closest if required

        start.h = heuristic(start, end);

        openHeap.push(start);
        graph.markDirty(start);
        
        while(openHeap.size() > 0) {

            // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.
            var currentNode = openHeap.pop();

            // End case -- result has been found, return the traced path.
            //cc.log(currentNode,end);
            if(currentNode === end) {
                return pathTo(currentNode);
            }

            // Normal case -- move currentNode from open to closed, process each of its neighbors.
            currentNode.closed = true;
            
            // Find all neighbors for the current node.
            var neighbors = graph.neighbors(currentNode);

            for (var i = 0, il = neighbors.length; i < il; ++i) {
                var neighbor = neighbors[i];

                if (neighbor.closed || neighbor.isWall()) {
                    // Not a valid node to process, skip to next neighbor.
                    continue;
                }

                // The g score is the shortest distance from start to current node.
                // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.
                var gScore = currentNode.g + neighbor.getCost(currentNode),
                    beenVisited = neighbor.visited;

                if (!beenVisited || gScore < neighbor.g) {

                    // Found an optimal (so far) path to this node.  Take score for node to see how good it is.
                    neighbor.visited = true;
                    neighbor.parent = currentNode;
                    neighbor.h = neighbor.h || heuristic(neighbor, end);
                    neighbor.g = gScore;
                    neighbor.f = neighbor.g + neighbor.h;
                    graph.markDirty(neighbor);
                    if (closest) {
                        // If the neighbour is closer than the current closestNode or if it's equally close but has
                        // a cheaper path than the current closest node then it becomes the closest node
                        if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {
                            closestNode = neighbor;
                        }
                    }

                    if (!beenVisited) {
                        // Pushing to heap will put it in proper place based on the 'f' value.
                        openHeap.push(neighbor);
                    }
                    else {
                        // Already seen the node, but since it has been rescored we need to reorder it in the heap
                        openHeap.rescoreElement(neighbor);
                    }
                }
            }
        }

        if (closest) {
            return pathTo(closestNode);
        }

        // No result was found - empty array signifies failure to find path.
        return [];
    },
    // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html
    heuristics: {
        manhattan: function(pos0, pos1) {
            var d1 = Math.abs(pos1.x - pos0.x);
            var d2 = Math.abs(pos1.y - pos0.y);
            return d1 + d2;
        },
        diagonal: function(pos0, pos1) {
            var D = 1;
            var D2 = Math.sqrt(2);
            var d1 = Math.abs(pos1.x - pos0.x);
            var d2 = Math.abs(pos1.y - pos0.y);
            return (D * (d1 + d2)) + ((D2 - (2 * D)) * Math.min(d1, d2));
        }
    },
    cleanNode:function(node){
        node.f = 0;
        node.g = 0;
        node.h = 0;
        node.visited = false;
        node.closed = false;
        node.parent = null;
    }
};

/**
* A graph memory structure
* @param {Array} gridIn 2D array of input weights
* @param {Object} [options]
* @param {bool} [options.diagonal] Specifies whether diagonal moves are allowed
*/
function Graph(gridIn, options) {
    options = options || {};
    this.nodes = [];
    this.diagonal = !!options.diagonal;
    this.grid = [];
    for (var x = 0; x < gridIn.length; x++) {
        this.grid[x] = [];

        for (var y = 0, row = gridIn[x]; y < row.length; y++) {
            var node = new GridNode(x, y, row[y]);
            this.grid[x][y] = node;
            this.nodes.push(node);
        }
    }
    this.init();
}

Graph.prototype.init = function() {
    this.dirtyNodes = [];
    for (var i = 0; i < this.nodes.length; i++) {
        astar.cleanNode(this.nodes[i]);
    }
};

Graph.prototype.cleanDirty = function() {
    for (var i = 0; i < this.dirtyNodes.length; i++) {
        astar.cleanNode(this.dirtyNodes[i]);
    }
    this.dirtyNodes = [];
};

Graph.prototype.markDirty = function(node) {
    this.dirtyNodes.push(node);
};

Graph.prototype.neighbors = function(node) {
    var ret = [],
        x = node.x,
        y = node.y,
        grid = this.grid;

    // West
    if(grid[x-1] && grid[x-1][y]) {
        ret.push(grid[x-1][y]);
    }

    // East
    if(grid[x+1] && grid[x+1][y]) {
        ret.push(grid[x+1][y]);
    }

    // South
    if(grid[x] && grid[x][y-1]) {
        ret.push(grid[x][y-1]);
    }

    // North
    if(grid[x] && grid[x][y+1]) {
        ret.push(grid[x][y+1]);
    }

    if (this.diagonal) {
        // Southwest
        if(grid[x-1] && grid[x-1][y-1]) {
            ret.push(grid[x-1][y-1]);
        }

        // Southeast
        if(grid[x+1] && grid[x+1][y-1]) {
            ret.push(grid[x+1][y-1]);
        }

        // Northwest
        if(grid[x-1] && grid[x-1][y+1]) {
            ret.push(grid[x-1][y+1]);
        }

        // Northeast
        if(grid[x+1] && grid[x+1][y+1]) {
            ret.push(grid[x+1][y+1]);
        }
    }

    return ret;
};

Graph.prototype.toString = function() {
    var graphString = [],
        nodes = this.grid, // when using grid
        rowDebug, row, y, l;
    for (var x = 0, len = nodes.length; x < len; x++) {
        rowDebug = [];
        row = nodes[x];
        for (y = 0, l = row.length; y < l; y++) {
            rowDebug.push(row[y].weight);
        }
        graphString.push(rowDebug.join(" "));
    }
    return graphString.join("\n");
};

function GridNode(x, y, weight) {
    this.x = x;
    this.y = y;
    this.weight = weight;
}

GridNode.prototype.toString = function() {
    return "[" + this.x + " " + this.y + "]";
};

GridNode.prototype.getCost = function(fromNeighbor) {
    // Take diagonal weight into consideration.
    if (fromNeighbor && fromNeighbor.x != this.x && fromNeighbor.y != this.y) {
        return this.weight * 1.41421;
    }
    return this.weight;
};

GridNode.prototype.isWall = function() {
    return this.weight === 0;
};

function BinaryHeap(scoreFunction){
    this.content = [];
    this.scoreFunction = scoreFunction;
}

BinaryHeap.prototype = {
    push: function(element) {
        // Add the new element to the end of the array.
        this.content.push(element);

        // Allow it to sink down.
        this.sinkDown(this.content.length - 1);
    },
    pop: function() {
        // Store the first element so we can return it later.
        var result = this.content[0];
        // Get the element at the end of the array.
        var end = this.content.pop();
        // If there are any elements left, put the end element at the
        // start, and let it bubble up.
        if (this.content.length > 0) {
            this.content[0] = end;
            this.bubbleUp(0);
        }
        return result;
    },
    remove: function(node) {
        var i = this.content.indexOf(node);

        // When it is found, the process seen in 'pop' is repeated
        // to fill up the hole.
        var end = this.content.pop();

        if (i !== this.content.length - 1) {
            this.content[i] = end;

            if (this.scoreFunction(end) < this.scoreFunction(node)) {
                this.sinkDown(i);
            }
            else {
                this.bubbleUp(i);
            }
        }
    },
    size: function() {
        return this.content.length;
    },
    rescoreElement: function(node) {
        this.sinkDown(this.content.indexOf(node));
    },
    sinkDown: function(n) {
        // Fetch the element that has to be sunk.
        var element = this.content[n];

        // When at 0, an element can not sink any further.
        while (n > 0) {

            // Compute the parent element's index, and fetch it.
            var parentN = ((n + 1) >> 1) - 1,
                parent = this.content[parentN];
            // Swap the elements if the parent is greater.
            if (this.scoreFunction(element) < this.scoreFunction(parent)) {
                this.content[parentN] = element;
                this.content[n] = parent;
                // Update 'n' to continue at the new position.
                n = parentN;
            }
            // Found a parent that is less, no need to sink any further.
            else {
                break;
            }
        }
    },
    bubbleUp: function(n) {
        // Look up the target element and its score.
        var length = this.content.length,
            element = this.content[n],
            elemScore = this.scoreFunction(element);

        while(true) {
            // Compute the indices of the child elements.
            var child2N = (n + 1) << 1,
                child1N = child2N - 1;
            // This is used to store the new position of the element, if any.
            var swap = null,
                child1Score;
            // If the first child exists (is inside the array)...
            if (child1N < length) {
                // Look it up and compute its score.
                var child1 = this.content[child1N];
                child1Score = this.scoreFunction(child1);

                // If the score is less than our element's, we need to swap.
                if (child1Score < elemScore){
                    swap = child1N;
                }
            }

            // Do the same checks for the other child.
            if (child2N < length) {
                var child2 = this.content[child2N],
                    child2Score = this.scoreFunction(child2);
                if (child2Score < (swap === null ? elemScore : child1Score)) {
                    swap = child2N;
                }
            }

            // If the element needs to be moved, swap it, and continue.
            if (swap !== null) {
                this.content[n] = this.content[swap];
                this.content[swap] = element;
                n = swap;
            }
            // Otherwise, we are done.
            else {
                break;
            }
        }
    }
};

return {
    astar: astar,
    Graph: Graph
};

});

;;(function(){
  function Base64() {
    // private property
    this._keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
  }
  Base64.prototype.encode = function (input) {
    //ToDo
    var output = "";
    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
    var i = 0;
    input = this._utf8_encode(input);
    while (i < input.length) {
      chr1 = input.charCodeAt(i++);
      chr2 = input.charCodeAt(i++);
      chr3 = input.charCodeAt(i++);
      enc1 = chr1 >> 2;
      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
      enc4 = chr3 & 63;
      if (isNaN(chr2)) {
        enc3 = enc4 = 64;
      }
      else if (isNaN(chr3)) {
        enc4 = 64;
      }
      output = output +
          this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +
          this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);
    }
    return output;
  };
  // public method for decoding
  Base64.prototype.decode = function (input) {
    var output = "";
    var chr1, chr2, chr3;
    var enc1, enc2, enc3, enc4;
    var i = 0;
    input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
    while (i < input.length) {
      enc1 = this._keyStr.indexOf(input.charAt(i++));
      enc2 = this._keyStr.indexOf(input.charAt(i++));
      enc3 = this._keyStr.indexOf(input.charAt(i++));
      enc4 = this._keyStr.indexOf(input.charAt(i++));
      chr1 = (enc1 << 2) | (enc2 >> 4);
      chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
      chr3 = ((enc3 & 3) << 6) | enc4;
      output = output + String.fromCharCode(chr1);
      if (enc3 != 64) {
        output = output + String.fromCharCode(chr2);
      }
      if (enc4 != 64) {
        output = output + String.fromCharCode(chr3);
      }
    }
    output = this._utf8_decode(output);
    return output;
  };
  // private method for UTF-8 encoding
  Base64.prototype._utf8_encode = function (string) {
    string = string.replace(/\r\n/g, "\n");
    var utftext = "";
    for (var n = 0; n < string.length; n++) {
      var c = string.charCodeAt(n);
      if (c < 128) {
        utftext += String.fromCharCode(c);
      }
      else if ((c > 127) && (c < 2048)) {
        utftext += String.fromCharCode((c >> 6) | 192);
        utftext += String.fromCharCode((c & 63) | 128);
      }
      else {
        utftext += String.fromCharCode((c >> 12) | 224);
        utftext += String.fromCharCode(((c >> 6) & 63) | 128);
        utftext += String.fromCharCode((c & 63) | 128);
      }
    }
    return utftext;
  };
  // private method for UTF-8 decoding
  Base64.prototype._utf8_decode = function (utftext) {
    var string = "";
    var i = 0;
    var c, c1, c2, c3;
    c = c1 = c2 = 0;
    while (i < utftext.length) {
      c = utftext.charCodeAt(i);
      if (c < 128) {
        string += String.fromCharCode(c);
        i++;
      }
      else if ((c > 191) && (c < 224)) {
        c2 = utftext.charCodeAt(i + 1);
        string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
        i += 2;
      }
      else {
        c2 = utftext.charCodeAt(i + 1);
        c3 = utftext.charCodeAt(i + 2);
        string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
        i += 3;
      }
    }
    return string;
  };

  X.base64 = new Base64();
})();
;;(function() {
    G.class.getConf = function(keyPath, tid) {
        var keys = keyPath.split('.');
        keys = keys.concat(tid == undefined ? [] : tid);
        var conf;
        for (var i in keys) {
            if (i == 0) conf = G.gc[keys[i]];
            else conf = conf[keys[i]];
            if (!conf) {
                cc.log(keys[i] + '物品配置不存在');
                return null;
            }
        }
        return conf;
    };

    G.class.fmtBossConfStr = function(str) {
        //格式化boss配置
        //将 1001_2_1#1002_2_1 这样的字符串格式化为json数据
        var res = {
            boss: null,
            enemy: []
        };
        if (str == null || str == '') return res;
        var arr = str.split('#');

        for (var i = 0; i < arr.length; i++) {
            var info = arr[i].split('_');
            var d = {
                'hid': info[0],
                'lv': info[1],
                'attr': info[2]
            }
            if (i == 0) {
                res.boss = d;
            } else {
                res.enemy.push(d);
            }
        }
        return res;
    };

    G.class.formula = {
        /**
         * 公式运算
         * @param formula 公式string
         * @param args  参数{x:v}
         * @returns {Object}
         */
        compute: function(formula, args) {
            var f = formula;
            f = f.replace(/int/g, 'parseInt');
            f = f.replace(/Math\.round/g, 'round');
            f = f.replace(/Math\.pow/g, 'pow');
            f = f.replace(/round/g, 'Math.round');
            f = f.replace(/pow/g, 'Math.pow');
            for (var k in args) {
                var regx = new RegExp(k, 'g');
                f = f.replace(regx, args[k]);
            }
            return eval(f);
        },
        getTanXianTongJi: function(mapid) {
            var jinbiF = 'jinbi*3600',
                expF = 'exp*3600',
                eventF = '100/(100 + eventcd)',
                nvwuF = '100/(100 + nvwucd)';

            if (mapid == 0) {
                return {
                    jinbi: 0,
                    exp: G.class.mapclient.getById(1).exp,
                    event: 0,
                    nvwu: 0
                };
            }

            var con = G.getCurMapType() == 1 ? G.class.mapclient.getById(mapid) : G.class.mappk.getById(mapid),
                eventcd = averageOfArray(con.eventcd),
                args = {
                    jinbi: con.jinbi,
                    exp: con.exp,
                    eventcd: eventcd,
                    nvwucd: con.nvwucd
                };
            return {
                jinbi: this.compute(jinbiF, args),
                exp: this.compute(expF, args),
                event: this.compute(eventF, args),
                nvwu: con.nvwucd == -1 ? 0 : this.compute(nvwuF, args)
            };
        }
    };

    G.class.menu = {
        get: function(id) {
            return G.class.getConf('menu')[id];
        }
    };

    //英雄
    G.class.hero = {
        get: function() {
            return G.class.getConf('hero');
        },
        getById: function(id) {
            return this.get()[id];
        },
        getSkillLv: function(idx, dengjielv) {
            // 0怒气技, 123被动技能
            if (dengjielv < 6) {
                return 1;
            } else if (dengjielv < 10) {
                // 7,8,9 依次被动123变成3
                if (
                    (idx == 1 && dengjielv >= 7) ||
                    (idx == 2 && dengjielv >= 8) ||
                    (idx == 3 && dengjielv >= 9)
                ) {
                    return 3;
                }
                return 2;
            } else {
                return 3
            }
        },
        getSkillOne: function(idx, hid, dengjielv) {
            var conf = this.getById(hid);
            var opendjlv = conf.bdskillopendjlv;
            var skill = G.class.herostarup.getData(hid, dengjielv);
            if (idx == 0) {
                return {
                    idx: idx,
                    lv: this.getSkillLv(0, dengjielv),
                    intr: (skill && skill.xpskillintr !== "") ? skill.xpskillintr : conf.xpskillintr,
                    ico: conf.xpskillico,
                    lock: false,
                    name: (skill && skill.xpskillname !== "") ? skill.xpskillname : conf.xpskillname
                };
            } else {
                var str = dengjielv < opendjlv[idx - 1] ? X.STR(L('WKQ_JIESUO'), opendjlv[idx - 1]) : "";
                var intr = (skill && skill[X.STR('bd{1}skillintr', idx)]) || "";
                var name = (skill && skill[X.STR('bd{1}skillname', idx)]) || "";
                return {
                    idx: idx,
                    lv: this.getSkillLv(idx, dengjielv),
                    intr: intr !== "" ? intr : conf[X.STR('bd{1}skillintr', idx)] + str,
                    ico: conf[X.STR('bd{1}skillico', idx)],
                    lock: dengjielv < opendjlv[idx - 1],
                    name: name !== "" ? name : conf[X.STR('bd{1}skillname', idx)]
                };
            }
        },
        getSkillList: function(hid, dengjielv) {
            var conf = this.getById(hid);
            var opendjlv = conf.bdskillopendjlv;
            var list = [this.getSkillOne(0, hid, dengjielv)];

            for (var i = 0; i < opendjlv.length; i++) {
                var idx = i + 1;
                if (conf[X.STR('bd{1}skillico', idx)]) {
                    list.push(this.getSkillOne(idx, hid, dengjielv));
                }
            }
            return list;
        },
        // 获取可以升级的技能
        getCanUpgradeSkill: function(hid, dengjielv) {
            var conf = this.getById(hid);
            var idx;

            switch (dengjielv) {
                case 6:
                    idx = 1;
                    break;
                case 7:
                    idx = 2;
                    break;
                case 8:
                    idx = 3;
                    break;
                case 9:
                    idx = 0;
                    break;
            }

            return this.getSkillOne(idx, hid, dengjielv);
        },
        //获得某一种族的英雄hid配置
        getHerosByZhongzu: function(zhongzu) {
            var me = this;

            var zzList = [];
            for (var hid in me.get()) {
                var conf = me.get()[hid];
                if (conf.zhongzu == zhongzu) {
                    zzList.push(hid);
                }
            }

            return zzList;
        },
        getModel: function(data) {
            var me = this;

            if ((data.dengjielv!=null && data.dengjielv>=10) || (data.star!=null && data.star >= 10)) { // || data.lv > 200
                return me.getById(data.hid  || data.head).tenstarmodel||me.getById(data.hid  || data.head).model;
            }
            if(!me.getById(data.hid || data.head)) {
                return me.getById(63025).model;
            }else {
                return me.getById(data.hid || data.head).model;
            }

        },
        //所有可以合成的英雄
        getCanHcHeros: function() {
            var me = this;

            if (me.canHcHeros) {
                return me.canHcHeros;
            }

            var arr = [];
            var heros = G.class.getConf("herohecheng");
            for (var hid in heros) {
                arr.push(hid);
            }

            me.canHcHeros = arr;

            return arr;
        },
        //获得可以合成英雄的数组
        getCanHcHerosByZhongzu: function(zhongzu) {
            var me = this;

            if (me.zz2canHcHeros && me.zz2canHcHeros[zhongzu]) {
                return me.zz2canHcHeros[zhongzu];
            }

            var heros = me.getCanHcHeros();
            var arr = [];
            for (var i = 0; i < heros.length; i++) {
                var hid = heros[i];
                var conf = me.getById(hid);
                if (conf.zhongzu == zhongzu) {
                    arr.push(hid);
                }else if(zhongzu == 0) {
                    arr.push(hid);
                }
            }

            me.zz2canHcHeros = me.zz2canHcHeros || {};
            me.zz2canHcHeros[zhongzu] = arr;

            return arr;
        },
        //获得合成特殊英雄所需
        getHcNeed: function(id) {
            var me = this;

            return G.class.getConf('herohecheng')[id];
        },
        //获得种族图标
        getZhongzuIcoById: function(id) {
            var me = this;

            var conf = me.getById(id);

            return 'img/public/ico/ico_zz' + ((conf.zhongzu * 1) + 1) + '.png';
        },
        //获得职业图标
        getJobIcoById: function(id) {
            var me = this;

            var conf = me.getById(id);

            return 'img/public/ico_zy/zy_' + conf.job + '.png';
        },
        getJobIcoByIdX: function(id) {
            var me = this;

            var conf = me.getById(id);

            return 'img/public/ico_zy/zy_' + conf.job + '_x.png';
        },
        //获得某星级及以下的hid数组
        getHidArrByStar: function(star) {
            var me = this;

            var arr = [];
            var conf = me.get();
            for (var hid in conf) {
                var heroConf = conf[hid];

                if (heroConf.star <= star) {
                    arr.push(hid);
                }
            }

            return arr;
        }
    };

    G.class.herocom = {
        get: function() {
            return G.class.getConf('herocom');
        },
        getHeroLvUp: function(lv) {
            return this.get().herolvup[lv];
        },
        getHeroJinJieUp: function(dengjielv) {
            return this.get().herojinjieup[dengjielv];
        },
        getMaxlv: function(hid, dengjielv) {
            var data = this.get().herojinjieup[dengjielv];
            if (data) {
                return data.maxlv;
            } else {
                return G.class.herostarup.getMaxlv(hid, dengjielv);
            }
        },
        canJinJie: function(dengjielv) {
            return this.get().herojinjieup[dengjielv];
        },
        //获得战力
        getZhanli: function(id, lv) {
            var me = this;

            var conf = G.class.herogrow.getById(id);
            var obj = {
                lv: lv,
                atk: conf.atk,
                def: conf.def,
                hp: conf.hp,
                speed: conf.speed
            };
            if(lv == 1) {
                return parseInt(obj.hp / 6 + obj.atk + obj.def);
            } else {
                var fomula = G.class.formula.compute(me.get().zhanlifomula, obj);

                return fomula;
            }

        },
        //获得所有种族
        getZhongzu: function() {
            var me = this;

            return me.get().zhongzu;
        },
        //获得单个种族配置
        getZhongzuById: function(id) {
            var me = this;

            return me.getZhongzu()[id];
        }
    };

    //跨服战
    G.class.kuafuzhan = {
        get: function () {
            return G.class.getConf('kuafuzhan');
        },
        getDatePrize: function () {
            return G.class.getConf('kuafuzhan').base.jifen.dateprize;
        },
        getRankPrize: function (match) {
            return G.class.getConf('kuafuzhan').base[match].prize;
        },
        getOpenLv: function () {
            return this.get().base['openlv'];
        },
        getByRank: function (id) {
            var myPrize;
            var p = this.get().base['zhengba'].prize;
            for(var j=0;j< p.length;j++) {
                var prize = p[j];
                if (cc.isArray(prize.rank)) {
                    if (id >= prize.rank[0] && id <= prize.rank[1]) {
                        myPrize = prize.p;
                        break;
                    }
                } else {
                    if (prize.rank == id) {
                        myPrize = prize.p;
                        break;
                    }
                }
            }
            return myPrize;
        }

    };
    G.class.herostarup = {
        get: function() {
            return G.class.getConf('herostarup');
        },
        getById: function(id) {
            return this.get()[id];
        },
        getData: function(hid, dengjielv) {
            return this.getById(hid) ? this.getById(hid)[dengjielv] : null;
        },
        getMaxlv: function(hid, dengjielv) {
            var data = this.getData(hid, dengjielv);
            return data ? data.maxlv : 0;
        },
        getSkill: function(hid, dengjielv, idx) {
            var data = this.getById(hid)[dengjielv + 1];
            return data;
        },
        //获得最大等阶
        getMaxDengjieById: function(id) {
            var me = this;

            var arr = X.keysOfObject(me.getById(id));
            arr.sort(function(a, b) {
                return a * 1 > b * 1 ? -1 : 1;
            });

            return arr[0];
        },
        getByIdAndDengjie: function(id, dengjie) {
            var me = this;

            return me.get()[id][dengjie];
        },
        //获得可以升到10星的hid数组
        getTenStarHidsArr: function() {
            var me = this;

            var conf = me.get();
            var list = [];
            for (var hid in conf) {
                var cnf = conf[hid];
                var keys = X.keysOfObject(cnf);
                if (keys.length >= 4) {
                    list.push(hid);
                }
            }

            return list;
        },
        //通过种族获得en10星的hid数组
        getTenHerosByZhongzu: function(zhongzu) {
            var me = this;

            var zzList = [];
            var hidList = me.getTenStarHidsArr();
            for (var i = 0; i < hidList.length; i++) {
                var hid = hidList[i];
                var conf = G.class.hero.getById(hid);
                if (conf.zhongzu == zhongzu) {
                    zzList.push(hid);
                }
            }

            return zzList;
        },
        getExtneedNum: function(id, dengjielv) {
            var me = this;

            var extneed = me.getById(id)[dengjielv].extneed;

            var num = 0;
            for (var i = 0; i < extneed.length; i++) {
                var ext = extneed[i];
                num += ext.num;
            }

            return num;
        }
    };
    //装备
    G.class.equip = {
        get: function() {
            return G.class.getConf('equip');
        },
        getById: function(id) {
            return this.get()[id];
        },
        getIdArrByType: function(type) {
            var arr = [];

            var conf = me.get();
            for (var id in conf) {
                var cnf = conf[id];
                if (cnf.type == type) {
                    arr.push(id);
                }
            }

            return arr;
        },
        //套装
        getTaozhuang: function() {
            return G.class.getConf('equiptz');
        },
        getTaozhuangById: function(id) {
            var me = this;

            return me.getTaozhuang()[id];
        },
        getTaozhuangByZbid: function(zbid) {
            var me = this;

            var tzid = null;
            for (var id in me.getTaozhuang()) {
                var conf = me.getTaozhuangById(id);
                if (X.inArray(conf.tzid, zbid)) {
                    tzid = id;
                }
            }

            return tzid;
        },
        //获得套装buff数组
        getTzBuffArrById: function(id) {
            var me = this;

            var conf = me.getTaozhuangById(id).buff;

            var arr = [];
            for (var num in conf) {
                var buff = conf[num];
                arr.push([num, buff]);
            }

            arr.sort(function(a, b) {
                return a[0] * 1 < b[0] * 1 ? -1 : 1;
            });

            return arr;
        }
    };
    //NPC
    G.class.npc = {
        get: function() {
            return G.class.getConf("npc");
        },
        getById: function(id) {
            var me = this;
            return me.get()[id]
        },
    };
    //宝石
    G.class.baoshi = {
        get: function() {
            return G.class.getConf('baoshi');
        },
        getById: function(id) {
            var me = this;

            return me.get()[id];
        },
        //获得升级的最大值
        getMaxLen: function() {
            var me = this;

            return X.keysOfObject(me.get()).length;
        }
    };
    //饰品
    G.class.shipin = {
        get: function() {
            return G.class.getConf('shipin');
        },
        getById: function(id) {
            var me = this;

            return me.get()[id];
        }
    };
    //雕文
    G.class.glyph = {
        get: function () {
            return G.class.getConf("glyph");
        },
        getCom: function () {
            return G.class.getConf("glyphcom");
        },
        getExtra: function () {
            return G.class.getConf("glyphextra");
        },
        getById: function (id) {
            return this.get()[id];
        }
    };
    //货币
    G.class.attricon = {
        get: function() {
            return G.class.getConf('attricon');
        },
        getById: function(id) {
            var me = this;

            return me.get()[id];
        },
        getIcoById: function(id) {
            var me = this;

            return me.getById(id).ico;
        },
        getImgById: function(id) {
            var me = this;

            return me.getById(id).img;
        },
    };
    //探险
    G.class.tanxian = {
        get: function() {
            return G.class.getConf('tanxian');
        },
        getById: function(id) {
            var me = this;

            return me.get()[id];
        },
        _parse: function() {
            var me = this;

            if (!me.conf) {
                var obj = {};
                var conf = me.get();
                for (var id in conf) {
                    var cnf = conf[id];
                    obj[cnf.nandu] = obj[cnf.nandu] || {};
                    obj[cnf.nandu][cnf.area] = obj[cnf.nandu][cnf.area] || [];
                    obj[cnf.nandu][cnf.area].push(id);
                }

                me.conf = obj;
            }
        },
        getAreaById: function(id) {
            var me = this;

            return me.getById(id).area;
        },
        getNanduById: function(id) {
            var me = this;

            return me.getById(id).nandu;
        },
        // 通过属性获得指定的挂机奖励
        getGjPerValueByAttr: function(id, attr) {
            var me = this;

            var gjPrize = me.getById(id).gjprize;

            return gjPrize[attr];
        },
        //获得id数组
        getIdArrByNanduAndArea: function(nandu, area) {
            var me = this;

            me._parse();
            var conf = me.conf;
            var arr = [].concat(conf[nandu][area]);
            arr.sort(function(a, b) {
                return a * 1 < b * 1 ? -1 : 1;
            });

            return arr;
        },
        //判断关卡是不是章节的最后一关
        checkIsLastByGqid: function(id) {
            var me = this;

            var conf = me.getById(id);
            var idArr = me.getIdArrByNanduAndArea(conf.nandu, conf.area);
            var idx = X.arrayFind(idArr, id);

            return idx == idArr.length - 1;
        },
        //获得关卡的开启条件
        getNeedlvByGqid: function(id) {
            var me = this;

            var conf = me.getById(id);

            return conf.needlv;
        },
        //获得当前允许的最大关卡id
        getCurMaxGqid: function() {
            var me = this;

            return me.getExtConf().base.maxmapid;
        },
        //探险的额外配置
        getExtConf: function() {
            return G.class.getConf('tanxian_com');
        },
        //获得快速购买消耗
        getKstxNeed: function(num) {
            var me = this;

            return me.getExtConf().base.buynumneed[num];
        },
        //通关奖励
        getTgprize: function() {
            var me = this;

            return me.getExtConf().base.passprize;
        },
        //获得积分上限值
        getMax: function() {
            var me = this;

            return me.getExtConf().base.maxjifen;
        },
        getSimulateFight: function() {
            var me = this;

            return me.getExtConf().base.simulatefight;
        },
        //获得vip加成
        getVipAdd: function (id) {
            if(id == "jifen") return 0;

            var obj = {
                jinbi: 103,
                useexp: 105,
                exp: 104
            };
            var conf = G.class.vip.get()[P.gud.vip];
            if(!conf) return 0;

            for(var i in conf.tq) {
                if(conf.tq[i][0] == obj[id]) {
                    return conf.tq[i][1] / 100
                }
            }
            return 0;
        }
    };
    //掉落
    G.class.diaoluo = {
        get: function() {
            return G.class.getConf('diaoluo');
        },
        getById: function(id) {
            var me = this;

            var prize = me.get()[id];
            //需要过滤掉空奖励
            var arr = [];
            for (var i = 0; i < prize.length; i++) {
                var p = prize[i];
                if (p.a == '') continue;
                arr.push(p);
            }
            prize = [].concat(arr);
            return prize;
        }
    };
    //造型
    G.class.zaoxing = {
        get: function() {
            return G.class.getConf('zaoxing');
        },
        getByType: function(type) {
            if (type == 'headborder') return this.getHeadBorder();
            if (type == 'chat') return this.getChat();
            if (type == 'head') return this.getHead();
            if (type == 'xunzhang') return this.getXunZhang();
        },
        getById: function(type, id) {
            return this.getByType(type)[id];
        },
        getHead: function() {
            return this.get().head;
        },
        getHeadById: function(id) {
            return this.getHead()[id];
        },
        getHeadBorder: function() {
            return this.get().headborder;
        },
        getHeadBorderById: function(id) {
            return this.getHeadBorder()[id];
        },
        getChat: function() {
            return this.get().chatborder;
        },
        getChatById: function(id) {
            return this.getChat()[id];
        },
        getXunZhang: function() {
            return this.get().xunzhang;
        },
        getXunZhangById: function(id) {
            return this.getXunZhang()[id];
        }
    };
    // 英雄成长
    G.class.herogrow = {
        get: function() {
            return G.class.getConf('herogrow');
        },
        getById: function(id) {
            var me = this;

            return me.get()[id];
        },
    };
    //悬赏任务
    G.class.xuanshangrenwu = {
        get: function() {
            return G.class.getConf("xstask");
        },
        getConfById: function(id) {
            var me = this;

            return me.get()[id];
        },
        getConf: function() {
            return G.class.getConf("xscom");
        }
    };
    //大法师塔
    G.class.dafashita = {
        get: function() {
            return G.class.getConf("dafashita");
        },
        getPrize: function() {
            return G.class.getConf("tongguanprize");
        },
        getPrizeTargetArr: function () {
            var me = this;
            var arr = [];
            var conf = me.getPrize().passprize;

            for(var i = 0; i < conf.length; i ++) {
                arr.push(conf[i][0]);
            }

            arr.sort(function (a, b) {
                return a < b ? -1 : 1;
            });

            return arr;
        }
    };
    //许愿池
    G.class.xuyuanchi = {
        get: function() {
            return G.class.getConf("xuyuanchi");
        },
        getMaxByType: function (type) {
            var me = this;

            return me.get()[type].energy[1];
        },
        getBoxConf: function () {
            var me = this;

            return me.get()["common"].passprize;
        }
    };
    //每日试炼
    G.class.meirishilian = {
        get: function() {
            return G.class.getConf("mrsl");
        },
        getCon: function() {
            return G.class.getConf("mrslcon")
        },
        getConfByType: function(type) {
            var me = this;

            return me.get()[type];
        }
    };
    //十字军远征
    G.class.shizijunyuanzheng = {
        getLevel: function() {
            return G.class.getConf("yuanzheng_xx");
        },
        getConf: function() {
            return G.class.getConf("yuanzheng_conf");
        },
        getSupply: function () {
            return G.class.getConf("yuanzheng_conf").base.supply;
        }
    };
    //任务
    G.class.task = {

        getTask: function() {
            return G.class.getConf("task");
        },
        getTaskByTaskId: function(taskId) {
            var me = this;
            return me.getTask()[taskId];
        },
    };
    //外域争霸
    G.class.waiyuzhengba = {
        get: function () {
            return G.class.getConf("yuwaizhengba");
        },
        getOpenTimeByType: function (type) {
            var me = this;
            return me.get().base[type].opentime;
        }
    };
    //跳转配置
    G.class.tiaozhuan = {
        get: function() {
            return G.class.getConf('tiaozhuan');
        },
        getById: function(id) {
            var me = this;

            return me.get()[id];
        },
        getIdByFrameId: function(frameId) {
            var me = this;

            var id = "";
            var conf = me.get();
            var keys = X.keysOfObject(conf);
            for (var i = 0; i < keys.length; i++) {
                if (conf[keys[i]].frameId == frameId) {
                    id = keys[i];
                    break;
                }
            }
            return id;
        }
    };
    //商店
    G.class.shop = {
        get: function() {
            return G.class.getConf('shop');
        },
        getById: function(id) {
            var me = this;

            return me.get()[id];
        },
        //检测时候否需要确认弹框
        checkIsShowAlert: function(id) {
            var me = this;

            var conf = me.getById(id);

            return conf.ispop;
        },
        //刷新消耗
        getRefreshNeed: function(id) {
            var me = this;

            var conf = me.getById(id);

            return conf.need;
        },
        getShopItems: function() {
            return G.class.getConf('shopitem');
        },
        getShopItemById: function(id) {
            var me = this;

            return me.getShopItems[id];
        }
    };
    //开放条件
    G.class.opencond = {
        get: function() {
            return G.class.getConf('opencond');
        },
        getCondById: function(id) {
            var cond = this.get().base[id];
            return cond != undefined ? cond : {};
        },
        getCondKeyArrById: function(id, isMain) {
            var cond = this.getCondById(id);
            var str = isMain ? 'main' : 'optional';
            if (!cond[str]) return null;

            var arr = [];
            for (var i = 0; i < cond[str].length; i++) {
                var con = cond[str][i];
                arr.push(con[0]);
            }

            return arr;
        },
        getCondValueArrByid: function(id, isMain) {
            var cond = this.getCondById(id);
            var str = isMain ? 'main' : 'optional';
            if (!cond[str]) return null;

            var arr = [];
            for (var i = 0; i < cond[str].length; i++) {
                var con = cond[str][i];
                arr.push(con[1]);
            }

            return arr;
        },
        getCondKeyArr: function() {
            return X.keysOfObject(this.get().base);
        },
        getIsOpenById: function(id, obj) {
            var obj = obj || P.gud;
            var conf = this.getCondById(id);
            if (!X.isHavItem(conf)) {
                return true;
            }

            var canGo = false;
            if (conf['main']) {
                var canMain = true;
                var canOptional = false;
                var cond = conf['main'];
                for (var i = 0; i < cond.length; i++) {
                    var co = cond[i];
                    if (obj[co[0]] < co[1]) {
                        canMain = false;
                        break;
                    }
                }
                if (!canMain) {
                    if (conf['optional']) {
                        var cond = conf['optional'];
                        for (var i = 0; i < cond.length; i++) {
                            var co = cond[i];
                            if (obj[co[0]] >= co[1]) {
                                canOptional = true;
                                break;
                            }
                        }
                    }
                }

                canGo = canMain || canOptional;
            } else {
                var canOptional = false;
                var cond = conf['optional'];
                for (var i = 0; i < cond.length; i++) {
                    var co = cond[i];
                    if (obj[co[0]] >= co[1]) {
                        canOptional = true;
                        break;
                    }
                }

                canGo = canOptional;
            }

            return canGo;
        },
        getTipById: function(id) {
            var str = '';
            var obj = obj || P.gud;

            var conf = this.getCondById(id);
            var canMain = true;
            if (conf['main']) {
                var cond = conf['main'];
                for (var i = 0; i < cond.length; i++) {
                    var co = cond[i];
                    if (obj[co[0]] < co[1]) {
                        // var val = co[0] == 'opencityid' ? G.gc.cityIndex[co[1]] : co[1];
                        // var val = co[0] == 'vip' ? P.gud[co[1]] : co[1];
                        var val = co[1];
                        str += X.STR(L('OPEN_' + co[0]), val) + (cond.length > 1 && i != cond.length - 1 ? L('AND') : '');
                        canMain = false;
                    }
                }
            }

            if (conf['optional']) {
                var cond = conf['optional'];
                var canOptional = false;
                for (var i = 0; i < cond.length; i++) {
                    var co = cond[i];
                    if (obj[co[0]] >= co[1]) {
                        canOptional = true;
                        break;
                    }
                }

                if (!canOptional && !canMain) {
                    str += L('BINGQIE');
                }

                if (!canOptional) {
                    for (var i = 0; i < cond.length; i++) {
                        var co = cond[i];
                        var val = co[0] == 'opencityid' ? G.gc.cityIndex[co[1]] : co[1];
                        str += X.STR(L('OPEN_' + co[0]), val) + (cond.length > 1 && i != cond.length - 1 ? L('OR') : '');
                    }
                }
            }

            return str;
        },
        //获得某功能的开放等级 ，如果不存在返回null
        getLvById: function(id) {
            var me = this;

            var conf = this.getCondById(id);
            var arr = [];
            if (conf.optional) {
                arr = arr.concat(conf.optional);
            }
            if (conf.main) {
                arr = arr.concat(conf.main);
            }

            var lv = null;
            for (var i = 0; i < arr.length; i++) {
                var cond = arr[i];
                if (cond[0] == 'lv') {
                    lv = cond[1];
                    break;
                }
            }

            return lv;
        }
    };
    //世界树配置
    G.class.worldtree = {
        get: function() {
            return G.class.getConf('worldtree');
        },
        getCallNeed: function() {
            var me = this;

            return me.get().base.callneed;
        },
        //星级获取置换的消耗
        getChangeNeedByStar: function(star) {
            var me = this;

            return me.get().base.swapneed[star];
        }
    };
    //阵法
    G.class.zhenfa = {
        get: function() {
            return G.class.getConf('fightcom');
        },
        getById: function(id) {
            var me = this;

            var conf = me.get().zhenfa;
            return conf[id];
        },
        getIcoById: function(id) {
            var me = this;

            return me.getById(id).ico;
        }
    };
    //竞技场
    G.class.jingjichang = {
        get: function() {
            return G.class.getConf('zypkjjccom');
        }
    };
    //冠军试炼
    G.class.championtrial = {
        get: function() {
            return G.class.getConf('championtrial');
        }
    };
    //公会
    G.class.gonghui = {
        get: function() {
            return G.class.getConf('gonghui');
        },
        getMaxNumPerPage: function() {
            var me = this;

            return me.get().base.maxnumperpage;
        },
        // 旗帜图片
        getFlagImgById: function(id) {
            var me = this;

            return 'img/gonghui/' + me.get().base.flags[id].img;
        },
        //获得等级配置
        getLvConf: function() {
            var me = this;

            return me.get().base.lv2conf;
        },
        //获得等级对应的配置
        getConfByLv: function(lv) {
            var me = this;

            return me.getLvConf()[lv];
        },
        // 升级所需要经验值
        getUpNeedExp: function(lv) {
            var me = this;

            var conf = me.get().base.lv2conf[lv];
            var lastConf = me.get().base.lv2conf[lv - 1];

            if (lastConf) {
                return conf.exp - lastConf.exp;
            } else {
                return conf.exp;
            }
        },
        //计算总经验值对应的等级
        getLvByExp: function(exp) {
            var me = this;

            var conf = me.get().base.lv2conf;

            var keys = X.keysOfObject(conf);
            keys.sort(function(a, b) {
                return a * 1 < b * 1 ? -1 : 1;
            });

            for (var i = 0; i < keys.length; i++) {
                var lv = keys[i];
                var lastExp = conf[lv - 1] ? conf[lv - 1].exp : 0;
                var lv2exp = conf[lv].exp;
                if (exp < lv2exp) {
                    return [lv, exp - lastExp];
                }
            }
        },
        //当前等级所需的经验值
        getMaxExpBylv: function(lv) {
            var me = this;

            var conf = me.get().base.lv2conf;
            var lastExp = conf[lv - 1] ? conf[lv - 1].exp : 0;
            var lv2exp = conf[lv].exp;

            return lv2exp - lastExp;

        },
        checkIsMaxLv: function(lv) {
            var me = this;

            var isMax = false;
            var conf = me.get().base.lv2conf;

            var keys = X.keysOfObject(conf);
            if (lv == keys.length) {
                isMax = true;
            }

            return isMax;
        },

        //公会副本
        getFubenConf: function() {
            return G.class.getConf('gonghui_fuben').base;
        },
        getFubenById: function(id) {
            var me = this;

            return me.getFubenConf().fuben[id];
        },
        getFubenPrizeByFbid: function(id) {
            var me = this;

            return me.getFubenConf().fubenprize[me.getFubenById(id).prizeid];
        },
        getPMPrizeByRank: function (fbid,rank) {
            var me = this;

            var pmPrize = me.getFubenPrizeByFbid(fbid).pmprize;

            for (var i = 0; i < pmPrize.length; i++) {
                var pPrize = pmPrize[i];
                if (pPrize[0][0] <= rank && pPrize[0][1] >= rank) {
                    return pPrize[1];
                }
            }

            return [];
        },
        //获得技能配置
        getSkillConfById: function(id) {
            var me = this;

            return me.get().base.skill[id];
        },
        getRizhiConfById: function(id) {
            var me = this;

            return me.get().base.rizhi.types[id];
        }
    };
    //好友
    G.class.friend = {
        get: function() {
            return G.class.getConf('friend');
        },
        getWeekprize: function() {
            return G.class.getConf('friend').base.weekprize;
        },
        getPrizeByLv: function (lv) {
            var me = this;
            var conf = me.get().base.treasure[0].boss;
            var keys = X.keysOfObject(conf);

            for (var i = 0; i < keys.length; i ++) {
                var num = keys[i].split("_");
                if(lv >= num[0] * 1 && lv <= num[1] * 1) {
                    return conf[keys[i]];
                }
            }
        }
    };
    //vip
    G.class.vip = {
        get: function() {
            return G.class.getConf('vip');
        },
        getVipTeQuan: function() {
            return G.class.getConf('vip_tequan');
        }
    };

    //充值活动
    G.class.chongzhihd = {
        get: function() {
            return G.class.getConf('chongzhihd');
        },
        getMeirixiangou: function() {
            return G.class.getConf('chongzhihd').meirixiangou;
        },
        getChaozhilibao: function() {
            return G.class.getConf('chongzhihd').chaozhilibao;
        },
        getAdvertising: function() {
            return G.class.getConf('chongzhihd').advertising;
        },
        getYangchenglibao: function() {
            return G.class.getConf('chongzhihd').yangchenglibao;
        },
        getDengjilibao: function() {
            return G.class.getConf('chongzhihd').dengjilibao;
        },
        getTequan: function() {
            return G.class.getConf('chongzhihd').tequan
        }
    };

    //帮助
    G.class.support = {
        get: function() {
            return G.class.getConf('support');
        },
        getHelp: function() {
            return G.class.getConf('support').help;
        },
        getProblem: function() {
            return G.class.getConf('support').problem;
        }
    };
    //preload加载配置
    G.class.loading = {
        get: function () {
            return G.class.getConf('loading');
        },
        getConfById: function (id) {
            return this.get().base[id];
        },
        getOneConf: function () {
            var keys = X.keysOfObject(this.get().base);

            var k = X.arrayRand(keys);
            if (k == '0') return this.getOneConf();

            return this.getConfById(k);
        }
    };
    //神器
    G.class.shenqi = {
        get: function() {
            return G.class.getConf("shenqicom").shenqi;
        },
        getComById: function(id) {
            return G.class.getConf("shenqicom").shenqi[id];
        },
        getBuffByIdAndLv: function (id, lv) {
            return G.class.getConf("shenqibuff")[id][lv];
        },
        getSkillByIdAndDj: function (id, dj) {
            return G.class.getConf("shenqiskill")[id][dj];
        },
        getUpLvNeedByLv: function (lv) {
            return G.class.getConf("shenqicom").base.lvneed[lv];
        },
        getUpDjNeedByDj: function (denjie) {
            return G.class.getConf("shenqicom").base.dengjieneed[denjie];
        },
        getTaskById: function (id) {
            return G.class.getConf("shenqitask")[id];
        }
    };
    //秘境
    G.class.watchercom = {
        get: function () {
            return G.class.getConf("watchercom");
        },
        getMedicine: function (idx) {
            var me = this;

            if(!idx && idx != 0) return me.get().base.supply;
            else return me.get().base.supply[idx];
        },
        getTitle: function (idx) {
            var me = this;

            return me.get().base.leveltxt[idx];
        },
        getMixtureBuyId: function (id) {
            var me = this;

            if(!id && id != 0) return me.get().base.mixture;
            else return me.get().base.mixture[id];
        },
        getFlopNeedById: function (id) {
            var me = this;

            return me.get().base.flop.need[id][0].n;
        },
        getAllFlopNeed: function () {
            var me = this;
            var num = 0;

            for (var i = 2; i < 6; i ++) {
                num += me.getFlopNeedById(i);
            }

            return num;
        }
    };
    //融魂
    G.class.meltsoul = {
        get: function() {
            return G.class.getConf("meltsoul");
        },
        getById: function(id) {
            return G.class.getConf("meltsoul")[id];
        }
    };
    //融魂消耗
    G.class.meltsoulcom = {
        get: function() {
            return G.class.getConf("meltsoulcom");
        },
        getOpenLv:function(){
            return G.class.getConf("meltsoulcom").base.limitlv;
        },
        getAtkneed:function(dj){
            return G.class.getConf("meltsoulcom").base.atkneed[dj];
        },
        getHpneed:function(dj){
            return G.class.getConf("meltsoulcom").base.hpneed[dj];
        },
        getTPlv:function(dj){
            return G.class.getConf("meltsoulcom").base.tupo[dj];
        }

    };
    //统御
    G.class.tongyu = {
        get: function () {
            return G.class.getConf("tongyu");
        },
        getHerosByID: function (id) {
            var arr = [];
            var conf = G.class.hero.get();

            for (var i in conf) {
                if(conf[i].pinglunid == id && conf[i].star >= 5) {
                    arr.push(conf[i]);
                }
            }
            arr.sort(function (a, b) {
                return a.star < b.star ? -1 : 1;
            });
            return arr;
        },
        getHeroByZhongzu: function (zhongzu) {
            var me = this;
            var arr = [];
            var heroArr = me.get().base.herozu;

            for (var i = 0; i < heroArr.length; i ++) {
                if(me.getHerosByID(heroArr[i])[0].zhongzu == zhongzu) {
                    arr.push(heroArr[i]);
                }
            }

            return arr;
        }
    };
    //王者荣耀
    G.class.wangzherongyao = {
        get: function() {
            return G.class.getConf('wangzherongyao');
        },
        getOpenNum: function() {
            return this.get().base.wangzhe.opennum;
        },
        getStateById: function(id) {
            return this.get().base.state[id];
        },
        getPrizes: function() {
            return this.get().base.jiangli;
        },
        getPrizeByType: function(type) {
            return this.get().base.jiangli[type];
        },
        //自动报名
        getZDBMCond: function() {
            return this.get().base.zdbmcond.vip;
        },
        getOpen:function(){
            return this.get().bmneed;
        }
    };
})();

;;(function(){
    //本地模拟充值
    
        //监听充值事件
        G.event.on('doSDKPay',function(data){
            if(G.serverListUrl == "http://v3.legu.cc/hommdata/?app=serverlist"){
                cc.log('doSDKPay',data);
                var proid = data.pid, //产品id
                    money = data.money,//分
                    pname = data.pname,
                    logicProid = data.logicProid||proid;

                G.tip_NB.show('开启本地充值调试模式...');

                G.ajax.send('chongzhi_pay',[
                    P.gud.uid,
                    logicProid,
                    'debugPay'+X.rand(100000000,9999999999),
                    money,
                    'hommDebugSecKey123'
                ],function(){
                    G.tip_NB.show('充值成功');
                    G.event.emit('paysuccess');
                },true);
            }
        });
})();
;;(function(){

    if(!cc.sys.isNative){
        //字体test
        ccui.Text.prototype._setFontName = ccui.Text.prototype.setFontName;
        ccui.Text.prototype.setFontName = function(name){
            name = name.replace('.ttf','');
            this._setFontName(name);
        };
    }
    
    cc.getRect = function (node) {
        var ap = node.getAnchorPoint(),
            pos = node.convertToWorldSpaceAR(),//.getPosition(),
            size = node.getContentSize(),
            //parent = node.getParent(),
            scaleX = node.getScaleX(),
            scaleY = node.getScaleY();

        //if (parent){
            //pos = parent.convertToWorldSpace(pos);
        //}
        return cc.rect(pos.x - size.width * scaleX * ap.x, pos.y - size.height * scaleY * ap.y,size.width * scaleX,size.height * scaleY);
    };

    //窗体扩展功能
    X.bUi.prototype.showMainMenu = function(){
        this.needshowMainMenu = true;
        var me = this;

        if(!me.attr('_bindShowMainMenu')){
            me.on('focus',function(){
                if(cc.sys.isObjectValid(G.view.mainMenu.ui)){
                    G.view.mainMenu.zIndex = me.ui.zIndex+3;
                    G.view.mainMenu.showWith(me);
                }
            });
            me.on('hide',function(){
                //重置menu层级
                cc.log('重置menu层级');
                G.view.mainMenu.delShowWithHistory(me._id);
                if( X.topFrameID && G.frame[ X.topFrameID ] && !G.frame[ X.topFrameID]._bindShowMainMenu ){
                    //如果当前最顶部的窗口不需要mainMenu，则重新设置mainMenu的层级
                    var showWith = G.view.mainMenu.getLastShowWith();
                    if( showWith && G.frame[showWith] && G.frame[showWith].ui){
                        cc.log('重置到='+showWith);
                        // G.frame[showWith].emit('focus2');
                        G.frame[showWith].showMainMenu();
                    }
                }
            });
            me.attr('_bindShowMainMenu',true);
        }
        if(cc.sys.isObjectValid(G.view.mainMenu.ui)){
            G.view.mainMenu.zIndex = me.ui.zIndex+3;
            G.view.mainMenu.showWith(me);
        }
    };
    
    X.bUi.prototype.showToper = function(){
        this.needShowToper = true;
        if(cc.sys.isObjectValid(G.view.toper.ui)){
            G.view.toper.zIndex = this.ui.zIndex+3;
            G.view.toper.showWith(this);
        }
    };
    //改变toper的货币值显示
    X.bUi.prototype.changeToperAttr = function(obj){
        if(cc.sys.isObjectValid(G.view.toper.ui)){
            G.view.toper.changeAttr(obj);
        }
    };

    cc.Action.prototype.playWithCallback = function(name,repeat,callback){
        var me = this;
        if(name && me.isAnimationInfoExists(name)){
            var endIndex = me.getAnimationInfo(name).endIndex;
            me.setLastFrameCallFunc(function(){
                if(endIndex == me.getCurrentFrame()){
                    this.clearLastFrameCallFunc();
                    cc.callLater(function(){
                        cc.sys.isObjectValid(me) && callback && callback();
                    });
                }
            });
            me.play(name,repeat);
        }else{
            callback && callback();
        }
    };

    cc.enableScrollBar = function (scrollView,isEnable) {
        scrollView.setScrollBarEnabled && scrollView.setScrollBarEnabled(isEnable != undefined ? isEnable : false);
    };

    //listview跳转到某个指定的idx
    ccui.ListView.prototype.jumpToIdx = function (idx,args) {
        var me = this;

        args = args || {};
        var type = args.type || 'horizontal';
        var offset = args.offset || 0;

        var children = me.getChildren();
        if(idx >= children.length){
            idx = children.length - 1;
        }

        var child = children[idx];
        var itemMargin = me.getItemsMargin();

        var val,visibleVal,innerVal;
        if (type == 'horizontal') {
            //水平滑动
            visibleVal = me.getContentSize().width;
            innerVal = me.getInnerContainerSize().width;
            val = (child.width + itemMargin) * idx - offset;
            //滑动到最后边时
            cc.log('已滑到最边缘======', 1);
            if (innerVal - val < visibleVal) {
                me.jumpToRight();
            } else {
                me.getInnerContainer().setPosition(cc.p(-val,0));
            }
        } else {
            visibleVal = me.getContentSize().height;
            innerVal = me.getInnerContainerSize().height;
            if(child == undefined) return;
            val = (child.height + itemMargin) * idx - offset;
            //滑动到最后边时
            if (innerVal - val < visibleVal) {
                me.jumpToBottom();
            } else {
                me.getInnerContainer().setPosition(cc.p(0,val - innerVal + visibleVal));
            }
        }
    };

    //设置按钮状态
    ccui.Button.prototype.setBtnState = function (bool,color) {
        var me = this;

        me.setTouchEnabled(bool);
        me.setBrightAndColor(bool,color);
    };
    //设置按钮高亮切换时的文字颜色
    ccui.Button.prototype.setBrightAndColor = function (bool,color) {
        var me = this;

        var obj = {
            1:{
                yellow:G.gc.COLOR.n101,
                red:G.gc.COLOR.n103,
                green:G.gc.COLOR.n102
            },
            0:{
                yellow:G.gc.COLOR.n15,
                red:G.gc.COLOR.n15,
                green:G.gc.COLOR.n15
            }
        };

        color = color || 'yellow';

        me.setBright(bool);
        me.setTitleColor && me.setTitleColor(cc.color(obj[bool ? 1 : 0][color]));
    };
    
    //扩展ccui下的精度条在指定时间内动画设定为x值
    ccui.LoadingBar.prototype.setPercentAni = function (val) {
    	var that = this;
    	this._from = this.getPercent();
    	this._to = val;
    	
    	this._dtsum = 0;
    	var nv = 0;
    	this.unscheduleUpdate();
    	this.update = function(dt){
    		this._dtsum += dt;
    		nv = parseInt(this._from + (this._to - this._from) * this._dtsum);
    		this.setPercent( nv );
    		if(nv==this._to){
    			this.unscheduleUpdate();
    		}
    	};
    	this.scheduleUpdate();
    };
    
    G.event.on("TOUCH_ENDED", function (sender, fromwhere) {
        X.playSound(sender, fromwhere);
    })
})();
;;(function(){

function getCity(callback){
    var url = 'http://ip.taobao.com/service/getIpInfo.php?ip=myip';
    var xhr = new XMLHttpRequest();
    C.log('ajax='+ url);
    
    xhr.open('POST', url);

    xhr.onreadystatechange = function() {
        C.log(xhr.statusText);
        C.log('responseData='+xhr.responseText);
        if(xhr.responseText.length>0){
            try{
                var json = JSON.parse(xhr.responseText);
                if(json.code==0){
                    var c = json.data.city;
                    if(c.length==0)c=json.data.country;
                    if(c.length>0){
                        callback && callback(c)
                    }
                }
            }catch(e){}
        }
    }
    if(sys.os.toLowerCase()=='windows'){
        xhr.send('_@_from_@_=winexe');
    }else{
        xhr.send();
    }
}

function updateMyCity(){
    getCity(function(city){
        G.ajax.send("user_setcity", [city], function (d) {});
    });
}

//登陆完毕后获取离线消息
if(C.isJSB){
    G.event.on('loginOver',function(){
        updateMyCity();
    });
}


})();
;;/**
 * Created by wfq on 2018/6/20.
 */
(function () {
    //帮助界面
    var ID = 'help';

    var fun = X.bUi.extend({
        ctor: function (json, id) {
            var me = this;
            // me.singleGroup = "f6";
            me._super(json, id, {action:true});
        },
        initUi: function () {
            var me = this;
        },
        bindBtn: function () {
            var me = this;

            cc.sys.isObjectValid(me.nodes.mask) && me.nodes.mask.touch(function (sender, type) {
                if (type == ccui.Widget.TOUCH_ENDED) {
                    me.remove();
                }
            });
        },
        onOpen: function () {
            var me = this;
            me.fillSize();

            me.initUi();
            me.bindBtn();
        },
        onAniShow: function () {
            var me = this;
        },
        onShow: function () {
            var me = this;

            me.DATA = me.data();
            me.setContents();
        },
        onHide: function () {
            var me = this;
        },
        setContents: function () {
            var me = this;
            // me.nodes.mask.setBackGroundColorOpacity(255 * 0.7);
            var data = me.DATA;
            var layName = me.nodes.panel_bt;
            var txtIntr = me.nodes.listview_1;
            me.nodes.scrollview_.hide();
            cc.enableScrollBar(txtIntr);
            // var txt_h = txtIntr.height;

            layName.removeAllChildren();
            var strName = data.title || L('BZ');

            var rhName = new X.bRichText({
                size:24,
                maxWidth:layName.width,
                lineHeight:32,
                color:"#FFE8C0",
                family:G.defaultFNT,
            });
            rhName.text(strName);
            rhName.setPosition(cc.p(layName.width / 2 - rhName.trueWidth() / 2,layName.height / 2 - rhName.trueHeight() / 2));
            layName.addChild(rhName);

            var rt = new X.bRichText({
                size: 20,
                lineHeight: 24,
                color: G.gc.COLOR.n5,
                maxWidth: txtIntr.width,
                family: G.defaultFNT,
            });
            rt.text(data.intr);
            txtIntr.pushBackCustomItem(rt);
        },
    });

    G.frame[ID] = new fun('ui_top5.json', ID);
})();
;;(function(){

var GAMETOOLSURL = "http://gametools.legu.cc/",
    GAME = 'zhengba';
    X.LOGURL = "http://gamemana.legu.cc/index.php?g=admin&m=data&a=tongji";

    X.LOGURL = "";


G.event.on('setServerData',function(data){
    //选择了区服时，读取区服状态，弹出维护提示
    var url = GAMETOOLSURL+"?app=api&act=getRunning&game="+GAME+"&sid="+data.sid;
    X.ajax.get(url,{},function(v){
        if(v==null || (v+"").length==0)return;
        if(!cc.sys.isObjectValid(G.frame.login.ui))return;
        if(v*1 === 0){
            //维护中
            // G.frame.login.ui.finds('wh').setString(  X.STR(L('NOTRUNNING'),data.name));
            // G.frame.login.ui.finds('mask_gg').show();
            var qqqun = G.gameconfig.get('qqqun');
            if(qqqun){
                var str =  L("WHGG") + X.STR(L("JRQQ"),qqqun.v);
            }else{
                var str =  L("WHGG");
            }
            if(!G.frame.tishi_fwq.isShow){
                G.frame.tishi_fwq.data({
                    title: L("WHGG_NAME"),
                    intr: str,
                }).show();
            }
        }else{
            //去掉维护中的提示...
            // G.frame.login.ui.finds('mask_gg').hide();
            G.frame.help.remove();
        }
    });
});

    X.tiShenLog = function(sender,pos){
        X.ajax.post('http://gametools.legu.cc/?app=tmp_log&act=addlog',{
            game:GAME,
            uid : (P&& P.gud) ? P.gud.uid :'',
            t : sender.getName(),
            pos : JSON.stringify(sender.convertToWorldSpace(pos))
        });
    };
/*
* log为字典，以下为常规统计
* click  //表示点击次数
* money  //表示消耗代币
* rmbmoney  //表示消耗充值币
*
* other... //其他任意KV数据
* */

X.LOG = {
    _tmlLogDic:{},
    _addCount:0,
    _timer : null,

    add : function(act,data){
        //合并数据
        if(X.LOGURL==null || X.LOGURL=="")return;

        data.act = act;
        data.ctime = G.time;

        if(!this._tmlLogDic[act]){
            this._tmlLogDic[act] = data;
        }else{
            for(var k in data){
                if(isNaN(data[k]))continue;

                if(this._tmlLogDic[act][k]==null)this._tmlLogDic[act][k]=0;
                this._tmlLogDic[act][k] += (data[k]*1);
                this._tmlLogDic[act].ctime = G.time;
            }
        }
        this._addCount++;
        if(this._addCount>=10){
            this._addCount=0;
            this.send();
        }
    },
    send : function(){
        if(X.LOGURL==null || X.LOGURL==""){
            this._tmlLogDic = {};
            return;
        }

        if(this._timer!=null){
            cc.director.getRunningScene().clearTimeout(this._timer);
            delete this._timer;
        }

        if(P.gud){
            var keys = Object.keys(this._tmlLogDic),
                sendLog = [],
                reqData = {
                    "sid": P.gud.svrindex,
                    "uid": P.gud.uid,
                    "requnid": X.time() + X.UUID(2),
                    "game":"hkskswks"
                };
            reqData.sign = X.MD5(reqData.game + reqData.sid + reqData.uid + reqData.requnid + "ajsdklasjdkjakl123f");

            if(keys.length>0){
                for(var k in this._tmlLogDic){
                    this._tmlLogDic[k].act = k;
                    sendLog.push(this._tmlLogDic[k]);
                }
                reqData.log = JSON.stringify(sendLog);
                this._tmlLogDic = {};//清空缓存
                X.ajax.post(X.LOGURL,reqData);
            }
        }

        this._timer = cc.director.getRunningScene().setTimeout(function(){
            X.LOG.send();
        },60000);
    }
};
/*G.win.start.on('ready',function(){
    X.LOG.send();
});*/

    //自动记录
G.event.on('pay',function(d){
    d = JSON.parse(d);
    //{"rmbmoney": 30, "act": "qijiqifu"}
    X.LOG.add("pay_"+ d.act,{
        "rmbmoney":d.rmbmoney
    });
});


})();
;;(function(){

G.event.on('otherClientlogin',function(){
    G.class.loginfun.otherClientlogin = true;
    G.tip_NB.show('您的账号已在其他地方登陆');
    cc.director.getRunningScene().setTimeout(function(){
        delete G.class.loginfun.otherClientlogin;
        G.restart();
    },1000);
});

G.class.loginfun = {
    connSocket : function(callback){
        var s = G._SOCKET.split(':');
        G.socket.onopen = function(){
            callback && callback();
        };
        G.socket.conn(s[0],s[1]);
    },
    bindSocket : function(u,t,k){
        var me = this;
        if(cc.sys.isObjectValid(G.socket.ws) && G.socket.ws.readyState==WebSocket.OPEN){
            return; 
        }
        me.connSocket(function(){
            G.socket.send('binduid',[u,t,k]);   
        });
        G.socket.onclose = function(){
            cc.log('G.socket.onclose..');
            if(!me.otherClientlogin){
                C.D.getRunningScene().setTimeout(function(){
                    me.bindSocket(u,t,k);
                },3000);
            }
        };
    },
    loginToLogic : function(u,t,k,sid,callback){
        var me = this;
        
        G.event.emit('loginToLogic',{});

        if(me._loginTimer){
            C.D.getRunningScene().clearTimeout(me._loginTimer);
            delete me._loginTimer;
        }
        G.win.start.getTimeFromServer();
		
		var extra = {};
		if(G.CHANNEL && G.CHANNEL!="")extra['ext_channel'] = G.CHANNEL;
		if(G.loginData && G.loginData['myu']!="")extra['ext_mybinduid'] = G.loginData['myu'];
		if(G.channelId && G.channelId!="")extra['ext_channelId'] = G.channelId;
		if(G.owner && G.owner!="")extra['ext_owner'] = G.owner;
		if(G._SERVERNAME && G._SERVERNAME!="")extra['ext_servername'] = G._SERVERNAME;

        G.ajax.send('user_login',[u,t,k,sid,extra],{"succ":function(d){ // G._SERVERID
            if (!d) return;
            var data = JSON.parse(d);
            if (data.s === -3) {
            	//这个逻辑不会进入了，默认会给玩家指定 temp_xxxx 的名字
                G._SID = data.d.sid;

                //G.frame.create.data({u:u,t:t,k:k,callback:callback}).show();
                // G.ajax.send('user_register',[u,t,k,callback],function(data) {
                //     if (!data) return;
                //     var data = X.toJSON(data);
                //     if (data.s === 1) {
                //         G.OPENTIME = data.d.opentime;
                //         me.remove();
                //         G.class.loginfun.toMain(u,t,k,data.d,callback);
                //         G.event.emit('dologin',{});
                //         G.event.emit('createrole',{});
                //         G.push.regInit();
                //
                //         G.loginAllData = data.d;
                //     }
                // },true);
                G.frame.login_zc.data({u:u,t:t,k:k,callback:callback}).show();



            } else if (data.s === 1) {
                G._SID = data.d.sid;
                G.OPENTIME = data.d.opentime;
                if (data.d.tm && !G.TOPMESSAGE){
                    G.TOPMESSAGE = {"m":data.d.tm,"c":0};
                }

                //如果是新玩家，则上传数据，用于控制负载均衡
                var isNewPlayer = data.d.isNewPlayer;
                if(isNewPlayer){
                    //上传新玩家数据便于统计数量
                    var _upurl = "http://zhengbaapi.legu.cc/api/?app=usercount&act=add&sid="+ data.d.gud.sid +"&uid="+ data.d.gud.uid;
                    X.ajax.get(_upurl,{},function(_upv){
                        cc.log('_upres',_upv);
                    });
                    cc.log('_upurl',_upurl);
                }


                me.toMain(u,t,k,data.d,callback);
                G.loginAllData = data.d;
                // G.event.once('mainmenu_showed',function () {
                //     G.frame.liaotian.addNewChat([]);
                //     if (data.d.wechat && data.d.wechat.length > 0){
                //         for (var i in data.d.wechat) {
                //             if (data.d.wechat[i] != P.gud.uid) {
                //                 G.frame.liaotian.DATA.userHongDian[data.d.wechat[i]] = true;
                //             }
                //         }
                //         G.setNewIcoImg(G.mainMenu.m_lay_liaotian, 1, cc.p(50, 40));
                //     }
                // });
                G.event.emit('dologin',{});

            }
        },"error":function(){
            me._loginTimer = C.D.getRunningScene().setTimeout(function(){
                me.loginToLogic(u,t,k,sid,callback);
            },3000);
        }},true);
    },
    toMain:function(u,t,k,data,callback) {
        var me = this;

        G.class.player.init(data);
        me.bindSocket(P.gud.uid,t,k);
        callback && callback();
        G.frame.preload.show('loadbaseData',function(){
            // G.frame.fight.once('show',function(){
                // G.frame.fight.visible(false);

                // G.frame.world.once('show',function(){
                //     G.frame.world.visible(false);
                // }).show();

                // G.frame.main.show();
                
            if (!cc.isNode(G.view.mainView)) {
                new G.class.mainView();
                cc.director.getRunningScene().addChild(G.view.mainView);
            }else{
            	G.view.mainView.setTimeout(function(){
	                G.event.emit('mainViewShow');
	            },10);
            }
            G.view.mainView.show();
            G.frame.preload.remove();
            
            
        });
    },
    willLogin : function(data,callback){
        G.loginData = data;
        if(data.userStatus!=1){
            G.tip_NB.show("您的账号已被锁定");
            return;
        }

        if(!G.frame.login.lastSvr){
            G.tip_NB.show("正在加载区服列表 请稍候");
            G.frame.login.getSvrList();
            return;
        }

        if(G.time < G.frame.login.lastSvr.starttime){
            //没有开放的区
            if(data.specialUser!=1){
                G.tip_NB.show("该区暂未开放 请稍候再试");
                return;
            }
        }
        this.doLogin(data.u,data.t,data.k,G.frame.login.lastSvr.sid,callback);
    },
    doLogin : function(u,t,k,sid,callback){
        X.cache('_loginU_',u);
        X.cache('_loginT_',t);
        X.cache('_loginK_',k);
        X.cache('_loginSID_',sid);
        G._onlineSecond = 0;
        this.loginToLogic(u,t,k,sid,callback);
    },
    reDoLogin : function(callback){
        // X.hideAllFrame({except:"fight,world,main,paomadeng"});
        this.doLogin(X.cache('_loginU_'),X.cache('_loginT_'),X.cache('_loginK_'),X.cache('_loginSID_'),callback);
    }
};
        
})();
;;(function(){


  function md5(string) {
    var x = Array();
    var k, AA, BB, CC, DD, a, b, c, d;
    var S11 = 7, S12 = 12, S13 = 17, S14 = 22;
    var S21 = 5, S22 = 9, S23 = 14, S24 = 20;
    var S31 = 4, S32 = 11, S33 = 16, S34 = 23;
    var S41 = 6, S42 = 10, S43 = 15, S44 = 21;
    string = Utf8Encode(string);
    x = ConvertToWordArray(string);
    a = 0x67452301;
    b = 0xEFCDAB89;
    c = 0x98BADCFE;
    d = 0x10325476;
    for (k = 0; k < x.length; k += 16) {
      AA = a;
      BB = b;
      CC = c;
      DD = d;
      a = FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);
      d = FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);
      c = FF(c, d, a, b, x[k + 2], S13, 0x242070DB);
      b = FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);
      a = FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);
      d = FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);
      c = FF(c, d, a, b, x[k + 6], S13, 0xA8304613);
      b = FF(b, c, d, a, x[k + 7], S14, 0xFD469501);
      a = FF(a, b, c, d, x[k + 8], S11, 0x698098D8);
      d = FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);
      c = FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);
      b = FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);
      a = FF(a, b, c, d, x[k + 12], S11, 0x6B901122);
      d = FF(d, a, b, c, x[k + 13], S12, 0xFD987193);
      c = FF(c, d, a, b, x[k + 14], S13, 0xA679438E);
      b = FF(b, c, d, a, x[k + 15], S14, 0x49B40821);
      a = GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);
      d = GG(d, a, b, c, x[k + 6], S22, 0xC040B340);
      c = GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);
      b = GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);
      a = GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);
      d = GG(d, a, b, c, x[k + 10], S22, 0x2441453);
      c = GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);
      b = GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);
      a = GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);
      d = GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);
      c = GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);
      b = GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);
      a = GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);
      d = GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);
      c = GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);
      b = GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);
      a = HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);
      d = HH(d, a, b, c, x[k + 8], S32, 0x8771F681);
      c = HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);
      b = HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);
      a = HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);
      d = HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);
      c = HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);
      b = HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);
      a = HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);
      d = HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);
      c = HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);
      b = HH(b, c, d, a, x[k + 6], S34, 0x4881D05);
      a = HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);
      d = HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);
      c = HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);
      b = HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);
      a = II(a, b, c, d, x[k + 0], S41, 0xF4292244);
      d = II(d, a, b, c, x[k + 7], S42, 0x432AFF97);
      c = II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);
      b = II(b, c, d, a, x[k + 5], S44, 0xFC93A039);
      a = II(a, b, c, d, x[k + 12], S41, 0x655B59C3);
      d = II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);
      c = II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);
      b = II(b, c, d, a, x[k + 1], S44, 0x85845DD1);
      a = II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);
      d = II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);
      c = II(c, d, a, b, x[k + 6], S43, 0xA3014314);
      b = II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);
      a = II(a, b, c, d, x[k + 4], S41, 0xF7537E82);
      d = II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);
      c = II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);
      b = II(b, c, d, a, x[k + 9], S44, 0xEB86D391);
      a = AddUnsigned(a, AA);
      b = AddUnsigned(b, BB);
      c = AddUnsigned(c, CC);
      d = AddUnsigned(d, DD);
    }
    var temp = WordToHex(a) + WordToHex(b) + WordToHex(c) + WordToHex(d);
    return temp.toUpperCase();
  }
  function RotateLeft(lValue, iShiftBits) {
    return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));
  }
  function AddUnsigned(lX, lY) {
    var lX4, lY4, lX8, lY8, lResult;
    lX8 = (lX & 0x80000000);
    lY8 = (lY & 0x80000000);
    lX4 = (lX & 0x40000000);
    lY4 = (lY & 0x40000000);
    lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);
    if (lX4 & lY4) {
      return (lResult ^ 0x80000000 ^ lX8 ^ lY8);
    }
    if (lX4 | lY4) {
      if (lResult & 0x40000000) {
        return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);
      } else {
        return (lResult ^ 0x40000000 ^ lX8 ^ lY8);
      }
    } else {
      return (lResult ^ lX8 ^ lY8);
    }
  }
  function F(x, y, z) {
    return (x & y) | ((~x) & z);
  }
  function G(x, y, z) {
    return (x & z) | (y & (~z));
  }
  function H(x, y, z) {
    return (x ^ y ^ z);
  }
  function I(x, y, z) {
    return (y ^ (x | (~z)));
  }
  function FF(a, b, c, d, x, s, ac) {
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));
    return AddUnsigned(RotateLeft(a, s), b);
  }
  function GG(a, b, c, d, x, s, ac) {
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));
    return AddUnsigned(RotateLeft(a, s), b);
  }
  function HH(a, b, c, d, x, s, ac) {
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));
    return AddUnsigned(RotateLeft(a, s), b);
  }
  function II(a, b, c, d, x, s, ac) {
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));
    return AddUnsigned(RotateLeft(a, s), b);
  }
  function ConvertToWordArray(string) {
    var lWordCount;
    var lMessageLength = string.length;
    var lNumberOfWords_temp1 = lMessageLength + 8;
    var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;
    var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;
    var lWordArray = Array(lNumberOfWords - 1);
    var lBytePosition = 0;
    var lByteCount = 0;
    while (lByteCount < lMessageLength) {
      lWordCount = (lByteCount - (lByteCount % 4)) / 4;
      lBytePosition = (lByteCount % 4) * 8;
      lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount) << lBytePosition));
      lByteCount++;
    }
    lWordCount = (lByteCount - (lByteCount % 4)) / 4;
    lBytePosition = (lByteCount % 4) * 8;
    lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);
    lWordArray[lNumberOfWords - 2] = lMessageLength << 3;
    lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;
    return lWordArray;
  }
  function WordToHex(lValue) {
    var WordToHexValue = "", WordToHexValue_temp = "", lByte, lCount;
    for (lCount = 0; lCount <= 3; lCount++) {
      lByte = (lValue >>> (lCount * 8)) & 255;
      WordToHexValue_temp = "0" + lByte.toString(16);
      WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);
    }
    return WordToHexValue;
  }
  function Utf8Encode(string) {
    var utftext = "";
    for (var n = 0; n < string.length; n++) {
      var c = string.charCodeAt(n);
      if (c < 128) {
        utftext += String.fromCharCode(c);
      } else if ((c > 127) && (c < 2048)) {
        utftext += String.fromCharCode((c >> 6) | 192);
        utftext += String.fromCharCode((c & 63) | 128);
      } else {
        utftext += String.fromCharCode((c >> 12) | 224);
        utftext += String.fromCharCode(((c >> 6) & 63) | 128);
        utftext += String.fromCharCode((c & 63) | 128);
      }
    }
    return utftext;
  }


  X.MD5 = md5;

})();
;;(function(){
var CustomTableViewCell = cc.TableViewCell.extend({
    draw: function(ctx) {
        this._super(ctx);
    }
});

//var CustomTableViewCell = ccui.Widget.extend({
//    _idx:0,
//
//    getIdx:function () {
//        return this._idx;
//    },
//    setIdx:function (idx) {
//        this._idx = idx;
//    },
//    reset:function () {
//        this._idx = cc.INVALID_INDEX;
//    },
//    setObjectID:function (idx) {
//        this._idx = idx;
//    },
//    getObjectID:function () {
//        return this._idx;
//    },
//    draw: function(ctx) {
//        this._super(ctx);
//    }
//});

    cc.myTableViewDelegate = cc.Class.extend({

        /**
         * 数据模板
         * @returns {*}
         */
        cellDataTemplate: function () {
            return new ccui.Layout();
        },
        /**
         * 数据初始化
         * @param ui
         * @param data
         * @param pos [row,col]
         */
        cellDataInit: function (ui,data,pos) {

        },
        /**
         * 分组title模板
         * @returns {*}
         */
        cellGroupTemplate: function () {
            return new ccui.Layout();
        },
        /**
         * title初始化
         * @param ui
         * @param type
         */
        cellGroupInit: function (ui, type) {

        }
    });

    /*cc.TableView.prototype._onTouchEnded = cc.TableView.prototype.onTouchEnded;
    cc.TableView.prototype.onTouchEnded = function (touch,event) {
        this._onTouchEnded(touch,event);
        var delegate = this.getDelegate();
        if (delegate && delegate.triggerTouch){
            delegate.triggerTouch(touch,event);
        }
    };*/
cc.myTableView = cc.Class.extend({
    ctor : function(config){
        //this._super();
        this._config = config;
        this._cellSize={};
    },
    setDelegate: function(d){
        this._delegate = d;
    },
    
    bindScrollView : function(scrollView){
        var me = this;
        //me.setContentSize(scrollView.getContentSize());
        
        me.tableSize = scrollView.getContentSize();
        me.tableView = new cc.TableView(this,me.tableSize);
        me.tableView.setDirection(scrollView.getDirection());
        me.tableView.width = scrollView.width;
        me.tableView.height = scrollView.height;
        me.tableView.x = me.tableView.y = 0;
        me.tableView.setAnchorPoint(C.ANCHOR[7]);
        me.tableView.setDelegate(this);
        me.tableView.setVerticalFillOrder(cc.TABLEVIEW_FILL_TOPDOWN);

        me.direction = scrollView.getDirection();
        
        scrollView.innerWidth = scrollView.width;
        scrollView.innerHeight = scrollView.height;

        scrollView.setTouchEnabled(false);
        scrollView.addChild(me.tableView);

        return this;
    },
    showIndex : function(callback){
        this._showIndexCall = callback;
        return this;
    },
    
    data : function(d){
        var me = this;
        if (d) {
            me._data = d;
            if (me._titleui){
                for(var i in me._titleui){
                    me._titleui[i].removeFromParent();
                }
                delete me._titleui;
            }
            return this;
        }else{
            return me._data;
        }
    },

    numberOfCellsInTableView:function(table) {
        //总行数
        var me = this;
        var rowNum = 0;
        if (me._config.group){
            for(var i in me._config.group){
                var type = me._config.group[i];
                var data = me._data[type];
                if (data){
                    rowNum += Math.ceil(data.length/me._config.rownum);
                }
            }
        }else {
            rowNum = Math.ceil((me._data.length || 1) / me._config.rownum);
        }
        return rowNum;
    },



    tableCellAtIndex:function (table, idx) {
        var me = this;
        var strValue = idx.toFixed(0);
        var cell = table.dequeueCell();
        var cellHeight = me.tableCellSizeForIndex(table,idx).height;
        if (me._config.group && me.groupAtIndex(idx)[1] == 0){
            cellHeight -= me._config.groupTitleHeight;
        }
        if (!cell) {
            cell = new CustomTableViewCell();
            cell.setAnchorPoint(C.ANCHOR[1]);
            
            for(var i=0;i<me._config.rownum;i++){
                var node = this._delegate.cellDataTemplate();
                node.idx = idx*me._config.rownum + i;
                this._delegate.cellDataInit(node,this.dataAtIndex(idx,i),[idx,i]);

                node.setAnchorPoint(C.ANCHOR[1]);
                node.y = cellHeight;

                if(idx==0 && this._config.paddingTop){
                    node.y -= this._config.paddingTop;
                }

                if (me._config.rownum > 1) {
                    var sw = (me.tableSize.width - node.width - 1) / (me._config.rownum - 1);
                    node.x = i * sw;
                }else{
                    node.x = 0;
                }
                
                cell.addChild(node);
                if(node.needRelease)node.release();
            }
        }else{
            var children = cell.getChildren();
            for(var i=0;i<me._config.rownum;i++){
                var node = children[i];
                node.y = cellHeight;

                if(idx==0 && this._config.paddingTop){
                    node.y -= this._config.paddingTop;
                }

                node.idx = idx*me._config.rownum + i;
                if (node) {
                    this._delegate.cellDataInit(node,this.dataAtIndex(idx,i),[idx,i]);
                }
            }
        }
        if (this._config.group) {
            this._titleui = this._titleui || {};
            var group = this.groupAtIndex(idx);
            if (group[1] == 0) {
                var pos = cc.p(0, 0);
                if (idx == 0) {
                    pos.y = table.getContainer().getContentSize().height;
                } else {
                    var lastcell = table.cellAtIndex(idx - 1);
                    if (lastcell) {
                        //pos.y = lastcell.getPositionY();
                        pos.y = table.getContainer().getContentSize().height - (X.arrayFind(this._config.group,group[0]) * this._config.groupTitleHeight + idx * me._config.lineheight);
                    } else {
                        lastcell = table.cellAtIndex(idx + 1);
                        if (lastcell) {
                            pos.y = lastcell.getPositionY() + me._config.lineheight * 2 + me._config.groupTitleHeight;
                        }
                    }
                }
                if (!this._titleui[group[0]]) {
                    var titleui = this._delegate.cellGroupTemplate();
                    titleui.setAnchorPoint(0, 1);
                    this._delegate.cellGroupInit(titleui, group[0]);
                    table.getContainer().addChild(titleui);
                    this._titleui[group[0]] = titleui;
                }
                this._titleui[group[0]].setPosition(pos);
            }
        }
        return cell;
    },
    sizeIndex : function(){
        return this;
    },

    setCellSize : function(idx,size){
        var me = this;
        //设置指定cell的自定义size,size = {w:11,h:22}  w和h均可选
        me._cellSize[ idx ] = size;
    },
    delCellSize : function(idx){
        var me = this;
        delete me._cellSize[ idx ];
    },

    tableCellSizeForIndex:function (table, idx) {
        var me = this;
        var specSize = me._cellSize[idx]||{};

        if( me.direction == cc.SCROLLVIEW_DIRECTION_HORIZONTAL){
            var size = me._cellSize[ -1 ];//横放时特殊处理
        }else{
            var size = cc.size(specSize.w || specSize.width ||this.tableSize.width, specSize.h || specSize.height || me._config.lineheight);
            if (me._config.group && me.groupAtIndex(idx)[1] == 0){
                size.height += me._config.groupTitleHeight;
            }
        }

        // var size = cc.size(specSize.w || specSize.width ||this.tableSize.width, specSize.h || specSize.height || me._config.lineheight);
        // if (me._config.group && me.groupAtIndex(idx)[1] == 0){
        //     size.height += me._config.groupTitleHeight;
        // }

        if(idx==0 && this._config.paddingTop){
            size.height += this._config.paddingTop;
        }
        return size;
    },
    /**
     *
     * @param idx
     * @returns {*}[grouptype,新组第n行]
     */
    groupAtIndex: function (idx) {
        var me = this;
        var row = 0;
        for(var i in me._config.group){
            var type = me._config.group[i];
            var data = me._data[type];
            if (data && data.length > 0){
                if (idx == row) return [type,0];

                var a = Math.ceil(data.length/me._config.rownum);
                if (idx < row + a) return [type,idx - row];

                row += a;
            }else{
                if (this._titleui && this._titleui[type]){
                    this._titleui[type].removeFromParent();
                    delete this._titleui[type];
                }
            }
        }
    },
    dataAtIndex: function (row, col) {
        var me = this;
        if (me._config.group) {
            var group = me.groupAtIndex(row);
            return me._data[group[0]][me._config.rownum * group[1] + col];
        }else{
            return me._data[me._config.rownum * row + col];
        }
    },
    getItemByName: function (name) {
        var list = this.tableView.getChildren()[0].getChildren();
        for (var i in list){
            var children = list[i].getChildren();
            for (var j in children){
                var ui = children[j];
                if (ui != null){
                    if (ui.getName() == name){
                        return [ui,[i,j]];
                    }
                }
            }
        }
        return null;
    },
    cellDataUpdate: function (name,data) {
        var list = this.tableView.getChildren()[0].getChildren();
        for (var i in list){
            var children = list[i].getChildren();
            for (var j in children){
                var ui = children[j];
                if (ui != null){
                    if (ui.getName() == name){
                        this._delegate.cellDataInit(ui,data,[i,j]);
                        break;
                    }
                }
            }
        }
        var item = this.getItemByName(name);
        if (item) {
            this._delegate.cellDataInit(item[0], data, item[1]);
        }
    },
    reloadDataWithScroll: function (isScroll) {
        var offset = isScroll ? null : this.tableView.getContentOffset();
        this.tableView.reloadData();

        if (!isScroll){
            if( this.direction == cc.SCROLLVIEW_DIRECTION_HORIZONTAL){
                //横向滚动特殊处理
                this.tableView.setContentOffset(offset);
                /*
                 var minOffsetX = this.tableSize.width - this.tableView.getContentSize().width;
                 if (minOffsetX < 0 && minOffsetX <= offset.x) {
                 this.tableView.setContentOffset(offset);
                 }
                 */
            }else{
                var minOffsetY = this.tableSize.height - this.tableView.getContentSize().height;
                if (minOffsetY < 0 && minOffsetY <= offset.y) {
                    this.tableView.setContentOffset(offset);
                }
            }
        }
    },
    reloadDataWithScrollToBottomRight: function () {
        this.tableView.reloadData();
        if( this.direction == cc.SCROLLVIEW_DIRECTION_HORIZONTAL){
            //横向滚动特殊处理
            var minOffsetX = this.tableSize.width - this.tableView.getContentSize().width;
            if (minOffsetX < 0) {
                this.tableView.setContentOffset(cc.p(minOffsetX, 0));
            }
        }else{
            var minOffsetY = this.tableSize.height - this.tableView.getContentSize().height;
            if (minOffsetY < 0){
                this.tableView.setContentOffset(cc.p(0,0));
            }
        }
    },
    scrollToCell: function (cellIndex) {
        if( this.direction == cc.SCROLLVIEW_DIRECTION_HORIZONTAL){
            //横向滚动特殊处理
            var minOffsetX = this.tableSize.width - this.tableView.getContentSize().width;
            if (minOffsetX < 0) {
                var x = 0;
                for (var i = 1; i <= cellIndex; i++){
                    x += this._cellSize[i-1] ? this._cellSize[i-1].width : this._cellSize[-1].width;
                }
                if (-x < minOffsetX){
                    this.tableView.setContentOffset(cc.p(minOffsetX, 0));
                }else {
                    this.tableView.setContentOffset(cc.p(-x, 0));
                }
            }
        }else{
            var minOffsetY = this.tableSize.height - this.tableView.getContentSize().height;
            if (minOffsetY < 0){
                var y = 0;
                for (var i = 1; i <= cellIndex; i++){
                    y += (this._cellSize[i-1] ? this._cellSize[i-1].height : this._config.lineheight) + (this._config.offsetY || 0);
                }

                if (minOffsetY > 0) {
                    this.tableView.setContentOffset(cc.p(0, minOffsetY));
                } else {
                    if (y + minOffsetY >= 0) {
                        this.tableView.setContentOffset(cc.p(0, 0));
                    } else {
                        this.tableView.setContentOffset(cc.p(0, y + minOffsetY));
                    }
                }

                // for (var i = 1; i <= cellIndex; i++){
                //     y += (this._cellSize[i-1] ? this._cellSize[i-1].height : this._config.lineheight) + (this._config.offsetY || 0);
                // }
                // y -= this.tableSize.height;
                // if (y > 0) {
                //     if (y + minOffsetY >= 0) {
                //         this.tableView.setContentOffset(cc.p(0, 0));
                //     } else {
                //         this.tableView.setContentOffset(cc.p(0, y + minOffsetY));
                //     }
                // }else{
                //     this.tableView.setContentOffset(cc.p(0, minOffsetY));
                // }
            }
        }
    },
    reloadDataWithScrollToCellAtIndex: function (idx) {
        var me = this;
        me.tableView.reloadData();
        me.tableView.setTimeout(function () {
            me.scrollToCell(idx);
        },10);
    }
});

})();
;;(function(){
    function chr(code){
        return String.fromCharCode(code);
    }
    var CHR1 = chr(1),CHR2 = chr(2),CHR3 = chr(3),CHR4 = chr(4);
    var sendIndex = 65;
    var errTimes = 0;

    function checkErrTimes(){
        cc.log('network error times='+ errTimes );
        if(errTimes>=30){
            G.event.emit('ajaxMaxError');
            errTimes = 0;
        }
    }

    G.ajax = {
        event : cc.EventEmitter.create(),
        send: function (code, args, callback,showLoading) {
            var me = this;
            // cc.log('ajax send',code,args);
            // if (code == null) {
            //     cc.log('[G.ajax.send] error, code or args must not null');
            //     return;
            // }

            cc.log(L('network_api'),code,args);

            if (code == null) {
                cc.log(L('network_noapi'));
                return;
            }

            if(typeof(args)=='function'){
                callback =  args;
                showLoading = callback;
                args = null;
            }else{
                args = [].concat(args);
            }
            
            var _key = CHR4;
            if (callback) {
                sendIndex++;
                if (sendIndex >= 90)sendIndex = 65;
                _key = chr(sendIndex);
            }
            var _data = this.fmtData(code, args,_key);
            
            if(showLoading && G.frame.loading)G.frame.loading.show();
            X.ajax.get(G._API,_data,function(txt){

                if(txt.indexOf('~serverError~')!=-1){
					if(cc.sys.os==cc.sys.OS_WINDOWS){
				 		cc.log( txt );
					}
					txt="err";
				}

                cc.log('ajax recive',txt);

                if(showLoading && G.frame.loading)G.frame.loading.remove();

                if(txt=='err'){
                    if(typeof(callback)=='object'){
                        callback.error && callback.error();
                    }
                    return;
                }

                try{
                    var d = JSON.parse(txt);
                    if(d && d.s=='-1'){
                        G.event.emit('offline');
                        return;
                    }
                }catch(e){}

                errTimes = 0;
				
                me.s2c(txt,function(svrCode,svrArgs){
                    // cc.log('ajax s2c',svrCode,svrArgs);
                    if(cc.sys.os == cc.sys.OS_WINDOWS && cc.sys.isNative){
                        cc.log(svrArgs);
                    }else if (cc.sys.DESKTOP_BROWSER==cc.sys.platform) {
                        var arg = args != null && args.length > 0 && (args && args[0] != null) ? args : L('wu');
                        var getStr = '=====' + L('api') + '：' + code + ',' + L('args') + '：' + JSON.stringify(arg) +'=======';
                        getStr = '%c' + getStr;
                        console.groupCollapsed(getStr,'color:blue');
                        try {
                            console.info(JSON.parse(svrArgs));
                            // console.dir(svrArgs);
                        } catch (e) {
                            cc.log(L('ERROR') + '======', e);
                        }
                        console.groupEnd();
                    }

                    if(svrCode!=""){
                        G.event.emit(svrCode.toString(),svrArgs);
                    }else{
                        try{
                            var d = JSON.parse(svrArgs);
                            if(d.errmsg)G.tip_NB.show(d.errmsg);
                            if(d.tips)G.tip_NB.show(d.tips);

                            if(d && d.s*1<0){
                                //负数统一由外部处理
                                G.event.emit('puberror',d);
                            }else{
                            	//广播新手指引需要的事件
								G.guidevent && G.guidevent.emit('ajax_'+code);
                            }
                        }catch(e){}
                        
                        if(typeof(callback)=='function'){
                            callback && callback(svrArgs,d);
                        }else if(typeof(callback)=='object'){
                            callback.succ && callback.succ(svrArgs, d);
                        }
                    }
                });
            },function(readyState,status){
                errTimes++;
                checkErrTimes();
                if(showLoading && G.frame.loading)G.frame.loading.remove();
                if(typeof(callback)=='object'){
                    callback.error && callback.error();
                }
            });
        },
        //服务器数据拆包粘包 socket协议也使用该方法解包
        s2c : function (s,callFun){
            var me = this;
            me._socketLeftString = me._socketLeftString || "";
            if(me._socketLeftString!=''){
                s = me._socketLeftString + s;
            }
            if(s.length<3){
                me._socketLeftString = s;
                return;
            }
            if (s.substring(0,1)==CHR1){
                var _endChrIndex = s.indexOf(CHR2);
                if (_endChrIndex==-1){
                    me._socketLeftString = s;
                    return;
                }
                
                if (s.indexOf(CHR4)==-1){
                    me._socketLeftString = "";
                    return;
                }
                
                var _dataMain = s.substring(1,_endChrIndex),
                _dataArr = _dataMain.split(CHR4);
                
                var _code = _dataArr[0],
                    _data = _dataArr[1];
                    
                me._socketLeftString = '';
                callFun && callFun(_code, _data);
                
                if(_endChrIndex+1 != s.length){
                    var _leftData = s.substring(_endChrIndex+1,s.length);
                    me.s2c(_leftData,callFun);
                }
            }else{
                cc.log('[G.ajax.s2c] substring(0,1)!=CHR1');
                me._socketLeftString = ''   ;
            }
        },
        fmtData : function(code,args,_key){
            if(args!=null && 'string'!=typeof(args) && 'number'!=typeof(args)){
                args =  JSON.stringify(args);
            }
            args = args||"";

            if(args){
                args = args+"";
                var _addKey = X.rand(2,9);
                var neWargs = (_addKey * 78) + String.fromCharCode(8);
                var newV = [];
                var ov = X.base64.encode(args);
                for (var i = 0; i < ov.length; i += _addKey * 1) {
                    var _x = ov.substr(i, _addKey * 1);
                    newV.unshift(_x);
                }
                neWargs += newV.join('');
            }else{
                neWargs = args;
            }


            var data = {a:code.toString(),s:G._SID||"",k:_key};
            if(args)data.d = neWargs;
            data.tm = G.time*1000+ X.rand(111,999);
            data.sign = X.MD5(data.a+""+data.s+""+data.k+""+data.d + "" + data.tm +"BBe6O82s4gSU");
            return data;
        },
        ajaxWithNode : function(code, args, callbackDict,showLoading,emitData,needUI){
            var me = this;
            var succCall,errCall,responseCall;
            if(typeof(callbackDict)=='function'){
                succCall = callbackDict;
            }else if(typeof(callbackDict)=='object'){
                responseCall = callbackDict.data;
                succCall = callbackDict.ui;
                errCall = callbackDict.error;
            }
            me.send(code, args, {"succ":function(str,json){
                responseCall && responseCall(str,json);
                if(cc.isNode(needUI)){
                    succCall && succCall(str,json);
                }
            },"error":function(){
                errCall && errCall();
            }},showLoading,emitData);
        }
    };
    G.ajax.event.setMaxListeners(200);
    
    
    X._socket = cc.Class.extend({
        ctor : function(){
            this.event = cc.EventEmitter.create();
            this.event.setMaxListeners(200);
        },
        clearTimer : function(){
            /*var me = this;
             cc.log('clearTimer');
             if(me._timeoutTimer){
             C.D.getRunningScene().clearTimeout(me._timeoutTimer);
             delete me._timeoutTimer;
             }*/
        },
        conn : function(ip,port){
            var me = this;
            me._socketLeftString = "";

            me.ip = ip;
            me.port = port;
            me.timeout = 10000;
            me.ws = new WebSocket('ws://'+ me.ip +':'+ me.port);

            //超时处理
            /*me._timeoutTimer = C.D.getRunningScene().setTimeout(function(){
             me.ws.close();
             me.conn(me.ip,me.port);
             },me.timeout);*/

            me.ws.onopen = function(evt){
                me.clearTimer();
                me.onopen && me.onopen(evt);
                me.event.emit('open', evt);
            };

            me.ws.onerror = function(evt){
                me.clearTimer();
                me.onerror && me.onerror(evt);
                me.event.emit('err', evt);
            };
            me.ws.onconnecting = function(v){
                me.onconnecting && me.onconnecting(evt);
                me.event.emit('connecting',null);
            };
            me.ws.onclose = function(evt){
                errTimes++;
                checkErrTimes();

                me.clearTimer();
                me.onclose && me.onclose(evt);
                me.event.emit('close', evt);
                G.event.emit('socketClose');
            };
            me.ws.onmessage = function(d){
                me.onMessage(d.data);
            };
            return me.ws;
        },
        send: function (code, args) {
            var me = this;
            if(code==null){
                cc.log('[G.socket.send] error, code or args must not null');
                return;
            }
            if(!cc.sys.isObjectValid(me.ws)){
                cc.log('[G.socket.send] error, ws is null');
                return;
            }
            if(me.ws.readyState!=WebSocket.OPEN){
                cc.log('[G.socket.send] _socket is null');
                return;
            }

            var _data = me.fmtData(code,args||"");
            cc.log('SOCKET发送：'+_data);
            me.ws.send(_data);
        },
        onMessage : function(d){
            var me = this;
            G.ajax.s2c.call(me,d,function(code,args){
                cc.log('onMessagePacked',code,args);
                code = code.toString();
                G.event.emit(code,args);
            });
        },
        close : function(){
            if(cc.sys.isObjectValid(this.ws))this.ws.close();
        },
        //格式化发送给服务器的数据
        fmtData : function(code,args){
            if('string'!=typeof(args) && 'number'!=typeof(args)){
                args =  JSON.stringify(args);
            }
            return CHR1 + (code.toString()) + CHR4 + args + CHR2;
        }
    });

    G.socket = new X._socket();
    
})();
;;var P = {};
(function(){
    G.class.player = {};
    //初始化值
    G.class.player.init = function(d){
        P = {};
        if(typeof(d)=='string'){
            d = X.toJSON(d);    
        }
        cc.log('init',d);
        if(d.ntime)G.time=d.ntime;
        for(var k in d){
            if(k=='api')continue;
            P[k] = d[k];
        }

        G.event.emit('playerInit',d);
    };
    //更新
    //G.class.player.update = function(o){
    //  if(!P.gud)return;
    //  for(var k in o){
    //      if(k=='lv'){
    //          //等级变化时广播事件
    //          G.event.emit('playerLvup',{
    //              'olv':P.gud[k],
    //              'lv':o[k]
    //          });
    //      }
    //      P.gud[k] = o[k];
    //  }
    //};

    G.event.on('attrchange',function(d) {
        if (!d) return;
        var d = X.toJSON(d);
        var tips = [];
        var oldGud = JSON.parse(JSON.stringify(P.gud));
        for(var k in d) {
            if(k=='api')continue;
            P.gud[k] = d[k];

            G.event.emit(k + '_change',{o:oldGud[k],n:d[k]});
            switch (k) {
                case 'rmbmoney':
                case 'jinbi':
                case 'useexp':
                // case 'gangtie':
                // case 'shuijing':
                // case 'dianneng':
                // case 'mohun':
                // case 'rongyu':
                // case 'gongxian':
                // case 'jinghua':
                // case 'jinglian':
                // case 'zuier':
                // case 'jingti':
                    if (!d.noshow && d[k] - oldGud[k] < 0) {
                        //tips.push(G.gc.COLOR[5] + '|' + G.class.attricon.getById(k).name + ' ' + '-' + Math.abs(d[k] - oldGud[k]));
                    }
                    G.event.emit('currencyChange');
                    break;
                case 'nexp'://经验变化时
                    G.event.emit('playerNexpChange',{
                        'onexp':oldGud[k],
                        'nexp':d[k]
                    });
                    break;
                case 'lv'://等级变化时
                    //tips.push(G.gc.COLOR[1] + '|' + X.STR(L('LV_UP'),d[k]));
                    G.event.emit('playerLvup',{
                        code:d.api,
                        'olv':oldGud[k],
                        'lv':d[k]
                    });
                    break;
                case 'zhanli'://战力
                    G.event.emit('playerZhanliChange',{
                        code:d.api,
                        'ov':oldGud[k],
                        'nv':d[k]
                    });
                    break;
                case 'vip'://vip变化时
                    G.event.emit('vipChange',{
                        'olv':oldGud[k],
                        'lv':d[k]
                    });
                    break;
                case 'cclv':
                    G.DATA.buildData['1'].lv = d[k];
                    G.event.emit('cclvChange');
                    break;
                case 'jxlv'://军衔变化时
                    // 当军衔等级发生变化的时候，检测是否有新军衔激活
                    var oldJx = G.class.junxiao.getJunxianById(oldGud[k]);
                    var newJx = G.class.junxiao.getJunxianById(d[k]);
                    if(oldJx.id != newJx.id){
                        X.cacheByUid('junxianjihuo', newJx.id);
                        G.checkJunXianJiHuo();
                    }
                    
                    // 当军衔等级发生变化的时候，检测是否有名将可激活
                    var oldMj = G.class.junxiao.getMingjiangByJx(oldGud[k]);
                    var newMj = G.class.junxiao.getMingjiangByJx(d[k]);
                    if(oldMj != newMj){
                        X.cacheByUid('mingjiangjihuo', newMj.id);
                        G.checkMingjiangJiHuo();
                    }
                    break;
                default :
                    break;
            }
        }
        // G.view.toper.updateData();

        if(G.frame.yingxiong_xxxx.isShow && G.frame.yingxiong_xxxx.isShow == true) {

        }else{
            if(tips.length < 1) return;
            G.tip_NB.show(tips);
        }
        G.event.emit('attrchange_over');
    });

    G.event.on('baowuchange',function(d){
        var o = X.toJSON(d);
        var tips = [];
        var oldWp = {};
        cc.log('baowuchange-data',o);
        // for(var k in o){
        //     G.frame.beibao.DATA.baowu[k] = G.frame.beibao.DATA.baowu[k] || {num:1,bid:o[k].bid};
        //     oldWp[k] = JSON.parse(JSON.stringify(G.frame.beibao.DATA.baowu[k]));
        //     for(var aaa in o[k]) {
        //         G.frame.beibao.DATA.baowu[k][aaa] = o[k][aaa]
        //     }
        //     //G.frame.beibao.DATA.baowu[k].num = o[k].num*1 || 1;
        //
        //     if (G.frame.beibao.DATA.baowu[k].num == 0){
        //         delete G.frame.beibao.DATA.baowu[k];
        //     }
        // }

        for(var j=0;j< G.DATA.budui.armylist.plist.length;j++) {
            G.DAO.zhuangbei.checkNewBw(j);
        }
        G.event.emit('baowuchange_over');
    });

    G.event.on('TOUCH_EVENT_TRIGGER', function (sender, type,fromwhere,extData) {
        if (fromwhere!='fromcode' &&  cc.sys.isObjectValid(sender) && type == ccui.Widget.TOUCH_ENDED){
            if(sender.name == 'btn_fh'){
                X.audio.playEffect('sound/close.mp3',false);
            }else{
                if(extData == null || !extData.noSound){
                    G.class.touchsound();
                }
            }
        }
    });

    // herochange{"5aec5828625aee63808d3113": {"lv": 2}}
    G.event.on('herochange',function(d) {
        var o = X.toJSON(d);
        cc.log('herochange-data',o);

        // var tips = [];
        // var needShowArr = ['atk','def','hp','speed'];
        for(var k in o){
            var heroData = o[k];
            if (heroData.num == 0) {
                if (G.DATA.yingxiong.list[k]) {
                    //英雄被移除时，删除缓存信息
                    G.DATA.yingxiong.list[k] = {};
                    delete G.DATA.yingxiong.list[k];
                    cc.log('该英雄已被删除======', k);
                } else {
                    cc.log('不存在该英雄======', k);
                }
            } else {
                // cc.mixin(G.DATA.yingxiong.list[k], o[k], true);

                //修改成增量替换的关系，不再使用完全覆盖的方式  20180525  与唐凯商定
                if (G.DATA.yingxiong.list[k]) {
                    // var oldData = JSON.parse(JSON.stringify(G.DATA.yingxiong.list[k]));
                    for (var key in heroData) {
                        G.DATA.yingxiong.list[k][key] = heroData[key];

                        // if (X.inArray(needShowArr,key) && oldData[key] != heroData[key]) {
                        //     var state = oldData[key] < heroData[key];
                        //     tips.push(G.gc.COLOR[state ? 1 : 5] + '|' + L('ITEM_ATTR_' + key)+ '' + (state ? '+' : '-') + Math.abs(heroData[key] - oldData[key]));
                        // }
                    }
                } else {
                    G.DATA.yingxiong.list[k] = heroData;
                    cc.log('新增英雄======', k);
                }

            }
        }
        // G.tip_NB.show(tips);
        //重新计算英雄数量
        G.frame.yingxiong.checkHeroNum();
        G.event.emit('herochange_over');
    });

    // G.event.on('hunshichange',function(d) {
    //     var o = X.toJSON(d);
    //     cc.log('hunshichange-data',o);
    //     for(var k in o){
    //         G.frame.shenyuanduohun.updateHunShiDataById(k,o[k]);
    //     }

    //     for(var j=0;j< G.DATA.budui.armylist.plist.length;j++) {
    //         G.frame.budui.checkNewHs(j);
    //     }
    //     G.event.emit('hunshichange_over');
    // });
})();
;;//手动维护预加载资源
//注意：该文件切勿再增加任何内容
var R = R || {};
R.preload = (R.preload||[]).concat([
    //'public2.plist',
    //'public2.png',

    // 'public_ico.plist',
    // 'public_ico.png',

    // 'tx_yingxiong2.plist',
    // 'tx_yingxiong2.png',

    //探险粒子效果
    // 'world_getres.plist',
    // 'world_changemap.plist',
    // 'world_prog.plist'
    
    //注意：该文件切勿再增加任何内容

    //'public1.plist',
    //'public1.png'

    //'plist_guaiwu.png',
    //'plist_guaiwu.plist'
]);
;;(function(){
    //服务端公共错误处理
    G.event.on('puberror',function(d){
        if(d.s=='-102'){
            if(!G.class.loginfun.otherClientlogin){
                var scene = cc.director.getRunningScene();
                if(scene._reloginTimer){
                    scene.clearTimeout(scene._reloginTimer);
                    delete scene._reloginTimer;
                }
                scene._reloginTimer = scene.setTimeout(function(){
                    G.class.loginfun.reDoLogin();
                },2000);
            }
        }else if (d.s == '-100'){
            // if (d.attr == 'rmbmoney') {
            //     function send(title,content,btnTitle) {
            //         cc.log('topFrames======',G.DATA.topFrames);
            //         G.frame.alert.data({
            //             title: title,
            //             ok: {wz: btnTitle},
            //             sizeType:3,
            //             okCall: function () {
            //                 X.tiaozhuan('chongzhi');
            //                 // hideSomeFrames();
            //             },
            //             close: true,
            //             closeCall: function () {
            //
            //             },
            //             richText:content
            //         }).show();
            //     }
            //
            //     function hideSomeFrames() {
            //         if (G.DATA.topFrames && G.DATA.topFrames.length > 0) {
            //             for (var i = 0; i < G.DATA.topFrames.length; i++) {
            //               var frame = G.DATA.topFrames[i];
            //               cc.sys.isObjectValid(G.frame[frame].ui) && G.frame[frame].hide();
            //             }
            //             delete G.DATA.topFrames;
            //         }
            //     }
            //
            //     //充值会引起vip的变化，需要关闭之前的界面
            //     // 一旦事件被触发，只会对某些界面执行一次操作
            //     G.frame.chongzhi.once('show',function () {
            //         hideSomeFrames();
            //     });
            //     var title,content,btnTitle;
            //     if (P.gud.payexp <= 0) {
            //         //title = X.STR(L('ATTR_BUGOU'),G.class.attricon.getById(d.attr).name);
            //         //content = L('ATTR_TIP_ZS');
            //         //btnTitle = L('GET_XIAOQIAN');
            //         //send(title,content,btnTitle);
            //         G.frame.shouchongdali.once('show', function () {
            //             G.frame.alert.hide();
            //         }).show();
            //     } else {
            //         G.frame.shouchong2.getData(function() {
            //             if (G.frame.shouchong2.DATA.isrec == 0 && G.frame.shouchong2.DATA.ispay == 1) {
            //                 //title = L('ATTR_GENGLIHAI');
            //                 //content = L('ATTR_TIP_ZS2');
            //                 //btnTitle = L('GET_WUQI');
            //                 //send(title,content,btnTitle);
            //                 G.frame.shouchong2.once('show', function () {
            //                     G.frame.alert.hide();
            //                 }).show();
            //             } else {
            //                 title = X.STR(L('ATTR_BUZU'),G.class.attricon.getById(d.attr).name);
            //                 content = L('ATTR_TIP_ZS3');
            //                 btnTitle = L('GET_LIBAO');
            //                 send(title,content,btnTitle);
            //             }
            //         },true);
            //     }
            //
            // }
            G.tip_NB.show(G.class.attricon.getById(d.attr).name + L('buzu'));
        }else if(d.s == '-104'){
            if(d.equip){
                G.tip_NB.show(L("ZBCLBZ"));
            }else{
                var itemConf = G.class.getItemByType(d.item || 1001,'item');
                G.tip_NB.show(itemConf.name + L('buzu'));
            }

        }
    });


    G.getError = function(e){
        var info=[];
        return;
        info.push("信息：" + e.message||'unkonw');
        if(e.lineNumber)info.push("行号：" + e.lineNumber||'unkonw');
        if(e.columnNumber)info.push("列号：" + e.columnNumber||'unkonw');
        if(e.name)info.push("详情：" + e.name||'unkonw');

        cc.log(info);
    };

    //JS逻辑错误处理
    //window.onerror = function(errorMessage, scriptURI, lineNumber,columnNumber,errorObj) {
    //    G.getError && G.getError({
    //        message:errorMessage,
    //        lineNumber:lineNumber,
    //        columnNumber:columnNumber,
    //        name:errorObj
    //    });
    //};

})();
;;function bug() {
    var txt = "\n====================\n\nBUG描述：\n服务器名：" + G._SERVERNAME + "\n";
    txt += "API地址：" + G._API + "\n";
    if (P && P.gud) {
        txt += "账号：" + P.gud.binduid + "\n";
        txt += "uid：" + P.gud.uid + "\n";
        txt += "角色名：" + P.gud.name + "\n";
        txt += "P：" + JSON.stringify(P) + "\n";
    }
    txt += "\n\n==============================\n";
    cc.log(txt);
}

//按组别平均显示scrollview的子坐标
//{rownum:一行显示多少个,type:'fill||avg' 铺满还是平均}
ccui.ScrollView.prototype.setAutoChildrenPosByGroup = function(c) {
    if (!c.group) {
        return this.setAutoChildrenPos(c);
    }

    var me = this;
    var w = me.width; //总宽度

    if (cc.sys.isObjectValid(me.groupUIList) && me.groupUIList.length > 0) {
        for (var i in me.groupUIList) {
            me.groupUIList[i].removeFromParent();
        }
    }

    var children = me.getChildren();
    if (children.length == 0) 
        return;
    
    if (c.order) 
        children.sort(c.order);
    
    var cw = children[0].width,
        ch = children[0].height; //子元素尺寸

    var type = c.type || 'fill';
    var maxrow = 1;
    var _g = null,
        _n = 0,
        _gh = 0;
    for (var i in children) {
        if (_g != children[i].group) {
            _g = children[i].group;
            maxrow += Math.ceil(_n / c.rownum);
            _n = 1;
            _gh += c.groupUIHeight;
        } else {
            _n++;
        }
    }

    var lineheight = c.lineheight || ch;

    var innerHeight = me.height;
    if (innerHeight < maxrow * lineheight + _gh) 
        innerHeight = maxrow * lineheight + _gh;
    me.innerHeight = innerHeight;

    var _lineidx = 0;
    var _anchor = C.ANCHOR[1];
    var len = children.length;
    //分组时
    var groupType = null,
        groupHeight = 0,
        idx = 0;
    for (var i = 0; i < len; i++) {

        if (groupType != children[i].group) {
            if (idx > 0) {
                _lineidx++;
            }
            groupType = children[i].group;
            var label = c.groupUI(c.group[groupType]);
            label.setAnchorPoint(_anchor);
            label.x = 0;
            label.y = innerHeight - _lineidx * lineheight - groupHeight;
            me.addChild(label);
            me.groupUIList = me.groupUIList || [];
            me.groupUIList.push(label);
            groupHeight += c.groupUIHeight;
            idx = 0;
        }

        if (type == 'fill') {
            //填充满
            var sw = (w - cw) / (c.rownum - 1);
            children[i].x = idx * sw;
        } else if (type == 'avg') {
            //平均排布
            var margin = w - cw * c.rownum,
                smargin = margin / (c.rownum + 1);
            children[i].x = idx * cw + smargin * (idx + 1);
        }
        children[i].setAnchorPoint(_anchor);
        children[i].y = innerHeight - _lineidx * lineheight - groupHeight;
        idx++;
        if (idx == c.rownum) {
            idx = 0;
            _lineidx++;
        }
    }
};

X.posTo = function(a, b, d) {
    var angle = cc.pToAngle(cc.pSub(b, a));
    return cc.p(b.x - d * Math.cos(angle), b.y - d * Math.sin(angle));
};

G.class.touchsound = function() {
    X.audio.playEffect('sound/touch.mp3', false);
};

function num2str(num) {
    if (num == 0) 
        return '';
    if (num > 0) 
        return ' +' + num;
    else 
        return L('XIAOHAO') + '' + Math.abs(num);
    }

/*
{
    json:'xxx.json',
    addTo:node,
    x:
    y:
    z:
    repeat:true||false
    onend : fucntion(node,action){},
    onkey : function(node, this, e.getEvent()){},
    onload : fucntion(node,action){},
    uniqueid:string, addTo下只会存在一个uniqueid的ani
}
* */

G.class.ani = {
    show: function(conf) {
        //动画缓存
        var me = this;
        conf = conf || {};
        conf.action = true;
        if (conf.autoFillSize == null) 
            conf.autoFillSize = false;
        if (conf.autoRemove == null) 
            conf.autoRemove = true;
        
        if (conf.cache) {
            var view = X.viewCache.getView(conf.json + '.json', function(view) {
                return me._created(view, conf);
            }, conf);
        } else {
            var view = new X.bView(conf.json + '.json', function(view) {
                return me._created(view, conf);
            }, conf);
        }
    },
    _created: function(node, conf) {
        var _parentSize;

        if (!conf.addTo) {
            conf.addTo = cc.director.getRunningScene();
            _parentSize = cc.director.getWinSize();
        } else {
            _parentSize = conf.addTo.getContentSize();
        }

        var _winSize = cc.director.getWinSize();
        node.x = conf.x != null
            ? conf.x
            : _parentSize.width / 2;
        node.y = conf.y != null
            ? conf.y
            : _parentSize.height / 2;
        node.zIndex = conf.z != null
            ? conf.z
            : 100;

        node.action.setLastFrameCallFunc(function() {
            this.clearLastFrameCallFunc();
            conf.onend && conf.onend(node, node.action);
            conf.autoRemove && node.removeFromParent();
        });

        node.action.setFrameEventCallFunc(function(e) {
            if (e.getEvent().length > 0) {
                conf.onkey && conf.onkey(node, this, e.getEvent());
            }
        });
        node.action.gotoFrameAndPlay(0, conf.repeat || false);

        delete node.onRemove;
        if (conf.uniqueid) {
            var _uniKey = '__classAni_' + conf.uniqueid;
            node.onRemove = function() {
                delete conf.addTo[_uniKey];
            };
            cc.isNode(conf.addTo[_uniKey]) && conf.addTo[_uniKey].removeFromParent();
            conf.addTo[_uniKey] = node;
        }

        node.setOpacity = function (opacity) {
            var t = this;

            var _fun = function (nd) {
                if (!nd.getChildren || nd.getChildren().length < 1) {
                    nd.setOpacity && nd.setOpacity(opacity);
                    return ;
                }

                var children = nd.getChildren();
                for (var i = 0; i < children.length; i++) {
                    var child = children[i];
                    if (!child.getChildren || child.getChildren().length < 1) {
                        child.setOpacity && child.setOpacity(opacity);
                    } else {
                        _fun(child);
                    }
                }
            };
            
            _fun(t);
        };

        conf.addTo.addChild(node);
        conf.onload && conf.onload(node, node.action);
        return node;
    }
};

//过场动画
G.class.transition = {
    _node: null,
    show: function(callback) {
        var me = this;
        if (cc.isNode(me._node)) {
            return;
        }
        G.class.ani.show({
            json: 'tiaozhuandh',
            cache: true,
            autoRemove: true,
            z: 999999,
            onload: function(node, action) {
                me._node = node;
                action.playWithCallback('in', false, function() {
                    callback && callback();
                });
            }
        })
    },
    hide: function() {
        var me = this;
        if (cc.isNode(me._node)) {
            me._node.action.playWithCallback('out', false, function() {
                me._node.runAction(cc.removeSelf());
                delete me._node;
            });
        }
    }
};

ccui.Button.prototype.setEnableState = function(v) {
    this.setEnabled(v);
    this.setBright(v);
    // this.setTitleColor(C.color(G.gc.COLOR[v?0:10]));
};

/**
 * 设置文字内容和颜色
 * @param target 文本ui
 * @param text 文字内容
 * @param color 文字颜色
 * @param targetClass ui类,label/button
 */
function setTextWithColor(target, text, color, targetClass) {
    targetClass = targetClass
        ? targetClass.toLowerCase()
        : 'label';
    if (targetClass == 'label') {
        target.setString(text);
        target.setTextColor(cc.color(color));
    } else if (targetClass == 'button') {
        target.setTitleText(text);
        target.setTitleColor(cc.color(color));
    }
}

function setPanelTitle(target, text, color) {
    if (target instanceof ccui.Layout) {
        var rt = new X.bRichText({
            size: 24,
            lineHeight: 24,
            color: color || '#FFE8C0',
            maxWidth: target.width,
            family: G.defaultFNT
        });
        rt.text(text);
        rt.setAnchorPoint(0, 1);
        rt.setPosition(cc.p((target.width - rt.trueWidth()) * 0.5, target.height));
        target.removeAllChildren();
        target.addChild(rt);
    } else if (target instanceof ccui.Text) {
        target.setString(text);
        if (color) {
            target.setTextColor(cc.color(color));
        }
    }
}

//data {}
X.isHavItem = function(data) {
    if (data == null) 
        return false;
    return (Object.keys(data)).length > 0;

    /*
    var keys = X.keysOfObject(data);
    if (keys.length === 0) {
        return false;
    } else {
        return true;
    }*/
};
//格式化大数值
X.fmtValue = function(data, fix) {
    var str = '';
    data = parseInt(data);

    if(data < 100000) {
        str = data;
    } else if(data < 100000000) {
        str = (data / 10000).toFixed(1) + L("w");
    } else {
        str = (data / 100000000).toFixed(2) + L("YI");
    }

    return str;
};

//格式化大数值_之前的方法大于1亿会四舍五入
X.fmtValue_new = function(data, fix) {
    var str = '';
    data = parseInt(data);

    if(data < 100000) {
        str = data;
    } else if(data < 100000000) {
        str = (data / 10000).toFixed(1) + L("w");
    } else {
        str = (data / 100000000).toFixed(2) + L("YI");
    }

    return str;
};


function changeData(nd, od, notAdd) {
    for (var k in nd) {
        if (od[k] != undefined || !notAdd) {
            var d = nd[k];
            if (X.instanceOf(d, 'Array')) {
                od[k] = d;
            } else if (X.instanceOf(d, 'Object')) {
                od[k] = od[k] || {};
                changeData(d, od[k]);
            } else {
                od[k] = d;
            }
        }
    }
}

function averageOfArray(array) {
    var sum = 0;
    for (var i in array) {
        sum += array[i];
    }
    return sum / array.length;
}

//最小
function minOfArray(array) {
    /*var min = array[0];
    for (var i = 1; i < array.length; i++) {
        if (min > array[i]) {
            min = array[i];
        }
    }
    return min;*/
    return Math.min.apply(Math.min, array);
}

//最大
function maxOfArray(array) {
    /*var max = array[0];
    for (var i = 1; i < array.length; i++) {
        if (max < array[i]) {
            max = array[i];
        }
    }
    return max;*/
    return Math.max.apply(Math.max, array);
}

//对JSON数据按指定的key排序
function sortByKey(array, key) {
    return array.sort(function(a, b) {
        var x = a[key];
        var y = b[key];
        return (
            (x < y)
            ? -1
            : (
                (x > y)
                ? 1
                : 0));
    });
}

X.setRichText = function(arg) {
    var str = arg.str;
    var parent = arg.parent;
    var node = arg.node;
    var anchor = arg.anchor;
    var pos = arg.pos;
    var size = arg.size;
    var color = arg.color;
    var outline = arg.outline;

    var rh = new X.bRichText({
        size: size || 18,
        maxWidth: parent.width,
        lineHeight: 32,
        color: color || "#804326",
        family: G.defaultFNT,
        eachText: function (node) {
            outline && X.enableOutline(node, outline, 2);
        }
    });
    if(node) rh.text(str, [node]);
    else rh.text(str);
    rh.setAnchorPoint(anchor);
    rh.setPosition(pos);
    parent.removeAllChildren();
    parent.addChild(rh);
};

X.setModel = function(args) {
    var parent = args.parent;
    var data = args.data;
    var scale = args.scale || 1;
    var callback = args.callback;
    var direction = args.direction;
    var model = data.hid;


    if(!cc.isNode(parent))return;
    parent.removeAllChildren();

    X.spine.show({
        json: 'spine/' + model + '.json',
        addTo: parent,
        cache: true,
        x: parent.width / 2,
        y: 0,
        z: 0,
        autoRemove: false,
        rid: data.rid,
        onload: function (node) {
            node.stopAllAni();
            node.setTimeScale(1);
            node.opacity = 255;
            node.setScale(scale);
            node.runAni(0, "wait", true);
            if(direction) node.setScaleX(direction);
            callback && callback(node);
        }
    })
};

//设置英雄动画或者img
X.setHeroModel = function(args) {
    var parent = args.parent;
    var data = args.data;
    var scaleNum = args.scaleNum || 1;
    var callback = args.callback;
    var noParentRemove = args.noParentRemove;
    var direction = args.direction;

    if (!parent || !data) {
        return;
    }

    if (!noParentRemove) {
        parent.removeAllChildren();
    }

    //显示图片或者动画
    // cc.log('请在这里设置造型======', 1);

    var model = args.model || G.class.hero.getModel(data);
    cc.log('此模型id为======', model);
    X.spine.show({
        json:'spine/'+ model +'.json',
        // json:'spine/'+ 41066 +'.json',
        addTo : parent,
        cache:true,
        x:parent.width / 2,
        y:0,
        z:0,
        autoRemove:false,
        rid : data.rid,
        onload : function(node){
			node.stopAllAni();
			node.setTimeScale(1);
			node.opacity = 255;
            node.setScale(scaleNum);

            node.runAni(0, "wait", true);
            node.rid = data.rid;
            node.parent = parent;
            if(direction) node.setScaleX(direction);
            callback && callback(node);
        }
    });
    // new G.class.armyAni('hero', data.hid, data.level || 1, 'z', function(node) {
    //     if (scaleNum != null && scaleNum != 1) {
    //         node.scale = scaleNum;
    //     }
    //     node.setAnchorPoint(0.5, 0);
    //     node.setPosition(data.position || cc.p(parent.getContentSize().width / 2, 0));
    //     parent.addChild(node);
    //     node.byatk();
    //     callback && callback();
    // });
};

X.testModel = function (model) {

    var scene = cc.director.getRunningScene();

    while (scene.getChildByTag(20180629)) {
        scene.getChildByTag(20180629).removeFromParent();
    }

    cc.log('此模型id为======', model);
    X.spine.show({
        json:'spine/'+ model +'.json',
        // json:'spine/'+ 41066 +'.json',
        addTo : scene,
        cache:true,
        x:scene.width / 2,
        y:scene.height / 2,
        z:0,
        autoRemove:false,
        rid : 1,
        onload : function(node){
            node.runAni(0, "wait", true);
            node.setTag(20180629);
        }
    });
};

X.playSpine = function(name, parent, pos, callback) {
    X.spine.show({
        json: 'spine/' + name + '.json',
        addTo: parent,
        cache: true,
        x: pos.x,
        y: pos.y,
        z: 0,
        autoRemove: false,
        onload: function (node) {
            node.stopAllAni();
            node.setTimeScale(1);
            node.opacity = 255;
            node.setScale(1);
            callback && callback(node);
            // node.runAni(0, "baoxiang_daiji", false);
            // node.setCompleteListener(function () {
            //     G.frame.jiangli.once("hide", function () {
            //         node.removeFromParent();
            //         me.playAni(function () {
            //             target.show();
            //             me.ui.finds("ico_qizi").show();
            //             me.ui.finds("btn_an").show();
            //         });
            //         me.zz.hide();
            //     }).data({
            //         prize: winPrize.val
            //     }).show();
            // })
        }
    })
};

//加载粒子动画
X.loadParticle = function(ui, json, callback) {
    X.ccui(json, function(loader) {
        var node = loader.node,
            action = loader.action;

        node.setPosition(cc.p(ui.width / 2, ui.height / 2));
        ui.removeAllChildren();
        ui.addChild(node);
        node.runAction(loader.action);
        action.gotoFrameAndPlay(0, true);

        callback && callback();
    });
};

//add
//G.tip_NB.show(X.createPrizeInfo({a:'attr',t:'jinbi',n:700},0,1))
//plus
//G.tip_NB.show(X.createPrizeInfo({a:'attr',t:'jinbi',n:700},0,5))
X.createPrizeInfo = function(prize, type, color) {

    if (color == 5) {
        return X.createPrizeInfo2(prize, type, color);
    }

    var tips = [];
    var prizeInfo = [];
    prize = [].concat(prize);
    for (var i in prize) {
        var p = prize[i];

        if (p.n == 0) 
            continue;
        
        if (p.a == 'attr') {
            prizeInfo.push({
                n: G.class.attricon.getById(p.t).name,
                c: p.c || G.class.attricon.getById(p.t).color || 0,
                v: Math.floor(p.n),
                p: p
            });
        } else if (p.a == 'item') {
            var c = G.class.getItem(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.color || p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        } else if (p.a == 'equip') {
            var c = G.class.equip.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        } else if (p.a == 'hero') {
            var c = G.class.hero.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        } else if (p.a == 'baowu') {
            var c = G.class.baowu.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        }
        else if (p.a == 'baoshi') {
            var c = G.class.baoshi.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        }
        else if (p.a == 'shipin') {
            var c = G.class.shipin.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        }
        else if (p.a == 'hunshi') {
            var c = G.class.hunshi.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        }
    }
    while (prizeInfo.length > 0) {
        var prizeItem = prizeInfo.shift();
        var str = '';
        var color = '#ffffff';
        switch (prizeItem.p.a) {
            case 'attr':
                break;
            case 'item':
                var con = G.class.getItem(prizeItem.p.t);
                if (con.showtype == 9) {
                    str += color + '|' + L('HUODE') + L('SUIPIAN') + ',';
                } else if (X.inArray(con.arg, 'fuwen')) {
                    str += color + '|' + L('HUODE') + L('FUWEN') + ',';
                } else {
                    str += color + '|' + L('HUODE') + L('DAOJU') + ',';
                }
                break;
            case 'hero':
                str += color + '|' + L('HUODE') + L('YONGBING') + ',';
                break;
            case 'equip':
                var con = G.class.equip.getById(prizeItem.p.t);
                if (con.etype == 0) {
                    str += color + '|' + L('HUODE') + L('SUIPIAN') + ',';
                } else {
                    str += color + '|' + L('HUODE') + L('zhuangbei') + ',';
                }
                break;
            case 'baowu':
                var con = G.class.baowu.getById(prizeItem.p.t);
                str += color + '|' + L('HUODE') + L('BAOWU') + ',';
                break;
            case 'baoshi':
                var con = G.class.baoshi.getById(prizeItem.p.t);
                str += color + '|' + L('HUODE') + L('BAOSHI') + ',';
                break;
            case 'shipin':
                var con = G.class.shipin.getById(prizeItem.p.t);
                str += color + '|' + L('HUODE') + L('SHIPIN') + ',';
                break;
            default:
                break;
        }
        if (type) {
            str += (
                prizeItem.p.a != 'attr'
                ? '['
                : '') + prizeItem.n;
        } else {
            str += (G.gc.COLOR[prizeItem.c] || G.gc.COLOR[1]) + '|' + (
                prizeItem.p.a != 'attr'
                ? '['
                : '') + prizeItem.n;
        }
        if (prizeItem.p.a != 'attr') {
            if (type != 2) {
                str += '+';
            }
            str += prizeItem.v + ']';
        } else {
            if (prizeItem.c == 5) {
                str += '-' + Math.abs(prizeItem.v);
            } else {
                if (prizeItem.v >= 0 || type) {
                    str += '+' + prizeItem.v;
                }
            }
        }
        tips.push(str);
    }
    return tips;
};
X.createPrizeInfo2 = function(prize, type, color) {
    // TODO
    // alert('该方法需要废弃，和 X.createPrizeInfo 统一规划并重写');

    var tips = [];
    var prizeInfo = [];
    prize = [].concat(prize);
    for (var i in prize) {
        var p = prize[i];

        if (p.n == 0) 
            continue;
        
        if (p.a == 'attr') {
            prizeInfo.push({
                n: G.class.attricon.getById(p.t).name,
                c: color || G.class.attricon.getById(p.t).c || 0,
                v: Math.floor(p.n),
                p: p
            });
        } else if (p.a == 'item') {
            var c = G.class.getItem(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.color || p.c || color || c.color || 'hui',
                v: p.n,
                p: p
            });
        } else if (p.a == 'equip') {
            var c = G.class.equip.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || color || c.color || 'hui',
                v: p.n,
                p: p
            });
        } else if (p.a == 'hero') {
            var c = G.class.hero.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || color || c.color || 'hui',
                v: p.n,
                p: p
            });
        } else if (p.a == 'baowu') {
            var c = G.class.baowu.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || color || c.color || 'hui',
                v: p.n,
                p: p
            });
        }
        else if (p.a == 'baoshi') {
            var c = G.class.baoshi.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || color || c.color || 'hui',
                v: p.n,
                p: p
            });
        }
        else if (p.a == 'shipin') {
            var c = G.class.shipin.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || color || c.color || 'hui',
                v: p.n,
                p: p
            });
        }
        else if (p.a == 'hunshi') {
            var c = G.class.hunshi.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || color || c.color || 'hui',
                v: p.n,
                p: p
            });
        }
    }
    while (prizeInfo.length > 0) {
        var prizeItem = prizeInfo.shift();
        var str = '';
        // var color = '#ffffff';
        var col = '#ffffff';
        var hdxh = L(
            color == 5
            ? ''
            : 'HUODE');

        switch (prizeItem.p.a) {
            case 'attr':
                break;
            case 'item':
                var con = G.class.getItem(prizeItem.p.t);
                if (con.showtype == 9) {
                    str += (
                        color == 5
                        ? ''
                        : col + '|' + hdxh + L('SUIPIAN') + ',');
                } else if (X.inArray(con.arg, 'fuwen')) {
                    str += (
                        color == 5
                        ? ''
                        : col + '|' + hdxh + L('FUWEN') + ',');
                } else {
                    str += (
                        color == 5
                        ? ''
                        : col + '|' + hdxh + L('DAOJU') + ',');
                }
                break;
            case 'hero':
                str += (
                    color == 5
                    ? ''
                    : col + '|' + hdxh + L('YONGBING') + ',');
                break;
            case 'equip':
                var con = G.class.equip.getById(prizeItem.p.t);
                if (con.etype == 0) {
                    str += (
                        color == 5
                        ? ''
                        : col + '|' + hdxh + L('SUIPIAN') + ',');
                } else {
                    str += (
                        color == 5
                        ? ''
                        : col + '|' + hdxh + L('zhuangbei') + ',');
                }
                break;
            case 'baowu':
                var con = G.class.baowu.getById(prizeItem.p.t);
                str += (
                    color == 5
                    ? ''
                    : col + '|' + hdxh + L('BAOWU') + ',');
                break;
            case 'baoshi':
                var con = G.class.baoshi.getById(prizeItem.p.t);
                str += (
                    color == 5
                        ? ''
                        : col + '|' + hdxh + L('BAOSHI') + ',');
                break;
            case 'shipin':
                var con = G.class.shipin.getById(prizeItem.p.t);
                str += (
                    color == 5
                        ? ''
                        : col + '|' + hdxh + L('SHIPIN') + ',');
                break;
            default:
                break;
        }

        str += G.gc.COLOR[prizeItem.c] + '|' + '' + prizeItem.n;

        if (color == 5) {
            str += '-' + Math.abs(prizeItem.v);
        } else {
            str += '+' + prizeItem.v;
        }

        tips.push(str);
    }
    return tips;
};

X.createShotPrizeInfo = function(prize, type, color, onlyReturnPrize) {
    // alert('该方法需要废弃，和 X.createPrizeInfo 统一规划并重写');
    var tips = [];
    var prizeInfo = [];
    prize = [].concat(prize);
    for (var i in prize) {
        var p = prize[i];
        if (p.a == 'attr') {
            prizeInfo.push({
                n: G.class.attricon.getById(p.t).name,
                c: color || G.class.attricon.getById(p.t).c || 0,
                v: Math.floor(p.n),
                p: p
            });
        } else if (p.a == 'item') {
            var c = G.class.getItem(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.color || p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        } else if (p.a == 'equip') {
            var c = G.class.equip.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        } else if (p.a == 'hero') {
            var c = G.class.hero.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        } else if (p.a == 'baowu') {
            var c = G.class.baowu.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        }
        else if (p.a == 'baoshi') {
            var c = G.class.baoshi.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        }
        else if (p.a == 'shipin') {
            var c = G.class.shipin.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        }
        else if (p.a == 'hunshi') {
            var c = G.class.hunshi.getById(p.t);
            prizeInfo.push({
                n: c.name,
                c: p.c || c.color || color || 'hui',
                v: p.n,
                p: p
            });
        }
    }
    if (onlyReturnPrize) {
        return prizeInfo;
    }
    while (prizeInfo.length > 0) {
        var prizeItem = prizeInfo.shift();
        var str = '';
        if (type) {
            str += prizeItem.n;
        } else {
            str += (G.gc.COLOR[prizeItem.c] || G.gc.COLOR[1]) + '|' + prizeItem.n;
        }
        if (prizeItem.p.a != 'attr') {
            str += '+' + prizeItem.v;
        } else {
            if (prizeItem.c == 5) {
                str += '-' + Math.abs(prizeItem.v);
            } else {
                if (prizeItem.v >= 0 || type) {
                    str += '+' + prizeItem.v;
                }
            }
        }
        tips.push(str);
    }
    return tips;
};

//obj相减
//[2,3,4] - [2,4,6,7] = [3]
X.arraySub = function(from, to) {
    var toStr = ',' + to.join(',') + ',';
    var res = [];
    cc.each(from, function(v, i) {
        if (toStr.indexOf(',' + v + ',') == -1) {
            res.push(v);
        }
    });
    return res;
};
//小兵属性发生变化时，信息提示，o=oldbuff，n=newbuff，
X.showAttrChange = function(o, n) {
    var notShow = [
        'hid',
        'lv',
        'pinzhi',
        'tid',
        'zhanli',
        'qnskill',
        'qnlv'
    ];
    if (o) {
        for (var k in n) {
            if (!X.inArray(notShow, k)) {
                if ((n[k] - o[k]) !== 0) {
                    var str = (
                        n[k] - o[k] > 0
                        ? G.gc.COLOR[1] + '|+'
                        : G.gc.COLOR[5] + '|-') + L('ITEM_ATTR_' + k) + Math.abs(n[k] - o[k]);

                    G.tip_NB.show(str);
                }
            }
        }
    }
};
//红点动画
G.setNewIco = function(target, type, position) {
    if (!target) 
        return;
    if (target.hasNewIcon) 
        G.removeNewIco(target);
    type = type || 0;
    position = position || [
        cc.p(75, 70),
        cc.p(85, 85),
        cc.p(110, 40),
        cc.p(450, 110)
    ][type];

    X.ccui('hdsg.json', function(loader) {
        var node = loader.node;
        node.setPosition(position);
        node.setTag(987654321);
        node.setLocalZOrder(5);
        target.addChild(node, 10000);
        node.runAction(loader.action);
        loader.action.gotoFrameAndPlay(0, true);
    });

    target.hasNewIcon = true;
};
//红点图片
//key = new||full ||q    type = mainbtn 0 || mainmenubtn  1|| 标签  2|| list 3
G.setNewIcoImg = function(target, pos, num) {
    if (!target) return;

    G.removeNewIco(target);
    if(!num){
        var img = new ccui.ImageView("img/public/img_point.png", 1);
        img.setName("redPoint");
        img.setLocalZOrder(5);
        img.setAnchorPoint(0.5, 0.5);
        if(pos){
            img.setPosition(target.width * pos, target.height * pos);
        }else{
            img.setPosition(target.width * 0.75, target.height * 0.75);
        }
        target.addChild(img);
        img.zIndex = 999;
    }else{
        var img = new ccui.ImageView("img/public/img_point1.png", 1);
        img.setName("redPoint");
        img.setLocalZOrder(5);
        img.setAnchorPoint(0.5, 0.5);
        if(pos){
            img.setPosition(target.width * pos, target.height * pos);
        }else{
            img.setPosition(target.width * 0.75, target.height * 0.75);
        }
        target.addChild(img);

        var num = new ccui.Text(num, G.defaultFNT, 14);
        X.enableOutline(num, "#4a1d09", 2);
        num.setTextColor(cc.color("#fff1c9"));
        num.setAnchorPoint(0.5, 0.5);
        num.setPosition(img.width / 2, img.height / 2);
        img.addChild(num);
        img.zIndex = 999;
    }
};
G.removeNewIco = function(target) {
    if (!target) 
        return;

    while (target.finds("redPoint")) {
        target.finds("redPoint").removeFromParent();
    }
};
//箭头动画  可与红点动画同时存在
G.setNewArrow = function(target, type, position) {
    if (!target) 
        return;
    if (target.hasNewArrow) 
        G.removeNewArrow(target);
    type = type || 0;
    position = position || [
        cc.p(75, 70),
        cc.p(85, 85),
        cc.p(110, 40),
        cc.p(450, 110)
    ][type];

    X.ccui('ani_jiantou.json', function(loader) {
        var node = loader.node;
        node.setPosition(position);
        node.setTag(9876543210);
        node.setLocalZOrder(5);
        target.addChild(node, 10000);
        node.runAction(loader.action);
        loader.action.gotoFrameAndPlay(0, true);
    });

    target.hasNewArrow = true;
};
G.removeNewArrow = function(target) {
    if (!target || target.hasNewArrow != true) 
        return;
    var node = target.getChildByTag(9876543210);
    if (node) {
        node.removeFromParent();
        target.hasNewArrow = false;
    }
};
X.splitZbData = function() {
    //装备数据
    var zbData = G.frame.beibao.DATA.zhuangbei.list;
    var spEidConfig = G.class.equip.getZbByStype(0);

    var zbspData = {};
    var zbzbData = {};
    for (var k in zbData) {
        if (X.inArray(spEidConfig, zbData[k].eid)) {
            zbspData[k] = zbData[k];
        } else {
            if (!zbData[k].eid) 
                continue;
            zbzbData[k] = zbData[k];
        }
    }

    G.DATA.zbsp = zbspData;
    G.DATA.zbzb = zbzbData;
};
X.getZbspHdState = function() {

    var zbspData = G.DATA.zbsp;
    var zbspKeys = X.keysOfObject(zbspData);
    for (var j = 0; j < zbspKeys.length; j++) {
        var key = zbspKeys[j];
        var conf = G.class.equip.getById(zbspData[key].eid);
        if (zbspData[key].num >= conf.hcnum) {
            return true;
        }
    }
    return false;
};
X.getXbspHdState = function() {

    var spData = G.frame.chengbao.getXbSpData();
    var spKeys = X.keysOfObject(spData);
    G.DATA.xbspstate = false;
    for (var j = 0; j < spKeys.length; j++) {
        var key = spKeys[j];
        var conf = G.class.item.getById(spData[key].itemid);
        if (spData[key].num >= conf.hcnum) {
            G.DATA.xbspstate = true;
            return true;
        }
    }
    return false;
};
//比较数量选择容器
X.lengthChangeByPanel = function(arr, layout, listview, args){
    if(!arr) return;

    args = args || {};

    layout.hide();
    listview.hide();

    var num = args.num || 5;
    if(arr.length > num){
        listview.removeAllChildren();
        cc.enableScrollBar(listview);
        for(var i = 0; i < arr.length; i ++){
            var item = G.class.sitem(arr[i]);
            if(args.touch){
                G.frame.iteminfo.showItemInfo(item);
            }
            listview.pushBackCustomItem(item);
        }
        listview.show();
    }else{
        var type = args.type || "center";
        layout.removeAllChildren();
        X.alignItems(layout, arr, type, {touch: true});
        layout.show();
    }
};
//居中对齐
X.alignCenter = function(target,arr,extraParams) {
    if (!cc.sys.isObjectValid(target)) return;

    target.removeAllChildren();

    if (arr.length < 1) return;

    var name = extraParams.name;
    var touch = extraParams.touch;
    var scale = extraParams.scale || 1;
    var mapItem = extraParams.mapItem;

    var data = null;
    var item = null;

    var maxWidth = target.width;
    var itemWidth = G.class.sitem().width;

    var intervalWidth = (maxWidth - (arr.length * itemWidth)) / (arr.length + 1);

    // var interval = extraParams.interval || 5 / 8;
    var interval = extraParams.interval || intervalWidth;
    for(var j=0;j<arr.length;j++) {
        data = arr[j];
        item = G.class.sitem(data,name);
        if (scale) {
            item.setScale(scale);
        }
        item.setPosition(cc.p(item.width / 2 * j + (interval + item.width / 2) * (j + 1),target.height / 2));
        target.addChild(item);
        mapItem && mapItem(item);
        if (touch) {
            G.frame.iteminfo.showItemInfo(item);
        }
    }
};
//容器居中对齐
X.center = function(arr, target, extraParams){
    if (!cc.sys.isObjectValid(target)) return;
    if (arr.length < 1) return;
    target.removeAllChildren();

    extraParams = extraParams || {};
    var callback = extraParams.callback;

    var scale = extraParams.scale || 1;
    var maxWidth = target.width;
    var itemWidth = arr[0].width;
    var intervalWidth = (maxWidth - (arr.length * itemWidth)) / (arr.length + 1);
    var interval = extraParams.interval || intervalWidth;

    for(var j=0;j<arr.length;j++) {
        arr[j].setPosition(cc.p(arr[j].width / 2 * j + (interval + arr[j].width / 2) * (j + 1),target.height / 2));
        arr[j].setScale(scale);
        target.addChild(arr[j]);

        callback && callback(arr[j]);
    }
};

X.getItem = function(data, name) {
    var wid = null;

    if (data.a == 'item') {
        wid = G.class.sitem(data, name);
    } else if (data.a == 'attr') {
        wid = G.class.sattr(data, name);
    } else if (data.a == 'equip') {
        wid = G.class.szhuangbei(data, name);
    } else if (data.a == 'hero') {
        wid = G.class.shero(data, name);
    } else if (data.a == 'skill') {
        wid = G.class.sskill(data, name);
    } else if (data.a == 'head') {
        wid = G.class.shead(data, name);
    } else if (data.a == 'baowu') {
        wid = G.class.sbaowu(data, name);
    }
    else if (data.a == 'baoshi') {
        wid = G.class.sbaoshi(data, name);
    }
    else if (data.a == 'shipin') {
        wid = G.class.sshipin(data, name);
    }
    else {
        wid = G.class.sitem(data, name);
    }

    return wid;
};
X.createPicRichText = function(target, currency, need, own, pos) {
    target.removeAllChildren();
    var rh = new X.bRichText({size: 20, lineHeight: 15, maxWidth: target.width, color: G.gc.COLOR.n5});
    var color = G.gc.COLOR[1];
    if (need > own) {
        color = G.gc.COLOR[5];
    }
    var str = L('$XIAOHAO$：{1}', '<font node=1></font><font color=' + color + '>{1}</font>');
    var aaa = new ccui.ImageView();
    aaa.loadTexture(G.class.attricon.getById(currency).ico, ccui.Widget.PLIST_TEXTURE);
    rh.text.apply(rh, [
        X.STR(str, X.fmtValue(need)),
        aaa
    ]);
    var ppp = pos || cc.p((target.width - rh.trueWidth()) * 0.5, target.height - rh.trueHeight());
    rh.setPosition(ppp);

    target.addChild(rh);
};
X.createPicRichText_noAttr = function(target, currency, need, own, pos) {
    target.removeAllChildren();
    var rh = new X.bRichText({size: 20, lineHeight: 15, maxWidth: target.width, color: '#FFD8B6'});
    var color = G.gc.COLOR[1];
    if (need > own) {
        color = G.gc.COLOR[5];
    }
    var str = '<font node=1></font><font color=#ffffff> {1}</font>' + '(' + L('YONGYOU') + '<font color=' + color + '> {2}</font>' + ')';
    var aaa = new ccui.ImageView();
    aaa.loadTexture(G.class.attricon.getById(currency).ico, ccui.Widget.PLIST_TEXTURE);
    rh.text.apply(rh, [
        X.STR(str, X.fmtValue(need), X.fmtValue(own)),
        aaa
    ]);
    var ppp = pos || cc.p(0, target.height - 10);
    rh.setPosition(ppp);

    target.addChild(rh);

};
X.getArmyName = function(data, isLv, pos) {
    var conf = G.class.hero.getById(data.hid);

    var s = null;
    var lv = '';
    if (isLv) {
        lv = L('DENGJI') + (data.lv || 1) + ' ';
    }
    if (data.pinzhi && data.pinzhi != 0) {
        s = lv + conf.name + ' +' + data.pinzhi;
    } else {
        s = lv + conf.name;
    }
    return s;
};
// X.createNameRichText = function (target, data, isLv, pos) {
//     target.removeAllChildren();

//     var conf = G.class.hero.getById(data.hid);
//     var nameColor = G.gc.COLOR[conf.color];

//     var rh = new X.bRichText({
//         size: 24,
//         lineHeight: 15,
//         maxWidth: target.width,
//         eachText: function (node) {
//             node.enableShadow && node.enableShadow(cc.color(0, 0, 0, 255), cc.size(1, -1));
//         },
//         color: '#FFD8B6'
//     });
//     var s = null;
//     var str = '<font color=' + nameColor + '>{1} </font>';
//     var lv = '';
//     if (isLv) {
//         lv = L('DENGJI') + (data.lv || 1) + ' ';
//     }
//     if (data.pinzhi && data.pinzhi != 0) {
//         var img;
//         if (data.pinzhi > 6) {
//             img = 'img/pinzhi_3.png';
//         } else if (data.pinzhi > 3) {
//             img = 'img/pinzhi_2.png';
//         } else {
//             img = 'img/pinzhi_1.png';
//         }
//         var imgView = new ccui.ImageView();
//         imgView.loadTexture(img, ccui.Widget.PLIST_TEXTURE);
//         str += '<font color=' + nameColor + '>{2}</font><font node=1></font>';
//         s = X.STR(str, lv + conf.name, '+' + data.pinzhi);
//         rh.text.apply(rh, [s, imgView]);
//     } else {
//         s = X.STR(str, lv + conf.name);
//         rh.text(s);
//     }

//     var ppp = pos || cc.p(target.width / 2 - rh.trueWidth() / 2, target.height / 2);
//     rh.setPosition(ppp);
//     target.addChild(rh);
// };

X.createJueweiNameRichText = function(target, data) {
    target.removeAllChildren();

    var rh = new X.bRichText({
        size: data.size || 24,
        lineHeight: 15,
        maxWidth: target.width,
        color: data.color || '#ffffff'
    });
    var str = "";
    var arguments = [];
    if (data.juewei) {
        str += '<font node=1></font> ';
        arguments.push(new ccui.ImageView(G.class.juewei.getIcoByLv(data.juewei), ccui.Widget.LOCAL_TEXTURE));
    }
    str += data.name || "";
    rh.text(str, arguments);

    var ppp = data.pos || cc.p(target.width / 2 - rh.trueWidth() / 2, target.height / 2);
    rh.setPosition(ppp);
    target.addChild(rh);
};

X.showJianZhuShengJiAni = function(bui) {
    var build = G.view.mainView.city.nodes[bui];
    while (build.getChildByTag(67890123)) {
        build.getChildByTag(67890123).removeFromParent();
    }
    var conf = G.class.facilityclient.getById(bui).shengjiani;
    G.class.ani.show({
        json: 'jianzhu_shengji',
        addTo: build,
        x: build.width * 0.5 + conf[0],
        y: build.height * 0.5 + conf[1],
        repeat: false,
        autoRemove: true,
        onload: function(node, action) {
            node.setTag(67890123);
            node.setScale(conf[2]);
        }
    });
};
X.getXbAllExp = function(lv, color) {
    var allExp = 0;
    var curLvExp = 0;
    for (var j = 1; j < lv; j++) {
        curLvExp = Math.round((1000 + Math.pow(10 + j, 2) + Math.pow(j * 2 * color, 2)) / 1000) * 1000;
        allExp += curLvExp;
    }

    return allExp;
};
X.resetToMainCity = function() {
    G.mainMenu.showMainCity();
    G.mainMenu.showFocusAni(G.mainMenu.m_btn_huicheng);
    G.class.touchsound();
};
X.handleOnePersonCache = function(k, v) {
    if (!P) {
        cc.log('P not exist!');
        return;
    }

    if (v == null) {
        var v = cc.sys.localStorage.getItem(P.gud.uid + '_' + k);
        if (v != null) 
            v = decodeURIComponent(cc.sys.localStorage.getItem(P.gud.uid + '_' + k));
        return v;
    } else {
        cc.sys.localStorage.setItem(P.gud.uid + '_' + k, encodeURIComponent(v));
    }
};
X.delOnePersonCache = function(type) {
    cc.sys.localStorage.removeItem(P.gud.uid + '_' + type);
};
//判断符合[{a,t,n}]的item是否满足现实红点的需求
X.checkItemHongdian = function(arr) {
    if (!arr) 
        return false;
    var showHd = false;
    for (var j = 0; j < arr.length; j++) {
        var a = arr[j];
        switch (a.a) {
            case 'attr':
                showHd = P.gud[a.t] >= a.n;
                break;
            case 'item':
                showHd = G.DATA.itemid2num[a.t]
                    ? (G.DATA.itemid2num[a.t] >= a.n)
                    : false;
                break;
            case 'equip':
                showHd = G.DATA.eid2num[a.t]
                    ? (G.DATA.eid2num[a.t] >= a.n)
                    : false;
                break;
            case 'hero':
                //todo   待扩展
                break;
            default:
                break;
        }
        if (showHd) {
            return showHd;
        }
    }
    return showHd;
};
//获得罪恶值对应的颜色
X.getZeColor = function(v) {
    var color = '#ffffff';
    if (v > 70) {
        color = '#d60000';
    } else if (v > 30) {
        color = '#ffff00';
    }
    return color;
};

function getRealLen(str) {
    return str.replace(/[^\x00-\xff]/g, '__').length; //这个把所有双字节的都给匹配进去了
}

//匹配角色名称是否合法
X.getValidName = function(name) {
    if (name == null || name == '') {
        G.tip_NB.show(L('NAME_TIP'));
        return null;
    } else {
        var len = getRealLen(name);
        var strMaxLen = 12;
        if (len > strMaxLen) {
            G.tip_NB.show(X.STR(L('NAME_MAX'), strMaxLen / 2));
            return null;
        }

        //匹配中英文数字
        var reg = new RegExp("^[a-zA-Z0-9\u4e00-\u9fa5]+$");
        if (reg.test(name)) {
            return name;
        } else {
            G.tip_NB.show(L('NAME_REG'));
            return null;
        }
    }
};
//匹配公会名字是否合法
X.getValidGHname = function(name) {
    if (name == null || name == '') {
        G.tip_NB.show(L('NAME_TIP'));
        return null;
    } else {
        var len = getRealLen(name);
        var strMaxLen = 10;
        if (len > strMaxLen) {
            G.tip_NB.show(X.STR(L('NAME_MAX'), strMaxLen / 2));
            return null;
        }
    }

    return name
};
//按钮加动画
X.addBtnAni = function(btn, ani, obj) {
    btn.getChildByTag(12345) && btn.getChildByTag(12345).removeFromParent(true);
    var btnConf = {
        tongyongtx_chang: {
            width: 170,
            height: 96,
            offsetX: 0,
            offsetY: 7
        },
        shouchong_anniu: {
            width: 166,
            height: 50,
            offsetX: -2,
            offsetY: -2
        }
    }[ani];
    G.class.ani.show({
        addTo: btn,
        json: ani,
        x: btn.width / 2 + btnConf.offsetX,
        y: btn.height / 2 + btnConf.offsetY,
        repeat: true,
        autoRemove: false,
        onload: function(node) {
            node.setTag(12345);
            node.setScale(X.toFixed(btn.width / btnConf.width, 2), X.toFixed(btn.height / btnConf.height, 2));
        }
    });
};
//可取指定位整数，负数向前取整
X.round = function(v, key) {
    key = key || 0;
    var fomula = Math.pow(10, key);
    var a = Math.round(v * fomula);

    return a / fomula;
};
//获取到指定时间的时间差值
X.getF5Time = function(f5time) {
    var time = new Date(G.time * 1000);
    var f5Time = f5time;
    //if (time.getHours() < f5Time){
    //    time.setHours(f5Time);
    //}else{
    //    time.setHours(f5Time);
    //    time.setUTCDate(time.getUTCDate() + 1);
    //}
    time.setHours(f5Time);
    time.setUTCDate(time.getUTCDate() + 1);
    time.setMinutes(0);
    time.setSeconds(0);
    time.setMilliseconds(0);
    var v = time.getTime() / 1000 - G.time;

    return v;
};

function setPHB(ui, rank, imgUrl) {
    ui.removeAllChildren();
    imgUrl = imgUrl || 'img/public/img_pm_{1}.png';
    if (rank < 4) {
        var img = new ccui.ImageView();
        img.loadTexture(X.STR(imgUrl, rank), 1);
        img.setAnchorPoint(0.5, 0.5);
        img.setPosition(cc.p(ui.width * 0.5, ui.height * 0.5));
        ui.addChild(img);
    } else {
        var label = new cc.LabelBMFont();
        label.setString(rank);
        label.setFntFile("img/fnt/sz_pm.fnt");
        label.setAnchorPoint(0, 0.5);
        label.setContentSize(cc.size((rank + '').length * 37, 45));
        label.setPosition(cc.p((ui.width - label.width) * 0.5, (ui.height + 20) * 0.5));
        ui.addChild(label);
    }
}

//该方法需要废弃，如果有用到此方法的地方，联系刺鸟
/*G.interceptor = {
    _list: {},
    add: function (type, blockType) {
        this._list[type] = this._list[type] || [];
        var event = new cc.EventEmitter();
        this._list[type].push({blockType: blockType, event: event});
        return {type: type, blockType: blockType, event: event};
    },
    remove: function (handler) {
        if (handler.type && this._list[handler.type]) {
            for (var i = 0; i < this._list[handler.type].length; i++) {
                if (!handler.event && this._list[handler.type][i].blockType == handler.blockType) {
                    this._list[handler.type].splice(i, 1);
                    i--;
                } else if (this._list[handler.type][i].event == handler.event) {
                    this._list[handler.type].splice(i, 1);
                    break;
                }
            }
        }
    },
    dispatch: function (type, blockType, block) {
        var noInterceptor = true;
        if (this._list[type] && this._list[type].length > 0) {
            for (var i in this._list[type]) {
                if (this._list[type][i].blockType == blockType) {
                    this._list[type][i].event.once(type, block);
                    noInterceptor = false;
                }
            }
        }
        if (noInterceptor) {
            block && block();
        }
    },
    perform: function (handler) {
        handler.event && handler.event.emit(handler.type);
        this.remove(handler);
    }
};*/

X.num2Cn = function(v) {
    if (v < 10) {
        return L(v);
    } else {
        var a = Math.floor(v / 10),
            b = v % 10;
        return (
            a > 1
            ? L(a)
            : '') + L(10) + (
            b > 0
            ? L(b)
            : '');
    }
};

// 数字转希腊数字
X.num2Gre = function(v) {
    if (v < 11) {
        return L('XILA_SHUZI')[v];
    } else if (v < 40) {
        var a = Math.floor(v / 10),
            b = v % 10,
            result = '';
        for (var i = 0; i < a; i++) {
            result += L('XILA_SHUZI')[10];
        }
        result += (
            b > 0
            ? L('XILA_SHUZI')[b]
            : '');
        return result;
    }
    // 数字在40及以上就不太规律, 暂不做处理, 有需求再修改
    return '';
};

X.enableShadow = function(target, color, size) {
    var color = color || cc.color(0, 0, 0, 255);
    var size = size || cc.size(1, -1);

    target.enableShadow && target.enableShadow(color, size);
};
//获得佣兵天赋满层后的天赋类型，123对应天地人
// X.getArmyTfType = function (qnlist) {
//     if (!qnlist || !X.isHavItem(qnlist)) return null;
//
//     var con = G.class.armyqianneng;
//     var arr = con.getSkillArr();
//
//     if (X.isHavItem(qnlist)) {
//         var keys = X.keysOfObject(qnlist);
//         if (keys.length < 1) {
//             return null;
//         }
//         for (var i = 0; i < keys.length; i++) {
//             var key = keys[i];
//             var conf = con.getSkillById(key);
//             if (X.inArray(arr,key) && qnlist[key] >= conf.maxlv) {
//                 return con.getSkillById(key).mtype;
//             }
//         }
//         return null;
//     } else {
//         return null;
//     }
// };
// 设置佣兵天赋开启后的特效动画
// X.setArmyTfAni = function (ui, data,scale) {
//     var tf_guang = ui;
//     tf_guang.removeAllChildren();
//     var scale = scale || 1;
//
//     if (X.getArmyTfType(data.qnskill) != null) {
//         var mtype = X.getArmyTfType(data.qnskill);
//          var mtype = 1;
//         G.class.ani.show({
//             addTo:tf_guang,
//             json:['shensheng','tiandiren','heianxi'][mtype - 1],
//             x:tf_guang.width / 2,
//             y:tf_guang.height / 2,
//             repeat:true,
//             autoRemove:false,
//             onload: function (node, action) {
//                  node.setTag(666666);
//                 node.setScale(scale);
//             }
//         });
//     }
// };
//获得佣兵天赋满层后的天赋类型，123对应天地人
X.getArmyTfType = function(qnlist) {
    if (!qnlist || !X.isHavItem(qnlist)) 
        return null;
    
    var con = G.class.armyqianneng;
    var arr = con.getSkillArr();
    var mTypeArr = [];

    if (X.isHavItem(qnlist)) {
        var keys = X.keysOfObject(qnlist);
        if (keys.length < 1) {
            return null;
        }
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            var conf = con.getSkillById(key);
            if (X.inArray(arr, key) && qnlist[key] >= conf.maxlv) {
                // return con.getSkillById(key).mtype;
                if (!X.inArray(mTypeArr, con.getSkillById(key).mtype)) {
                    mTypeArr.push(con.getSkillById(key).mtype);
                }
            }
        }
        //返回包含类型的数组
        if (mTypeArr.length < 1) {
            return null;
        } else {
            return mTypeArr;
        }
    } else {
        return null;
    }
};
//设置佣兵天赋开启后的特效动画
X.setArmyTfAni = function(ui, frontui, data, scale) {
    var tf_guang = ui;
    tf_guang.removeAllChildren();
    var frontUi = frontui;
    frontUi.removeAllChildren();
    var scale = scale || 1;

    var mTypeArr = X.getArmyTfType(data.qnskill);
    if (mTypeArr != null) {
        //播放，动画中的天、地、人，对应 攻击，防御，生命
        G.class.ani.show({
            addTo: tf_guang,
            json: 'ani_qianneng_jihuo',
            x: tf_guang.width / 2,
            y: tf_guang.height / 2,
            repeat: true,
            autoRemove: false,
            onload: function(node, action) {
                // node.setTag(666666);
                node.setScale(scale);
            }
        });

        var posArr = [];
        for (var i = 0; i < 3; i++) {
            var pos = cc.p(frontUi.width * (i / 2), frontUi.height * (((i + 1) % 2) / 2));
            if (i == 0) {
                pos.x = pos.x - 50;
                pos.y = pos.y - 30;
            } else if (i == 2) {
                pos.x = pos.x + 50;
                pos.y = pos.y - 30;
            }
            posArr.push(pos);
        }

        for (var i = 0; i < 3; i++) {
            if (X.inArray(mTypeArr, i + 1)) {
                X.playDefaulyAni({
                    ui: frontUi,
                    json: ['ani_qianneng_gong', 'ani_qianneng_fang', 'ani_qianneng_ming'][i],
                    tag: 20170409 + i,
                    pos: posArr[i],
                    repeat: true,
                    autoRemove: false
                });
            } else {
                if (frontUi.getChildByTag(20170409 + i)) {
                    frontUi.getChildByTag(20170409 + i).remove();
                }
            }
        }
    }
};
//通过name链的方式寻找配置中的val，dic是所需的字典，keys为name链所分解成的数组
X.getDicValByKeys = function(dic, keys) {
    function getVal(dic, key) {
        return dic[key];
    }

    var val = dic;
    for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        val = getVal(val, key);
        if (!val) {
            cc.log('name链完成查找失败，失败key======', key);
        }
    }

    return val;
};

//供服务器端写的接口快速调用升级等功能
function bingo() {
    var arr = [];

    for (var k in arguments) {
        arr.push(arguments[k]);
    }
    G.ajax.send('console', arr, function(data) {
        if (!data) 
            return;
        var data = JSON.parse(data);
        if (data.s == 1) {
            !cc.sys.isNative && console.groupCollapsed('帮助信息');
            for (var kk in data.d) {
                if (!cc.sys.isNative) {
                    console.info(kk + '==' + data.d[kk]);
                } else {
                    cc.log(kk + '==' + data.d[kk]);
                }

            }
            !cc.sys.isNative && console.groupEnd();
        }
    }, true);
};

X.getCocosJsonTree = function(ui) {
    if (!cc.sys.isObjectValid(ui)) 
        return;
    
    function getJsonTree(target) {
        if (!target || !cc.isFunction(target.getChildren) || target.getChildren().length == 0) 
            return;
        
        console.groupCollapsed('(' + target._className + ')' + target.getName());
        for (var i = 0; i < target.getChildren().length; i++) {
            var child = target.getChildren()[i];
            if (child.getChildren().length == 0) {
                console.info('(' + child._className + ') ' + '==== ' + child.getName());
            }
            getJsonTree(child);
        }
        console.groupEnd();
    }

    getJsonTree(ui);
};

//设置阴影
X.enableShadow = function(target, color, size) {
    var color = color || cc.color(0, 0, 0, 255);
    var size = size || cc.size(1, -1);
    if (target.enableOutline) {
        return;
        target.enableOutline(cc.color(color), 2);
    } else {
        target.enableShadow && target.enableShadow(color, size);
    }
};
//设置描边
//需要手动设置ttf字体,例如setFontName('cctyt.ttf')
X.enableOutline = function(target, color, width) {
    color = color
        ? cc.color(color)
        : cc.color(0, 0, 0, 255);
    width = width
        ? (
            width.width
            ? width.width
            : 2)
        : 2;
    target.enableOutline(cc.color(color), width);
};
X.disableOutline = function(target) {
    target.enableOutline(cc.color(255, 255, 255, 0), 1);
};
G.playEffect = function(file, repeat, notNeedStop) {
    if (this._soundId && !notNeedStop) {
        X.audio.stopEffect(this._soundId);
    }
    delete this._soundId;
    if (!G.frame.guide.isPlaying) {
        this._soundId = X.audio.playEffect(file, repeat);
    }
};
//移除数字或者字符串数字中的无效零
X.removeInvalidZeroFromNum = function(num) {
    var str = typeof num == 'number'
        ? num.toString()
        : num;

    var arr = str.split('.');
    if (arr.length == 1) {
        return Number(str);
    }
    var subStr = arr[1];

    function handle(str) {
        if (str.length == 1) 
            return str;
        if (str.substr(str.length - 1) == '0') {
            str = str.substr(0, str.length - 1);
            return handle(str);
        } else {
            return str;
        }
    }

    var ss = handle(subStr);
    if (ss.length == 1 && ss == '0') {
        return Number(arr[0]);
    } else {
        return Number([].concat(arr[0], ss).join('.'));
    }
};

//存取当天数据
X.cacheByDay = function(uid, frameid, data) {
    if (!frameid || !uid) 
        return null;
    
    var date;
    if (data) {
        date = X.timetostr(G.time, 'y-m-d');
        data['date'] = date;
        if (X.cache(uid + '_' + frameid)) 
            X.delCache(uid + '_' + frameid);
        X.cache(uid + '_' + frameid, JSON.stringify(data));
        return true;
    } else {
        if (!X.cache(uid + '_' + frameid)) 
            return null;
        var d = JSON.parse(X.cache(uid + '_' + frameid));
        date = X.timetostr(G.time, 'y-m-d');
        if (date == d.date) {
            d['date'] = null;
            delete d['date'];
            return d;
        } else {
            return false;
        }
    }
};

//循环移动
X.circulateMoving = cc.Class.extend({
    _mask_panel: null,
    _moving_ui_list: [],
    _isCirculated: true,
    _posMap: {
        '-2': cc.p(0, 537),
        '-1': cc.p(100, 276),
        '0': cc.p(310, 117),
        '1': cc.p(540, 276),
        '2': cc.p(640, 537)
    },
    _scaleMap: {
        '-2': 0.0,
        '-1': 0.7,
        '0': 1,
        '1': 0.7,
        '2': 0.0
    },
    _stateRange: {
        min: -1,
        max: 1
    },
    _curUi: null, //当前节点
    /*
     delegate = {
     canMoveOn: function(v){return bool;},//能否继续移动,v==1向右移,v==-1向左移
     setUiContent: function(ui,index){}//设置ui内容
     }
     */
    _delegate: null,
    /**
     *
     * @param mask touchMove panel
     * @param uiList move ui list
     * @param isCirculated if circulate or not
     */
    ctor: function(mask, uiList, isCirculated) {
        this._mask_panel = mask;
        this._moving_ui_list = [].concat(uiList || []);
        this._stateRange.min = -Math.floor(this._moving_ui_list.length / 2);
        this._stateRange.max = -this._stateRange.min;
        if (isCirculated != undefined) {
            this._isCirculated = isCirculated;
        }
        if (cc.sys.isObjectValid(this._mask_panel)) {
            this._setTouchMoveHandler();
        }
    },
    _setTouchMoveHandler: function() {
        var me = this;
        me._mask_panel.touch(function(sender, type) {
            if (type == ccui.Widget.TOUCH_ENDED) {
                var start = sender.getTouchBeganPosition(),
                    end = sender.getTouchEndPosition();
                sender.setTouchEnabled(false);
                if (end.x > start.x + 20) {
                    me._moveTo(-1, function() {
                        sender.setTouchEnabled(true);
                    });
                } else if (end.x < start.x - 20) {
                    me._moveTo(1, function() {
                        sender.setTouchEnabled(true);
                    });
                }
            }
        });
    },
    _moveTo: function(v, actionEndCallback) {
        var me = this;
        if (!me._delegate) {
            cc.log('err: "move to" has no delegate');
            return;
        }

        if (me._delegate.canMoveOn && !me._delegate.canMoveOn(v)) {
            return;
        }

        me._delegate.circulateMovingWillMoveTo && me._delegate.circulateMovingWillMoveTo(v);

        var dur = 0.2;
        var setAction = function(ui, nextState) {
            ui.moveTo(dur, me._posMap[nextState]).then(function() {
                ui.state = nextState;
                ui.setTouchEnabled(true);
                if (nextState == 0) {
                    me._curUi = ui;
                    actionEndCallback && actionEndCallback();
                }
                me._setUiContent(ui);
            }).run();
            ui.scaleTo(dur, me._scaleMap[nextState]).run();
        };
        for (var i in me._moving_ui_list) {
            var ui = me._moving_ui_list[i];
            ui.setTouchEnabled(false);
            var state = ui.state;
            var nstate = state - v;
            if (nstate > me._stateRange.max) 
                nstate = me._stateRange.min;
            if (nstate < me._stateRange.min) 
                nstate = me._stateRange.max;
            ui.stopAllActions();
            setAction(ui, nstate);
        }
    },
    _setUiContent: function(ui) {
        var state = ui.state;
        if (this._delegate && this._delegate.setUiContent) {
            this._delegate.setUiContent(ui, state + this._stateRange.max);
        }
    },
    setPositionMap: function(map) {
        if (!map) {
            map = {};
            var max = this._stateRange.max;
            for (var i = this._stateRange.min; i <= max; i++) {
                map[i] = this._moving_ui_list[i + max].getPosition();
            }
        }
        this._posMap = map;
    },
    setScaleMap: function(map) {
        if (!map) {
            map = {};
            var max = this._stateRange.max;
            for (var i = this._stateRange.min; i <= max; i++) {
                map[i] = this._moving_ui_list[i + max].getScale();
            }
        }
        this._scaleMap = map;
    },
    setDelegate: function(delegate) {
        this._delegate = delegate;
    },
    initContent: function() {
        var max = this._stateRange.max;
        for (var i = this._stateRange.min; i <= max; i++) {
            var ui = this._moving_ui_list[i + max];
            ui.state = i;
            ui.setScale(this._scaleMap[i]);
            ui.setPosition(this._posMap[i]);
            if (this._delegate && this._delegate.setUiContent) {
                this._delegate.setUiContent(ui, i + max);
            }
        }
    },
    move: function(v, callback) {
        this._moveTo(v, callback);
    },
    curUi: function() {
        return this._curUi;
    }
});

X.TableView = cc.Class.extend({
    _table: null, _initFun: null, _listItemTemplate: null,
    /**
     *
     * @param scrollView
     * @param listItemTemplate
     * @param rowNum
     * @param initItemCallback
     * @param cellSize
     * @param offsetY
     */
    ctor: function(scrollView, listItemTemplate, rowNum, initItemCallback, cellSize, offsetY, adjustListItemHeight,paddingTop) {
        this._initFun = initItemCallback;
        this._listItemTemplate = listItemTemplate;
        adjustListItemHeight = adjustListItemHeight || 0;
        var listItemTemplateHeight;
        if (X.instanceOf(listItemTemplate, 'Function')) {
            listItemTemplateHeight = listItemTemplate().height;
        } else {
            listItemTemplateHeight = listItemTemplate.height;
        }
        var table = new cc.myTableView({
            rownum: rowNum || 1,
            type: 'fill',
            lineheight: listItemTemplateHeight + adjustListItemHeight,
            offsetY: offsetY || 0,
            paddingTop: paddingTop || 0
        });
        if (scrollView.getDirection() == cc.SCROLLVIEW_DIRECTION_HORIZONTAL) {
            table.setCellSize(-1, cellSize);
        }
        table.data([]);
        table.setDelegate(this);
        table.bindScrollView(scrollView);
        this._table = table;
    },
    isEnabled: function() {
        return cc.sys.isObjectValid(this._table.tableView);
    },
    /**
     * 数据模板
     * @returns {*}
     */
    cellDataTemplate: function() {
        if (X.instanceOf(this._listItemTemplate, 'Function')) {
            return this._listItemTemplate();
        } else {
            return this._listItemTemplate.clone();
        }
    },
    /**
     * 数据初始化
     * @param ui
     * @param data
     */
    cellDataInit: function(ui, data, pos) {
        if (data == undefined) {
            ui.hide();
            return;
        }
        this._initFun(ui, data, pos);
        ui.show();
    },
    setData: function(data) {
        this._table.data(data);
    },
    addCellSize: function(index, size) {
        this._table.setCellSize(index, size);
    },
    removeCellSize: function(index) {
        this._table.delCellSize(index);
    },
    cellByName: function(name) {
        return this._table.getItemByName(name);
    },
    cellDataUpdate: function(name, data) {
        return this._table.cellDataUpdate(name, data);
    },
    reloadDataWithScroll: function(isScroll) {
        this._table.reloadDataWithScroll(isScroll);
    },
    reloadDataWithScrollToBottomRight: function() {
        this._table.reloadDataWithScrollToBottomRight();
    },
    scrollToCell: function(cellIndex) {
        this._table.scrollToCell(cellIndex);
    },
    reloadDataWithScrollToCellAtIndex: function(idx) {
        this._table.reloadDataWithScrollToCellAtIndex(idx);
    },
    createExScrollEventMask: function(eventHandler) {
        if (!X.instanceOf(eventHandler, 'Function')) {
            return;
        }
        var me = this;
        var mask = new ccui.Layout();
        mask.setName('scrollEventMask');
        mask.setContentSize(this._table.tableSize);
        mask.setTouchEnabled(true);
        mask.setSwallowTouches(false);
        mask.setAnchorPoint(0, 0);
        mask.touch(function(sender, type) {
            eventHandler(sender, type, me);
        });
        return mask;
    },
    //获得所有节点
    getAllChildren: function () {
        var me = this;

        var arr = [];
        var parent = me._table.tableView.getChildren()[0];
        for (var i = 0; i < parent.getChildren().length; i++) {
            var children = parent.getChildren()[i];
            for (var j = 0; j < children.getChildren().length; j++) {
                var child = children.getChildren()[j];
                if (!child.isVisible()) continue;

                arr.push(child);
            }
        }

        return arr;
    }
});


X.newExtendLayout = function(parentNode, param){
    var _panel = parentNode;
    var _dataCount = param.dataCount; // 数据长度
    var _extend = param.extend; // 两边伸展
    var _delay = param.delay != null ? param.delay : 0; // 延迟加载, int or false
    var _cellCount = param.cellCount; // 列数
    var _nodeWidth = param.nodeWidth; // 克隆项的宽度
    var _rowHeight = param.rowHeight || 10; // 行高
    var _interval = param.interval || 10; // 默认间隔

    if (!cc.sys.isObjectValid(_panel)) {
        cc.log('error: (layout) panel is undefined');
        return;
    }

    if(_dataCount == 0){
        return;
    }

    if(_extend){
        // if(_dataCount >= cellCount){
        var panel_width = _panel.width - _nodeWidth*2; // 减去左右两个贴边项的宽度
        var cell_count = _cellCount - 2;
        _interval = (panel_width - _nodeWidth * cell_count) / (_cellCount-1); // 间隔宽度
        // }else{
        //     _interval = Math.ceil((_panel.width - _nodeWidth * cellCount) / cellCount); // 间隔宽度
        // }
    }

    var idx = 0;
    var y = _panel.height;
    for (var i = 0; i < _dataCount; i++) {
        var item;
        if (param.itemAtIndex) {
            (function(index){
                var _call = function () {
                    item = param.itemAtIndex(index);
                    if (cc.isNode(item)) {
                        item.setAnchorPoint(0, 1);
                        item.setPosition(idx > 0 ? idx * _nodeWidth + idx * _interval : 0, y);
                        idx += 1;
                        if ((index + 1) % _cellCount == 0) {
                            idx = 0;
                            y -= _rowHeight;
                        }

                        // item.show();
                        _panel.addChild(item);
                    }
                };
                if(_delay === false){
                    _call();
                }else{
                    _panel.setTimeout(function(){
                        _call();
                    },_delay);
                }
            })(i)
        }
    }
};


X.extendLayout = cc.Class.extend({
    _panel: null, _cellCount: null, _delegate: null,
    /**
     *
     * @param parentNode panel
     * @param dataCount int
     * @param extend Boole true 两边伸展, false 顺序摆放
     */
    ctor: function(parentNode, dataCount, extend) {
        this._panel = parentNode;
        this._dataCount = dataCount || 0;
        this._extend = extend; // 两边伸展
    },
    setDelegate: function(delegate) {
        this._delegate = delegate;
    },
    layout: function() {
        var me = this;
        if (!cc.sys.isObjectValid(me._panel)) {
            cc.log('error: (layout) panel is undefined');
            return;
        }
        if (!me._delegate) {
            cc.log('error: (layout) delegate is undefined');
            return;
        }
        var delegate = me._delegate,
            panel = me._panel;

        var nodeWidth = delegate.nodeWidth
            ? delegate.nodeWidth()
            : 0; // 克隆项的宽度
        var cellCount = delegate.cellCount
            ? delegate.cellCount()
            : 1; // 列数

        // var intervalWidth = Math.ceil(panel.width / cellCount) - nodeWidth;  间隔宽度
        // var intervalWidth = Math.ceil((panel.width - nodeWidth * cellCount) / cellCount);  间隔宽度
        var intervalWidth = 10;

        if (this._extend) {
            // if(me._dataCount >= cellCount){
            var panel_width = panel.width - nodeWidth * 2; // 减去左右两个贴边项的宽度
            var cell_count = cellCount - 2;
            intervalWidth = (panel_width - nodeWidth * cell_count) / (cellCount - 1); // 间隔宽度
            // }else{
            //     intervalWidth = Math.ceil((panel.width - nodeWidth * cellCount) / cellCount);  间隔宽度
            // }
        }

        var rowHeight = delegate.rowHeight
            ? delegate.rowHeight()
            : 10;

        var idx = 0;
        var y = panel.height;
        for (var i = 0; i < me._dataCount; i++) {
            var item;
            if (delegate.itemAtIndex) {
                item = delegate.itemAtIndex(i);
                if (cc.isNode(item)) {
                    item.setAnchorPoint(0, 1);
                    item.setPosition(
                        idx > 0
                        ? idx * nodeWidth + idx * intervalWidth
                        : 0,
                    y);
                    idx += 1;
                    if ((i + 1) % cellCount == 0) {
                        idx = 0;
                        y -= rowHeight;
                    }

                    item.show();
                    panel.addChild(item);
                }
            }
        }
    }

});

X.autoLayout = cc.Class.extend({
    _panel: null, _maxNumPerRow: 1,
    /*
     delegate = {
     //所有item数量
     countOfAllItems:function(){return Int;},
     //某行item数量
     countOfItemsAtRow:function(rowIndex){return Int;},
     //某行某列所在item
     itemAtIndex:function(rowIndex,colIndex,uiIndex){return widget;},
     //某行的高
     rowHeight:function(index){return height;}
     }
     */
    _delegate: null,
    /**
     *
     * @param parentNode panel
     * @param num maxItemNum
     */
    ctor: function(parentNode, num) {
        this._panel = parentNode;
        this._maxNumPerRow = num || 1;
    },
    setDelegate: function(delegate) {
        this._delegate = delegate;
    },
    layout: function() {
        var me = this;
        if (!cc.sys.isObjectValid(me._panel)) {
            cc.log('error: (layout) panel is undefined');
            return;
        }
        if (!me._delegate) {
            cc.log('error: (layout) delegate is undefined');
            return;
        }
        var delegate = me._delegate,
            panel = me._panel,
            maxHeight = panel.height,
            maxWidth = panel.width;
        me._panel.removeAllChildren();
        var allNum = delegate.countOfAllItems
                ? delegate.countOfAllItems()
                : 0,
            rowNum = Math.ceil(allNum / me._maxNumPerRow),
            sumHeight = 0;

        var count = 0;
        for (var i = 0; i < rowNum; i++) {
            var itemCount = me._maxNumPerRow;
            if (delegate.countOfItemsAtRow) {
                itemCount = delegate.countOfItemsAtRow(i);
            }
            var perWidth = maxWidth / itemCount;
            var curHeight = delegate.rowHeight
                ? delegate.rowHeight(i)
                : maxHeight / rowNum;
            sumHeight += curHeight;
            for (var j = 0; j < itemCount; j++) {
                var item;
                if (delegate.itemAtIndex) {
                    item = delegate.itemAtIndex(i, j, count);
                    if (cc.sys.isObjectValid(item)) {
                        panel.addChild(item);
                        item.setAnchorPoint(0.5, 0);
                        item.setPosition(j * perWidth + perWidth / 2, maxHeight - sumHeight + 10);
                        count++;
                    }
                }
            }
        }
    }
});
//格式化buff数据
X.fmtBuff = function(buff, fmt,args) {
    var args = args || {};

    function handle() {
        var name = L(k);
        if (k.indexOf('pro') > 0 || k.indexOf('drop') > 0){
            // b = Math.floor(b * 1000)/10 + '%';
            b = Math.floor(b) / 10 + '%';
        }
        var obj = {
            tip:X.STR(fmt,L(name),b),
            name:name,
            sz:b,
            k:k
        };
        list.push(obj);
    }

    //不过滤值为0的buff，默认情况下是直接过滤掉的
    var noFiltValZero = args.nofilterZero;
    var list = [];
    fmt = fmt || '+{2}{1}';
    for (var k in buff){
        var b = Math.abs(buff[k]);
        if (noFiltValZero) {
            handle();
        } else {
            if (b){
                handle();
            }
        }

    }
    return list;
};

// G.getItemNum = function(a, t, used) {
//     if (a == 'attr') {
//         return P.gud[t];
//     }
//     if (a == 'item') {
//         return 0; // G.DAO.beibao.getItemNumByItemId(t);
//     }
//     if (a == 'hunshi') {
//         return G.DAO.shenyuanduohun.getHunShiNumByHsid(t, used);
//     }
// };

//螺旋阵列算法
G.grass = function(row, col, start, arr) {
    var startRow = 0,
        startCol = 0,
        curRow = 0,
        curCol = 0,
        endRow = row - 1,
        endCol = col - 1;
    for (var i = 0; i < row * col; i++) { ~ function(v) {
            arr[curRow] = arr[curRow] || [];
            arr[curRow][curCol] = v;
            if (curRow < endRow && curCol == startCol) {
                curRow++;
            } else if (curRow == endRow && curCol < endCol) {
                curCol++;
            } else if (curRow == endRow && curCol == endCol) {
                curRow--;
            } else if (curRow > startRow && curCol == endCol) {
                curRow--;
            } else if (curRow == startRow && curCol == endCol) {
                curCol--;
            } else if (curRow == startRow && curCol > startCol + 1) {
                curCol--;
            } else if (curRow == startRow && curCol == startCol + 1) {
                startRow++;
                startCol++;
                endRow--;
                endCol--;
                curRow++;
            }
        }(i + start);
    }
};

//获得出售按钮文字
X.showSaleFrame = function(conf) {
    var data = conf.data;
    var intr = conf.intr;
    var callback = conf.callback;

    var saleData = G.class.saledata.getItem(data.a, data.t);
    var str2 = X.STR(conf.intr, saleData.sale[0].n);
    var btnTitleArr = [];
    var myOwnNum = data.a == 'item'
        ? G.frame.beibao.getItemNumByItemId(data.t)
        : G.frame.zhuangbei.getZhuangBeiNumByEid(data.t);
    var saleNum = 0;
    for (var i = 0; i < saleData.title.length; i++) {
        var num = saleData.title[i];
        var str;
        if (num == 1) {
            // str = L('BTN_CS');
            str = X.STR(L('CS_X'), num);
        } else if (num == -1) {
            str = L('CS_0');
        } else {
            if (myOwnNum < num) {
                str = L('CS_0');
                saleNum = myOwnNum;
            } else {
                str = X.STR(L('CS_X'), num);
                saleNum = num;
            }
        }
        btnTitleArr.push(str);
    }

    G.frame.alert.data({
        sizeType: 3,
        cancel: {
            wz: btnTitleArr[1]
        },
        cancelCall: function() {
            if (myOwnNum < 1) {
                G.tip_NB.show(L('SALEDATA_BZU'));
                return;
            }
            G.frame.iteminfo.sale([
                data.a, data.t, saleNum
            ], function(d) {
                var prize = [
                    {
                        a: saleData.sale[0].a,
                        t: saleData.sale[0].t,
                        n: saleData.sale[0].n * saleNum
                    }
                ];
                G.tip_NB.show(X.createPrizeInfo(prize, 0, 1));
                var ownNum = data.a == 'item'
                    ? G.frame.beibao.getItemNumByItemId(data.t)
                    : G.frame.zhuangbei.getZhuangBeiNumByEid(data.t);
                if (ownNum < 1) {
                    G.frame.alert.hide();
                }
                callback && callback(d);
            });
        },
        ok: {
            wz: btnTitleArr[0]
        },
        okCall: function() {
            if (myOwnNum < 1) {
                G.tip_NB.show(L('SALEDATA_BZU'));
                return;
            }
            G.frame.iteminfo.sale([
                data.a, data.t, saleData.title[0]
            ], function(d) {
                var prize = [
                    {
                        a: saleData.sale[0].a,
                        t: saleData.sale[0].t,
                        n: saleData.sale[0].n * saleData.title[0]
                    }
                ];
                G.tip_NB.show(X.createPrizeInfo(prize, 0, 1));
                var ownNum = data.a == 'item'
                    ? G.frame.beibao.getItemNumByItemId(data.t)
                    : G.frame.zhuangbei.getZhuangBeiNumByEid(data.t);
                if (ownNum < 1) {
                    G.frame.alert.hide();
                }
                callback && callback(d);
            });
        },
        autoClose: false,
        close: true,
        richText: str2,
        nohide: true
    }).show();

};

//获得佣兵json
X.getArmyJson = function(data) {

    var json;
    if (data.skin && data.skin != '') {
        json = G.class.armyskin.getJsonById(data.skin);
    } else {
        json = G.gc.hero[data.hid].json;
    }

    return json;
};
//通过配置表现动画
X.playDefaulyAni = function(arg) {
    alert('X.playDefaulyAni需要废弃，请直接使用G.class.ani.show');
    // var arg = {
    //     ui:'',
    //     json:'',
    //     tag:'',
    //     pos:'',
    //     repeat:'',
    //     cache:'',
    //     autoRemove:'',
    //     startCall:'',
    //     endCall:''
    // };

    /*while (arg.ui.getChildByTag(arg.tag)) {
        arg.ui.getChildByTag(arg.tag).remove();
    }

    G.class.ani.show({
        addTo: arg.ui,
        json: arg.json,
        x: arg.pos.x,
        y: arg.pos.y,
        repeat: arg.repeat || false,
        autoRemove: arg.autoRemove,
        cache: arg.cache,
        onload: function (node, action) {
            node.setTag(arg.tag);
            arg.startCall && arg.startCall(node, action);
        },
        onend: function (node, action) {
            arg.endCall && arg.endCall(node, action);
        }
    });
    */
};
//抽奖转盘动画
X.showZhuanPanAni = function zpAni(target, type, imgXzk, icoArr, zxIndex, callback) {
    imgXzk.show();
    var speedTime = 1000; //speed变化间隔
    var iTime = 0; //speed变化引起的时长变化
    var times = 0; //speed变化次数
    var copyIcoArr = []; //icoArr数组拷贝
    var oneTimes = 2;
    var tenTimes = 2;

    addTimer3();
    clearTimer2();
    target._zpTimer2 = target.setInterval(function() {
        times++;
        if (type == 1 && times >= oneTimes) {
            times = oneTimes;
        }
        if (type == 10 && times >= tenTimes) {
            times = tenTimes;
        }
        addTimer3();
    }, speedTime);

    function addTimer3() {
        iTime = type == 10
            ? (50 - times * 25) / 10
            : 50 + times * 100;
        //cc.log('times=',times);
        clearTimer3();
        target._zpTimer3 = target.setInterval(function() {
            if (copyIcoArr.length <= 0) {
                copyIcoArr = [].concat(icoArr);
            }
            var ico = copyIcoArr.shift();
            imgXzk.setPosition(ico.getPosition());
            //to 抽奖10次逻辑
            if (type == 10 && times == tenTimes) {
                clearTimer2();
                clearTimer3();
                //cc.log('zhongjiang10==');
                // callback && callback();
                target.setTimeout(function() {
                    callback && callback();
                }, 500);
            }

            //to 抽奖一次逻辑
            if (type == 1 && times == oneTimes && X.arrayFind(icoArr, ico) == zxIndex) {
                clearTimer2();
                clearTimer3();
                //cc.log('zhongjiang1==',zxIndex + 1);
                target.setTimeout(function() {
                    callback && callback();
                }, 500);

            }
        }, iTime);
    }

    function clearTimer2() {
        if (target._zpTimer2) {
            target.clearInterval(target._zpTimer2);
            delete target._zpTimer2;
        }
    }

    function clearTimer3() {
        if (target._zpTimer3) {
            target.clearInterval(target._zpTimer3);
            delete target._zpTimer3;
        }
    }
};

//判断日期是否满足要求
X.compareDate = function(time1, time2, intervalTime) {
    var intervalTime = intervalTime || 0;

    function getFormat(time) {
        var date = new Date(time * 1000);

        return X.STR('{1}-{2}-{3}', date.getFullYear(), date.getMonth(), date.getDate());
    }

    return getFormat(time1) == getFormat(time2 - intervalTime);
};
//切换到下一个
X.showNext = function(v, args) {
    var idx = args.idx,
        panelTouch = args.panelTouch,
        list = args.list,
        item = args.item,
        preCall = args.preCall,
        repeat = args.repeat || false,
        callback = args.callback;

    panelTouch.setTouchEnabled(false);
    preCall && preCall();
    if (item) {
        if (!repeat && (idx == 0 || idx == list.length - 1)) {
            handle();
        } else {
            item.moveBy(0.3, cc.p(-C.WS.width / 2 * v, 0)).then(function() {
                handle();
            }).run();
        }
    } else {
        handle();
    }

    function handle() {
        var nextIdx = idx + v;
        if (repeat) {
            if (nextIdx < 0) {
                nextIdx = list.length - 1;
            } else if (nextIdx > list.length - 1) {
                nextIdx = 0;
            }
        } else {
            if (nextIdx < 0) {
                nextIdx = 0;
            } else if (nextIdx > list.length - 1) {
                nextIdx = list.length - 1;
            }
        }

        callback && callback(nextIdx);
    }
};
X.getTopFrames = function() {
    var topFrame = [];
    for (var k in G.openingFrame) {
        if (G.frame[k].isTop) {
            topFrame.push(k);
        }
    }
    return topFrame;
};

//附加当前uid后缓存数据
X.cacheByUid = function(key, data) {
    if (!P || !P.gud || !P.gud.uid) {
        cc.log('P.gud.uid参数有误======', 1);
        return;
    }
    var uid = P.gud.uid;

    var newKey = uid + '_' + key;
    if (data != undefined) {
        X.cache(newKey, JSON.stringify(data));
    } else {
        try {
            return JSON.parse(X.cache(newKey));
        } catch (e) {
            return null;
        }

    }
};
// 删除附加当前uid后的缓存数据
X.delCacheByUid = function(key) {
    if (!P || !P.gud || !P.gud.uid) {
        cc.log('P.gud.uid参数有误======', 1);
        return;
    }
    var uid = P.gud.uid;

    var newKey = uid + '_' + key;
    if (X.cache(newKey)) {
        delete X.delCache(newKey);
    }
};
//获得指定时间的日期格式
X.getDateByTime = function(t) {
    var time = new Date(t * 1000);
    var y = time.getFullYear(),
        m = time.getMonth() + 1, //获取当前月份的日期
        d = time.getDate();

    return y + '/' + m + '/' + d;
};

//该方法需要废弃，如果有用到此方法的地方，请查看base/bx中的 X.moment  X.timetostr   X.timeout   X.timeLeft
X.timeFormat = function(t1, t2) {
    console.trace("trace");
    alert('X.timeFormat需要废弃，请查看base/bx中的 X.moment  X.timetostr   X.timeout   X.timeLeft');
};

X.addCenterChild = function(target, child) {
    if (!cc.isNode(target) || !cc.isNode(child)) {
        cc.log('target or child is not a node');
        return;
    }
    target.removeAllChildren();
    target.addChild(child);
    child.setPosition(cc.p(target.width / 2, target.height / 2));
};

//带勋章的名字
X.createXzName = function(target, data, pos) {
    target.removeAllChildren();
    var xid = data.xunzhang || data;
    var conf = G.class.zaoxing.getXunZhangById(xid);

    var rh = new X.bRichText({size: 20, lineHeight: target.height, maxWidth: target.width, color: '#ffffff'});
    var fmtStr = '<font node=1></font><font color=#ffffff>{1}</font>';
    var img = new cc.Sprite('item/' + conf.img);
    // img.loadTexture('item/' + conf.img, ccui.Widget.LOCAL_TEXTURE);
    // img.loadTexture('img/public/ico/ico_bg_wq1.png', ccui.Widget.PLIST_TEXTURE);
    img.setScale(0.3);
    var lay = new ccui.Layout();
    lay.setContentSize(20, 20);
    lay.addChild(img);
    img.setPosition(cc.p(0, 10));
    rh.text.apply(rh, [
        X.STR(fmtStr, data.name),
        lay
    ]);
    var ppp = pos || cc.p(10, 10);
    rh.setPosition(ppp);

    target.addChild(rh);
};
/*
*  conf:{
       count:2,
       texture:[],
       title:[],
       callback:[fun,fun,fun],
       btnData:[]
*  }
*/
X.addBtn = function(panel, conf) {
    if (!conf) {
        cc.log('conf is required');
        return;
    }
    if (!conf.count) {
        cc.log('count is required');
        return;
    }
    for (var i = 0; i < conf.count; i++) {
        var btn = new ccui.Button();
        btn.setTouchEnabled(true);
        btn.setName('btn_cancel');
        btn.setAnchorPoint(C.ANCHOR[5]);
        btn.setTitleFontSize(24);
        btn.loadTextureNormal('img/public/btn/' + (
        conf.texture && conf.texture[i]), ccui.Widget.PLIST_TEXTURE);
        btn.setTitleText((conf.title && conf.title[i]) || '');
        btn.setTitleFontName(G.defaultFNT);
        btn.data = (conf.btnData && conf.btnData[i]) || null;
        btn.callback = conf.callback[i];
        btn.click(function(sender, type) {
            sender.callback && sender.callback(sender.data);
        });
        panel.addChild(btn);
    }
    var w = panel.width;
    var h = panel.height;
    var count = panel.getChildrenCount();
    for (var k = 0; k < count; k++) {
        var button = panel.getChildren()[k];
        var size = button.getSize();
        var x = w / 2 + (k + .5 - count / 2) * (size.width + 80);
        var y = h / 2;
        button.setPosition(cc.p(x, y));
    }
};
//通过G。time获得本周周一零点的时间
X.getLastMondayZeroTime = function() {
    var time = new Date(G.time * 1000);
    var week = time.getDay();
    var hours = time.getHours();
    var mins = time.getMinutes();
    var secs = time.getSeconds();

    if (week == 0) {
        week = 7;
    }

    var offsetTime = (week - 1) * 24 * 60 * 60 + hours * 60 * 60 + mins * 60 + secs;

    return G.time - offsetTime;
};
//获得今天零点的时间
X.getTodayZeroTime = function() {
    var time = new Date(G.time * 1000);
    var hours = time.getHours();
    var mins = time.getMinutes();
    var secs = time.getSeconds();

    var offsetTime = hours * 60 * 60 + mins * 60 + secs;

    return G.time - offsetTime;
};
// 奖励根据一定的格式对其
X.alignItems = function(ui, dataArr, type, extraParams) {
    if (!ui) {
        cc.log('参数错误======', 1);
        return;
    }

    ui.removeAllChildren();

    if (!cc.isArray(dataArr)) {
        cc.log('参数为数组======', 1);
        return;
    }

    var types = {
        left: 0,
        center: 1,
        right: 2
    };
    var name = extraParams.name || false;
    var interval = extraParams.interval || 10;
    var scale = extraParams.scale || 1;
    var touch = extraParams.touch || false;
    var outline = extraParams.outline;
    var callback = extraParams.callback;
    var mapItem = extraParams.mapItem;

    var alignment = types[type] || types['left'];

    switch (alignment) {
        case 0:
            left();
            break;
        case 1:
            //居中对齐的间隔，目前是定死的，如有必要，需要修改源码
            X.alignCenter(ui, dataArr, {
                name:name,
                touch:touch,
                scale:scale,
                mapItem:mapItem
            });
            break;
        case 2:
            right();
            break;
        default:
            break;
    }

    //回调便于满足定制化需求
    callback && callback(ui);

    function left() {
        for (var i = 0; i < dataArr.length; i++) {
            var p = G.class.sitem(dataArr[i], name);
            p.setAnchorPoint(cc.p(0, 0.5));
            p.setPosition(cc.p(i * (110 * scale + interval), ui.height / 2));
            if (outline) {
                X.enableOutline(p.title, cc.color('#000000'), 2);
            }
            p.scale = scale;
            mapItem && mapItem(p);
            ui.addChild(p);
            // if (p.conf && p.conf.color == 4){
            //     G.frame.fight_win.showItemDH(p);
            // }
            p.setTouchEnabled(false);
            if (touch) {
                p.setTouchEnabled(true);
                G.frame.iteminfo.showItemInfo(p);
            }
        }
    }
    function right() {
        for (var i = 0; i < dataArr.length; i++) {
            var p = G.class.sitem(dataArr[i], name);
            p.setAnchorPoint(cc.p(0, 0.5));
            p.setPosition(cc.p(ui.width - i * (110 * scale + interval) - 110 * scale, ui.height / 2));
            if (outline) {
                X.enableOutline(p.title, cc.color('#000000'), 2);
            }
            p.scale = scale;
            ui.addChild(p);
            // if (p.conf && p.conf.color == 4){
            //     G.frame.fight_win.showItemDH(p);
            // }
            p.setTouchEnabled(false);
            if (touch) {
                p.setTouchEnabled(true);
                G.frame.iteminfo.showItemInfo(p);
            }
        }
    }
};

X.fmtTimeStampToTime = function(stamp) {
    // stamp的单位是秒

    return new Date(stamp * 1000);
};
// 创建星级的显示
X.createStarsLayout = function(panel, star, args) {
    var align2type = {
        center: 0,
        left: 1,
        right: 2
    };
    
    args = args || {};
    //是否显示所有星
    var isAll = args.isall || false;
    var align = args.align || 'center';
    var scale = args.scale || 1;
    var interval = args.interval;
    var callback = args.callback;
    var isLight = args.isLight || false;
    var imgStar = args.imgstar;
    var cb = args.cb;

    panel.removeAllChildren();
    var width = panel.width;
    var height = panel.height;

    var pVal = args.maxStar || 5;
    var nVal = star;

    var imgLightStarPath = 'img/public/img_xing_h.png';
    //灰星暂未设置
    var imgGrayStarPath = imgStar || 'img/public/img_xing2.png';

    var imgLightStar = new ccui.ImageView(imgLightStarPath, 1);
    imgLightStar.setScale(scale);
    var starWidth = imgLightStar.width;
    var starHeight = imgLightStar.height;
    interval = interval || (width - imgLightStar.width * pVal * scale) / (pVal - 1);

    // 在英雄头像上时星星间隔1像素
    if (align2type[align] == 1) {
        interval = 1;
    }

    var imgStar,
        pos;
    if (isAll) {
        //显示所有星  所有星暂时没有除居中以外的排列
        var imgGrayStar = new ccui.ImageView(imgGrayStarPath, 1);
        imgGrayStar.setScale(scale);
        for (var i = 0; i < pVal; i++) {
            if (nVal > i) {
                imgStar = imgLightStar.clone();
            } else {
                imgStar = imgGrayStar.clone();
            }
            pos = cc.p(starWidth / 2 * scale + (interval + starWidth * scale) * i, height / 2);
            setStar(imgStar, i, pos);
        }
    } else {
        //仅显示拥有星
        var imgGrayStar = new ccui.ImageView(imgGrayStarPath, 1);
        imgGrayStar.setScale(scale);
        var startInterval = (width - starWidth * nVal * scale - (interval * (nVal - 1))) / 2;
        for (var i = 0; i < nVal; i++) {
            imgStar = isLight ? imgLightStar.clone() : imgGrayStar.clone();
            if (align2type[align] == 0) {
                pos = cc.p(startInterval + starWidth / 2 * scale + (interval + starWidth * scale) * i, height / 2);
            } else if (align2type[align] == 1) {
                pos = cc.p(starWidth / 2 * scale + (interval + starWidth * scale) * i, height / 2);
            }
            setStar(imgStar, i, pos);
        }
    }

    function setStar(imgStar, idx, pos) {
        imgStar.setName('star_' + (
        idx + 1));
        imgStar.setPosition(pos);
        panel.addChild(imgStar);
        cb && cb(imgStar);
    }

    callback && callback(panel);
};
X.autoLayout_new = function (args) {
    var types = {
        1:'left',
        2:'center',
        3:'right'
    };
    var parent = args.parent;
    var item = args.item;
    var num = args.num;
    var offset = args.offset || 0;
    var type = types[args.type || 2];
    var mapItem = args.mapItem;

    if (!parent || !item) {
        return;
    }
    if (num == undefined) {
        return;
    }

    parent.removeAllChildren();
    var maxWidth = parent.width;
    var itemWidth = item.width;

    var intervalWidth = {
        left: function () {
            return (maxWidth - (num * itemWidth)) / (num - 1);
        },
        center: function () {
            return (maxWidth - (num * itemWidth)) / (num + 1);
        },
        right: function () {
            return (maxWidth - (num * itemWidth)) / (num - 1);
        }
    };

    for (var i = 0; i < num; i++) {
        var wid = item.clone();
        if (type == 'center') {
            wid.setPosition(cc.p((intervalWidth[type]() + offset + itemWidth / 2) * (i + 1) + itemWidth / 2 * i,parent.height / 2));
        } else {
            //左右对齐需重新计算，目前是两端对齐
            wid.setPosition(cc.p(itemWidth / 2 * (i + 1) + (intervalWidth[type]() + offset + itemWidth / 2) * i,parent.height / 2));
        }
        wid.idx = i;
        parent.addChild(wid);

        mapItem && mapItem(wid);
    }
};
//快速查看ccui的json树信息
X.getCCUIJsonTree = function (json) {
    var arr = json.split('.');
    json = arr[0] + '.json';

    X.loadJSON(json, function (err,txt) {
        if (err) {
            cc.log('err======', err);
            return;
        }

        getJsonTree(txt.Content.Content.ObjectData);
    });

    function getJsonTree(target) {
        if (!target || !target.Children || target.Children.length < 1) return;

        var className = null,
            str = '';
        className = target.ctype.split('ObjectData')[0];
        str = '(' + className + ') ===== ' + target.Name;
        if (target.FileData) {
            str += ' (Path === ' + target.FileData.Path + ')';
        }
        console.groupCollapsed(str);

        for (var i = 0; i < target.Children.length; i++) {
            var child = target.Children[i];
            if (!child.Children) {
                className = child.ctype.split('ObjectData')[0];
                str = '(' + className + ') ===== ' + child.Name;
                if (child.FileData) {
                    str += ' (Path === ' + child.FileData.Path + ')';
                }
                console.info(str);
            }
            getJsonTree(child);
        }
        console.groupEnd();
    }
};
//宝箱动画
X.addBoxAni = function (args) {
    var layIco = args.parent;
    var imgBox = args.boximg;
    var callback = args.callback;

    if (!layIco) {
        cc.log('缺失参数======', 1);
        return;
    }

    G.class.ani.show({
        addTo:layIco,
        json:'ani_baoxianglingqu',
        x:layIco.width / 2,
        y:layIco.height / 2,
        repeat:true,
        autoRemove:false,
        onload: function (node,action) {
            node.finds('baoxiang').setBackGroundImage(imgBox, 1);
            callback && callback(node,action);
        }
    });
};
//node子节点缩放
X.setChildrenScale = function (args) {
    var parent = args.parent;
    var scale = args.scale;

    function check(target) {
        if (!target || target.getChildren().length < 1) return;

        for (var i = 0; i < target.getChildren().length; i++) {
            var child = target.getChildren()[i];
            if (child.getChildren().length < 1) {
                child.setScale(scale);
            } else {
                check(child);
            }
        }
    }

    check(parent);
};
//叠色方案
X.setNodeColor = function (args) {
    var bool = args.bool;
    var parent = args.parent;
    var colorArr = args.color || ['#AAAAAA', '#FFFFFF'];

    if (!parent.setColor) {
        cc.log('node的setColor方法不存在！');
        return ;
    }

    parent.setColor(cc.color(colorArr[bool ? 1 : 0]));
};

//获得标题图片
X.getTitleImg = function (name) {
    return 'img/title_wz/wz_title_' + name + '.png';
};

X.playSound = function (sender, fromwhere){
    if(fromwhere == "fromcode") return;
    if(!(sender instanceof ccui.Button)) return;
    if(sender.data && sender.data.length < 1) return;

    var btnName = sender.getName();
    var noUSE = ["btn_yxjt$", "btn_rhjt$", "btn_jsfz$", "btn_sjs$", "btn_fst$", "btn_zhd$", "btn_xsrw$", "btn_jjc$",
        "btn_szjyz$", "btn_tjp$", "btn_lt$", "btn_mrsl$", "btn_xyc$", "btn_jchd$", "$btn_fanhui"];

    if(X.inArray(noUSE, btnName)) return;
    X.audio.playEffect("sound/dianji.mp3", false);
};

X.getVipIcon = function(vipLv) {
    var imgPath = "";

    if(vipLv <= 3) {
        imgPath = "img/sale/ico_sale_vip1.png";
    }else if(vipLv <= 6) {
        imgPath = "img/sale/ico_sale_vip2.png";
    }else if(vipLv <= 9) {
        imgPath = "img/sale/ico_sale_vip3.png";
    }else if(vipLv <= 12) {
        imgPath = "img/sale/ico_sale_vip4.png";
    }else {
        imgPath = "img/sale/ico_sale_vip5.png";
    }

    return imgPath;
};

X.playViewAni = function(view, father) {
    view.hide();
    var _view = view.clone();
    _view.show();

    _view.setPositionY(view.y - 500);
    father.addChild(_view);

    var action = cc.moveBy(0.2, cc.p(0, 500));
    _view.runAction(cc.sequence(action, cc.callFunc(function(){
        _view.removeFromParent();
        view.show();
    })))
};

X.playAniByJsonName = function(name, clean) {
    if(clean) {
        while (cc.director.getRunningScene().getChildByName("curAni")) {
            cc.director.getRunningScene().getChildByName("curAni").removeFromParent();
        }
        return;
    }
    G.class.ani.show({
        json: name,
        addTo: cc.director.getRunningScene(),
        x: cc.director.getRunningScene().width / 2,
        y: cc.director.getRunningScene().height / 2,
        repeat: true,
        autoRemove: false,
        onload: function (node) {
            node.setName("curAni");
        }
    })
};

X.setInput = function(target, callback) {
    target.addEventListener(function (sender, type) {
        switch (type) {
            case ccui.TextField.EVENT_DETACH_WITH_IME:
                var str = parseInt(sender.getString().trim());
                if(!cc.isNumber(str) || isNaN(str)) str = 0;
                sender.setString(str);
                callback && callback();
                break;
            case ccui.TextField.EVENT_INSERT_TEXT:
                var str = sender.getString()[sender.getString().length - 1];
                if(!cc.isNumber(parseInt(str))) {
                    sender.setString(0);
                }
        }
    });
};

X.Filter = {
    DEFAULT_VERTEX_SHADER:
    "attribute vec4 a_position; \n"
    + "attribute vec2 a_texCoord; \n"
    + "varying mediump vec2 v_texCoord; \n"
    + "void main() \n"
    + "{ \n"
    + "    gl_Position = (CC_PMatrix * CC_MVMatrix) * a_position;  \n"
    + "    v_texCoord = a_texCoord; \n"
    + "}",

    GRAY_SCALE_FRAGMENT_SHADER:
    "varying vec2 v_texCoord;   \n"
    + "uniform sampler2D tex0; \n"
    + "void main() \n"
    + "{  \n"
    + "    vec4 texColor = texture2D(tex0, v_texCoord);  \n"
    + "    float gray = texColor.r * 0.299 + texColor.g * 0.587 + texColor.b * 0.114; \n"
    + "    gl_FragColor = vec4(gray, gray, gray, texColor.a);  \n"
    + "}",

    SEPIA_FRAGMENT_SHADER:
    "varying vec2 v_texCoord;   \n"
    + "uniform sampler2D tex0; \n"
    + "uniform float u_degree; \n"
    + "void main() \n"
    + "{  \n"
    + "    vec4 texColor = texture2D(tex0, v_texCoord);  \n"
    + "    float r = texColor.r * 0.393 + texColor.g * 0.769 + texColor.b * 0.189; \n"
    + "    float g = texColor.r * 0.349 + texColor.g * 0.686 + texColor.b * 0.168; \n"
    + "    float b = texColor.r * 0.272 + texColor.g * 0.534 + texColor.b * 0.131; \n"
    + "    gl_FragColor = mix(texColor, vec4(r, g, b, texColor.a), u_degree);  \n"
    + "}",
    SHADER_POSITION_GRAY_FRAG:
    "varying vec4 v_fragmentColor;\n"+
    "varying vec2 v_texCoord;\n"+
    ((typeof document !== 'undefined')? "uniform sampler2D CC_Texture0;\n":"")+
    "void main()\n"+
    "{\n"+
    "    vec4 v_orColor = v_fragmentColor * texture2D(CC_Texture0, v_texCoord);\n"+
    "    float gray = dot(v_orColor.rgb, vec3(0.299, 0.587, 0.114));\n"+
    "    gl_FragColor = vec4(gray, gray, gray, v_orColor.a);\n"+
    "}\n",
    SHADER_POSITION_GRAY_VERT :
    "attribute vec4 a_position;\n"+
    "attribute vec2 a_texCoord;\n"+
    "attribute vec4 a_color;\n"+
    "\n"+
    "varying vec4 v_fragmentColor;\n"+
    "varying vec2 v_texCoord;\n"+
    "\n"+
    "void main()\n"+
    "{\n"+
    "gl_Position = "+ ((typeof document !== 'undefined')?"(CC_PMatrix * CC_MVMatrix)":"CC_PMatrix") + " * a_position;\n"+
    "v_fragmentColor = a_color;\n"+
    "v_texCoord = a_texCoord;\n"+
    "}",

    programs:{},

    /**
     * 灰度
     * @param sprite
     */
    grayScale: function (sprite) {
        var program = this.programs["grayScale"];
        if(!program){
            program = new cc.GLProgram();
            if(typeof document!== 'undefined'){
                //判断是否是web环境
                program.initWithString(this.DEFAULT_VERTEX_SHADER, this.GRAY_SCALE_FRAGMENT_SHADER);
            }else{
                program.initWithString(this.SHADER_POSITION_GRAY_VERT, this.SHADER_POSITION_GRAY_FRAG);
            }
            program.addAttribute(cc.ATTRIBUTE_NAME_POSITION, cc.VERTEX_ATTRIB_POSITION);        //cocos会做初始化的工作
            program.addAttribute(cc.ATTRIBUTE_NAME_TEX_COORD, cc.VERTEX_ATTRIB_TEX_COORDS);
            program.link();
            program.updateUniforms();
            this.programs["grayScale"] = program;
        }
        gl.useProgram(program.getProgram());
        sprite.shaderProgram = program;
    }
};
function api(api, args) {
    G.ajax.send(api, args, function(d) {
        if (!d) 
            return;
        var d = JSON.parse(d);
        if (d.s == 1) {
            cc.log('返回数据======', d);
            return d;
        }
    });
}

//修改rootNode下的节点随机换颜色，用于提审时防截屏查重
var getRandomColor = function(){
    var str = '#';
    for(var i=0;i<6;i++){
        str += X.arrayRand(['a','b','c','d','e','f'])
    }
    return str;
};
function changeAllNodesColor(rootNode){
    if(!G.tiShenIng)return;
    rootNode.setColor && rootNode.setColor(cc.color(getRandomColor()));

    X.forEachChild(rootNode||cc.director.getRunningScene(),function(node){
        if( node instanceof ccui.ImageView ||  node instanceof cc.Sprite ||  node instanceof ccui.Button){
            node.color = cc.color(getRandomColor());
        }
    });
}
;;;(function(){

var localPush = {
    setConf : function(conf){
        /*
        设置本地本地通知
        showIfOnTop = 1 || 0 APP在前端时是否显示
        title = 标题，空为APP名
        content = 内容
        delay = 多少秒后提示
        id = 推送ID
        repeat = 重复频率 秒，可选key
        randCont = 1 可选key 表示content是一个数组格式，从中随机一句
        */
        conf.act = "setNotify";
        conf.title = conf.title||"";
        if(conf.showIfOnTop==null)conf.showIfOnTop="1";
        conf.showIfOnTop = conf.showIfOnTop.toString();
        conf.id = conf.id || X.rand(11111111,99999999);

        cc.log('setPush='+JSON.stringify(conf));
        try{
            jsbHelper.callNative(null,null,conf);
        }catch(e){}
    },
    remove : function(id){
        //移除本地通知
    }
};


function getDay(day,fromDay){
    var today = fromDay || new Date();
    var targetday_milliseconds=today.getTime() + 1000*60*60*24*day;
    today.setTime(targetday_milliseconds);
    var tYear = today.getFullYear();
    var tMonth = today.getMonth();
    var tDate = today.getDate();
    tMonth = doHandleMonth(tMonth + 1);
    tDate = doHandleMonth(tDate);
    return tYear+"-"+tMonth+"-"+tDate;
}
function doHandleMonth(month){
    var m = month;
    if(month.toString().length == 1){
        m = "0" + month;
    }
    return m;
}
function str2Date(str){
    return new Date(Date.parse(str.replace(/-/g,"/")));
}

    var msg = [
        '恭喜领主大人获得了极品装备，快上线领取吧',
        '探险小屋的女巫暴动了，领主大人快上线暴打她们吧',
        '矿洞又被打劫了，领主大人快来保卫你的资源',
        '捡到好多宝箱，领主快来看看都装了些什么',
        '恭喜领主大人在挂机期间又获得了大波奖励',
        '今天的每日任务还没完成，领主大人不要奖励了吗',
        '采矿的队伍回来了，领主大人来看看他们的收获吧'
    ];

G.push = {
    regInit : function(){
        this.h12();
        this.h18();
    },
    h12 : function(){
        var day = str2Date(getDay(1)+" 12:00:00");
        cc.log('h10 day='+ day);
        var daySec = day.getTime()/1000;
        localPush.setConf({
            id:12,
            content : JSON.stringify(msg),
            randCont : 1,
            showIfOnTop : '0',
            delay : daySec - (G.time||X.time()),
            repeat : 24*60*60
        });
    },
    h18 : function(){
        var day = str2Date(getDay(1)+" 18:00:00");
        cc.log('h18 day='+ day);
        var daySec = day.getTime()/1000;
        localPush.setConf({
            id:18,
            content : JSON.stringify(msg),
            randCont : 1,
            showIfOnTop : '0',
            delay : daySec - (G.time||X.time()),
            repeat : 24*60*60
        });
    },
    svr7 : function(){
        //if(!P.gud)return;
        //var openTime = str2Date( (P.gud.opentime.split(' ')[0])+' 00:00:00' );
        //
        //var day = str2Date(getDay(6,openTime));
        //var daySec = day.getTime()/1000;
        //
        //if(daySec<=G.time)return;
        //localPush.set({
        //  content : "开区活动结束啦，赶快来领取属于你的丰厚大礼吧！",
        //  delay : daySec-G.time
        //});
    }
};

})();
;;(function () {
    //读取服务端的特殊配置
    //这些配置主要配置在config.py中，并且需要在进入游戏前加载给客户端
    //如：是否处于appstore版本提审期等
    G.serverconfig = {
        DATA : {},
        getData : function(callback){
            var me = this;
            G.ajax.send("system_config",[], function (data) {
                data = X.toJSON(data);
                if (data.s == 1){
                    me.DATA = data.d;

					if(me.DATA['tishen']){
						G.tiShenIng = true;
					}

                }
                callback && callback();
            });
        }
    };
    
    G.gameconfig = {
		DATA : {},
		getData : function(callback){
			var me = this;
			X.ajax.get("http://gameconfig.legu.cc/?app=getkv&game=zhengba&ctype="+encodeURIComponent('客户端配置'),"", function (data) {
				data = X.toJSON(data);
				if (data.ret == true){
					me.DATA = data.data;
				}
				callback && callback();
			});
		},
		get:function(k){
			return this.DATA[k];
		}
	};
	G.gameconfig.getData();
	
})();
;;var TD = {
    'setAccount' : function(obj){
        var fun = 'TGA'+ (cc.sys.os == cc.sys.OS_IOS?':':'');
        jsbHelper.callNative(null,fun,{
            'act':'setAccount',
            'uid':obj.uid,
            'lv':parseInt(obj.lv)||1,
            'servername':obj.servername||'',
            'binduid' :obj.binduid||"",
            'serverid' : (P.gud.svrindex+"")
        });
    },
    'event' : function(eventName,dict){
        var fun = 'TGA'+ (cc.sys.os == cc.sys.OS_IOS?':':'');
        dict['act'] = "event";
        dict['eventname'] = eventName;

        jsbHelper.callNative(null,fun,dict);
    }
};
;;//请勿直接修改本文件，在version.json中修改
G.VERSION='1.0';
G.VERSIONCODE='018880';
;